var searchIndex = JSON.parse('{\
"pliantdb":{"doc":"A programmable document database inspired by <code>CouchDB</code> …","i":[[0,"cli","pliantdb","<code>PliantDB</code> command line tools.",null,null],[4,"Command","pliantdb::cli","The command line interface for <code>pliantdb</code>.",null,null],[13,"LocalBackup","","Back up or restore a local database",0,null],[13,"Server","","Execute a <code>PliantDB</code> server command.",0,null],[11,"execute","","Executes the command.",0,[[["fn",8],["send",8]]]],[3,"Url","pliantdb::client::url","A parsed URL record.",null,null],[3,"ParseOptions","","Full configuration for the URL parser.",null,null],[3,"UrlQuery","","Implementation detail of <code>Url::query_pairs_mut</code>. Typically …",null,null],[5,"parse","pliantdb::client::url::form_urlencoded","Convert a byte string in the …",null,[[],["parse",3]]],[3,"Parse","","The return type of <code>parse()</code>.",null,null],[3,"ParseIntoOwned","","Like <code>Parse</code>, but yields pairs of <code>String</code> instead of pairs …",null,null],[5,"byte_serialize","","The <code>application/x-www-form-urlencoded</code> byte serializer.",null,[[],["byteserialize",3]]],[3,"ByteSerialize","","Return value of <code>byte_serialize()</code>.",null,null],[3,"Serializer","","The <code>application/x-www-form-urlencoded</code> serializer.",null,null],[8,"Target","","",null,null],[10,"as_mut_string","","",1,[[],["string",3]]],[10,"finish","","",1,[[]]],[16,"Finished","","",1,null],[6,"EncodingOverride","","",null,null],[4,"Host","pliantdb::client::url","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as \'.\' dot-separated labels. Non-ASCII …",2,null],[13,"Ipv4","","An IPv4 address. <code>Url::host_str</code> returns the serialization …",2,null],[13,"Ipv6","","An IPv6 address. <code>Url::host_str</code> returns the serialization …",2,null],[3,"OpaqueOrigin","","Opaque identifier for URLs that have file or other schemes",null,null],[4,"Origin","","The origin of an URL",null,null],[13,"Opaque","","A globally unique identifier",3,null],[13,"Tuple","","Consists of the URL\'s scheme, host and port",3,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",4,null],[13,"IdnaError","","",4,null],[13,"InvalidPort","","",4,null],[13,"InvalidIpv4Address","","",4,null],[13,"InvalidIpv6Address","","",4,null],[13,"InvalidDomainCharacter","","",4,null],[13,"RelativeUrlWithoutBase","","",4,null],[13,"RelativeUrlWithCannotBeABaseBase","","",4,null],[13,"SetHostOnCannotBeABaseUrl","","",4,null],[13,"Overflow","","",4,null],[4,"SyntaxViolation","","Non-fatal syntax violations that can occur during parsing.",null,null],[13,"Backslash","","",5,null],[13,"C0SpaceIgnored","","",5,null],[13,"EmbeddedCredentials","","",5,null],[13,"ExpectedDoubleSlash","","",5,null],[13,"ExpectedFileDoubleSlash","","",5,null],[13,"FileWithHostAndWindowsDrive","","",5,null],[13,"NonUrlCodePoint","","",5,null],[13,"NullInFragment","","",5,null],[13,"PercentDecode","","",5,null],[13,"TabOrNewlineIgnored","","",5,null],[13,"UnencodedAtSign","","",5,null],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is …",null,null],[4,"Position","","Indicates a position within a URL based on its components.",null,null],[13,"BeforeScheme","","",6,null],[13,"AfterScheme","","",6,null],[13,"BeforeUsername","","",6,null],[13,"AfterUsername","","",6,null],[13,"BeforePassword","","",6,null],[13,"AfterPassword","","",6,null],[13,"BeforeHost","","",6,null],[13,"AfterHost","","",6,null],[13,"BeforePort","","",6,null],[13,"AfterPort","","",6,null],[13,"BeforePath","","",6,null],[13,"AfterPath","","",6,null],[13,"BeforeQuery","","",6,null],[13,"AfterQuery","","",6,null],[13,"BeforeFragment","","",6,null],[13,"AfterFragment","","",6,null],[6,"EncodingOverride","","",null,null],[3,"Client","pliantdb::client","Client for connecting to a <code>PliantDB</code> server.",null,null],[4,"Error","","Errors related to working with <code>Client</code>",null,null],[13,"Transport","","An error occurred from the QUIC transport layer.",7,null],[13,"WebSocket","","An error occurred from the WebSocket transport layer.",7,null],[13,"Network","","An error occurred from networking.",7,null],[13,"InvalidUrl","","An invalid Url was provided.",7,null],[13,"Disconnected","","The connection was interrupted.",7,null],[13,"Core","","The connection was interrupted.",7,null],[0,"connection","pliantdb::core","Types for interacting with a database.",null,null],[8,"Connection","pliantdb::core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",8,[[],["collection",3]]],[11,"insert","","Inserts a newly created document into the connected […",8,[[["u8",15],["vec",3],["global",3]],[["box",3],["pin",3]]]],[11,"update","","Updates an existing document in the connected […",8,[[["document",3]],[["pin",3],["box",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",8,[[["u64",15]],[["pin",3],["box",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",8,[[],[["box",3],["pin",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",8,[[["document",3]],[["pin",3],["box",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",8,[[],["view",3]]],[10,"query","","Queries for view entries matching [<code>View</code>].",8,[[["accesspolicy",4],["querykey",4],["option",4]],[["box",3],["pin",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",8,[[["accesspolicy",4],["querykey",4],["option",4]],[["pin",3],["box",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",8,[[["accesspolicy",4],["querykey",4],["option",4]],[["box",3],["pin",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",8,[[["accesspolicy",4],["querykey",4],["option",4]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",8,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",8,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",8,[[],[["box",3],["pin",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",9,null],[12,"access_policy","","The view\'s data access policy. The default value is […",9,null],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",10,null],[13,"Range","","Matches all entires with keys in the range provided.",10,null],[13,"Multiple","","Matches all entries that have keys that are included in …",10,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",11,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",11,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",11,null],[0,"document","pliantdb::core","Types for interacting with <code>Document</code>s.",null,null],[3,"Header","pliantdb::core::document","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",12,null],[12,"revision","","The revision of the stored document.",12,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",13,null],[12,"header","","The header of the document, which contains the id and …",13,null],[12,"contents","","The serialized bytes of the stored item.",13,null],[3,"Revision","","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",14,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",14,null],[0,"limits","pliantdb::core","Limits used within <code>PliantDB</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb::core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"networking","pliantdb::core","Types for networked communications.",null,null],[3,"Payload","pliantdb::core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",15,null],[12,"wrapped","","The wrapped payload.",15,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",16,null],[13,"Database","","A database-related request.",16,null],[12,"database","pliantdb::core::networking::Request","The name of the database.",17,null],[12,"request","","The request made to the database.",17,null],[4,"ServerRequest","pliantdb::core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",18,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",18,null],[12,"name","pliantdb::core::networking::ServerRequest","The name of the database to delete.",19,null],[13,"ListDatabases","pliantdb::core::networking","Lists all databases.",18,null],[13,"ListAvailableSchemas","","Lists available schemas.",18,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",20,null],[12,"collection","pliantdb::core::networking::DatabaseRequest","The collection of the document.",21,null],[12,"id","","The id of the document.",21,null],[13,"GetMultiple","pliantdb::core::networking","Retrieve multiple documents.",20,null],[12,"collection","pliantdb::core::networking::DatabaseRequest","The collection of the documents.",22,null],[12,"ids","","The ids of the documents.",22,null],[13,"Query","pliantdb::core::networking","Queries a view.",20,null],[12,"view","pliantdb::core::networking::DatabaseRequest","The name of the view.",23,null],[12,"key","","The filter for the view.",23,null],[12,"access_policy","","The access policy for the query.",23,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",23,null],[13,"Reduce","pliantdb::core::networking","Reduces a view.",20,null],[12,"view","pliantdb::core::networking::DatabaseRequest","The name of the view.",24,null],[12,"key","","The filter for the view.",24,null],[12,"access_policy","","The access policy for the query.",24,null],[12,"grouped","","Whether to return a single value or values grouped by …",24,null],[13,"ApplyTransaction","pliantdb::core::networking","Applies a transaction.",20,null],[12,"transaction","pliantdb::core::networking::DatabaseRequest","The trasnaction to apply.",25,null],[13,"ListExecutedTransactions","pliantdb::core::networking","Lists executed transactions.",20,null],[12,"starting_id","pliantdb::core::networking::DatabaseRequest","The starting transaction id.",26,null],[12,"result_limit","","The maximum number of results.",26,null],[13,"LastTransactionId","pliantdb::core::networking","Queries the last transaction id.",20,null],[4,"Response","","A response from a server.",null,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",27,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",27,null],[13,"Error","","An error occurred processing a request.",27,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",28,null],[12,"name","pliantdb::core::networking::ServerResponse","The name of the database to create.",29,null],[13,"DatabaseDeleted","pliantdb::core::networking","A database with <code>name</code> was successfully removed.",28,null],[12,"name","pliantdb::core::networking::ServerResponse","The name of the database to remove.",30,null],[13,"Databases","pliantdb::core::networking","A list of available databases.",28,null],[13,"AvailableSchemas","","A list of availble schemas.",28,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",31,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",31,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",31,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",31,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",31,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",31,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",31,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",31,null],[3,"MappedDocument","","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",32,null],[12,"value","","The serialized value.",32,null],[12,"source","","The source document.",32,null],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",33,null],[12,"schema","","The schema defining the database.",33,null],[8,"ServerConnection","","Functions for interacting with a <code>PliantDB</code> server.",null,null],[10,"create_database","","Creates a database named <code>name</code> using the [<code>schema::Id</code>] …",34,[[["str",15],["id",3]],[["pin",3],["box",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",34,[[["str",15]],[["pin",3],["box",3]]]],[10,"list_databases","","Lists the databases on this server.",34,[[],[["pin",3],["box",3]]]],[10,"list_available_schemas","","Lists the [<code>schema::Id</code>]s on this server.",34,[[],[["pin",3],["box",3]]]],[4,"Error","","A networking error.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See […",35,null],[13,"DatabaseNotFound","","The database name given was not found.",35,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",35,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",35,null],[13,"Disconnected","","The connection was interrupted.",35,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",35,null],[12,"database_name","pliantdb::core::networking::Error","The name of the database being accessed.",36,null],[12,"schema","","The schema provided for the database.",36,null],[12,"stored_schema","","The schema stored for the database.",36,null],[13,"SchemaAlreadyRegistered","pliantdb::core::networking","The [<code>schema::Id</code>] returned has already been registered …",35,null],[13,"SchemaNotRegistered","","The [<code>schema::Id</code>] requested was not registered with this …",35,null],[0,"error","pliantdb::core::networking::fabruic","<code>Error</code> for this [<code>crate</code>].",null,null],[6,"Result","pliantdb::core::networking::fabruic::error","<code>Result</code> type for this [<code>crate</code>].",null,null],[4,"Error","","<code>Error</code> for this [<code>crate</code>].",null,null],[13,"ParseCertificate","","Failed to parse the given certificate.",37,null],[12,"certificate","pliantdb::core::networking::fabruic::error::Error","The certificate passed to <code>from_der</code>.",38,null],[12,"error","","The parsing error.",38,null],[13,"DanglingCertificate","pliantdb::core::networking::fabruic::error","Data passed to generate <code>Certificate</code> with <code>from_der</code> found …",37,null],[12,"certificate","pliantdb::core::networking::fabruic::error::Error","The certificate passed to <code>from_der</code>.",39,null],[12,"dangling","","The dangling bytes.",39,null],[13,"ExpiredCertificate","pliantdb::core::networking::fabruic::error","<code>Certificate</code> has expired.",37,null],[13,"DomainCertificate","","<code>Certificate</code> is missing a domain name.",37,null],[13,"ParsePrivateKey","","Failed to parse the given private key.",37,null],[13,"ParseAddress","","Parsing a <code>SocketAddr</code> from a [<code>str</code>] failed.",37,null],[13,"Certificate","","Returned by <code>Endpoint</code> when failing to parse the given …",37,null],[13,"PrivateKey","","Returned by <code>Endpoint</code> when failing to parse the given …",37,null],[13,"InvalidKeyPair","","Returned by <code>Endpoint</code> when failing to pair the given …",37,null],[13,"InvalidCertificate","","Returned by <code>Endpoint</code> when failing to add the given …",37,null],[13,"BindSocket","","Returned by <code>Endpoint</code> when failing to bind the socket on …",37,null],[13,"Resolve","","Failed to resolve domain to IP address.",37,null],[13,"NoIp","","Found no IP address for that domain.",37,null],[13,"LocalAddress","","Returned by <code>Endpoint::local_address</code> when failing to …",37,null],[13,"AlreadyClosed","","Attempting to close something that is already closed.",37,null],[13,"ConnectConfig","","Returned by <code>Endpoint::connect</code> if configuration needed to …",37,null],[13,"Connecting","","Returned by <code>Connecting::accept</code> if connecting to the peer …",37,null],[13,"ReceiveStream","","Returned by <code>Connection</code> <code>Stream</code> when receiving a new stream …",37,null],[13,"OpenStream","","Returned by <code>Connection::open_stream</code> if opening a stream …",37,null],[13,"Write","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to write into …",37,null],[13,"Finish","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to finish a …",37,null],[13,"Send","","Returned by <code>Sender::send</code> if the stream was closed by …",37,null],[13,"Serialize","","Returned by <code>Sender::send</code> if <code>serialization</code> failed.",37,null],[13,"Read","","Returned by <code>Receiver::close</code> if <code>Receiver</code> failed to read …",37,null],[13,"Deserialize","","Returned by <code>Receiver::finish</code> if <code>Receiver</code> failed to …",37,null],[13,"NoType","","Returned by <code>Incoming::type</code> if the peer closed the stream …",37,null],[4,"ParseCertificate","","Possible certificate parsing errors.",null,null],[13,"WebPki","","<code>Error</code> returned by [<code>webpki</code>].",40,null],[13,"X509","","<code>Error</code> returned by [<code>x509_parser</code>].",40,null],[3,"IoError","","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…",null,null],[3,"AddrParseError","","An error which can be returned when parsing an IP address …",null,null],[4,"ErrorKind","","The kind of error that can be produced during a …",null,null],[13,"Io","","If the error stems from the reader/writer that is being …",41,null],[13,"InvalidUtf8Encoding","","Returned if the deserializer attempts to deserialize a …",41,null],[13,"InvalidBoolEncoding","","Returned if the deserializer attempts to deserialize a …",41,null],[13,"InvalidCharEncoding","","Returned if the deserializer attempts to deserialize a …",41,null],[13,"InvalidTagEncoding","","Returned if the deserializer attempts to deserialize the …",41,null],[13,"DeserializeAnyNotSupported","","Serde has a deserialize_any method that lets the format …",41,null],[13,"SizeLimit","","If (de)serializing a message takes more than the provided …",41,null],[13,"SequenceMustHaveLength","","Bincode can not encode sequences of unknown length (like …",41,null],[13,"Custom","","A custom error message from Serde.",41,null],[4,"ConnectError","","Errors in the parameters being used to create a new …",null,null],[13,"EndpointStopping","","The endpoint can no longer create new connections",42,null],[13,"TooManyConnections","","The number of active connections on the local endpoint is …",42,null],[13,"InvalidDnsName","","The domain name supplied was malformed",42,null],[13,"Config","","The transport configuration was invalid",42,null],[13,"InvalidRemoteAddress","","The remote [<code>SocketAddr</code>] supplied was malformed",42,null],[4,"ConnectionError","","Reasons why a connection might be lost",null,null],[13,"VersionMismatch","","The peer doesn\'t implement any supported version",43,null],[13,"TransportError","","The peer violated the QUIC specification as understood by …",43,null],[13,"ConnectionClosed","","The peer\'s QUIC stack aborted the connection automatically",43,null],[13,"ApplicationClosed","","The peer closed the connection",43,null],[13,"Reset","","The peer is unable to continue processing this …",43,null],[13,"TimedOut","","Communication with the peer has lapsed for longer than …",43,null],[13,"LocallyClosed","","The local application closed the connection",43,null],[4,"EndpointError","","Errors that can occur during the construction of an …",null,null],[13,"Socket","","An error during setup of the underlying UDP socket.",44,null],[3,"ParseError","","Errors encountered while parsing a TLS certificate or …",null,null],[4,"ReadError","","Errors that arise from reading from a stream.",null,null],[13,"Reset","","The peer abandoned transmitting data on this stream.",45,null],[13,"ConnectionClosed","","The connection was closed.",45,null],[13,"UnknownStream","","The stream has already been stopped, finished, or reset",45,null],[13,"IllegalOrderedRead","","Attempted an ordered read following an unordered read",45,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",45,null],[4,"WriteError","","Errors that arise from writing to a stream",null,null],[13,"Stopped","","The peer is no longer accepting data on this stream.",46,null],[13,"ConnectionClosed","","The connection was closed.",46,null],[13,"UnknownStream","","The stream has already been finished or reset",46,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",46,null],[3,"KeyRejected","","An error parsing or validating a key.",null,null],[4,"TLSError","","rustls reports protocol errors using this type.",null,null],[13,"InappropriateMessage","","We received a TLS message that isn\'t valid right now. …",47,null],[12,"expect_types","pliantdb::core::networking::fabruic::error::TLSError","Which types we expected",48,null],[12,"got_type","","What type we received",48,null],[13,"InappropriateHandshakeMessage","pliantdb::core::networking::fabruic::error","We received a TLS handshake message that isn\'t valid …",47,null],[12,"expect_types","pliantdb::core::networking::fabruic::error::TLSError","Which handshake type we expected",49,null],[12,"got_type","","What handshake type we received",49,null],[13,"CorruptMessage","pliantdb::core::networking::fabruic::error","The peer sent us a syntactically incorrect TLS message.",47,null],[13,"CorruptMessagePayload","","The peer sent us a TLS message with invalid contents.",47,null],[13,"NoCertificatesPresented","","The peer didn\'t give us any certificates.",47,null],[13,"DecryptError","","We couldn\'t decrypt a message.  This is invariably fatal.",47,null],[13,"PeerIncompatibleError","","The peer doesn\'t support a protocol version/feature we …",47,null],[13,"PeerMisbehavedError","","The peer deviated from the standard TLS protocol. The …",47,null],[13,"AlertReceived","","We received a fatal alert.  This means the peer is …",47,null],[13,"WebPKIError","","The presented certificate chain is invalid.",47,null],[13,"InvalidSCT","","The presented SCT(s) were invalid.",47,null],[13,"General","","A catch-all error for unlikely errors.",47,null],[13,"FailedToGetCurrentTime","","We failed to figure out what time it currently is.",47,null],[13,"HandshakeNotComplete","","This function doesn\'t work until the TLS handshake is …",47,null],[13,"PeerSentOversizedRecord","","The peer sent an oversized record/fragment.",47,null],[13,"NoApplicationProtocol","","An incoming connection did not support any known …",47,null],[3,"ResolveError","","The error type for errors that get returned in the crate",null,null],[4,"WebPkiError","","An error that occurs during certificate validation or …",null,null],[13,"BadDER","","The encoding of some ASN.1 DER-encoded item is invalid.",50,null],[13,"BadDERTime","","The encoding of an ASN.1 DER-encoded time is invalid.",50,null],[13,"CAUsedAsEndEntity","","A CA certificate is veing used as an end-entity …",50,null],[13,"CertExpired","","The certificate is expired; i.e. the time it is being …",50,null],[13,"CertNotValidForName","","The certificate is not valid for the name it is being …",50,null],[13,"CertNotValidYet","","The certificate is not valid yet; i.e. the time it is …",50,null],[13,"EndEntityUsedAsCA","","An end-entity certificate is being used as a CA …",50,null],[13,"ExtensionValueInvalid","","An X.509 extension is invalid.",50,null],[13,"InvalidCertValidity","","The certificate validity period (notBefore, notAfter) is …",50,null],[13,"InvalidSignatureForPublicKey","","The signature is invalid for the given public key.",50,null],[13,"NameConstraintViolation","","The certificate violates one or more name constraints.",50,null],[13,"PathLenConstraintViolated","","The certificate violates one or more path length …",50,null],[13,"SignatureAlgorithmMismatch","","The algorithm in the TBSCertificate \\\"signature\\\" field of …",50,null],[13,"RequiredEKUNotFound","","The certificate is not valid for the Extended Key Usage …",50,null],[13,"UnknownIssuer","","A valid issuer for the certificate could not be found.",50,null],[13,"UnsupportedCertVersion","","The certificate is not a v3 X.509 certificate.",50,null],[13,"UnsupportedCriticalExtension","","The certificate contains an unsupported critical …",50,null],[13,"UnsupportedSignatureAlgorithmForPublicKey","","The signature\'s algorithm does not match the algorithm of …",50,null],[13,"UnsupportedSignatureAlgorithm","","The signature algorithm for a signature is not in the set …",50,null],[4,"X509Error","","An error that can occur while parsing or validating a …",null,null],[13,"Generic","","",51,null],[13,"InvalidVersion","","",51,null],[13,"InvalidSerial","","",51,null],[13,"InvalidAlgorithmIdentifier","","",51,null],[13,"InvalidX509Name","","",51,null],[13,"InvalidDate","","",51,null],[13,"InvalidSPKI","","",51,null],[13,"InvalidSubjectUID","","",51,null],[13,"InvalidIssuerUID","","",51,null],[13,"InvalidExtensions","","",51,null],[13,"InvalidAttributes","","",51,null],[13,"DuplicateExtensions","","",51,null],[13,"DuplicateAttributes","","",51,null],[13,"InvalidSignatureValue","","",51,null],[13,"InvalidTbsCertificate","","",51,null],[13,"InvalidUserCertificate","","",51,null],[13,"InvalidCertificate","","Top-level certificate structure is invalid",51,null],[13,"SignatureVerificationError","","",51,null],[13,"SignatureUnsupportedAlgorithm","","",51,null],[13,"Der","","",51,null],[13,"NomError","","",51,null],[4,"Err","","The <code>Err</code> enum indicates the parser was not successful",null,null],[13,"Incomplete","","There was not enough data",52,null],[13,"Error","","The parser had an error (recoverable)",52,null],[13,"Failure","","The parser had an unrecoverable error: we got to the right…",52,null],[5,"generate_self_signed","pliantdb::core::networking::fabruic","Generate a self signed certificate.",null,[[]]],[3,"Certificate","","A public Certificate. You can distribute it freely to …",null,null],[8,"Dangerous","","Gives read access to the [<code>PrivateKey</code>].",null,null],[10,"as_ref","","Returns a <code>&[u8]</code> to the [<code>PrivateKey</code>].",53,[[]]],[10,"into","","Returns a [<code>Vec<u8></code>] to the [<code>PrivateKey</code>].",53,[[],[["global",3],["vec",3],["u8",15]]]],[10,"serialize","","Serialize with [<code>serde</code>].",53,[[],["result",4]]],[3,"PrivateKey","","A private Key.",null,null],[4,"Error","","<code>Error</code> for this [<code>crate</code>].",null,null],[13,"ParseCertificate","","Failed to parse the given certificate.",37,null],[12,"certificate","pliantdb::core::networking::fabruic::Error","The certificate passed to <code>from_der</code>.",38,null],[12,"error","","The parsing error.",38,null],[13,"DanglingCertificate","pliantdb::core::networking::fabruic","Data passed to generate <code>Certificate</code> with <code>from_der</code> found …",37,null],[12,"certificate","pliantdb::core::networking::fabruic::Error","The certificate passed to <code>from_der</code>.",39,null],[12,"dangling","","The dangling bytes.",39,null],[13,"ExpiredCertificate","pliantdb::core::networking::fabruic","<code>Certificate</code> has expired.",37,null],[13,"DomainCertificate","","<code>Certificate</code> is missing a domain name.",37,null],[13,"ParsePrivateKey","","Failed to parse the given private key.",37,null],[13,"ParseAddress","","Parsing a <code>SocketAddr</code> from a [<code>str</code>] failed.",37,null],[13,"Certificate","","Returned by <code>Endpoint</code> when failing to parse the given …",37,null],[13,"PrivateKey","","Returned by <code>Endpoint</code> when failing to parse the given …",37,null],[13,"InvalidKeyPair","","Returned by <code>Endpoint</code> when failing to pair the given …",37,null],[13,"InvalidCertificate","","Returned by <code>Endpoint</code> when failing to add the given …",37,null],[13,"BindSocket","","Returned by <code>Endpoint</code> when failing to bind the socket on …",37,null],[13,"Resolve","","Failed to resolve domain to IP address.",37,null],[13,"NoIp","","Found no IP address for that domain.",37,null],[13,"LocalAddress","","Returned by <code>Endpoint::local_address</code> when failing to …",37,null],[13,"AlreadyClosed","","Attempting to close something that is already closed.",37,null],[13,"ConnectConfig","","Returned by <code>Endpoint::connect</code> if configuration needed to …",37,null],[13,"Connecting","","Returned by <code>Connecting::accept</code> if connecting to the peer …",37,null],[13,"ReceiveStream","","Returned by <code>Connection</code> <code>Stream</code> when receiving a new stream …",37,null],[13,"OpenStream","","Returned by <code>Connection::open_stream</code> if opening a stream …",37,null],[13,"Write","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to write into …",37,null],[13,"Finish","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to finish a …",37,null],[13,"Send","","Returned by <code>Sender::send</code> if the stream was closed by …",37,null],[13,"Serialize","","Returned by <code>Sender::send</code> if <code>serialization</code> failed.",37,null],[13,"Read","","Returned by <code>Receiver::close</code> if <code>Receiver</code> failed to read …",37,null],[13,"Deserialize","","Returned by <code>Receiver::finish</code> if <code>Receiver</code> failed to …",37,null],[13,"NoType","","Returned by <code>Incoming::type</code> if the peer closed the stream …",37,null],[6,"Result","","<code>Result</code> type for this [<code>crate</code>].",null,null],[3,"Builder","","Holding configuration for [<code>Builder</code>] to build [<code>Endpoint</code>].",null,null],[3,"Connecting","","Represent\'s an intermediate state to build a [<code>Connection</code>].",null,null],[3,"Connection","","Represents an open connection. Receives [<code>Incoming</code>] …",null,null],[3,"Endpoint","","Represents a socket using the QUIC protocol to …",null,null],[3,"Incoming","","An intermediate state to define which type to accept in …",null,null],[3,"Receiver","","Used to receive data from a stream.",null,null],[3,"Sender","","Used to send data to a stream.",null,null],[0,"schema","pliantdb::core","Types for defining database schema.",null,null],[0,"collection","pliantdb::core::schema","Types for defining a <code>Collection</code>.",null,null],[3,"Id","pliantdb::core::schema::collection","A unique collection id. Choose collection names that …",null,null],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_id","","The <code>Id</code> of this collection.",54,[[],["id",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",54,[[["schematic",3]]]],[0,"view","pliantdb::core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb::core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb::core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",55,null],[12,"key","","The key used to index the View.",55,null],[12,"value","","An associated value stored in the view.",55,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",56,null],[12,"key","","The key used to index the View.",56,null],[12,"value","","An associated value stored in the view.",56,null],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",57,null],[12,"key","","The key used to index the View.",57,null],[12,"value","","An associated value stored in the view.",57,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",58,null],[12,"value","","The value generated by the <code>View</code>",58,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",59,[[],[["error",3],["cow",4],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",59,[[],[["error",3],["result",4]]]],[4,"Error","pliantdb::core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",60,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",60,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",60,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",61,null],[16,"Key","","The key for this view.",61,null],[16,"Value","","An associated type that can be stored with each entry in …",61,null],[10,"version","","The version of the view. Changing this value will cause …",61,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",61,[[],[["cow",4],["str",15]]]],[10,"map","","The map function for this view. This function is …",61,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","The reduce function for this view. If …",61,[[["bool",15]],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",62,null],[13,"Borrowed","","a borrowed value",62,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",63,[[],["id",3]]],[10,"version","","Wraps [<code>View::version</code>]",63,[[],["u64",15]]],[10,"name","","Wraps [<code>View::name</code>]",63,[[],[["cow",4],["str",15]]]],[10,"map","","Wraps [<code>View::map</code>]",63,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",63,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",59,[[],[["error",3],["cow",4],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",59,[[],[["error",3],["result",4]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",55,null],[12,"key","","The key used to index the View.",55,null],[12,"value","","An associated value stored in the view.",55,null],[3,"Id","pliantdb::core::schema","The unique Id of a [<code>Schema</code>]. Primarily used to try to …",null,null],[8,"Schema","","Defines a group of collections that are stored into a …",null,null],[10,"schema_id","","Returns the unique [<code>Id</code>] for this schema.",64,[[],["id",3]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",64,[[["schematic",3]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",64,[[],["schematic",3]]],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",59,[[],[["error",3],["cow",4],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",59,[[],[["error",3],["result",4]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",55,null],[12,"key","","The key used to index the View.",55,null],[12,"value","","An associated value stored in the view.",55,null],[3,"Schematic","","A collection of defined collections and views.",null,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",63,[[],["id",3]]],[10,"version","","Wraps [<code>View::version</code>]",63,[[],["u64",15]]],[10,"name","","Wraps [<code>View::name</code>]",63,[[],[["cow",4],["str",15]]]],[10,"map","","Wraps [<code>View::map</code>]",63,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",63,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",61,null],[16,"Key","","The key for this view.",61,null],[16,"Value","","An associated type that can be stored with each entry in …",61,null],[10,"version","","The version of the view. Changing this value will cause …",61,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",61,[[],[["cow",4],["str",15]]]],[10,"map","","The map function for this view. This function is …",61,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","The reduce function for this view. If …",61,[[["bool",15]],[["result",4],["error",4]]]],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_id","","The <code>Id</code> of this collection.",54,[[],["id",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",54,[[["schematic",3]]]],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",62,null],[13,"Borrowed","","a borrowed value",62,null],[4,"Error","","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",60,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",60,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",60,null],[0,"transaction","pliantdb::core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb::core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",65,null],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",66,null],[12,"command","","The command being performed.",66,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",67,null],[12,"contents","pliantdb::core::transaction::Command","The initial contents of the document.",68,null],[13,"Update","pliantdb::core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",67,null],[12,"header","pliantdb::core::transaction::Command","The current header of the <code>Document</code>.",69,null],[12,"contents","","The new contents to store within the <code>Document</code>.",69,null],[13,"Delete","pliantdb::core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",67,null],[12,"header","pliantdb::core::transaction::Command","The current header of the <code>Document</code>.",70,null],[4,"OperationResult","pliantdb::core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",71,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",71,null],[12,"collection","pliantdb::core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",72,null],[12,"header","","The header of the updated <code>Document</code>.",72,null],[13,"DocumentDeleted","pliantdb::core::transaction","A <code>Document</code> was deleted.",71,null],[12,"collection","pliantdb::core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",73,null],[12,"id","","The id of the deleted <code>Document</code>.",73,null],[3,"Executed","pliantdb::core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",74,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",74,null],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",75,null],[12,"id","","The id of the changed <code>Document</code>.",75,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",75,null],[4,"Error","pliantdb::core","an enumeration of errors that this crate can produce",null,null],[13,"Storage","","An error from interacting with local storage.",76,null],[13,"Server","","An error from interacting with a server.",76,null],[13,"Transport","","An error occurred from the QUIC transport layer.",76,null],[13,"Websocket","","An error occurred from the websocket transport layer.",76,null],[13,"Networking","","An error occurred from networking.",76,null],[13,"Io","","An error occurred from IO.",76,null],[13,"Configuration","","An error occurred with the provided configuration options.",76,null],[13,"Client","","An error occurred inside of the client.",76,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",76,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",76,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",76,null],[0,"test_util","","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb::core::test_util","",null,null],[12,"value","","",77,null],[12,"category","","",77,null],[12,"parent_id","","",77,null],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",78,null],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"ConnectionTest","","",null,null],[13,"StoreRetrieveUpdate","","",79,null],[13,"NotFound","","",79,null],[13,"Conflict","","",79,null],[13,"BadUpdate","","",79,null],[13,"NoUpdate","","",79,null],[13,"GetMultiple","","",79,null],[13,"ListTransactions","","",79,null],[13,"ViewQuery","","",79,null],[13,"UnassociatedCollection","","",79,null],[13,"ViewUpdate","","",79,null],[13,"ViewAccessPolicies","","",79,null],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[14,"define_connection_test_suite","pliantdb::core","Creates a test suite that tests methods available on […",null,null],[0,"config","pliantdb::local","Configuration options.",null,null],[3,"Configuration","pliantdb::local::config","Configuration options for <code>Storage</code>.",null,null],[12,"workers","","Configuration options related to background tasks.",80,null],[12,"views","","Configuration options related to views.",80,null],[3,"Tasks","","Configujration options for background tasks.",null,null],[12,"worker_count","","Defines how many workers should be spawned to process …",81,null],[3,"Views","","Configuration options for views.",null,null],[12,"check_integrity_on_open","","If true, the database will scan all views during the call …",82,null],[0,"backup","pliantdb::local","Local database tool to save and load databases into plain …",null,null],[3,"Cli","pliantdb::local::backup","The command line interface for <code>pliantdb local-backup</code>.",null,null],[12,"database_path","","The path to the database you wish to operate on.",83,null],[12,"subcommand","","The command to execute on the database.",83,null],[4,"Command","","The command to execute.",null,null],[13,"Save","","Exports all of the data into a straightforward file …",84,null],[12,"output_directory","pliantdb::local::backup::Command","The directory to export the data within. The process will …",85,null],[12,"output_name","","The name of the folder to export the data to. If not …",85,null],[13,"Load","pliantdb::local::backup","Loads all of the data from a previously saved backup. Any …",84,null],[12,"backup","pliantdb::local::backup::Command","The path to the previously saved backup.",86,null],[0,"connection","pliantdb::local::core","Types for interacting with a database.",null,null],[8,"Connection","pliantdb::local::core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",8,[[],["collection",3]]],[11,"insert","","Inserts a newly created document into the connected […",8,[[["u8",15],["vec",3],["global",3]],[["box",3],["pin",3]]]],[11,"update","","Updates an existing document in the connected […",8,[[["document",3]],[["pin",3],["box",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",8,[[["u64",15]],[["pin",3],["box",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",8,[[],[["box",3],["pin",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",8,[[["document",3]],[["pin",3],["box",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",8,[[],["view",3]]],[10,"query","","Queries for view entries matching [<code>View</code>].",8,[[["accesspolicy",4],["querykey",4],["option",4]],[["box",3],["pin",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",8,[[["accesspolicy",4],["querykey",4],["option",4]],[["pin",3],["box",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",8,[[["accesspolicy",4],["querykey",4],["option",4]],[["box",3],["pin",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",8,[[["accesspolicy",4],["querykey",4],["option",4]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",8,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",8,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",8,[[],[["box",3],["pin",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",9,null],[12,"access_policy","","The view\'s data access policy. The default value is […",9,null],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",10,null],[13,"Range","","Matches all entires with keys in the range provided.",10,null],[13,"Multiple","","Matches all entries that have keys that are included in …",10,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",11,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",11,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",11,null],[0,"document","pliantdb::local::core","Types for interacting with <code>Document</code>s.",null,null],[3,"Header","pliantdb::local::core::document","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",12,null],[12,"revision","","The revision of the stored document.",12,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",13,null],[12,"header","","The header of the document, which contains the id and …",13,null],[12,"contents","","The serialized bytes of the stored item.",13,null],[3,"Revision","","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",14,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",14,null],[0,"limits","pliantdb::local::core","Limits used within <code>PliantDB</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb::local::core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"networking","pliantdb::local::core","Types for networked communications.",null,null],[3,"Payload","pliantdb::local::core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",15,null],[12,"wrapped","","The wrapped payload.",15,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",16,null],[13,"Database","","A database-related request.",16,null],[12,"database","pliantdb::local::core::networking::Request","The name of the database.",17,null],[12,"request","","The request made to the database.",17,null],[4,"ServerRequest","pliantdb::local::core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",18,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",18,null],[12,"name","pliantdb::local::core::networking::ServerRequest","The name of the database to delete.",19,null],[13,"ListDatabases","pliantdb::local::core::networking","Lists all databases.",18,null],[13,"ListAvailableSchemas","","Lists available schemas.",18,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",20,null],[12,"collection","pliantdb::local::core::networking::DatabaseRequest","The collection of the document.",21,null],[12,"id","","The id of the document.",21,null],[13,"GetMultiple","pliantdb::local::core::networking","Retrieve multiple documents.",20,null],[12,"collection","pliantdb::local::core::networking::DatabaseRequest","The collection of the documents.",22,null],[12,"ids","","The ids of the documents.",22,null],[13,"Query","pliantdb::local::core::networking","Queries a view.",20,null],[12,"view","pliantdb::local::core::networking::DatabaseRequest","The name of the view.",23,null],[12,"key","","The filter for the view.",23,null],[12,"access_policy","","The access policy for the query.",23,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",23,null],[13,"Reduce","pliantdb::local::core::networking","Reduces a view.",20,null],[12,"view","pliantdb::local::core::networking::DatabaseRequest","The name of the view.",24,null],[12,"key","","The filter for the view.",24,null],[12,"access_policy","","The access policy for the query.",24,null],[12,"grouped","","Whether to return a single value or values grouped by …",24,null],[13,"ApplyTransaction","pliantdb::local::core::networking","Applies a transaction.",20,null],[12,"transaction","pliantdb::local::core::networking::DatabaseRequest","The trasnaction to apply.",25,null],[13,"ListExecutedTransactions","pliantdb::local::core::networking","Lists executed transactions.",20,null],[12,"starting_id","pliantdb::local::core::networking::DatabaseRequest","The starting transaction id.",26,null],[12,"result_limit","","The maximum number of results.",26,null],[13,"LastTransactionId","pliantdb::local::core::networking","Queries the last transaction id.",20,null],[4,"Response","","A response from a server.",null,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",27,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",27,null],[13,"Error","","An error occurred processing a request.",27,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",28,null],[12,"name","pliantdb::local::core::networking::ServerResponse","The name of the database to create.",29,null],[13,"DatabaseDeleted","pliantdb::local::core::networking","A database with <code>name</code> was successfully removed.",28,null],[12,"name","pliantdb::local::core::networking::ServerResponse","The name of the database to remove.",30,null],[13,"Databases","pliantdb::local::core::networking","A list of available databases.",28,null],[13,"AvailableSchemas","","A list of availble schemas.",28,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",31,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",31,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",31,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",31,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",31,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",31,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",31,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",31,null],[3,"MappedDocument","","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",32,null],[12,"value","","The serialized value.",32,null],[12,"source","","The source document.",32,null],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",33,null],[12,"schema","","The schema defining the database.",33,null],[8,"ServerConnection","","Functions for interacting with a <code>PliantDB</code> server.",null,null],[10,"create_database","","Creates a database named <code>name</code> using the [<code>schema::Id</code>] …",34,[[["str",15],["id",3]],[["pin",3],["box",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",34,[[["str",15]],[["pin",3],["box",3]]]],[10,"list_databases","","Lists the databases on this server.",34,[[],[["pin",3],["box",3]]]],[10,"list_available_schemas","","Lists the [<code>schema::Id</code>]s on this server.",34,[[],[["pin",3],["box",3]]]],[4,"Error","","A networking error.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See […",35,null],[13,"DatabaseNotFound","","The database name given was not found.",35,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",35,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",35,null],[13,"Disconnected","","The connection was interrupted.",35,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",35,null],[12,"database_name","pliantdb::local::core::networking::Error","The name of the database being accessed.",36,null],[12,"schema","","The schema provided for the database.",36,null],[12,"stored_schema","","The schema stored for the database.",36,null],[13,"SchemaAlreadyRegistered","pliantdb::local::core::networking","The [<code>schema::Id</code>] returned has already been registered …",35,null],[13,"SchemaNotRegistered","","The [<code>schema::Id</code>] requested was not registered with this …",35,null],[0,"error","pliantdb::local::core::networking::fabruic","<code>Error</code> for this [<code>crate</code>].",null,null],[6,"Result","pliantdb::local::core::networking::fabruic::error","<code>Result</code> type for this [<code>crate</code>].",null,null],[4,"Error","","<code>Error</code> for this [<code>crate</code>].",null,null],[13,"ParseCertificate","","Failed to parse the given certificate.",37,null],[12,"certificate","pliantdb::local::core::networking::fabruic::error::Error","The certificate passed to <code>from_der</code>.",38,null],[12,"error","","The parsing error.",38,null],[13,"DanglingCertificate","pliantdb::local::core::networking::fabruic::error","Data passed to generate <code>Certificate</code> with <code>from_der</code> found …",37,null],[12,"certificate","pliantdb::local::core::networking::fabruic::error::Error","The certificate passed to <code>from_der</code>.",39,null],[12,"dangling","","The dangling bytes.",39,null],[13,"ExpiredCertificate","pliantdb::local::core::networking::fabruic::error","<code>Certificate</code> has expired.",37,null],[13,"DomainCertificate","","<code>Certificate</code> is missing a domain name.",37,null],[13,"ParsePrivateKey","","Failed to parse the given private key.",37,null],[13,"ParseAddress","","Parsing a <code>SocketAddr</code> from a [<code>str</code>] failed.",37,null],[13,"Certificate","","Returned by <code>Endpoint</code> when failing to parse the given …",37,null],[13,"PrivateKey","","Returned by <code>Endpoint</code> when failing to parse the given …",37,null],[13,"InvalidKeyPair","","Returned by <code>Endpoint</code> when failing to pair the given …",37,null],[13,"InvalidCertificate","","Returned by <code>Endpoint</code> when failing to add the given …",37,null],[13,"BindSocket","","Returned by <code>Endpoint</code> when failing to bind the socket on …",37,null],[13,"Resolve","","Failed to resolve domain to IP address.",37,null],[13,"NoIp","","Found no IP address for that domain.",37,null],[13,"LocalAddress","","Returned by <code>Endpoint::local_address</code> when failing to …",37,null],[13,"AlreadyClosed","","Attempting to close something that is already closed.",37,null],[13,"ConnectConfig","","Returned by <code>Endpoint::connect</code> if configuration needed to …",37,null],[13,"Connecting","","Returned by <code>Connecting::accept</code> if connecting to the peer …",37,null],[13,"ReceiveStream","","Returned by <code>Connection</code> <code>Stream</code> when receiving a new stream …",37,null],[13,"OpenStream","","Returned by <code>Connection::open_stream</code> if opening a stream …",37,null],[13,"Write","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to write into …",37,null],[13,"Finish","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to finish a …",37,null],[13,"Send","","Returned by <code>Sender::send</code> if the stream was closed by …",37,null],[13,"Serialize","","Returned by <code>Sender::send</code> if <code>serialization</code> failed.",37,null],[13,"Read","","Returned by <code>Receiver::close</code> if <code>Receiver</code> failed to read …",37,null],[13,"Deserialize","","Returned by <code>Receiver::finish</code> if <code>Receiver</code> failed to …",37,null],[13,"NoType","","Returned by <code>Incoming::type</code> if the peer closed the stream …",37,null],[4,"ParseCertificate","","Possible certificate parsing errors.",null,null],[13,"WebPki","","<code>Error</code> returned by [<code>webpki</code>].",40,null],[13,"X509","","<code>Error</code> returned by [<code>x509_parser</code>].",40,null],[3,"IoError","","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…",null,null],[3,"AddrParseError","","An error which can be returned when parsing an IP address …",null,null],[4,"ErrorKind","","The kind of error that can be produced during a …",null,null],[13,"Io","","If the error stems from the reader/writer that is being …",41,null],[13,"InvalidUtf8Encoding","","Returned if the deserializer attempts to deserialize a …",41,null],[13,"InvalidBoolEncoding","","Returned if the deserializer attempts to deserialize a …",41,null],[13,"InvalidCharEncoding","","Returned if the deserializer attempts to deserialize a …",41,null],[13,"InvalidTagEncoding","","Returned if the deserializer attempts to deserialize the …",41,null],[13,"DeserializeAnyNotSupported","","Serde has a deserialize_any method that lets the format …",41,null],[13,"SizeLimit","","If (de)serializing a message takes more than the provided …",41,null],[13,"SequenceMustHaveLength","","Bincode can not encode sequences of unknown length (like …",41,null],[13,"Custom","","A custom error message from Serde.",41,null],[4,"ConnectError","","Errors in the parameters being used to create a new …",null,null],[13,"EndpointStopping","","The endpoint can no longer create new connections",42,null],[13,"TooManyConnections","","The number of active connections on the local endpoint is …",42,null],[13,"InvalidDnsName","","The domain name supplied was malformed",42,null],[13,"Config","","The transport configuration was invalid",42,null],[13,"InvalidRemoteAddress","","The remote [<code>SocketAddr</code>] supplied was malformed",42,null],[4,"ConnectionError","","Reasons why a connection might be lost",null,null],[13,"VersionMismatch","","The peer doesn\'t implement any supported version",43,null],[13,"TransportError","","The peer violated the QUIC specification as understood by …",43,null],[13,"ConnectionClosed","","The peer\'s QUIC stack aborted the connection automatically",43,null],[13,"ApplicationClosed","","The peer closed the connection",43,null],[13,"Reset","","The peer is unable to continue processing this …",43,null],[13,"TimedOut","","Communication with the peer has lapsed for longer than …",43,null],[13,"LocallyClosed","","The local application closed the connection",43,null],[4,"EndpointError","","Errors that can occur during the construction of an …",null,null],[13,"Socket","","An error during setup of the underlying UDP socket.",44,null],[3,"ParseError","","Errors encountered while parsing a TLS certificate or …",null,null],[4,"ReadError","","Errors that arise from reading from a stream.",null,null],[13,"Reset","","The peer abandoned transmitting data on this stream.",45,null],[13,"ConnectionClosed","","The connection was closed.",45,null],[13,"UnknownStream","","The stream has already been stopped, finished, or reset",45,null],[13,"IllegalOrderedRead","","Attempted an ordered read following an unordered read",45,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",45,null],[4,"WriteError","","Errors that arise from writing to a stream",null,null],[13,"Stopped","","The peer is no longer accepting data on this stream.",46,null],[13,"ConnectionClosed","","The connection was closed.",46,null],[13,"UnknownStream","","The stream has already been finished or reset",46,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",46,null],[3,"KeyRejected","","An error parsing or validating a key.",null,null],[4,"TLSError","","rustls reports protocol errors using this type.",null,null],[13,"InappropriateMessage","","We received a TLS message that isn\'t valid right now. …",47,null],[12,"expect_types","pliantdb::local::core::networking::fabruic::error::TLSError","Which types we expected",48,null],[12,"got_type","","What type we received",48,null],[13,"InappropriateHandshakeMessage","pliantdb::local::core::networking::fabruic::error","We received a TLS handshake message that isn\'t valid …",47,null],[12,"expect_types","pliantdb::local::core::networking::fabruic::error::TLSError","Which handshake type we expected",49,null],[12,"got_type","","What handshake type we received",49,null],[13,"CorruptMessage","pliantdb::local::core::networking::fabruic::error","The peer sent us a syntactically incorrect TLS message.",47,null],[13,"CorruptMessagePayload","","The peer sent us a TLS message with invalid contents.",47,null],[13,"NoCertificatesPresented","","The peer didn\'t give us any certificates.",47,null],[13,"DecryptError","","We couldn\'t decrypt a message.  This is invariably fatal.",47,null],[13,"PeerIncompatibleError","","The peer doesn\'t support a protocol version/feature we …",47,null],[13,"PeerMisbehavedError","","The peer deviated from the standard TLS protocol. The …",47,null],[13,"AlertReceived","","We received a fatal alert.  This means the peer is …",47,null],[13,"WebPKIError","","The presented certificate chain is invalid.",47,null],[13,"InvalidSCT","","The presented SCT(s) were invalid.",47,null],[13,"General","","A catch-all error for unlikely errors.",47,null],[13,"FailedToGetCurrentTime","","We failed to figure out what time it currently is.",47,null],[13,"HandshakeNotComplete","","This function doesn\'t work until the TLS handshake is …",47,null],[13,"PeerSentOversizedRecord","","The peer sent an oversized record/fragment.",47,null],[13,"NoApplicationProtocol","","An incoming connection did not support any known …",47,null],[3,"ResolveError","","The error type for errors that get returned in the crate",null,null],[4,"WebPkiError","","An error that occurs during certificate validation or …",null,null],[13,"BadDER","","The encoding of some ASN.1 DER-encoded item is invalid.",50,null],[13,"BadDERTime","","The encoding of an ASN.1 DER-encoded time is invalid.",50,null],[13,"CAUsedAsEndEntity","","A CA certificate is veing used as an end-entity …",50,null],[13,"CertExpired","","The certificate is expired; i.e. the time it is being …",50,null],[13,"CertNotValidForName","","The certificate is not valid for the name it is being …",50,null],[13,"CertNotValidYet","","The certificate is not valid yet; i.e. the time it is …",50,null],[13,"EndEntityUsedAsCA","","An end-entity certificate is being used as a CA …",50,null],[13,"ExtensionValueInvalid","","An X.509 extension is invalid.",50,null],[13,"InvalidCertValidity","","The certificate validity period (notBefore, notAfter) is …",50,null],[13,"InvalidSignatureForPublicKey","","The signature is invalid for the given public key.",50,null],[13,"NameConstraintViolation","","The certificate violates one or more name constraints.",50,null],[13,"PathLenConstraintViolated","","The certificate violates one or more path length …",50,null],[13,"SignatureAlgorithmMismatch","","The algorithm in the TBSCertificate \\\"signature\\\" field of …",50,null],[13,"RequiredEKUNotFound","","The certificate is not valid for the Extended Key Usage …",50,null],[13,"UnknownIssuer","","A valid issuer for the certificate could not be found.",50,null],[13,"UnsupportedCertVersion","","The certificate is not a v3 X.509 certificate.",50,null],[13,"UnsupportedCriticalExtension","","The certificate contains an unsupported critical …",50,null],[13,"UnsupportedSignatureAlgorithmForPublicKey","","The signature\'s algorithm does not match the algorithm of …",50,null],[13,"UnsupportedSignatureAlgorithm","","The signature algorithm for a signature is not in the set …",50,null],[4,"X509Error","","An error that can occur while parsing or validating a …",null,null],[13,"Generic","","",51,null],[13,"InvalidVersion","","",51,null],[13,"InvalidSerial","","",51,null],[13,"InvalidAlgorithmIdentifier","","",51,null],[13,"InvalidX509Name","","",51,null],[13,"InvalidDate","","",51,null],[13,"InvalidSPKI","","",51,null],[13,"InvalidSubjectUID","","",51,null],[13,"InvalidIssuerUID","","",51,null],[13,"InvalidExtensions","","",51,null],[13,"InvalidAttributes","","",51,null],[13,"DuplicateExtensions","","",51,null],[13,"DuplicateAttributes","","",51,null],[13,"InvalidSignatureValue","","",51,null],[13,"InvalidTbsCertificate","","",51,null],[13,"InvalidUserCertificate","","",51,null],[13,"InvalidCertificate","","Top-level certificate structure is invalid",51,null],[13,"SignatureVerificationError","","",51,null],[13,"SignatureUnsupportedAlgorithm","","",51,null],[13,"Der","","",51,null],[13,"NomError","","",51,null],[4,"Err","","The <code>Err</code> enum indicates the parser was not successful",null,null],[13,"Incomplete","","There was not enough data",52,null],[13,"Error","","The parser had an error (recoverable)",52,null],[13,"Failure","","The parser had an unrecoverable error: we got to the right…",52,null],[5,"generate_self_signed","pliantdb::local::core::networking::fabruic","Generate a self signed certificate.",null,[[]]],[3,"Certificate","","A public Certificate. You can distribute it freely to …",null,null],[8,"Dangerous","","Gives read access to the [<code>PrivateKey</code>].",null,null],[10,"as_ref","","Returns a <code>&[u8]</code> to the [<code>PrivateKey</code>].",53,[[]]],[10,"into","","Returns a [<code>Vec<u8></code>] to the [<code>PrivateKey</code>].",53,[[],[["global",3],["vec",3],["u8",15]]]],[10,"serialize","","Serialize with [<code>serde</code>].",53,[[],["result",4]]],[3,"PrivateKey","","A private Key.",null,null],[4,"Error","","<code>Error</code> for this [<code>crate</code>].",null,null],[13,"ParseCertificate","","Failed to parse the given certificate.",37,null],[12,"certificate","pliantdb::local::core::networking::fabruic::Error","The certificate passed to <code>from_der</code>.",38,null],[12,"error","","The parsing error.",38,null],[13,"DanglingCertificate","pliantdb::local::core::networking::fabruic","Data passed to generate <code>Certificate</code> with <code>from_der</code> found …",37,null],[12,"certificate","pliantdb::local::core::networking::fabruic::Error","The certificate passed to <code>from_der</code>.",39,null],[12,"dangling","","The dangling bytes.",39,null],[13,"ExpiredCertificate","pliantdb::local::core::networking::fabruic","<code>Certificate</code> has expired.",37,null],[13,"DomainCertificate","","<code>Certificate</code> is missing a domain name.",37,null],[13,"ParsePrivateKey","","Failed to parse the given private key.",37,null],[13,"ParseAddress","","Parsing a <code>SocketAddr</code> from a [<code>str</code>] failed.",37,null],[13,"Certificate","","Returned by <code>Endpoint</code> when failing to parse the given …",37,null],[13,"PrivateKey","","Returned by <code>Endpoint</code> when failing to parse the given …",37,null],[13,"InvalidKeyPair","","Returned by <code>Endpoint</code> when failing to pair the given …",37,null],[13,"InvalidCertificate","","Returned by <code>Endpoint</code> when failing to add the given …",37,null],[13,"BindSocket","","Returned by <code>Endpoint</code> when failing to bind the socket on …",37,null],[13,"Resolve","","Failed to resolve domain to IP address.",37,null],[13,"NoIp","","Found no IP address for that domain.",37,null],[13,"LocalAddress","","Returned by <code>Endpoint::local_address</code> when failing to …",37,null],[13,"AlreadyClosed","","Attempting to close something that is already closed.",37,null],[13,"ConnectConfig","","Returned by <code>Endpoint::connect</code> if configuration needed to …",37,null],[13,"Connecting","","Returned by <code>Connecting::accept</code> if connecting to the peer …",37,null],[13,"ReceiveStream","","Returned by <code>Connection</code> <code>Stream</code> when receiving a new stream …",37,null],[13,"OpenStream","","Returned by <code>Connection::open_stream</code> if opening a stream …",37,null],[13,"Write","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to write into …",37,null],[13,"Finish","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to finish a …",37,null],[13,"Send","","Returned by <code>Sender::send</code> if the stream was closed by …",37,null],[13,"Serialize","","Returned by <code>Sender::send</code> if <code>serialization</code> failed.",37,null],[13,"Read","","Returned by <code>Receiver::close</code> if <code>Receiver</code> failed to read …",37,null],[13,"Deserialize","","Returned by <code>Receiver::finish</code> if <code>Receiver</code> failed to …",37,null],[13,"NoType","","Returned by <code>Incoming::type</code> if the peer closed the stream …",37,null],[6,"Result","","<code>Result</code> type for this [<code>crate</code>].",null,null],[3,"Builder","","Holding configuration for [<code>Builder</code>] to build [<code>Endpoint</code>].",null,null],[3,"Connecting","","Represent\'s an intermediate state to build a [<code>Connection</code>].",null,null],[3,"Connection","","Represents an open connection. Receives [<code>Incoming</code>] …",null,null],[3,"Endpoint","","Represents a socket using the QUIC protocol to …",null,null],[3,"Incoming","","An intermediate state to define which type to accept in …",null,null],[3,"Receiver","","Used to receive data from a stream.",null,null],[3,"Sender","","Used to send data to a stream.",null,null],[0,"schema","pliantdb::local::core","Types for defining database schema.",null,null],[0,"collection","pliantdb::local::core::schema","Types for defining a <code>Collection</code>.",null,null],[3,"Id","pliantdb::local::core::schema::collection","A unique collection id. Choose collection names that …",null,null],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_id","","The <code>Id</code> of this collection.",54,[[],["id",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",54,[[["schematic",3]]]],[0,"view","pliantdb::local::core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb::local::core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb::local::core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",55,null],[12,"key","","The key used to index the View.",55,null],[12,"value","","An associated value stored in the view.",55,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",56,null],[12,"key","","The key used to index the View.",56,null],[12,"value","","An associated value stored in the view.",56,null],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",57,null],[12,"key","","The key used to index the View.",57,null],[12,"value","","An associated value stored in the view.",57,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",58,null],[12,"value","","The value generated by the <code>View</code>",58,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",59,[[],[["error",3],["cow",4],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",59,[[],[["error",3],["result",4]]]],[4,"Error","pliantdb::local::core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",60,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",60,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",60,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",61,null],[16,"Key","","The key for this view.",61,null],[16,"Value","","An associated type that can be stored with each entry in …",61,null],[10,"version","","The version of the view. Changing this value will cause …",61,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",61,[[],[["cow",4],["str",15]]]],[10,"map","","The map function for this view. This function is …",61,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","The reduce function for this view. If …",61,[[["bool",15]],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",62,null],[13,"Borrowed","","a borrowed value",62,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",63,[[],["id",3]]],[10,"version","","Wraps [<code>View::version</code>]",63,[[],["u64",15]]],[10,"name","","Wraps [<code>View::name</code>]",63,[[],[["cow",4],["str",15]]]],[10,"map","","Wraps [<code>View::map</code>]",63,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",63,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",59,[[],[["error",3],["cow",4],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",59,[[],[["error",3],["result",4]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",55,null],[12,"key","","The key used to index the View.",55,null],[12,"value","","An associated value stored in the view.",55,null],[3,"Id","pliantdb::local::core::schema","The unique Id of a [<code>Schema</code>]. Primarily used to try to …",null,null],[8,"Schema","","Defines a group of collections that are stored into a …",null,null],[10,"schema_id","","Returns the unique [<code>Id</code>] for this schema.",64,[[],["id",3]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",64,[[["schematic",3]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",64,[[],["schematic",3]]],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",59,[[],[["error",3],["cow",4],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",59,[[],[["error",3],["result",4]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",55,null],[12,"key","","The key used to index the View.",55,null],[12,"value","","An associated value stored in the view.",55,null],[3,"Schematic","","A collection of defined collections and views.",null,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",63,[[],["id",3]]],[10,"version","","Wraps [<code>View::version</code>]",63,[[],["u64",15]]],[10,"name","","Wraps [<code>View::name</code>]",63,[[],[["cow",4],["str",15]]]],[10,"map","","Wraps [<code>View::map</code>]",63,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",63,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",61,null],[16,"Key","","The key for this view.",61,null],[16,"Value","","An associated type that can be stored with each entry in …",61,null],[10,"version","","The version of the view. Changing this value will cause …",61,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",61,[[],[["cow",4],["str",15]]]],[10,"map","","The map function for this view. This function is …",61,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","The reduce function for this view. If …",61,[[["bool",15]],[["result",4],["error",4]]]],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_id","","The <code>Id</code> of this collection.",54,[[],["id",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",54,[[["schematic",3]]]],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",62,null],[13,"Borrowed","","a borrowed value",62,null],[4,"Error","","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",60,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",60,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",60,null],[0,"transaction","pliantdb::local::core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb::local::core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",65,null],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",66,null],[12,"command","","The command being performed.",66,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",67,null],[12,"contents","pliantdb::local::core::transaction::Command","The initial contents of the document.",68,null],[13,"Update","pliantdb::local::core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",67,null],[12,"header","pliantdb::local::core::transaction::Command","The current header of the <code>Document</code>.",69,null],[12,"contents","","The new contents to store within the <code>Document</code>.",69,null],[13,"Delete","pliantdb::local::core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",67,null],[12,"header","pliantdb::local::core::transaction::Command","The current header of the <code>Document</code>.",70,null],[4,"OperationResult","pliantdb::local::core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",71,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",71,null],[12,"collection","pliantdb::local::core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",72,null],[12,"header","","The header of the updated <code>Document</code>.",72,null],[13,"DocumentDeleted","pliantdb::local::core::transaction","A <code>Document</code> was deleted.",71,null],[12,"collection","pliantdb::local::core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",73,null],[12,"id","","The id of the deleted <code>Document</code>.",73,null],[3,"Executed","pliantdb::local::core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",74,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",74,null],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",75,null],[12,"id","","The id of the changed <code>Document</code>.",75,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",75,null],[4,"Error","pliantdb::local::core","an enumeration of errors that this crate can produce",null,null],[13,"Storage","","An error from interacting with local storage.",76,null],[13,"Server","","An error from interacting with a server.",76,null],[13,"Transport","","An error occurred from the QUIC transport layer.",76,null],[13,"Websocket","","An error occurred from the websocket transport layer.",76,null],[13,"Networking","","An error occurred from networking.",76,null],[13,"Io","","An error occurred from IO.",76,null],[13,"Configuration","","An error occurred with the provided configuration options.",76,null],[13,"Client","","An error occurred inside of the client.",76,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",76,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",76,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",76,null],[0,"test_util","","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb::local::core::test_util","",null,null],[12,"value","","",77,null],[12,"category","","",77,null],[12,"parent_id","","",77,null],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",78,null],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"ConnectionTest","","",null,null],[13,"StoreRetrieveUpdate","","",79,null],[13,"NotFound","","",79,null],[13,"Conflict","","",79,null],[13,"BadUpdate","","",79,null],[13,"NoUpdate","","",79,null],[13,"GetMultiple","","",79,null],[13,"ListTransactions","","",79,null],[13,"ViewQuery","","",79,null],[13,"UnassociatedCollection","","",79,null],[13,"ViewUpdate","","",79,null],[13,"ViewAccessPolicies","","",79,null],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[14,"define_connection_test_suite","pliantdb::local::core","Creates a test suite that tests methods available on […",null,null],[3,"Configuration","pliantdb::local","Configuration options for <code>Storage</code>.",null,null],[12,"workers","","Configuration options related to background tasks.",80,null],[12,"views","","Configuration options related to views.",80,null],[4,"Error","","Errors that can occur from interacting with storage.",null,null],[13,"Sled","","An error occurred interacting with <code>sled</code>.",87,null],[13,"InternalSerialization","","An error occurred serializing the underlying database …",87,null],[13,"Serialization","","An error occurred serializing the contents of a <code>Document</code> …",87,null],[13,"InternalCommunication","","An internal error occurred while waiting for a message.",87,null],[13,"View","","An error occurred while executing a view",87,null],[13,"Core","","An internal error occurred while waiting for a message.",87,null],[13,"Other","","An internal error occurred while waiting for a message.",87,null],[3,"Storage","","A local, file-based database.",null,null],[12,"schema","","The [<code>Schematic</code>] of <code>DB</code>.",88,null],[0,"cli","pliantdb::server","Command-line interface for the server.",null,null],[0,"certificate","pliantdb::server::cli","Command-line interface for managing the root certificate.",null,null],[4,"Command","pliantdb::server::cli::certificate","Command to manage the server\'s certificates.",null,null],[13,"InstallSelfSigned","","Installs a self-signed certificate into the server. The …",89,null],[12,"server_name","pliantdb::server::cli::certificate::Command","The name of the server. If this server has a DNS name, …",90,null],[12,"overwrite","","If an existing certificate exists, an error will be …",90,null],[13,"Install","pliantdb::server::cli::certificate","Installs a X.509 certificate and associated private key …",89,null],[12,"private_key","pliantdb::server::cli::certificate::Command","A private key used to generate <code>certificate</code> in binary DER …",91,null],[12,"certificate","","The X.509 certificate in binary DER format.",91,null],[0,"serve","pliantdb::server::cli","Command-line interface for hosting a server.",null,null],[3,"Serve","pliantdb::server::cli::serve","Execute the server",null,null],[12,"listen_on","","The bind address and port. Defaults to 5645",92,null],[3,"Cli","pliantdb::server::cli","Command-line interface for <code>pliantdb server</code>.",null,null],[12,"server_data_directory","","The path to the directory where the server should store …",93,null],[12,"subcommand","","The command to execute.",93,null],[4,"Command","","Available commands for <code>pliantdb server</code>.",null,null],[13,"Certificate","","Manage the server\'s root certificate.",94,null],[13,"Serve","","Execute the server.",94,null],[0,"test_util","pliantdb::server","",null,null],[17,"BASIC_SERVER_NAME","pliantdb::server::test_util","",null,null],[5,"initialize_basic_server","","",null,[[["path",3]]]],[5,"basic_server_connection_tests","","",null,[[]]],[3,"Configuration","pliantdb::server","Configuration options for <code>Server</code>",null,null],[12,"request_workers","","Number of simultaneous requests to be processed. Default …",95,null],[12,"storage","","Configuration options for individual databases.",95,null],[4,"Error","","An error occurred while interacting with a <code>Server</code>.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See …",96,null],[13,"DatabaseNotFound","","The database name given was not found.",96,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",96,null],[13,"Transport","","An error occurred from the QUIC transport layer.",96,null],[13,"Websocket","","An error occurred from the Websocket transport layer.",96,null],[13,"Io","","An error occurred from IO",96,null],[13,"Request","","An error occurred while processing a request",96,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",96,null],[12,"database_name","pliantdb::server::Error","The name of the database being accessed.",97,null],[12,"schema","","The schema provided for the database.",97,null],[12,"stored_schema","","The schema stored for the database.",97,null],[13,"SchemaAlreadyRegistered","pliantdb::server","The [<code>schema::Id</code>] returned has already been registered …",96,null],[13,"Core","","An error occurred from within the schema.",96,null],[13,"Storage","","An error occurred while interacting with a local database.",96,null],[3,"Server","","A <code>PliantDB</code> server.",null,null],[11,"from","pliantdb::cli","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","pliantdb::client::url","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"to_string","","",98,[[],["string",3]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"equivalent","","",98,[[],["bool",15]]],[11,"init","","",98,[[],["usize",15]]],[11,"deref","","",98,[[["usize",15]]]],[11,"deref_mut","","",98,[[["usize",15]]]],[11,"drop","","",98,[[["usize",15]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"init","","",99,[[],["usize",15]]],[11,"deref","","",99,[[["usize",15]]]],[11,"deref_mut","","",99,[[["usize",15]]]],[11,"drop","","",99,[[["usize",15]]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"init","","",100,[[],["usize",15]]],[11,"deref","","",100,[[["usize",15]]]],[11,"deref_mut","","",100,[[["usize",15]]]],[11,"drop","","",100,[[["usize",15]]]],[11,"from","pliantdb::client::url::form_urlencoded","",101,[[]]],[11,"into","","",101,[[]]],[11,"into_iter","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"init","","",101,[[],["usize",15]]],[11,"deref","","",101,[[["usize",15]]]],[11,"deref_mut","","",101,[[["usize",15]]]],[11,"drop","","",101,[[["usize",15]]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"into_iter","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"init","","",102,[[],["usize",15]]],[11,"deref","","",102,[[["usize",15]]]],[11,"deref_mut","","",102,[[["usize",15]]]],[11,"drop","","",102,[[["usize",15]]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"into_iter","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"init","","",103,[[],["usize",15]]],[11,"deref","","",103,[[["usize",15]]]],[11,"deref_mut","","",103,[[["usize",15]]]],[11,"drop","","",103,[[["usize",15]]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"init","","",104,[[],["usize",15]]],[11,"deref","","",104,[[["usize",15]]]],[11,"deref_mut","","",104,[[["usize",15]]]],[11,"drop","","",104,[[["usize",15]]]],[11,"from","pliantdb::client::url","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"equivalent","","",2,[[],["bool",15]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"equivalent","","",105,[[],["bool",15]]],[11,"init","","",105,[[],["usize",15]]],[11,"deref","","",105,[[["usize",15]]]],[11,"deref_mut","","",105,[[["usize",15]]]],[11,"drop","","",105,[[["usize",15]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"equivalent","","",3,[[],["bool",15]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"equivalent","","",4,[[],["bool",15]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"equivalent","","",5,[[],["bool",15]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"init","","",106,[[],["usize",15]]],[11,"deref","","",106,[[["usize",15]]]],[11,"deref_mut","","",106,[[["usize",15]]]],[11,"drop","","",106,[[["usize",15]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","pliantdb::client","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"init","","",107,[[],["usize",15]]],[11,"deref","","",107,[[["usize",15]]]],[11,"deref_mut","","",107,[[["usize",15]]]],[11,"drop","","",107,[[["usize",15]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","pliantdb::local::core::connection","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"init","","",108,[[],["usize",15]]],[11,"deref","","",108,[[["usize",15]]]],[11,"deref_mut","","",108,[[["usize",15]]]],[11,"drop","","",108,[[["usize",15]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","pliantdb::local::core::document","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"equivalent","","",12,[[],["bool",15]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"equivalent","","",14,[[],["bool",15]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"from","pliantdb::local::core::networking","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[],["usize",15]]],[11,"deref","","",18,[[["usize",15]]]],[11,"deref_mut","","",18,[[["usize",15]]]],[11,"drop","","",18,[[["usize",15]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[],["usize",15]]],[11,"deref","","",20,[[["usize",15]]]],[11,"deref_mut","","",20,[[["usize",15]]]],[11,"drop","","",20,[[["usize",15]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[],["usize",15]]],[11,"deref","","",27,[[["usize",15]]]],[11,"deref_mut","","",27,[[["usize",15]]]],[11,"drop","","",27,[[["usize",15]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[],["usize",15]]],[11,"deref","","",28,[[["usize",15]]]],[11,"deref_mut","","",28,[[["usize",15]]]],[11,"drop","","",28,[[["usize",15]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[],["usize",15]]],[11,"deref","","",31,[[["usize",15]]]],[11,"deref_mut","","",31,[[["usize",15]]]],[11,"drop","","",31,[[["usize",15]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[],["usize",15]]],[11,"deref","","",32,[[["usize",15]]]],[11,"deref_mut","","",32,[[["usize",15]]]],[11,"drop","","",32,[[["usize",15]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[],["usize",15]]],[11,"deref","","",33,[[["usize",15]]]],[11,"deref_mut","","",33,[[["usize",15]]]],[11,"drop","","",33,[[["usize",15]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[],["usize",15]]],[11,"deref","","",35,[[["usize",15]]]],[11,"deref_mut","","",35,[[["usize",15]]]],[11,"drop","","",35,[[["usize",15]]]],[11,"from","pliantdb::local::core::networking::fabruic","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[],["usize",15]]],[11,"deref","","",37,[[["usize",15]]]],[11,"deref_mut","","",37,[[["usize",15]]]],[11,"drop","","",37,[[["usize",15]]]],[11,"from","pliantdb::local::core::networking::fabruic::error","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[],["usize",15]]],[11,"deref","","",40,[[["usize",15]]]],[11,"deref_mut","","",40,[[["usize",15]]]],[11,"drop","","",40,[[["usize",15]]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_string","","",109,[[],["string",3]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"init","","",109,[[],["usize",15]]],[11,"deref","","",109,[[["usize",15]]]],[11,"deref_mut","","",109,[[["usize",15]]]],[11,"drop","","",109,[[["usize",15]]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"to_string","","",110,[[],["string",3]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"equivalent","","",110,[[],["bool",15]]],[11,"init","","",110,[[],["usize",15]]],[11,"deref","","",110,[[["usize",15]]]],[11,"deref_mut","","",110,[[["usize",15]]]],[11,"drop","","",110,[[["usize",15]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[],["usize",15]]],[11,"deref","","",41,[[["usize",15]]]],[11,"deref_mut","","",41,[[["usize",15]]]],[11,"drop","","",41,[[["usize",15]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"equivalent","","",42,[[],["bool",15]]],[11,"init","","",42,[[],["usize",15]]],[11,"deref","","",42,[[["usize",15]]]],[11,"deref_mut","","",42,[[["usize",15]]]],[11,"drop","","",42,[[["usize",15]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"equivalent","","",43,[[],["bool",15]]],[11,"init","","",43,[[],["usize",15]]],[11,"deref","","",43,[[["usize",15]]]],[11,"deref_mut","","",43,[[["usize",15]]]],[11,"drop","","",43,[[["usize",15]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[],["usize",15]]],[11,"deref","","",44,[[["usize",15]]]],[11,"deref_mut","","",44,[[["usize",15]]]],[11,"drop","","",44,[[["usize",15]]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"to_string","","",111,[[],["string",3]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"init","","",111,[[],["usize",15]]],[11,"deref","","",111,[[["usize",15]]]],[11,"deref_mut","","",111,[[["usize",15]]]],[11,"drop","","",111,[[["usize",15]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"equivalent","","",45,[[],["bool",15]]],[11,"init","","",45,[[],["usize",15]]],[11,"deref","","",45,[[["usize",15]]]],[11,"deref_mut","","",45,[[["usize",15]]]],[11,"drop","","",45,[[["usize",15]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"equivalent","","",46,[[],["bool",15]]],[11,"init","","",46,[[],["usize",15]]],[11,"deref","","",46,[[["usize",15]]]],[11,"deref_mut","","",46,[[["usize",15]]]],[11,"drop","","",46,[[["usize",15]]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"to_string","","",112,[[],["string",3]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"init","","",112,[[],["usize",15]]],[11,"deref","","",112,[[["usize",15]]]],[11,"deref_mut","","",112,[[["usize",15]]]],[11,"drop","","",112,[[["usize",15]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[],["usize",15]]],[11,"deref","","",47,[[["usize",15]]]],[11,"deref_mut","","",47,[[["usize",15]]]],[11,"drop","","",47,[[["usize",15]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"init","","",113,[[],["usize",15]]],[11,"deref","","",113,[[["usize",15]]]],[11,"deref_mut","","",113,[[["usize",15]]]],[11,"drop","","",113,[[["usize",15]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[],["usize",15]]],[11,"deref","","",50,[[["usize",15]]]],[11,"deref_mut","","",50,[[["usize",15]]]],[11,"drop","","",50,[[["usize",15]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[],["usize",15]]],[11,"deref","","",51,[[["usize",15]]]],[11,"deref_mut","","",51,[[["usize",15]]]],[11,"drop","","",51,[[["usize",15]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"equivalent","","",52,[[],["bool",15]]],[11,"init","","",52,[[],["usize",15]]],[11,"deref","","",52,[[["usize",15]]]],[11,"deref_mut","","",52,[[["usize",15]]]],[11,"drop","","",52,[[["usize",15]]]],[11,"from","pliantdb::local::core::networking::fabruic","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"as_bits","","",114,[[],["bitslice",3]]],[11,"vzip","","",114,[[]]],[11,"equivalent","","",114,[[],["bool",15]]],[11,"init","","",114,[[],["usize",15]]],[11,"deref","","",114,[[["usize",15]]]],[11,"deref_mut","","",114,[[["usize",15]]]],[11,"drop","","",114,[[["usize",15]]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"equivalent","","",115,[[],["bool",15]]],[11,"init","","",115,[[],["usize",15]]],[11,"deref","","",115,[[["usize",15]]]],[11,"deref_mut","","",115,[[["usize",15]]]],[11,"drop","","",115,[[["usize",15]]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"vzip","","",116,[[]]],[11,"init","","",116,[[],["usize",15]]],[11,"deref","","",116,[[["usize",15]]]],[11,"deref_mut","","",116,[[["usize",15]]]],[11,"drop","","",116,[[["usize",15]]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"vzip","","",117,[[]]],[11,"init","","",117,[[],["usize",15]]],[11,"deref","","",117,[[["usize",15]]]],[11,"deref_mut","","",117,[[["usize",15]]]],[11,"drop","","",117,[[["usize",15]]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"vzip","","",118,[[]]],[11,"init","","",118,[[],["usize",15]]],[11,"deref","","",118,[[["usize",15]]]],[11,"deref_mut","","",118,[[["usize",15]]]],[11,"drop","","",118,[[["usize",15]]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"vzip","","",119,[[]]],[11,"init","","",119,[[],["usize",15]]],[11,"deref","","",119,[[["usize",15]]]],[11,"deref_mut","","",119,[[["usize",15]]]],[11,"drop","","",119,[[["usize",15]]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"vzip","","",120,[[]]],[11,"init","","",120,[[],["usize",15]]],[11,"deref","","",120,[[["usize",15]]]],[11,"deref_mut","","",120,[[["usize",15]]]],[11,"drop","","",120,[[["usize",15]]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"try_poll_next","","",121,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"vzip","","",121,[[]]],[11,"init","","",121,[[],["usize",15]]],[11,"deref","","",121,[[["usize",15]]]],[11,"deref_mut","","",121,[[["usize",15]]]],[11,"drop","","",121,[[["usize",15]]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"vzip","","",122,[[]]],[11,"init","","",122,[[],["usize",15]]],[11,"deref","","",122,[[["usize",15]]]],[11,"deref_mut","","",122,[[["usize",15]]]],[11,"drop","","",122,[[["usize",15]]]],[11,"from","pliantdb::local::core::schema::collection","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"to_string","","",123,[[],["string",3]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"vzip","","",123,[[]]],[11,"equivalent","","",123,[[],["bool",15]]],[11,"init","","",123,[[],["usize",15]]],[11,"deref","","",123,[[["usize",15]]]],[11,"deref_mut","","",123,[[["usize",15]]]],[11,"drop","","",123,[[["usize",15]]]],[11,"from","pliantdb::local::core::schema","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[],["usize",15]]],[11,"deref","","",55,[[["usize",15]]]],[11,"deref_mut","","",55,[[["usize",15]]]],[11,"drop","","",55,[[["usize",15]]]],[11,"from","pliantdb::local::core::schema::view::map","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[],["usize",15]]],[11,"deref","","",56,[[["usize",15]]]],[11,"deref_mut","","",56,[[["usize",15]]]],[11,"drop","","",56,[[["usize",15]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"init","","",57,[[],["usize",15]]],[11,"deref","","",57,[[["usize",15]]]],[11,"deref_mut","","",57,[[["usize",15]]]],[11,"drop","","",57,[[["usize",15]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[],["usize",15]]],[11,"deref","","",58,[[["usize",15]]]],[11,"deref_mut","","",58,[[["usize",15]]]],[11,"drop","","",58,[[["usize",15]]]],[11,"from","pliantdb::local::core::schema","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_string","","",60,[[],["string",3]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[],["usize",15]]],[11,"deref","","",60,[[["usize",15]]]],[11,"deref_mut","","",60,[[["usize",15]]]],[11,"drop","","",60,[[["usize",15]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"as_bits","","",62,[[],["bitslice",3]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[],["usize",15]]],[11,"deref","","",62,[[["usize",15]]]],[11,"deref_mut","","",62,[[["usize",15]]]],[11,"drop","","",62,[[["usize",15]]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"to_string","","",124,[[],["string",3]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"vzip","","",124,[[]]],[11,"equivalent","","",124,[[],["bool",15]]],[11,"init","","",124,[[],["usize",15]]],[11,"deref","","",124,[[["usize",15]]]],[11,"deref_mut","","",124,[[["usize",15]]]],[11,"drop","","",124,[[["usize",15]]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"vzip","","",125,[[]]],[11,"init","","",125,[[],["usize",15]]],[11,"deref","","",125,[[["usize",15]]]],[11,"deref_mut","","",125,[[["usize",15]]]],[11,"drop","","",125,[[["usize",15]]]],[11,"from","pliantdb::local::core::transaction","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[],["usize",15]]],[11,"deref","","",65,[[["usize",15]]]],[11,"deref_mut","","",65,[[["usize",15]]]],[11,"drop","","",65,[[["usize",15]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"init","","",66,[[],["usize",15]]],[11,"deref","","",66,[[["usize",15]]]],[11,"deref_mut","","",66,[[["usize",15]]]],[11,"drop","","",66,[[["usize",15]]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"init","","",67,[[],["usize",15]]],[11,"deref","","",67,[[["usize",15]]]],[11,"deref_mut","","",67,[[["usize",15]]]],[11,"drop","","",67,[[["usize",15]]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"init","","",71,[[],["usize",15]]],[11,"deref","","",71,[[["usize",15]]]],[11,"deref_mut","","",71,[[["usize",15]]]],[11,"drop","","",71,[[["usize",15]]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"init","","",74,[[],["usize",15]]],[11,"deref","","",74,[[["usize",15]]]],[11,"deref_mut","","",74,[[["usize",15]]]],[11,"drop","","",74,[[["usize",15]]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"init","","",75,[[],["usize",15]]],[11,"deref","","",75,[[["usize",15]]]],[11,"deref_mut","","",75,[[["usize",15]]]],[11,"drop","","",75,[[["usize",15]]]],[11,"from","pliantdb::local::core","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"to_string","","",76,[[],["string",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"init","","",76,[[],["usize",15]]],[11,"deref","","",76,[[["usize",15]]]],[11,"deref_mut","","",76,[[["usize",15]]]],[11,"drop","","",76,[[["usize",15]]]],[11,"from","pliantdb::local::core::test_util","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"schema_id","","",77,[[],["id",3]]],[11,"define_collections","","",77,[[["schematic",3]]]],[11,"vzip","","",77,[[]]],[11,"init","","",77,[[],["usize",15]]],[11,"deref","","",77,[[["usize",15]]]],[11,"deref_mut","","",77,[[["usize",15]]]],[11,"drop","","",77,[[["usize",15]]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"collection","","",126,[[],["id",3]]],[11,"version","","",126,[[],["u64",15]]],[11,"name","","",126,[[],[["cow",4],["str",15]]]],[11,"map","","",126,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",126,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[11,"vzip","","",126,[[]]],[11,"init","","",126,[[],["usize",15]]],[11,"deref","","",126,[[["usize",15]]]],[11,"deref_mut","","",126,[[["usize",15]]]],[11,"drop","","",126,[[["usize",15]]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"collection","","",127,[[],["id",3]]],[11,"version","","",127,[[],["u64",15]]],[11,"name","","",127,[[],[["cow",4],["str",15]]]],[11,"map","","",127,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",127,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[11,"vzip","","",127,[[]]],[11,"init","","",127,[[],["usize",15]]],[11,"deref","","",127,[[["usize",15]]]],[11,"deref_mut","","",127,[[["usize",15]]]],[11,"drop","","",127,[[["usize",15]]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"collection","","",128,[[],["id",3]]],[11,"version","","",128,[[],["u64",15]]],[11,"name","","",128,[[],[["cow",4],["str",15]]]],[11,"map","","",128,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",128,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[11,"vzip","","",128,[[]]],[11,"init","","",128,[[],["usize",15]]],[11,"deref","","",128,[[["usize",15]]]],[11,"deref_mut","","",128,[[["usize",15]]]],[11,"drop","","",128,[[["usize",15]]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"collection","","",129,[[],["id",3]]],[11,"version","","",129,[[],["u64",15]]],[11,"name","","",129,[[],[["cow",4],["str",15]]]],[11,"map","","",129,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",129,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[11,"vzip","","",129,[[]]],[11,"init","","",129,[[],["usize",15]]],[11,"deref","","",129,[[["usize",15]]]],[11,"deref_mut","","",129,[[["usize",15]]]],[11,"drop","","",129,[[["usize",15]]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"vzip","","",130,[[]]],[11,"init","","",130,[[],["usize",15]]],[11,"deref","","",130,[[["usize",15]]]],[11,"deref_mut","","",130,[[["usize",15]]]],[11,"drop","","",130,[[["usize",15]]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"init","","",78,[[],["usize",15]]],[11,"deref","","",78,[[["usize",15]]]],[11,"deref_mut","","",78,[[["usize",15]]]],[11,"drop","","",78,[[["usize",15]]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"schema_id","","",131,[[],["id",3]]],[11,"define_collections","","",131,[[["schematic",3]]]],[11,"vzip","","",131,[[]]],[11,"init","","",131,[[],["usize",15]]],[11,"deref","","",131,[[["usize",15]]]],[11,"deref_mut","","",131,[[["usize",15]]]],[11,"drop","","",131,[[["usize",15]]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"schema_id","","",132,[[],["id",3]]],[11,"define_collections","","",132,[[["schematic",3]]]],[11,"vzip","","",132,[[]]],[11,"init","","",132,[[],["usize",15]]],[11,"deref","","",132,[[["usize",15]]]],[11,"deref_mut","","",132,[[["usize",15]]]],[11,"drop","","",132,[[["usize",15]]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"schema_id","","",133,[[],["id",3]]],[11,"define_collections","","",133,[[["schematic",3]]]],[11,"vzip","","",133,[[]]],[11,"init","","",133,[[],["usize",15]]],[11,"deref","","",133,[[["usize",15]]]],[11,"deref_mut","","",133,[[["usize",15]]]],[11,"drop","","",133,[[["usize",15]]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"init","","",79,[[],["usize",15]]],[11,"deref","","",79,[[["usize",15]]]],[11,"deref_mut","","",79,[[["usize",15]]]],[11,"drop","","",79,[[["usize",15]]]],[11,"from","pliantdb::local","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"init","","",80,[[],["usize",15]]],[11,"deref","","",80,[[["usize",15]]]],[11,"deref_mut","","",80,[[["usize",15]]]],[11,"drop","","",80,[[["usize",15]]]],[11,"from","pliantdb::local::config","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"init","","",81,[[],["usize",15]]],[11,"deref","","",81,[[["usize",15]]]],[11,"deref_mut","","",81,[[["usize",15]]]],[11,"drop","","",81,[[["usize",15]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"init","","",82,[[],["usize",15]]],[11,"deref","","",82,[[["usize",15]]]],[11,"deref_mut","","",82,[[["usize",15]]]],[11,"drop","","",82,[[["usize",15]]]],[11,"from","pliantdb::local::backup","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"init","","",83,[[],["usize",15]]],[11,"deref","","",83,[[["usize",15]]]],[11,"deref_mut","","",83,[[["usize",15]]]],[11,"drop","","",83,[[["usize",15]]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"init","","",84,[[],["usize",15]]],[11,"deref","","",84,[[["usize",15]]]],[11,"deref_mut","","",84,[[["usize",15]]]],[11,"drop","","",84,[[["usize",15]]]],[11,"from","pliantdb::local","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_string","","",87,[[],["string",3]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"init","","",87,[[],["usize",15]]],[11,"deref","","",87,[[["usize",15]]]],[11,"deref_mut","","",87,[[["usize",15]]]],[11,"drop","","",87,[[["usize",15]]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"init","","",88,[[],["usize",15]]],[11,"deref","","",88,[[["usize",15]]]],[11,"deref_mut","","",88,[[["usize",15]]]],[11,"drop","","",88,[[["usize",15]]]],[11,"from","pliantdb::server::cli::certificate","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"init","","",89,[[],["usize",15]]],[11,"deref","","",89,[[["usize",15]]]],[11,"deref_mut","","",89,[[["usize",15]]]],[11,"drop","","",89,[[["usize",15]]]],[11,"from","pliantdb::server::cli::serve","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"init","","",92,[[],["usize",15]]],[11,"deref","","",92,[[["usize",15]]]],[11,"deref_mut","","",92,[[["usize",15]]]],[11,"drop","","",92,[[["usize",15]]]],[11,"from","pliantdb::server::cli","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"init","","",93,[[],["usize",15]]],[11,"deref","","",93,[[["usize",15]]]],[11,"deref_mut","","",93,[[["usize",15]]]],[11,"drop","","",93,[[["usize",15]]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"init","","",94,[[],["usize",15]]],[11,"deref","","",94,[[["usize",15]]]],[11,"deref_mut","","",94,[[["usize",15]]]],[11,"drop","","",94,[[["usize",15]]]],[11,"from","pliantdb::server","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"init","","",95,[[],["usize",15]]],[11,"deref","","",95,[[["usize",15]]]],[11,"deref_mut","","",95,[[["usize",15]]]],[11,"drop","","",95,[[["usize",15]]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_string","","",96,[[],["string",3]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"init","","",96,[[],["usize",15]]],[11,"deref","","",96,[[["usize",15]]]],[11,"deref_mut","","",96,[[["usize",15]]]],[11,"drop","","",96,[[["usize",15]]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"vzip","","",134,[[]]],[11,"init","","",134,[[],["usize",15]]],[11,"deref","","",134,[[["usize",15]]]],[11,"deref_mut","","",134,[[["usize",15]]]],[11,"drop","","",134,[[["usize",15]]]],[11,"description","pliantdb::local::core::networking::fabruic::error","",110,[[],["str",15]]],[11,"description","","",109,[[],["str",15]]],[11,"cause","","",109,[[],[["option",4],["error",8]]]],[11,"source","","",109,[[],[["option",4],["error",8]]]],[11,"eq","","",110,[[["addrparseerror",3]],["bool",15]]],[11,"ne","","",110,[[["addrparseerror",3]],["bool",15]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",110,[[],["addrparseerror",3]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",109,[[["intoinnererror",3]],["error",3]]],[11,"from","","Converts an [<code>ErrorKind</code>] into an [<code>Error</code>].",109,[[["errorkind",4]],["error",3]]],[11,"from","","Converts a [<code>NulError</code>] into a [<code>io::Error</code>].",109,[[["nulerror",3]],["error",3]]],[11,"fmt","pliantdb::client","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",107,[[],["client",3]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"from","","",7,[[["senderror",3]],["error",4]]],[11,"from","","",7,[[["error",4]],["error",4]]],[11,"from","","",7,[[["error",4]],["error",4]]],[11,"from","","",7,[[["error",4]],["error",4]]],[11,"from","pliantdb::local::core","",76,[[["error",4]],["error",4]]],[11,"from","pliantdb::client","",7,[[["recverror",4]],["error",4]]],[11,"from","","",7,[[["errorkind",4],["box",3],["global",3]],["error",4]]],[11,"from","","",7,[[["error",4]],["error",4]]],[11,"create_database","","",107,[[["str",15],["id",3]],[["pin",3],["box",3]]]],[11,"delete_database","","",107,[[["str",15]],[["pin",3],["box",3]]]],[11,"list_databases","","",107,[[],[["pin",3],["box",3]]]],[11,"list_available_schemas","","",107,[[],[["pin",3],["box",3]]]],[11,"try_from","pliantdb::client::url","",98,[[["str",15]],[["url",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",2,[[]]],[11,"hash","","",98,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",105,[[]]],[11,"index","","",98,[[["range",3],["position",4]],["str",15]]],[11,"index","","",98,[[["rangeto",3],["position",4]],["str",15]]],[11,"index","","",98,[[["rangefull",3]],["str",15]]],[11,"index","","",98,[[["position",4],["rangefrom",3]],["str",15]]],[11,"partial_cmp","","",98,[[["url",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["host",4]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["host",4]],["bool",15]]],[11,"le","","",2,[[["host",4]],["bool",15]]],[11,"gt","","",2,[[["host",4]],["bool",15]]],[11,"ge","","",2,[[["host",4]],["bool",15]]],[11,"from","","",4,[[["errors",3]],["parseerror",4]]],[11,"as_ref","","",98,[[],["str",15]]],[11,"clone","","",2,[[],["host",4]]],[11,"clone","","",5,[[],["syntaxviolation",4]]],[11,"clone","","",99,[[],["parseoptions",3]]],[11,"clone","","",98,[[],["url",3]]],[11,"clone","","",6,[[],["position",4]]],[11,"clone","","",3,[[],["origin",4]]],[11,"clone","","",4,[[],["parseerror",4]]],[11,"clone","","",105,[[],["opaqueorigin",3]]],[11,"drop","","",100,[[]]],[11,"drop","","",106,[[]]],[11,"cmp","","",2,[[["host",4]],["ordering",4]]],[11,"cmp","","",98,[[["url",3]],["ordering",4]]],[11,"as_mut_string","","",100,[[],["string",3]]],[11,"finish","","",100,[[],["url",3]]],[11,"eq","","",105,[[["opaqueorigin",3]],["bool",15]]],[11,"ne","","",105,[[["opaqueorigin",3]],["bool",15]]],[11,"eq","","",2,[[["host",4]],["bool",15]]],[11,"eq","","",3,[[["origin",4]],["bool",15]]],[11,"ne","","",3,[[["origin",4]],["bool",15]]],[11,"eq","","",98,[[["url",3]],["bool",15]]],[11,"eq","","",4,[[["parseerror",4]],["bool",15]]],[11,"eq","","",5,[[["syntaxviolation",4]],["bool",15]]],[11,"from_str","","",98,[[["str",15]],[["url",3],["parseerror",4],["result",4]]]],[11,"fmt","pliantdb::client::url::form_urlencoded","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next","","",101,[[],["option",4]]],[11,"next","","",102,[[],["option",4]]],[11,"next","","",103,[[],[["str",15],["option",4]]]],[11,"size_hint","","",103,[[]]],[11,"clone","","",101,[[],["parse",3]]],[11,"from","pliantdb::local::core::networking::fabruic::error","",109,[[["error",3]],["error",3]]],[11,"fmt","pliantdb::local::core::document","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::transaction","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema::view::map","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",130,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::connection","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::document","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",127,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::transaction","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::transaction","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema::collection","",123,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",129,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",128,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",131,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",126,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema::view::map","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::connection","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::transaction","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",125,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::transaction","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::document","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema::view::map","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema::collection","",123,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","pliantdb::local::core::schema","",124,[[]]],[11,"hash","pliantdb::local::core::schema::collection","",123,[[]]],[11,"version","pliantdb::local::core::test_util","",126,[[],["u64",15]]],[11,"name","","",126,[[],[["cow",4],["str",15]]]],[11,"map","","",126,[[["document",3]],[["error",4],["option",4],["result",4]]]],[11,"reduce","","",126,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",129,[[],["u64",15]]],[11,"name","","",129,[[],[["cow",4],["str",15]]]],[11,"map","","",129,[[["document",3]],[["error",4],["option",4],["result",4]]]],[11,"version","","",127,[[],["u64",15]]],[11,"name","","",127,[[],[["cow",4],["str",15]]]],[11,"map","","",127,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",127,[[["bool",15]],[["error",4],["result",4]]]],[11,"version","","",128,[[],["u64",15]]],[11,"name","","",128,[[],[["cow",4],["str",15]]]],[11,"map","","",128,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",128,[[["bool",15]],[["result",4],["error",4]]]],[11,"from","pliantdb::local::core::schema::collection","",123,[[["string",3]],["id",3]]],[11,"from","pliantdb::local::core::schema","",62,[[],["serializablevalue",4]]],[11,"from","pliantdb::local::core","",76,[[["error",3]],["error",4]]],[11,"from","pliantdb::local::core::schema","",124,[[["str",15]],["id",3]]],[11,"from","","",60,[[["error",3]],["error",4]]],[11,"from","pliantdb::local::core::schema::collection","",123,[[["str",15]],["id",3]]],[11,"serialize","pliantdb::local::core::document","",13,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",74,[[],["result",4]]],[11,"serialize","pliantdb::local::core","",76,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",20,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",67,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",31,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema::view::map","",57,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",33,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"serialize","pliantdb::local::core::connection","",11,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",66,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",15,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",65,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",28,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema::collection","",123,[[],["result",4]]],[11,"serialize","pliantdb::local::core::document","",14,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema","",124,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",75,[[],["result",4]]],[11,"serialize","pliantdb::local::core::test_util","",77,[[],["result",4]]],[11,"serialize","pliantdb::local::core::document","",12,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",71,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",35,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","pliantdb::local::core::connection","",10,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",27,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema::view::map","",58,[[],["result",4]]],[11,"as_ref","pliantdb::local::core::schema::collection","",123,[[],["str",15]]],[11,"as_ref","pliantdb::local::core::schema","",124,[[],["str",15]]],[11,"as_ref","pliantdb::local::core::test_util","",78,[[],["path",3]]],[11,"as_ref","pliantdb::local::core::schema","",62,[[]]],[11,"source","","",60,[[],[["option",4],["error",8]]]],[11,"default","pliantdb::local::core::transaction","",65,[[],["transaction",3]]],[11,"default","pliantdb::local::core::schema","",125,[[],["schematic",3]]],[11,"default","pliantdb::local::core::test_util","",77,[[],["basic",3]]],[11,"collection_id","","",77,[[],["id",3]]],[11,"define_views","","",77,[[["schematic",3]]]],[11,"collection_id","","",132,[[],["id",3]]],[11,"define_views","","",132,[[["schematic",3]]]],[11,"collection_id","","",133,[[],["id",3]]],[11,"define_views","","",133,[[["schematic",3]]]],[11,"collection_id","","",131,[[],["id",3]]],[11,"define_views","","",131,[[["schematic",3]]]],[11,"clone","pliantdb::local::core::transaction","",65,[[],["transaction",3]]],[11,"clone","pliantdb::local::core::document","",14,[[],["revision",3]]],[11,"clone","pliantdb::local::core::schema::view::map","",57,[[],["serialized",3]]],[11,"clone","pliantdb::local::core::networking","",16,[[],["request",4]]],[11,"clone","pliantdb::local::core::document","",12,[[],["header",3]]],[11,"clone","pliantdb::local::core::schema::collection","",123,[[],["id",3]]],[11,"clone","pliantdb::local::core::connection","",11,[[],["accesspolicy",4]]],[11,"clone","","",10,[[],["querykey",4]]],[11,"clone","pliantdb::local::core::transaction","",67,[[],["command",4]]],[11,"clone","","",74,[[],["executed",3]]],[11,"clone","pliantdb::local::core::networking","",20,[[],["databaserequest",4]]],[11,"clone","","",31,[[],["databaseresponse",4]]],[11,"clone","","",18,[[],["serverrequest",4]]],[11,"clone","pliantdb::local::core::schema::view::map","",58,[[],["mappedvalue",3]]],[11,"clone","pliantdb::local::core::document","",13,[[],["document",3]]],[11,"clone","pliantdb::local::core::networking","",15,[[],["payload",3]]],[11,"clone","pliantdb::local::core::transaction","",66,[[],["operation",3]]],[11,"clone","","",71,[[],["operationresult",4]]],[11,"clone","pliantdb::local::core::networking","",35,[[],["error",4]]],[11,"clone","","",27,[[],["response",4]]],[11,"clone","","",32,[[],["mappeddocument",3]]],[11,"clone","pliantdb::local::core::test_util","",79,[[],["connectiontest",4]]],[11,"clone","pliantdb::local::core::schema","",124,[[],["id",3]]],[11,"clone","pliantdb::local::core::networking","",28,[[],["serverresponse",4]]],[11,"clone","pliantdb::local::core","",76,[[],["error",4]]],[11,"clone","pliantdb::local::core::networking","",33,[[],["database",3]]],[11,"clone","pliantdb::local::core::transaction","",75,[[],["changeddocument",3]]],[11,"drop","pliantdb::local::core::test_util","",78,[[]]],[11,"eq","","",77,[[["basic",3]],["bool",15]]],[11,"ne","","",77,[[["basic",3]],["bool",15]]],[11,"eq","pliantdb::local::core::schema","",55,[[["map",3]],["bool",15]]],[11,"ne","","",55,[[["map",3]],["bool",15]]],[11,"eq","pliantdb::local::core::schema::view::map","",58,[[["mappedvalue",3]],["bool",15]]],[11,"ne","","",58,[[["mappedvalue",3]],["bool",15]]],[11,"eq","pliantdb::local::core::schema::collection","",123,[[["id",3]],["bool",15]]],[11,"ne","","",123,[[["id",3]],["bool",15]]],[11,"eq","pliantdb::local::core::networking","",33,[[["database",3]],["bool",15]]],[11,"ne","","",33,[[["database",3]],["bool",15]]],[11,"eq","pliantdb::local::core::document","",12,[[["header",3]],["bool",15]]],[11,"ne","","",12,[[["header",3]],["bool",15]]],[11,"eq","pliantdb::local::core::schema","",124,[[["id",3]],["bool",15]]],[11,"ne","","",124,[[["id",3]],["bool",15]]],[11,"eq","pliantdb::local::core::document","",14,[[["revision",3]],["bool",15]]],[11,"ne","","",14,[[["revision",3]],["bool",15]]],[11,"deserialize","pliantdb::local::core::transaction","",65,[[],[["result",4],["transaction",3]]]],[11,"deserialize","pliantdb::local::core::networking","",15,[[],[["payload",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::schema::view::map","",57,[[],[["result",4],["serialized",3]]]],[11,"deserialize","pliantdb::local::core::networking","",35,[[],[["result",4],["error",4]]]],[11,"deserialize","","",20,[[],[["databaserequest",4],["result",4]]]],[11,"deserialize","pliantdb::local::core::document","",13,[[],[["result",4],["document",3]]]],[11,"deserialize","pliantdb::local::core::networking","",32,[[],[["mappeddocument",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::document","",12,[[],[["result",4],["header",3]]]],[11,"deserialize","pliantdb::local::core::transaction","",71,[[],[["operationresult",4],["result",4]]]],[11,"deserialize","","",75,[[],[["changeddocument",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::networking","",16,[[],[["result",4],["request",4]]]],[11,"deserialize","pliantdb::local::core::document","",14,[[],[["result",4],["revision",3]]]],[11,"deserialize","pliantdb::local::core::schema","",124,[[],[["result",4],["id",3]]]],[11,"deserialize","pliantdb::local::core::transaction","",66,[[],[["operation",3],["result",4]]]],[11,"deserialize","","",74,[[],[["result",4],["executed",3]]]],[11,"deserialize","pliantdb::local::core::connection","",11,[[],[["accesspolicy",4],["result",4]]]],[11,"deserialize","pliantdb::local::core::networking","",33,[[],[["result",4],["database",3]]]],[11,"deserialize","","",28,[[],[["serverresponse",4],["result",4]]]],[11,"deserialize","","",27,[[],[["response",4],["result",4]]]],[11,"deserialize","pliantdb::local::core","",76,[[],[["error",4],["result",4]]]],[11,"deserialize","pliantdb::local::core::transaction","",67,[[],[["result",4],["command",4]]]],[11,"deserialize","pliantdb::local::core::networking","",18,[[],[["result",4],["serverrequest",4]]]],[11,"deserialize","","",31,[[],[["result",4],["databaseresponse",4]]]],[11,"deserialize","pliantdb::local::core::connection","",10,[[],[["result",4],["querykey",4]]]],[11,"deserialize","pliantdb::local::core::schema::collection","",123,[[],[["result",4],["id",3]]]],[11,"deserialize","pliantdb::local::core::schema::view::map","",58,[[],[["result",4],["mappedvalue",3]]]],[11,"deserialize","pliantdb::local::core::test_util","",77,[[],[["result",4],["basic",3]]]],[11,"schema_id","","",130,[[],["id",3]]],[11,"define_collections","","",130,[[["schematic",3]]]],[11,"fmt","pliantdb::local::core::networking::fabruic","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",122,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",121,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",118,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",117,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",119,[[["formatter",3]],[["error",3],["result",4]]]],[11,"is_terminated","","",118,[[],["bool",15]]],[11,"is_terminated","","",119,[[],["bool",15]]],[11,"zeroize","","",115,[[]]],[11,"deserialize","","",115,[[],[["result",4],["privatekey",3]]]],[11,"deserialize","","",114,[[],[["result",4],["certificate",3]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","pliantdb::local::core::networking::fabruic","",115,[[["privatekey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",115,[[["privatekey",3]],["bool",15]]],[11,"le","","",115,[[["privatekey",3]],["bool",15]]],[11,"gt","","",115,[[["privatekey",3]],["bool",15]]],[11,"ge","","",115,[[["privatekey",3]],["bool",15]]],[11,"partial_cmp","","",114,[[["certificate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",114,[[["certificate",3]],["bool",15]]],[11,"le","","",114,[[["certificate",3]],["bool",15]]],[11,"gt","","",114,[[["certificate",3]],["bool",15]]],[11,"ge","","",114,[[["certificate",3]],["bool",15]]],[11,"poll_next","","",118,[[["context",3],["connection",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",119,[[["context",3],["pin",3],["endpoint",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",121,[[["receiver",3],["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"hash","","",114,[[]]],[11,"hash","","",115,[[]]],[11,"source","pliantdb::local::core::networking::fabruic::error","",40,[[],[["option",4],["error",8]]]],[11,"as_ref","pliantdb::local::core::networking::fabruic","",114,[[]]],[11,"default","","",116,[[],["builder",3]]],[11,"clone","","",114,[[],["certificate",3]]],[11,"clone","","",115,[[],["privatekey",3]]],[11,"clone","","",122,[[],["sender",3]]],[11,"clone","","",121,[[],["receiver",3]]],[11,"clone","","",118,[[],["connection",3]]],[11,"clone","","",119,[[],["endpoint",3]]],[11,"drop","","",115,[[]]],[11,"cmp","","",115,[[["privatekey",3]],["ordering",4]]],[11,"cmp","","",114,[[["certificate",3]],["ordering",4]]],[11,"serialize","","",114,[[],["result",4]]],[11,"serialize","","",115,[[],["result",4]]],[11,"eq","","",114,[[["certificate",3]],["bool",15]]],[11,"ne","","",114,[[["certificate",3]],["bool",15]]],[11,"eq","","",115,[[["privatekey",3]],["bool",15]]],[11,"ne","","",115,[[["privatekey",3]],["bool",15]]],[11,"as_ref","","",115,[[["privatekey",3]]]],[11,"into","","",115,[[["privatekey",3]],[["global",3],["vec",3],["u8",15]]]],[11,"serialize","","",115,[[["privatekey",3]],["result",4]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",47,[[],["tlserror",4]]],[11,"eq","","",47,[[["tlserror",4]],["bool",15]]],[11,"ne","","",47,[[["tlserror",4]],["bool",15]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",50,[[],["error",4]]],[11,"eq","","",50,[[["error",4]],["bool",15]]],[11,"fmt","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",112,[[],["keyrejected",3]]],[11,"fmt","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"cause","","",112,[[],[["option",4],["error",8]]]],[11,"description","","",112,[[],["str",15]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_error_kind","","",51,[[["errorkind",4]],["x509error",4]]],[11,"append","","",51,[[["x509error",4],["errorkind",4]],["x509error",4]]],[11,"from","","",52,[[["x509error",4]],[["x509error",4],["err",4]]]],[11,"from","","",51,[[["bererror",4]],["x509error",4]]],[11,"from","","",51,[[["errorkind",4]],["x509error",4]]],[11,"source","","",51,[[],[["option",4],["error",8]]]],[11,"eq","","",51,[[["x509error",4]],["bool",15]]],[11,"ne","","",51,[[["x509error",4]],["bool",15]]],[11,"from","","",52,[[["bererror",4]],[["bererror",4],["err",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",52,[[],["err",4]]],[11,"source","","",52,[[],[["option",4],["error",8]]]],[11,"eq","","",52,[[["err",4]],["bool",15]]],[11,"ne","","",52,[[["err",4]],["bool",15]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"description","","",41,[[],["str",15]]],[11,"cause","","",41,[[],[["option",4],["error",8]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",45,[[["readableerror",4]],["readerror",4]]],[11,"from","","",109,[[["writeerror",4]],["error",3]]],[11,"from","","",109,[[["readerror",4]],["error",3]]],[11,"source","","",46,[[],[["option",4],["error",8]]]],[11,"clone","","",46,[[],["writeerror",4]]],[11,"clone","","",45,[[],["readerror",4]]],[11,"eq","","",45,[[["readerror",4]],["bool",15]]],[11,"ne","","",45,[[["readerror",4]],["bool",15]]],[11,"eq","","",46,[[["writeerror",4]],["bool",15]]],[11,"ne","","",46,[[["writeerror",4]],["bool",15]]],[11,"fmt","","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",43,[[["error",3]],["connectionerror",4]]],[11,"from","","",43,[[["close",4]],["connectionerror",4]]],[11,"from","","",109,[[["connectionerror",4]],["error",3]]],[11,"clone","","",111,[[],["parseerror",3]]],[11,"clone","","",43,[[],["connectionerror",4]]],[11,"clone","","",42,[[],["connecterror",4]]],[11,"source","","",43,[[],[["option",4],["error",8]]]],[11,"source","","",42,[[],[["option",4],["error",8]]]],[11,"eq","","",43,[[["connectionerror",4]],["bool",15]]],[11,"ne","","",43,[[["connectionerror",4]],["bool",15]]],[11,"eq","","",42,[[["connecterror",4]],["bool",15]]],[11,"ne","","",42,[[["connecterror",4]],["bool",15]]],[11,"from","","",109,[[["error",3]],["error",3]]],[11,"from","","",109,[[["elapsed",3]],["error",3]]],[11,"from","","",109,[[["joinerror",3]],["error",3]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",113,[[["string",3]],["resolveerror",3]]],[11,"from","","",113,[[["poisonerror",3]],["resolveerror",3]]],[11,"from","","",113,[[["error",3]],["resolveerror",3]]],[11,"from","","",109,[[["resolveerror",3]],["error",3]]],[11,"from","","",113,[[["resolveerrorkind",4]],["resolveerror",3]]],[11,"from","","",113,[[["protoerror",3]],["resolveerror",3]]],[11,"from","","",113,[[["str",15]],["resolveerror",3]]],[11,"should_retry","","",113,[[],["bool",15]]],[11,"attempted","","",113,[[],["bool",15]]],[11,"clone","","",113,[[],["resolveerror",3]]],[11,"from","","",109,[[["protoerror",3]],["error",3]]],[11,"from","","",109,[[["error",3]],["error",3]]],[11,"from","","",109,[[["asn1error",3]],["error",3]]],[11,"into_client_request","pliantdb::client::url","",98,[[],[["request",3],["error",4],["result",4]]]],[11,"into_non_blocking","pliantdb::local::core::networking::fabruic::error","",109,[[],[["option",4],["error",3]]]],[11,"fmt","pliantdb::local::backup","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::config","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::backup","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",87,[[["recverror",4]],["error",4]]],[11,"from","","",87,[[["arc",3],["error",3]],["error",4]]],[11,"from","","",87,[[["error",3]],["error",4]]],[11,"from","","",87,[[["error",4]],["error",4]]],[11,"from","pliantdb::local::core","",76,[[["error",4]],["error",4]]],[11,"from","pliantdb::local","",87,[[["error",4]],["error",4]]],[11,"from","","",87,[[["error",4]],["error",4]]],[11,"from","","",87,[[["errorkind",4],["box",3],["global",3]],["error",4]]],[11,"source","","",87,[[],[["option",4],["error",8]]]],[11,"apply_transaction","","",88,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"get","","",88,[[["u64",15]],[["pin",3],["box",3]]]],[11,"get_multiple","","",88,[[],[["box",3],["pin",3]]]],[11,"list_executed_transactions","","",88,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[11,"query","","",88,[[["accesspolicy",4],["querykey",4],["option",4]],[["box",3],["pin",3]]]],[11,"query_with_docs","","",88,[[["accesspolicy",4],["querykey",4],["option",4]],[["pin",3],["box",3]]]],[11,"reduce","","",88,[[["accesspolicy",4],["querykey",4],["option",4]],[["box",3],["pin",3]]]],[11,"reduce_grouped","","",88,[[["accesspolicy",4],["querykey",4],["option",4]],[["pin",3],["box",3]]]],[11,"last_transaction_id","","",88,[[],[["box",3],["pin",3]]]],[11,"default","","",80,[[],["configuration",3]]],[11,"default","pliantdb::local::config","",82,[[],["views",3]]],[11,"default","","",81,[[],["tasks",3]]],[11,"clone","","",82,[[],["views",3]]],[11,"clone","pliantdb::local","",88,[[],["storage",3]]],[11,"clone","","",80,[[],["configuration",3]]],[11,"clone","pliantdb::local::config","",81,[[],["tasks",3]]],[11,"clap","pliantdb::local::backup","",84,[[],["app",3]]],[11,"from_clap","","",84,[[["argmatches",3]],["command",4]]],[11,"clap","","",83,[[],["app",3]]],[11,"from_clap","","",83,[[["argmatches",3]],["cli",3]]],[11,"from","pliantdb::local::core::networking::fabruic::error","",109,[[["error",4]],["error",3]]],[11,"fmt","pliantdb::server::cli::certificate","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::cli","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::cli::serve","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"source","","",96,[[],[["option",4],["error",8]]]],[11,"from","pliantdb::local::core","",76,[[["error",4]],["error",4]]],[11,"from","pliantdb::server","",96,[[["error",4]],["error",4]]],[11,"from","","",96,[[["errorkind",4],["box",3],["global",3]],["error",4]]],[11,"from","","",96,[[["error",3]],["error",4]]],[11,"from","","",96,[[["error",4]],["error",4]]],[11,"from","","",96,[[["error",4]],["error",4]]],[11,"from","","",96,[[["error",4]],["error",4]]],[11,"default","","",95,[[],["configuration",3]]],[11,"clap","pliantdb::server::cli","",94,[[],["app",3]]],[11,"from_clap","","",94,[[["argmatches",3]],["command",4]]],[11,"clap","pliantdb::server::cli::serve","",92,[[],["app",3]]],[11,"from_clap","","",92,[[["argmatches",3]],["serve",3]]],[11,"clap","pliantdb::server::cli","",93,[[],["app",3]]],[11,"from_clap","","",93,[[["argmatches",3]],["cli",3]]],[11,"clap","pliantdb::server::cli::certificate","",89,[[],["app",3]]],[11,"from_clap","","",89,[[["argmatches",3]],["command",4]]],[11,"clone","pliantdb::server","",134,[[],["server",3]]],[11,"create_database","","",134,[[["str",15],["id",3]],[["pin",3],["box",3]]]],[11,"delete_database","","",134,[[["str",15]],[["pin",3],["box",3]]]],[11,"list_databases","","",134,[[],[["pin",3],["box",3]]]],[11,"list_available_schemas","","",134,[[],[["pin",3],["box",3]]]],[11,"fmt","pliantdb::cli","",0,[[["formatter",3]],["result",6]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_subcommand","","",0,[[],["option",4]]],[11,"is_subcommand","","",0,[[],["bool",15]]],[11,"parse","pliantdb::client::url","Parse an absolute URL from a string.",98,[[["str",15]],[["url",3],["parseerror",4],["result",4]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its …",98,[[["str",15]],[["url",3],["parseerror",4],["result",4]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",98,[[["str",15]],[["url",3],["parseerror",4],["result",4]]]],[11,"options","","Return a default <code>ParseOptions</code> that can fully configure …",98,[[],["parseoptions",3]]],[11,"as_str","","Return the serialization of this URL.",98,[[],["str",15]]],[11,"into_string","","Return the serialization of this URL.",98,[[],["string",3]]],[11,"origin","","Return the origin of this URL (…",98,[[],["origin",4]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII …",98,[[],["str",15]]],[11,"has_authority","","Return whether the URL has an \'authority\', which can …",98,[[],["bool",15]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, …",98,[[],["bool",15]]],[11,"username","","Return the username for this URL (typically the empty …",98,[[],["str",15]]],[11,"password","","Return the password for this URL, if any, as a …",98,[[],[["str",15],["option",4]]]],[11,"has_host","","Equivalent to <code>url.host().is_some()</code>.",98,[[],["bool",15]]],[11,"host_str","","Return the string representation of the host (domain or …",98,[[],[["str",15],["option",4]]]],[11,"host","","Return the parsed representation of the host for this URL.…",98,[[],[["option",4],["host",4]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP …",98,[[],[["str",15],["option",4]]]],[11,"port","","Return the port number for this URL, if any.",98,[[],[["option",4],["u16",15]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port …",98,[[],[["option",4],["u16",15]]]],[11,"socket_addrs","","Resolve a URL’s host and port number to <code>SocketAddr</code>.",98,[[],[["error",3],["vec",3],["result",4]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII …",98,[[],["str",15]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator …",98,[[],[["split",3],["option",4]]]],[11,"query","","Return this URL’s query string, if any, as a …",98,[[],[["str",15],["option",4]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as …",98,[[],["parse",3]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",98,[[],[["str",15],["option",4]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",98,[[["option",4],["str",15]]]],[11,"set_query","","Change this URL’s query string.",98,[[["option",4],["str",15]]]],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a …",98,[[],[["urlquery",3],["serializer",3]]]],[11,"set_path","","Change this URL’s path.",98,[[["str",15]]]],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s …",98,[[],[["result",4],["pathsegmentsmut",3]]]],[11,"set_port","","Change this URL’s port number.",98,[[["option",4],["u16",15]],["result",4]]],[11,"set_host","","Change this URL’s host.",98,[[["option",4],["str",15]],[["parseerror",4],["result",4]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",98,[[["ipaddr",4]],["result",4]]],[11,"set_password","","Change this URL’s password.",98,[[["option",4],["str",15]],["result",4]]],[11,"set_username","","Change this URL’s username.",98,[[["str",15]],["result",4]]],[11,"set_scheme","","Change this URL’s scheme.",98,[[["str",15]],["result",4]]],[11,"from_file_path","","Convert a file name as <code>std::path::Path</code> into an URL in the …",98,[[],[["url",3],["result",4]]]],[11,"from_directory_path","","Convert a directory name as <code>std::path::Path</code> into an URL …",98,[[],[["url",3],["result",4]]]],[11,"to_file_path","","Assuming the URL is in the <code>file</code> scheme or similar, …",98,[[],[["pathbuf",3],["result",4]]]],[11,"base_url","","Change the base URL",99,[[["url",3],["option",4]],["parseoptions",3]]],[11,"encoding_override","","Override the character encoding of query strings. This is …",99,[[["option",4],["fn",8]],["parseoptions",3]]],[11,"syntax_violation_callback","","Call the provided function or closure for a non-fatal …",99,[[["option",4],["fn",8]],["parseoptions",3]]],[11,"parse","","Parse an URL string with the configuration so far.",99,[[["str",15]],[["url",3],["parseerror",4],["result",4]]]],[11,"into_owned","pliantdb::client::url::form_urlencoded","Return a new iterator that yields pairs of <code>String</code> instead …",101,[[],["parseintoowned",3]]],[11,"new","","Create a new <code>application/x-www-form-urlencoded</code> serializer …",104,[[],["serializer",3]]],[11,"for_suffix","","Create a new <code>application/x-www-form-urlencoded</code> serializer …",104,[[["usize",15]],["serializer",3]]],[11,"clear","","Remove any existing name/value pair.",104,[[],["serializer",3]]],[11,"encoding_override","","Set the character encoding to be used for names and …",104,[[["option",4],["fn",8]],["serializer",3]]],[11,"append_pair","","Serialize and append a name/value pair.",104,[[["str",15]],["serializer",3]]],[11,"append_key_only","","Serialize and append a name of parameter without any …",104,[[["str",15]],["serializer",3]]],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",104,[[],["serializer",3]]],[11,"extend_keys_only","","Serialize and append a number of names without values.",104,[[],["serializer",3]]],[11,"finish","","If this serializer was constructed with a string, take …",104,[[]]],[11,"to_owned","pliantdb::client::url","Return a copy of <code>self</code> that owns an allocated <code>String</code> but …",2,[[],[["string",3],["host",4]]]],[11,"parse","","Parse a host: either an IPv6 address in [] square …",2,[[["str",15]],[["result",4],["parseerror",4],["host",4]]]],[11,"parse_opaque","","",2,[[["str",15]],[["result",4],["parseerror",4],["host",4]]]],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",3,[[],["origin",4]]],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple…",3,[[],["bool",15]]],[11,"ascii_serialization","","…",3,[[],["string",3]]],[11,"unicode_serialization","","…",3,[[],["string",3]]],[11,"description","","",5,[[],["str",15]]],[11,"clear","","Remove all segments in the path, leaving the minimal …",106,[[],["pathsegmentsmut",3]]],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is …",106,[[],["pathsegmentsmut",3]]],[11,"pop","","Remove the last segment of this URL’s path.",106,[[],["pathsegmentsmut",3]]],[11,"push","","Append the given segment at the end of this URL’s path.",106,[[["str",15]],["pathsegmentsmut",3]]],[11,"extend","","Append each segment from the given iterator at the end of …",106,[[],["pathsegmentsmut",3]]],[11,"new","pliantdb::client","Initialize a client connecting to <code>url</code> with <code>certificate</code> …",107,[[["url",3],["option",4],["certificate",3]]]],[11,"database","","Returns a structure representing a remote database. No …",107,[[["str",15]]]],[11,"new","pliantdb::local::core::connection","Creates a new instance using <code>connection</code>.",108,[[],["collection",3]]],[11,"push","","Adds a new <code>Document<Cl></code> with the contents <code>item</code>.",108,[[]]],[11,"get","","Retrieves a <code>Document<Cl></code> with <code>id</code> from the connection.",108,[[["u64",15]]]],[11,"with_key","","Filters for entries in the view with <code>key</code>.",9,[[],["view",3]]],[11,"with_keys","","Filters for entries in the view with <code>keys</code>.",9,[[["vec",3],["global",3]],["view",3]]],[11,"with_key_range","","Filters for entries in the view with the range <code>keys</code>.",9,[[["range",3]],["view",3]]],[11,"with_access_policy","","Sets the access policy for queries.",9,[[["accesspolicy",4]],["view",3]]],[11,"query","","Executes the query and retrieves the results.",9,[[]]],[11,"query_with_docs","","Executes the query and retrieves the results with the …",9,[[]]],[11,"reduce","","Executes a reduce over the results of the query",9,[[]]],[11,"reduce_grouped","","Executes a reduce over the results of the query",9,[[]]],[11,"serialized","","Converts this key to a serialized format using the [<code>Key</code>] …",10,[[],[["result",4],["error",4],["querykey",4]]]],[11,"deserialized","","Deserializes the bytes into <code>K</code> via the [<code>Key</code>] trait.",10,[[],[["error",4],["querykey",4],["result",4]]]],[11,"new","pliantdb::local::core::document","Creates a new document with <code>contents</code>.",13,[[["cow",4],["id",3],["u64",15]],["document",3]]],[11,"with_contents","","Creates a new document with serialized bytes from <code>contents</code>…",13,[[["id",3],["u64",15]],[["error",3],["document",3],["result",4]]]],[11,"contents","","Retrieves <code>contents</code> through deserialization into the type <code>D</code>…",13,[[],[["error",3],["result",4]]]],[11,"set_contents","","Serializes and stores <code>contents</code> into this document.",13,[[],[["result",4],["error",3]]]],[11,"create_new_revision","","Creates a new revision.",13,[[["cow",4]],[["option",4],["document",3]]]],[11,"emit","","Creates a <code>Map</code> result with an empty key and value.",13,[[],["map",3]]],[11,"emit_key","","Creates a <code>Map</code> result with a <code>key</code> and an empty value.",13,[[],["map",3]]],[11,"emit_value","","Creates a <code>Map</code> result with <code>value</code> and an empty key.",13,[[],["map",3]]],[11,"emit_key_and_value","","Creates a <code>Map</code> result with a <code>key</code> and <code>value</code>.",13,[[],["map",3]]],[11,"to_owned","","Clone the document\'s data so that it\'s no longer borrowed …",13,[[],["document",3]]],[11,"new","","Creates the first revision for a document with the SHA256 …",14,[[],["revision",3]]],[11,"with_id","","Creates a revision with <code>id</code> for a document with the SHA256 …",14,[[["u32",15]],["revision",3]]],[11,"next_revision","","Creates the next revision in sequence with an updated …",14,[[],[["option",4],["revision",3]]]],[11,"deserialized","pliantdb::local::core::networking","Deserialize into a <code>MappedDocument</code>.",32,[[],[["mappeddocument",3],["error",4],["result",4]]]],[11,"new","pliantdb::local::core::networking::fabruic::error","Creates a new I/O error from a known kind of error as …",109,[[["errorkind",4]],["error",3]]],[11,"last_os_error","","Returns an error representing the last OS error which …",109,[[],["error",3]]],[11,"from_raw_os_error","","Creates a new instance of an [<code>Error</code>] from a particular OS …",109,[[["i32",15]],["error",3]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",109,[[],[["option",4],["i32",15]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this …",109,[[],[["option",4],["error",8]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by …",109,[[],[["error",8],["option",4]]]],[11,"into_inner","","Consumes the <code>Error</code>, returning its inner error (if any).",109,[[],[["box",3],["option",4]]]],[11,"kind","","Returns the corresponding [<code>ErrorKind</code>] for this error.",109,[[],["errorkind",4]]],[11,"description_","","The value returned from ::description()",112,[[],["str",15]]],[11,"kind","","Get the kind of the error",113,[[],["resolveerrorkind",4]]],[11,"from_response","","A conversion to determine if the response is an error",113,[[["dnsresponse",3],["bool",15]],[["dnsresponse",3],["result",4],["resolveerror",3]]]],[11,"is_incomplete","","Tests if the result is Incomplete",52,[[],["bool",15]]],[11,"map","","Applies the given function to the inner error",52,[[],["err",4]]],[11,"convert","","Automatically converts between errors if the underlying …",52,[[["err",4]],["err",4]]],[11,"map_input","","Maps <code>Err<(T, ErrorKind)></code> to <code>Err<(U, ErrorKind)></code> with the …",52,[[],["err",4]]],[11,"to_owned","","Obtaining ownership",52,[[],["err",4]]],[11,"to_owned","","Automatically converts between errors if the underlying …",52,[[],["err",4]]],[11,"from_der","pliantdb::local::core::networking::fabruic","Build [<code>Certificate</code>] from DER-format. This is not meant as …",114,[[["u8",15],["vec",3],["global",3]],[["result",4],["error",4],["certificate",3]]]],[11,"unchecked_from_der","","Build [<code>Certificate</code>] from DER-format. This skips the …",114,[[["u8",15],["vec",3],["global",3]],["certificate",3]]],[11,"from_der","","Build [<code>PrivateKey</code>] from DER-format. This is not meant as …",115,[[["u8",15],["vec",3],["global",3]],[["error",4],["result",4],["privatekey",3]]]],[11,"unchecked_from_der","","Build [<code>PrivateKey</code>] from DER-format. This skips the …",115,[[["u8",15],["vec",3],["global",3]],["privatekey",3]]],[11,"new","","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …",116,[[],["builder",3]]],[11,"set_address","","Set\'s the [<code>SocketAddr</code>]. Default is \\\"[::]:0\\\".",116,[[["socketaddr",4]],["builder",3]]],[11,"set_address_str","","Set\'s the [<code>SocketAddr</code>]. Default is \\\"[::]:0\\\".",116,[[["str",15]],[["error",4],["result",4],["builder",3]]]],[11,"add_ca","","Adds a [<code>Certificate</code>] as a certificate authority for client…",116,[[["certificate",3]],[["error",4],["result",4],["builder",3]]]],[11,"add_key_pair","","Add a [<code>Certificate</code>] and [<code>PrivateKey</code>] for the server. This …",116,[[["certificate",3],["privatekey",3]],[["error",4],["result",4],["builder",3]]]],[11,"set_protocols","","Set the application-layer protocols to accept, in order …",116,[[],["builder",3]]],[11,"build","","Consumes [<code>Builder</code>] to build [<code>Endpoint</code>]. Must be called …",116,[[],[["result",4],["endpoint",3]]]],[11,"protocol","","The negotiated application protocol. See …",117,[[]]],[11,"accept","","Accept the [<code>Connection</code>] with the given <code>T</code> as the type …",117,[[]]],[11,"open_stream","","Open a stream on this [<code>Connection</code>], allowing to send data …",118,[[]]],[11,"protocol","","The negotiated application protocol. See …",118,[[],[["vec",3],["option",4]]]],[11,"remote_address","","The peer\'s address. Clients may change addresses at will, …",118,[[],["socketaddr",4]]],[11,"close_incoming","","Prevents any new incoming streams. Already incoming …",118,[[]]],[11,"close","","Close the [<code>Connection</code>] immediately.",118,[[]]],[11,"builder","","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …",119,[[],["builder",3]]],[11,"new_client","","Simplified version of creating a client. See [<code>Builder</code>] …",119,[[["certificate",3]],[["error",4],["endpoint",3],["result",4]]]],[11,"new_server","","Simplified version of creating a server. See [<code>Builder</code>] …",119,[[["certificate",3],["u16",15],["privatekey",3]],[["error",4],["endpoint",3],["result",4]]]],[11,"connect","","Establish a new <code>Connection</code> to a client. The <code>domain</code> …",119,[[["socketaddr",4]],[["connecting",3],["error",4],["result",4]]]],[11,"connect_with","","Attempts to resolve the IP with the given domain name. …",119,[[["u16",15]]]],[11,"local_address","","Get the local [<code>SocketAddr</code>] the underlying socket is bound …",119,[[],[["socketaddr",4],["error",4],["result",4]]]],[11,"close","","Close all of this [<code>Endpoint</code>]\'s <code>Connection</code>s immediately …",119,[[]]],[11,"close_incoming","","Prevents any new incoming connections. Already incoming …",119,[[]]],[11,"wait_idle","","Wait for all <code>Connection</code>s to the [<code>Endpoint</code>] to be cleanly …",119,[[]]],[11,"type","","Returns the type information for that stream.",120,[[]]],[11,"accept","","Accept the incoming stream with the given types.",120,[[]]],[11,"finish","","Wait for the [<code>Receiver</code>] part of the stream to finish …",121,[[]]],[11,"close","","Close the [<code>Receiver</code>] immediately. To close a [<code>Receiver</code>] …",121,[[]]],[11,"send","","Send <code>data</code> into the stream.",122,[[],[["error",4],["result",4]]]],[11,"finish","","Shut down the [<code>Send</code>] part of the stream gracefully.",122,[[]]],[11,"close","","Close the [<code>Sender</code>] immediately.",122,[[]]],[11,"serialized","pliantdb::local::core::schema","Serializes this map.",55,[[],[["serialized",3],["result",4],["error",4]]]],[11,"new","","Creates a new Map entry for the document with id <code>source</code>.",55,[[["u64",15]],["map",3]]],[11,"deserialized","pliantdb::local::core::schema::view::map","Deserializes this map.",57,[[],[["error",4],["map",3],["result",4]]]],[11,"new","pliantdb::local::core::schema","Creates a new id.",124,[[],["id",3]]],[11,"define_collection","","Adds the collection <code>C</code> and its views.",125,[[]]],[11,"define_view","","Adds the view <code>V</code>.",125,[[]]],[11,"contains","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",125,[[],["bool",15]]],[11,"contains_collection_id","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",125,[[["id",3]],["bool",15]]],[11,"view_by_name","","Looks up a [<code>view::Serialized</code>] by name.",125,[[["str",15]],[["serialized",8],["option",4]]]],[11,"view","","Looks up a [<code>view::Serialized</code>] through the the type <code>V</code>.",125,[[],[["serialized",8],["option",4]]]],[11,"views","","Iterates over all registered views.",125,[[]]],[11,"views_in_collection","","Iterates over all views that belong to <code>collection</code>.",125,[[["id",3]],[["option",4],["vec",3]]]],[11,"push","pliantdb::local::core::transaction","Adds an operation to the transaction.",65,[[["operation",3]]]],[11,"to_owned","","Convert this structure to be free of borrows.",74,[[],["executed",3]]],[11,"new","pliantdb::local::core::test_util","",77,[[],["basic",3]]],[11,"with_category","","",77,[[],["basic",3]]],[11,"with_parent_id","","",77,[[["u64",15]],["basic",3]]],[11,"new","","",78,[[],["testdirectory",3]]],[11,"port","","",79,[[["u16",15]],["u16",15]]],[11,"execute","pliantdb::local::backup","Executes the command.",84,[[["pathbuf",3]]]],[11,"open_local","pliantdb::local","Opens a local file as a pliantdb.",88,[[["configuration",3]]]],[11,"for_each_in_view","","Iterate over each view entry matching <code>key</code>.",88,[[["querykey",4],["accesspolicy",4],["serialized",8],["option",4]]]],[11,"for_each_view_entry","","Iterate over each view entry matching <code>key</code>.",88,[[["accesspolicy",4],["querykey",4],["option",4]]]],[11,"get_from_collection_id","","Retrieves document <code>id</code> from the specified <code>collection</code>.",88,[[["id",3],["u64",15]]]],[11,"get_multiple_from_collection_id","","Retrieves document <code>id</code> from the specified <code>collection</code>.",88,[[["id",3]]]],[11,"reduce_in_view","","Reduce view <code>view_name</code>.",88,[[["str",15],["querykey",4],["accesspolicy",4],["option",4]]]],[11,"grouped_reduce_in_view","","Reduce view <code>view_name</code>, grouping by unique keys.",88,[[["str",15],["querykey",4],["accesspolicy",4],["option",4]]]],[11,"execute","pliantdb::server::cli::certificate","Executes the command.",89,[[["server",3]]]],[11,"execute","pliantdb::server::cli::serve","Starts the server.",92,[[["server",3]]]],[11,"execute","pliantdb::server::cli","Executes the command.",94,[[["path",3]]]],[11,"open","pliantdb::server","Creates or opens a [<code>Server</code>] with its data stored in …",134,[[["configuration",3],["path",3]]]],[11,"register_schema","","Registers a schema for use within the server.",134,[[]]],[11,"database","","Retrieves a database. This function only verifies that …",134,[[["str",15]]]],[11,"install_self_signed_certificate","","Installs an X.509 certificate used for general purpose …",134,[[["str",15],["bool",15]]]],[11,"install_certificate","","Installs an X.509 certificate used for general purpose …",134,[[["privatekey",3],["certificate",3]]]],[11,"certificate","","Returns the current certificate.",134,[[]]],[11,"listen_on","","Listens for incoming client connections. Does not return …",134,[[["u16",15]]]],[11,"listen_for_websockets_on","","Listens for <code>WebSocket</code> traffic on <code>port</code>.",134,[[]]],[11,"shutdown","","Shuts the server down. If a <code>timeout</code> is provided, the …",134,[[["duration",3],["option",4]]]]],"p":[[4,"Command"],[8,"Target"],[4,"Host"],[4,"Origin"],[4,"ParseError"],[4,"SyntaxViolation"],[4,"Position"],[4,"Error"],[8,"Connection"],[3,"View"],[4,"QueryKey"],[4,"AccessPolicy"],[3,"Header"],[3,"Document"],[3,"Revision"],[3,"Payload"],[4,"Request"],[13,"Database"],[4,"ServerRequest"],[13,"DeleteDatabase"],[4,"DatabaseRequest"],[13,"Get"],[13,"GetMultiple"],[13,"Query"],[13,"Reduce"],[13,"ApplyTransaction"],[13,"ListExecutedTransactions"],[4,"Response"],[4,"ServerResponse"],[13,"DatabaseCreated"],[13,"DatabaseDeleted"],[4,"DatabaseResponse"],[3,"MappedDocument"],[3,"Database"],[8,"ServerConnection"],[4,"Error"],[13,"SchemaMismatch"],[4,"Error"],[13,"ParseCertificate"],[13,"DanglingCertificate"],[4,"ParseCertificate"],[4,"ErrorKind"],[4,"ConnectError"],[4,"ConnectionError"],[4,"EndpointError"],[4,"ReadError"],[4,"WriteError"],[4,"TLSError"],[13,"InappropriateMessage"],[13,"InappropriateHandshakeMessage"],[4,"WebPkiError"],[4,"X509Error"],[4,"Err"],[8,"Dangerous"],[8,"Collection"],[3,"Map"],[3,"MappedDocument"],[3,"Serialized"],[3,"MappedValue"],[8,"Key"],[4,"Error"],[8,"View"],[4,"SerializableValue"],[8,"Serialized"],[8,"Schema"],[3,"Transaction"],[3,"Operation"],[4,"Command"],[13,"Insert"],[13,"Update"],[13,"Delete"],[4,"OperationResult"],[13,"DocumentUpdated"],[13,"DocumentDeleted"],[3,"Executed"],[3,"ChangedDocument"],[4,"Error"],[3,"Basic"],[3,"TestDirectory"],[4,"ConnectionTest"],[3,"Configuration"],[3,"Tasks"],[3,"Views"],[3,"Cli"],[4,"Command"],[13,"Save"],[13,"Load"],[4,"Error"],[3,"Storage"],[4,"Command"],[13,"InstallSelfSigned"],[13,"Install"],[3,"Serve"],[3,"Cli"],[4,"Command"],[3,"Configuration"],[4,"Error"],[13,"SchemaMismatch"],[3,"Url"],[3,"ParseOptions"],[3,"UrlQuery"],[3,"Parse"],[3,"ParseIntoOwned"],[3,"ByteSerialize"],[3,"Serializer"],[3,"OpaqueOrigin"],[3,"PathSegmentsMut"],[3,"Client"],[3,"Collection"],[3,"IoError"],[3,"AddrParseError"],[3,"ParseError"],[3,"KeyRejected"],[3,"ResolveError"],[3,"Certificate"],[3,"PrivateKey"],[3,"Builder"],[3,"Connecting"],[3,"Connection"],[3,"Endpoint"],[3,"Incoming"],[3,"Receiver"],[3,"Sender"],[3,"Id"],[3,"Id"],[3,"Schematic"],[3,"BasicCount"],[3,"BasicByParentId"],[3,"BasicByCategory"],[3,"BasicByBrokenParentId"],[3,"BasicSchema"],[3,"BasicCollectionWithNoViews"],[3,"BasicCollectionWithOnlyBrokenParentId"],[3,"UnassociatedCollection"],[3,"Server"]]},\
"pliantdb_client":{"doc":"Client for <code>pliantdb-server</code>.","i":[[3,"Client","pliantdb_client","Client for connecting to a <code>PliantDB</code> server.",null,null],[4,"Error","","Errors related to working with <code>Client</code>",null,null],[13,"Transport","","An error occurred from the QUIC transport layer.",0,null],[13,"WebSocket","","An error occurred from the WebSocket transport layer.",0,null],[13,"Network","","An error occurred from networking.",0,null],[13,"InvalidUrl","","An invalid Url was provided.",0,null],[13,"Disconnected","","The connection was interrupted.",0,null],[13,"Core","","The connection was interrupted.",0,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["senderror",3]]]],[11,"from","","",0,[[["recverror",4]]]],[11,"from","","",0,[[["error",6]]]],[11,"clone","","",1,[[],["client",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"create_database","","",1,[[["id",3],["str",15]],[["pin",3],["box",3]]]],[11,"delete_database","","",1,[[["str",15]],[["pin",3],["box",3]]]],[11,"list_databases","","",1,[[],[["pin",3],["box",3]]]],[11,"list_available_schemas","","",1,[[],[["box",3],["pin",3]]]],[11,"new","","Initialize a client connecting to <code>url</code> with <code>certificate</code> …",1,[[["url",3],["option",4],["certificate",3]]]],[11,"database","","Returns a structure representing a remote database. No …",1,[[["str",15]]]]],"p":[[4,"Error"],[3,"Client"]]},\
"pliantdb_core":{"doc":"Core functionality and types for <code>PliantDB</code>.","i":[[0,"connection","pliantdb_core","Types for interacting with a database.",null,null],[8,"Connection","pliantdb_core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",0,[[],[["collection",3],["collection",8]]]],[11,"insert","","Inserts a newly created document into the connected […",0,[[["vec",3],["u8",15]],[["box",3],["pin",3]]]],[11,"update","","Updates an existing document in the connected […",0,[[["document",3]],[["pin",3],["box",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",0,[[["u64",15]],[["pin",3],["box",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",0,[[],[["pin",3],["box",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",0,[[["document",3]],[["pin",3],["box",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",0,[[],[["view",3],["view",8]]]],[10,"query","","Queries for view entries matching [<code>View</code>].",0,[[["querykey",4],["accesspolicy",4],["option",4]],[["pin",3],["box",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",0,[[["querykey",4],["accesspolicy",4],["option",4]],[["pin",3],["box",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",0,[[["querykey",4],["accesspolicy",4],["option",4]],[["pin",3],["box",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",0,[[["querykey",4],["accesspolicy",4],["option",4]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",0,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",0,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",0,[[],[["box",3],["pin",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[11,"new","","Creates a new instance using <code>connection</code>.",1,[[]]],[11,"push","","Adds a new <code>Document<Cl></code> with the contents <code>item</code>.",1,[[]]],[11,"get","","Retrieves a <code>Document<Cl></code> with <code>id</code> from the connection.",1,[[["u64",15]]]],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",2,null],[12,"access_policy","","The view\'s data access policy. The default value is […",2,null],[11,"with_key","","Filters for entries in the view with <code>key</code>.",2,[[]]],[11,"with_keys","","Filters for entries in the view with <code>keys</code>.",2,[[["vec",3]]]],[11,"with_key_range","","Filters for entries in the view with the range <code>keys</code>.",2,[[["range",3]]]],[11,"with_access_policy","","Sets the access policy for queries.",2,[[["accesspolicy",4]]]],[11,"query","","Executes the query and retrieves the results.",2,[[]]],[11,"query_with_docs","","Executes the query and retrieves the results with the …",2,[[]]],[11,"reduce","","Executes a reduce over the results of the query",2,[[]]],[11,"reduce_grouped","","Executes a reduce over the results of the query",2,[[]]],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",3,null],[13,"Range","","Matches all entires with keys in the range provided.",3,null],[13,"Multiple","","Matches all entries that have keys that are included in …",3,null],[11,"serialized","","Converts this key to a serialized format using the [<code>Key</code>] …",3,[[],[["error",4],["result",4],["querykey",4]]]],[11,"deserialized","","Deserializes the bytes into <code>K</code> via the [<code>Key</code>] trait.",3,[[],[["error",4],["result",4],["querykey",4]]]],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",4,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",4,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",4,null],[0,"document","pliantdb_core","Types for interacting with <code>Document</code>s.",null,null],[3,"Revision","pliantdb_core::document","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",5,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",5,null],[3,"Header","","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",6,null],[12,"revision","","The revision of the stored document.",6,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",7,null],[12,"header","","The header of the document, which contains the id and …",7,null],[12,"contents","","The serialized bytes of the stored item.",7,null],[11,"new","","Creates a new document with <code>contents</code>.",7,[[["id",3],["cow",4],["u64",15]]]],[11,"with_contents","","Creates a new document with serialized bytes from <code>contents</code>…",7,[[["id",3],["u64",15]],[["result",4],["error",3]]]],[11,"contents","","Retrieves <code>contents</code> through deserialization into the type <code>D</code>…",7,[[],[["error",3],["result",4],["deserialize",8]]]],[11,"set_contents","","Serializes and stores <code>contents</code> into this document.",7,[[],[["result",4],["error",3]]]],[11,"create_new_revision","","Creates a new revision.",7,[[["cow",4]],["option",4]]],[11,"emit","","Creates a <code>Map</code> result with an empty key and value.",7,[[],["map",3]]],[11,"emit_key","","Creates a <code>Map</code> result with a <code>key</code> and an empty value.",7,[[["key",8]],[["map",3],["key",8]]]],[11,"emit_value","","Creates a <code>Map</code> result with <code>value</code> and an empty key.",7,[[["serialize",8]],[["serialize",8],["map",3]]]],[11,"emit_key_and_value","","Creates a <code>Map</code> result with a <code>key</code> and <code>value</code>.",7,[[["serialize",8],["key",8]],[["serialize",8],["key",8],["map",3]]]],[11,"to_owned","","Clone the document\'s data so that it\'s no longer borrowed …",7,[[],["document",3]]],[0,"limits","pliantdb_core","Limits used within <code>PliantDB</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb_core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"networking","pliantdb_core","Types for networked communications.",null,null],[3,"Payload","pliantdb_core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",8,null],[12,"wrapped","","The wrapped payload.",8,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",9,null],[13,"Database","","A database-related request.",9,null],[12,"database","pliantdb_core::networking::Request","The name of the database.",10,null],[12,"request","","The request made to the database.",10,null],[4,"ServerRequest","pliantdb_core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",11,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",11,null],[12,"name","pliantdb_core::networking::ServerRequest","The name of the database to delete.",12,null],[13,"ListDatabases","pliantdb_core::networking","Lists all databases.",11,null],[13,"ListAvailableSchemas","","Lists available schemas.",11,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",13,null],[12,"collection","pliantdb_core::networking::DatabaseRequest","The collection of the document.",14,null],[12,"id","","The id of the document.",14,null],[13,"GetMultiple","pliantdb_core::networking","Retrieve multiple documents.",13,null],[12,"collection","pliantdb_core::networking::DatabaseRequest","The collection of the documents.",15,null],[12,"ids","","The ids of the documents.",15,null],[13,"Query","pliantdb_core::networking","Queries a view.",13,null],[12,"view","pliantdb_core::networking::DatabaseRequest","The name of the view.",16,null],[12,"key","","The filter for the view.",16,null],[12,"access_policy","","The access policy for the query.",16,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",16,null],[13,"Reduce","pliantdb_core::networking","Reduces a view.",13,null],[12,"view","pliantdb_core::networking::DatabaseRequest","The name of the view.",17,null],[12,"key","","The filter for the view.",17,null],[12,"access_policy","","The access policy for the query.",17,null],[12,"grouped","","Whether to return a single value or values grouped by …",17,null],[13,"ApplyTransaction","pliantdb_core::networking","Applies a transaction.",13,null],[12,"transaction","pliantdb_core::networking::DatabaseRequest","The trasnaction to apply.",18,null],[13,"ListExecutedTransactions","pliantdb_core::networking","Lists executed transactions.",13,null],[12,"starting_id","pliantdb_core::networking::DatabaseRequest","The starting transaction id.",19,null],[12,"result_limit","","The maximum number of results.",19,null],[13,"LastTransactionId","pliantdb_core::networking","Queries the last transaction id.",13,null],[4,"Response","","A response from a server.",null,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",20,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",20,null],[13,"Error","","An error occurred processing a request.",20,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",21,null],[12,"name","pliantdb_core::networking::ServerResponse","The name of the database to create.",22,null],[13,"DatabaseDeleted","pliantdb_core::networking","A database with <code>name</code> was successfully removed.",21,null],[12,"name","pliantdb_core::networking::ServerResponse","The name of the database to remove.",23,null],[13,"Databases","pliantdb_core::networking","A list of available databases.",21,null],[13,"AvailableSchemas","","A list of availble schemas.",21,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",24,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",24,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",24,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",24,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",24,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",24,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",24,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",24,null],[3,"MappedDocument","","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",25,null],[12,"value","","The serialized value.",25,null],[12,"source","","The source document.",25,null],[11,"deserialized","","Deserialize into a <code>MappedDocument</code>.",25,[[],[["mappeddocument",3],["error",4],["result",4]]]],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",26,null],[12,"schema","","The schema defining the database.",26,null],[8,"ServerConnection","","Functions for interacting with a <code>PliantDB</code> server.",null,null],[10,"create_database","","Creates a database named <code>name</code> using the [<code>schema::Id</code>] …",27,[[["str",15],["id",3]],[["box",3],["pin",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",27,[[["str",15]],[["box",3],["pin",3]]]],[10,"list_databases","","Lists the databases on this server.",27,[[],[["box",3],["pin",3]]]],[10,"list_available_schemas","","Lists the [<code>schema::Id</code>]s on this server.",27,[[],[["pin",3],["box",3]]]],[4,"Error","","A networking error.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See […",28,null],[13,"DatabaseNotFound","","The database name given was not found.",28,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",28,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",28,null],[13,"Disconnected","","The connection was interrupted.",28,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",28,null],[12,"database_name","pliantdb_core::networking::Error","The name of the database being accessed.",29,null],[12,"schema","","The schema provided for the database.",29,null],[12,"stored_schema","","The schema stored for the database.",29,null],[13,"SchemaAlreadyRegistered","pliantdb_core::networking","The [<code>schema::Id</code>] returned has already been registered …",28,null],[13,"SchemaNotRegistered","","The [<code>schema::Id</code>] requested was not registered with this …",28,null],[0,"schema","pliantdb_core","Types for defining database schema.",null,null],[0,"collection","pliantdb_core::schema","Types for defining a <code>Collection</code>.",null,null],[3,"Id","pliantdb_core::schema::collection","A unique collection id. Choose collection names that …",null,null],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_id","","The <code>Id</code> of this collection.",30,[[],["id",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",30,[[["schematic",3]]]],[0,"view","pliantdb_core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb_core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb_core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",31,null],[12,"key","","The key used to index the View.",31,null],[12,"value","","An associated value stored in the view.",31,null],[11,"serialized","","Serializes this map.",31,[[],[["serialized",3],["error",4],["result",4]]]],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",32,null],[12,"key","","The key used to index the View.",32,null],[12,"value","","An associated value stored in the view.",32,null],[11,"new","","Creates a new Map entry for the document with id <code>source</code>.",31,[[["u64",15]]]],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",33,null],[12,"key","","The key used to index the View.",33,null],[12,"value","","An associated value stored in the view.",33,null],[11,"deserialized","","Deserializes this map.",33,[[],[["error",4],["result",4],["map",3]]]],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",34,null],[12,"value","","The value generated by the <code>View</code>",34,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",35,[[],[["result",6],["cow",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",35,[[],["result",6]]],[4,"Error","pliantdb_core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",36,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",36,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",36,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",37,null],[16,"Key","","The key for this view.",37,null],[16,"Value","","An associated type that can be stored with each entry in …",37,null],[10,"version","","The version of the view. Changing this value will cause …",37,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",37,[[],[["str",15],["cow",4]]]],[10,"map","","The map function for this view. This function is …",37,[[["document",3]],["mapresult",6]]],[11,"reduce","","The reduce function for this view. If …",37,[[["bool",15]],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",38,null],[13,"Borrowed","","a borrowed value",38,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",39,[[],["id",3]]],[10,"version","","Wraps [<code>View::version</code>]",39,[[],["u64",15]]],[10,"name","","Wraps [<code>View::name</code>]",39,[[],[["str",15],["cow",4]]]],[10,"map","","Wraps [<code>View::map</code>]",39,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",39,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[3,"Schematic","pliantdb_core::schema","A collection of defined collections and views.",null,null],[3,"Id","","The unique Id of a [<code>Schema</code>]. Primarily used to try to …",null,null],[11,"new","","Creates a new id.",40,[[["into",8],["string",3]]]],[8,"Schema","","Defines a group of collections that are stored into a …",null,null],[10,"schema_id","","Returns the unique [<code>Id</code>] for this schema.",41,[[],["id",3]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",41,[[["schematic",3]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",41,[[],["schematic",3]]],[0,"transaction","pliantdb_core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb_core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",42,null],[11,"push","","Adds an operation to the transaction.",42,[[["operation",3]]]],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",43,null],[12,"command","","The command being performed.",43,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",44,null],[12,"contents","pliantdb_core::transaction::Command","The initial contents of the document.",45,null],[13,"Update","pliantdb_core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",44,null],[12,"header","pliantdb_core::transaction::Command","The current header of the <code>Document</code>.",46,null],[12,"contents","","The new contents to store within the <code>Document</code>.",46,null],[13,"Delete","pliantdb_core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",44,null],[12,"header","pliantdb_core::transaction::Command","The current header of the <code>Document</code>.",47,null],[4,"OperationResult","pliantdb_core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",48,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",48,null],[12,"collection","pliantdb_core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",49,null],[12,"header","","The header of the updated <code>Document</code>.",49,null],[13,"DocumentDeleted","pliantdb_core::transaction","A <code>Document</code> was deleted.",48,null],[12,"collection","pliantdb_core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",50,null],[12,"id","","The id of the deleted <code>Document</code>.",50,null],[3,"Executed","pliantdb_core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",51,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",51,null],[11,"to_owned","","Convert this structure to be free of borrows.",51,[[],["executed",3]]],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",52,null],[12,"id","","The id of the changed <code>Document</code>.",52,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",52,null],[0,"test_util","pliantdb_core","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb_core::test_util","",null,null],[12,"value","","",53,null],[12,"category","","",53,null],[12,"parent_id","","",53,null],[11,"new","","",53,[[]]],[11,"with_category","","",53,[[]]],[11,"with_parent_id","","",53,[[["u64",15]]]],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",54,null],[11,"new","","",54,[[["path",3],["asref",8]]]],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"ConnectionTest","","",null,null],[13,"StoreRetrieveUpdate","","",55,null],[13,"NotFound","","",55,null],[13,"Conflict","","",55,null],[13,"BadUpdate","","",55,null],[13,"NoUpdate","","",55,null],[13,"GetMultiple","","",55,null],[13,"ListTransactions","","",55,null],[13,"ViewQuery","","",55,null],[13,"UnassociatedCollection","","",55,null],[13,"ViewUpdate","","",55,null],[13,"ViewAccessPolicies","","",55,null],[11,"port","","",55,[[["u16",15]],["u16",15]]],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[4,"Error","pliantdb_core","an enumeration of errors that this crate can produce",null,null],[13,"Storage","","An error from interacting with local storage.",56,null],[13,"Server","","An error from interacting with a server.",56,null],[13,"Transport","","An error occurred from the QUIC transport layer.",56,null],[13,"Websocket","","An error occurred from the websocket transport layer.",56,null],[13,"Networking","","An error occurred from networking.",56,null],[13,"Io","","An error occurred from IO.",56,null],[13,"Configuration","","An error occurred with the provided configuration options.",56,null],[13,"Client","","An error occurred inside of the client.",56,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",56,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",56,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",56,null],[14,"define_connection_test_suite","","Creates a test suite that tests methods available on […",null,null],[11,"from","pliantdb_core::connection","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","pliantdb_core::document","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"equivalent","","",5,[[],["bool",15]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"equivalent","","",6,[[],["bool",15]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","pliantdb_core::networking","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","pliantdb_core::schema::collection","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"equivalent","","",57,[[],["bool",15]]],[11,"from","pliantdb_core::schema","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","pliantdb_core::schema::view::map","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","pliantdb_core::schema::view","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"as_bits","","",38,[[],["bitslice",3]]],[11,"vzip","","",38,[[]]],[11,"from","pliantdb_core::schema","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"equivalent","","",40,[[],["bool",15]]],[11,"from","pliantdb_core::transaction","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"schema_id","pliantdb_core::test_util","",53,[[],["id",3]]],[11,"define_collections","","",53,[[["schematic",3]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"collection","","",59,[[],["id",3]]],[11,"version","","",59,[[],["u64",15]]],[11,"name","","",59,[[],[["cow",4],["str",15]]]],[11,"map","","",59,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",59,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"collection","","",60,[[],["id",3]]],[11,"version","","",60,[[],["u64",15]]],[11,"name","","",60,[[],[["cow",4],["str",15]]]],[11,"map","","",60,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",60,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"collection","","",61,[[],["id",3]]],[11,"version","","",61,[[],["u64",15]]],[11,"name","","",61,[[],[["cow",4],["str",15]]]],[11,"map","","",61,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",61,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"collection","","",62,[[],["id",3]]],[11,"version","","",62,[[],["u64",15]]],[11,"name","","",62,[[],[["cow",4],["str",15]]]],[11,"map","","",62,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",62,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"schema_id","","",64,[[],["id",3]]],[11,"define_collections","","",64,[[["schematic",3]]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"schema_id","","",65,[[],["id",3]]],[11,"define_collections","","",65,[[["schematic",3]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"schema_id","","",66,[[],["id",3]]],[11,"define_collections","","",66,[[["schematic",3]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","pliantdb_core","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"collection_id","pliantdb_core::test_util","",53,[[],["id",3]]],[11,"define_views","","",53,[[["schematic",3]]]],[11,"collection_id","","",64,[[],["id",3]]],[11,"define_views","","",64,[[["schematic",3]]]],[11,"collection_id","","",65,[[],["id",3]]],[11,"define_views","","",65,[[["schematic",3]]]],[11,"collection_id","","",66,[[],["id",3]]],[11,"define_views","","",66,[[["schematic",3]]]],[11,"version","","",59,[[],["u64",15]]],[11,"name","","",59,[[],[["str",15],["cow",4]]]],[11,"map","","",59,[[["document",3]],["mapresult",6]]],[11,"reduce","","",59,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",60,[[],["u64",15]]],[11,"name","","",60,[[],[["str",15],["cow",4]]]],[11,"map","","",60,[[["document",3]],["mapresult",6]]],[11,"reduce","","",60,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",61,[[],["u64",15]]],[11,"name","","",61,[[],[["str",15],["cow",4]]]],[11,"map","","",61,[[["document",3]],["mapresult",6]]],[11,"reduce","","",61,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",62,[[],["u64",15]]],[11,"name","","",62,[[],[["str",15],["cow",4]]]],[11,"map","","",62,[[["document",3]],["mapresult",6]]],[11,"schema_id","","",63,[[],["id",3]]],[11,"define_collections","","",63,[[["schematic",3]]]],[11,"drop","","",54,[[]]],[11,"as_ref","pliantdb_core::schema::collection","",57,[[],["str",15]]],[11,"as_ref","pliantdb_core::schema::view","",38,[[]]],[11,"as_ref","pliantdb_core::schema","",40,[[],["str",15]]],[11,"as_ref","pliantdb_core::test_util","",54,[[],["path",3]]],[11,"from","pliantdb_core::schema::collection","",57,[[["str",15]]]],[11,"from","","",57,[[["string",3]]]],[11,"from","pliantdb_core::schema::view","",36,[[["error",3]]]],[11,"from","","",38,[[],["serializablevalue",4]]],[11,"from","pliantdb_core::schema","",40,[[["str",15]]]],[11,"from","pliantdb_core","",56,[[["error",3]]]],[11,"clone","pliantdb_core::connection","",3,[[],["querykey",4]]],[11,"clone","","",4,[[],["accesspolicy",4]]],[11,"clone","pliantdb_core::document","",5,[[],["revision",3]]],[11,"clone","","",6,[[],["header",3]]],[11,"clone","","",7,[[],["document",3]]],[11,"clone","pliantdb_core::networking","",8,[[],["payload",3]]],[11,"clone","","",9,[[],["request",4]]],[11,"clone","","",11,[[],["serverrequest",4]]],[11,"clone","","",13,[[],["databaserequest",4]]],[11,"clone","","",20,[[],["response",4]]],[11,"clone","","",21,[[],["serverresponse",4]]],[11,"clone","","",24,[[],["databaseresponse",4]]],[11,"clone","","",25,[[],["mappeddocument",3]]],[11,"clone","","",26,[[],["database",3]]],[11,"clone","","",28,[[],["error",4]]],[11,"clone","pliantdb_core::schema::collection","",57,[[],["id",3]]],[11,"clone","pliantdb_core::schema::view::map","",33,[[],["serialized",3]]],[11,"clone","","",34,[[],["mappedvalue",3]]],[11,"clone","pliantdb_core::schema","",40,[[],["id",3]]],[11,"clone","pliantdb_core::transaction","",42,[[],["transaction",3]]],[11,"clone","","",43,[[],["operation",3]]],[11,"clone","","",44,[[],["command",4]]],[11,"clone","","",48,[[],["operationresult",4]]],[11,"clone","","",51,[[],["executed",3]]],[11,"clone","","",52,[[],["changeddocument",3]]],[11,"clone","pliantdb_core","",56,[[],["error",4]]],[11,"clone","pliantdb_core::test_util","",55,[[],["connectiontest",4]]],[11,"default","pliantdb_core::schema","",58,[[],["schematic",3]]],[11,"default","pliantdb_core::transaction","",42,[[],["transaction",3]]],[11,"default","pliantdb_core::test_util","",53,[[],["basic",3]]],[11,"eq","pliantdb_core::document","",5,[[["revision",3]],["bool",15]]],[11,"ne","","",5,[[["revision",3]],["bool",15]]],[11,"eq","","",6,[[["header",3]],["bool",15]]],[11,"ne","","",6,[[["header",3]],["bool",15]]],[11,"eq","pliantdb_core::networking","",26,[[["database",3]],["bool",15]]],[11,"ne","","",26,[[["database",3]],["bool",15]]],[11,"eq","pliantdb_core::schema::collection","",57,[[["id",3]],["bool",15]]],[11,"ne","","",57,[[["id",3]],["bool",15]]],[11,"eq","pliantdb_core::schema::view::map","",31,[[["map",3]],["bool",15]]],[11,"ne","","",31,[[["map",3]],["bool",15]]],[11,"eq","","",34,[[["mappedvalue",3]],["bool",15]]],[11,"ne","","",34,[[["mappedvalue",3]],["bool",15]]],[11,"eq","pliantdb_core::schema","",40,[[["id",3]],["bool",15]]],[11,"ne","","",40,[[["id",3]],["bool",15]]],[11,"eq","pliantdb_core::test_util","",53,[[["basic",3]],["bool",15]]],[11,"ne","","",53,[[["basic",3]],["bool",15]]],[11,"fmt","pliantdb_core::connection","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::document","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::networking","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::collection","",57,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema","",58,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::view::map","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::view","",36,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema","",40,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::transaction","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core","",56,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::test_util","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::networking","",28,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::collection","",57,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::view","",36,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema","",40,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core","",56,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::test_util","",55,[[["formatter",3]],["result",6]]],[11,"hash","pliantdb_core::schema::collection","",57,[[]]],[11,"hash","pliantdb_core::schema","",40,[[]]],[11,"source","pliantdb_core::schema::view","",36,[[],[["error",8],["option",4]]]],[11,"deserialize","pliantdb_core::connection","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","pliantdb_core::document","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","pliantdb_core::networking","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","pliantdb_core::schema::collection","",57,[[],["result",4]]],[11,"deserialize","pliantdb_core::schema::view::map","",33,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","pliantdb_core::schema","",40,[[],["result",4]]],[11,"deserialize","pliantdb_core::transaction","",42,[[],["result",4]]],[11,"deserialize","","",43,[[],["result",4]]],[11,"deserialize","","",44,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","","",51,[[],["result",4]]],[11,"deserialize","","",52,[[],["result",4]]],[11,"deserialize","pliantdb_core","",56,[[],["result",4]]],[11,"deserialize","pliantdb_core::test_util","",53,[[],["result",4]]],[11,"serialize","pliantdb_core::connection","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","pliantdb_core::document","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","pliantdb_core::networking","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","pliantdb_core::schema::collection","",57,[[],["result",4]]],[11,"serialize","pliantdb_core::schema::view::map","",33,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","pliantdb_core::schema","",40,[[],["result",4]]],[11,"serialize","pliantdb_core::transaction","",42,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","","",44,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","","",51,[[],["result",4]]],[11,"serialize","","",52,[[],["result",4]]],[11,"serialize","pliantdb_core","",56,[[],["result",4]]],[11,"serialize","pliantdb_core::test_util","",53,[[],["result",4]]],[11,"new","pliantdb_core::document","Creates the first revision for a document with the SHA256 …",5,[[]]],[11,"with_id","","Creates a revision with <code>id</code> for a document with the SHA256 …",5,[[["u32",15]]]],[11,"next_revision","","Creates the next revision in sequence with an updated …",5,[[],["option",4]]],[11,"define_collection","pliantdb_core::schema","Adds the collection <code>C</code> and its views.",58,[[]]],[11,"define_view","","Adds the view <code>V</code>.",58,[[["view",8]]]],[11,"contains","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",58,[[],["bool",15]]],[11,"contains_collection_id","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",58,[[["id",3]],["bool",15]]],[11,"view_by_name","","Looks up a [<code>view::Serialized</code>] by name.",58,[[["str",15]],[["serialized",8],["option",4]]]],[11,"view","","Looks up a [<code>view::Serialized</code>] through the the type <code>V</code>.",58,[[],[["serialized",8],["option",4]]]],[11,"views","","Iterates over all registered views.",58,[[]]],[11,"views_in_collection","","Iterates over all views that belong to <code>collection</code>.",58,[[["id",3]],[["option",4],["vec",3]]]]],"p":[[8,"Connection"],[3,"Collection"],[3,"View"],[4,"QueryKey"],[4,"AccessPolicy"],[3,"Revision"],[3,"Header"],[3,"Document"],[3,"Payload"],[4,"Request"],[13,"Database"],[4,"ServerRequest"],[13,"DeleteDatabase"],[4,"DatabaseRequest"],[13,"Get"],[13,"GetMultiple"],[13,"Query"],[13,"Reduce"],[13,"ApplyTransaction"],[13,"ListExecutedTransactions"],[4,"Response"],[4,"ServerResponse"],[13,"DatabaseCreated"],[13,"DatabaseDeleted"],[4,"DatabaseResponse"],[3,"MappedDocument"],[3,"Database"],[8,"ServerConnection"],[4,"Error"],[13,"SchemaMismatch"],[8,"Collection"],[3,"Map"],[3,"MappedDocument"],[3,"Serialized"],[3,"MappedValue"],[8,"Key"],[4,"Error"],[8,"View"],[4,"SerializableValue"],[8,"Serialized"],[3,"Id"],[8,"Schema"],[3,"Transaction"],[3,"Operation"],[4,"Command"],[13,"Insert"],[13,"Update"],[13,"Delete"],[4,"OperationResult"],[13,"DocumentUpdated"],[13,"DocumentDeleted"],[3,"Executed"],[3,"ChangedDocument"],[3,"Basic"],[3,"TestDirectory"],[4,"ConnectionTest"],[4,"Error"],[3,"Id"],[3,"Schematic"],[3,"BasicCount"],[3,"BasicByParentId"],[3,"BasicByCategory"],[3,"BasicByBrokenParentId"],[3,"BasicSchema"],[3,"BasicCollectionWithNoViews"],[3,"BasicCollectionWithOnlyBrokenParentId"],[3,"UnassociatedCollection"]]},\
"pliantdb_jobs":{"doc":"Aysnc jobs management for <code>PliantDB</code>.","i":[[0,"manager","pliantdb_jobs","Types related to the job <code>Manager</code>.",null,null],[3,"Manager","pliantdb_jobs::manager","A background jobs manager.",null,null],[11,"enqueue","","Pushes a <code>job</code> into the queue. Pushing the same job …",0,[[["job",8]]]],[11,"lookup_or_enqueue","","Uses [<code>Keyed::key</code>] to ensure no other job with the same <code>key</code>…",0,[[["keyed",8]]]],[11,"spawn_worker","","Spawns a worker. In general, you shouldn\'t need to call …",0,[[]]],[0,"task","pliantdb_jobs","Types related to defining [<code>Job</code>]s.",null,null],[3,"Id","pliantdb_jobs::task","he <code>Id</code> of an executing task.",null,null],[3,"Handle","","References a background task.",null,null],[12,"id","","The task\'s id.",1,null],[11,"clone","","Returns a copy of this handle. When the job is completed, …",1,[[]]],[11,"receive","","Waits for the job to complete and returns the result.",1,[[]]],[11,"try_receive","","Tries to receive the status of the job. If available, it …",1,[[],[["result",4],["tryrecverror",4],["result",4]]]],[8,"Job","pliantdb_jobs","Defines a background job that can be queued and executed.",null,null],[16,"Output","","The output type of the job.",2,null],[10,"execute","","Executes the job and returns the result.",2,[[],[["box",3],["pin",3]]]],[8,"Keyed","","Defines a background job that has a unique <code>key</code>.",null,null],[10,"key","","The unique <code>key</code> for this <code>Job</code>",3,[[]]],[11,"from","pliantdb_jobs::manager","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","pliantdb_jobs::task","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","pliantdb_jobs::manager","",0,[[]]],[11,"clone","pliantdb_jobs::task","",4,[[],["id",3]]],[11,"default","pliantdb_jobs::manager","",0,[[]]],[11,"eq","pliantdb_jobs::task","",4,[[["id",3]],["bool",15]]],[11,"ne","","",4,[[["id",3]],["bool",15]]],[11,"fmt","pliantdb_jobs::manager","",0,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_jobs::task","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"hash","","",4,[[]]]],"p":[[3,"Manager"],[3,"Handle"],[8,"Job"],[8,"Keyed"],[3,"Id"]]},\
"pliantdb_local":{"doc":"Local storage backend for <code>PliantDB</code>.","i":[[0,"config","pliantdb_local","Configuration options.",null,null],[3,"Configuration","pliantdb_local::config","Configuration options for <code>Storage</code>.",null,null],[12,"workers","","Configuration options related to background tasks.",0,null],[12,"views","","Configuration options related to views.",0,null],[3,"Tasks","","Configujration options for background tasks.",null,null],[12,"worker_count","","Defines how many workers should be spawned to process …",1,null],[3,"Views","","Configuration options for views.",null,null],[12,"check_integrity_on_open","","If true, the database will scan all views during the call …",2,null],[0,"backup","pliantdb_local","Local database tool to save and load databases into plain …",null,null],[3,"Cli","pliantdb_local::backup","The command line interface for <code>pliantdb local-backup</code>.",null,null],[12,"database_path","","The path to the database you wish to operate on.",3,null],[12,"subcommand","","The command to execute on the database.",3,null],[4,"Command","","The command to execute.",null,null],[13,"Save","","Exports all of the data into a straightforward file …",4,null],[12,"output_directory","pliantdb_local::backup::Command","The directory to export the data within. The process will …",5,null],[12,"output_name","","The name of the folder to export the data to. If not …",5,null],[13,"Load","pliantdb_local::backup","Loads all of the data from a previously saved backup. Any …",4,null],[12,"backup","pliantdb_local::backup::Command","The path to the previously saved backup.",6,null],[11,"execute","pliantdb_local::backup","Executes the command.",4,[[["pathbuf",3]]]],[0,"connection","pliantdb_local::core","Types for interacting with a database.",null,null],[8,"Connection","pliantdb_local::core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",7,[[],["collection",3]]],[11,"insert","","Inserts a newly created document into the connected […",7,[[["vec",3],["global",3],["u8",15]],[["pin",3],["box",3]]]],[11,"update","","Updates an existing document in the connected […",7,[[["document",3]],[["pin",3],["box",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",7,[[["u64",15]],[["pin",3],["box",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",7,[[],[["pin",3],["box",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",7,[[["document",3]],[["pin",3],["box",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",7,[[],["view",3]]],[10,"query","","Queries for view entries matching [<code>View</code>].",7,[[["option",4],["querykey",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",7,[[["option",4],["querykey",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",7,[[["option",4],["querykey",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",7,[[["option",4],["querykey",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",7,[[["transaction",3]],[["box",3],["pin",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",7,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",7,[[],[["pin",3],["box",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",8,null],[12,"access_policy","","The view\'s data access policy. The default value is […",8,null],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",9,null],[13,"Range","","Matches all entires with keys in the range provided.",9,null],[13,"Multiple","","Matches all entries that have keys that are included in …",9,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",10,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",10,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",10,null],[0,"document","pliantdb_local::core","Types for interacting with <code>Document</code>s.",null,null],[3,"Header","pliantdb_local::core::document","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",11,null],[12,"revision","","The revision of the stored document.",11,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",12,null],[12,"header","","The header of the document, which contains the id and …",12,null],[12,"contents","","The serialized bytes of the stored item.",12,null],[3,"Revision","","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",13,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",13,null],[0,"limits","pliantdb_local::core","Limits used within <code>PliantDB</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb_local::core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"networking","pliantdb_local::core","Types for networked communications.",null,null],[3,"Payload","pliantdb_local::core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",14,null],[12,"wrapped","","The wrapped payload.",14,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",15,null],[13,"Database","","A database-related request.",15,null],[12,"database","pliantdb_local::core::networking::Request","The name of the database.",16,null],[12,"request","","The request made to the database.",16,null],[4,"ServerRequest","pliantdb_local::core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",17,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",17,null],[12,"name","pliantdb_local::core::networking::ServerRequest","The name of the database to delete.",18,null],[13,"ListDatabases","pliantdb_local::core::networking","Lists all databases.",17,null],[13,"ListAvailableSchemas","","Lists available schemas.",17,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",19,null],[12,"collection","pliantdb_local::core::networking::DatabaseRequest","The collection of the document.",20,null],[12,"id","","The id of the document.",20,null],[13,"GetMultiple","pliantdb_local::core::networking","Retrieve multiple documents.",19,null],[12,"collection","pliantdb_local::core::networking::DatabaseRequest","The collection of the documents.",21,null],[12,"ids","","The ids of the documents.",21,null],[13,"Query","pliantdb_local::core::networking","Queries a view.",19,null],[12,"view","pliantdb_local::core::networking::DatabaseRequest","The name of the view.",22,null],[12,"key","","The filter for the view.",22,null],[12,"access_policy","","The access policy for the query.",22,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",22,null],[13,"Reduce","pliantdb_local::core::networking","Reduces a view.",19,null],[12,"view","pliantdb_local::core::networking::DatabaseRequest","The name of the view.",23,null],[12,"key","","The filter for the view.",23,null],[12,"access_policy","","The access policy for the query.",23,null],[12,"grouped","","Whether to return a single value or values grouped by …",23,null],[13,"ApplyTransaction","pliantdb_local::core::networking","Applies a transaction.",19,null],[12,"transaction","pliantdb_local::core::networking::DatabaseRequest","The trasnaction to apply.",24,null],[13,"ListExecutedTransactions","pliantdb_local::core::networking","Lists executed transactions.",19,null],[12,"starting_id","pliantdb_local::core::networking::DatabaseRequest","The starting transaction id.",25,null],[12,"result_limit","","The maximum number of results.",25,null],[13,"LastTransactionId","pliantdb_local::core::networking","Queries the last transaction id.",19,null],[4,"Response","","A response from a server.",null,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",26,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",26,null],[13,"Error","","An error occurred processing a request.",26,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",27,null],[12,"name","pliantdb_local::core::networking::ServerResponse","The name of the database to create.",28,null],[13,"DatabaseDeleted","pliantdb_local::core::networking","A database with <code>name</code> was successfully removed.",27,null],[12,"name","pliantdb_local::core::networking::ServerResponse","The name of the database to remove.",29,null],[13,"Databases","pliantdb_local::core::networking","A list of available databases.",27,null],[13,"AvailableSchemas","","A list of availble schemas.",27,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",30,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",30,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",30,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",30,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",30,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",30,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",30,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",30,null],[3,"MappedDocument","","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",31,null],[12,"value","","The serialized value.",31,null],[12,"source","","The source document.",31,null],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",32,null],[12,"schema","","The schema defining the database.",32,null],[8,"ServerConnection","","Functions for interacting with a <code>PliantDB</code> server.",null,null],[10,"create_database","","Creates a database named <code>name</code> using the [<code>schema::Id</code>] …",33,[[["id",3],["str",15]],[["pin",3],["box",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",33,[[["str",15]],[["pin",3],["box",3]]]],[10,"list_databases","","Lists the databases on this server.",33,[[],[["pin",3],["box",3]]]],[10,"list_available_schemas","","Lists the [<code>schema::Id</code>]s on this server.",33,[[],[["box",3],["pin",3]]]],[4,"Error","","A networking error.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See […",34,null],[13,"DatabaseNotFound","","The database name given was not found.",34,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",34,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",34,null],[13,"Disconnected","","The connection was interrupted.",34,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",34,null],[12,"database_name","pliantdb_local::core::networking::Error","The name of the database being accessed.",35,null],[12,"schema","","The schema provided for the database.",35,null],[12,"stored_schema","","The schema stored for the database.",35,null],[13,"SchemaAlreadyRegistered","pliantdb_local::core::networking","The [<code>schema::Id</code>] returned has already been registered …",34,null],[13,"SchemaNotRegistered","","The [<code>schema::Id</code>] requested was not registered with this …",34,null],[0,"error","pliantdb_local::core::networking::fabruic","<code>Error</code> for this [<code>crate</code>].",null,null],[6,"Result","pliantdb_local::core::networking::fabruic::error","<code>Result</code> type for this [<code>crate</code>].",null,null],[4,"Error","","<code>Error</code> for this [<code>crate</code>].",null,null],[13,"ParseCertificate","","Failed to parse the given certificate.",36,null],[12,"certificate","pliantdb_local::core::networking::fabruic::error::Error","The certificate passed to <code>from_der</code>.",37,null],[12,"error","","The parsing error.",37,null],[13,"DanglingCertificate","pliantdb_local::core::networking::fabruic::error","Data passed to generate <code>Certificate</code> with <code>from_der</code> found …",36,null],[12,"certificate","pliantdb_local::core::networking::fabruic::error::Error","The certificate passed to <code>from_der</code>.",38,null],[12,"dangling","","The dangling bytes.",38,null],[13,"ExpiredCertificate","pliantdb_local::core::networking::fabruic::error","<code>Certificate</code> has expired.",36,null],[13,"DomainCertificate","","<code>Certificate</code> is missing a domain name.",36,null],[13,"ParsePrivateKey","","Failed to parse the given private key.",36,null],[13,"ParseAddress","","Parsing a <code>SocketAddr</code> from a [<code>str</code>] failed.",36,null],[13,"Certificate","","Returned by <code>Endpoint</code> when failing to parse the given …",36,null],[13,"PrivateKey","","Returned by <code>Endpoint</code> when failing to parse the given …",36,null],[13,"InvalidKeyPair","","Returned by <code>Endpoint</code> when failing to pair the given …",36,null],[13,"InvalidCertificate","","Returned by <code>Endpoint</code> when failing to add the given …",36,null],[13,"BindSocket","","Returned by <code>Endpoint</code> when failing to bind the socket on …",36,null],[13,"Resolve","","Failed to resolve domain to IP address.",36,null],[13,"NoIp","","Found no IP address for that domain.",36,null],[13,"LocalAddress","","Returned by <code>Endpoint::local_address</code> when failing to …",36,null],[13,"AlreadyClosed","","Attempting to close something that is already closed.",36,null],[13,"ConnectConfig","","Returned by <code>Endpoint::connect</code> if configuration needed to …",36,null],[13,"Connecting","","Returned by <code>Connecting::accept</code> if connecting to the peer …",36,null],[13,"ReceiveStream","","Returned by <code>Connection</code> <code>Stream</code> when receiving a new stream …",36,null],[13,"OpenStream","","Returned by <code>Connection::open_stream</code> if opening a stream …",36,null],[13,"Write","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to write into …",36,null],[13,"Finish","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to finish a …",36,null],[13,"Send","","Returned by <code>Sender::send</code> if the stream was closed by …",36,null],[13,"Serialize","","Returned by <code>Sender::send</code> if <code>serialization</code> failed.",36,null],[13,"Read","","Returned by <code>Receiver::close</code> if <code>Receiver</code> failed to read …",36,null],[13,"Deserialize","","Returned by <code>Receiver::finish</code> if <code>Receiver</code> failed to …",36,null],[13,"NoType","","Returned by <code>Incoming::type</code> if the peer closed the stream …",36,null],[4,"ParseCertificate","","Possible certificate parsing errors.",null,null],[13,"WebPki","","<code>Error</code> returned by [<code>webpki</code>].",39,null],[13,"X509","","<code>Error</code> returned by [<code>x509_parser</code>].",39,null],[3,"IoError","","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…",null,null],[3,"AddrParseError","","An error which can be returned when parsing an IP address …",null,null],[4,"ErrorKind","","The kind of error that can be produced during a …",null,null],[13,"Io","","If the error stems from the reader/writer that is being …",40,null],[13,"InvalidUtf8Encoding","","Returned if the deserializer attempts to deserialize a …",40,null],[13,"InvalidBoolEncoding","","Returned if the deserializer attempts to deserialize a …",40,null],[13,"InvalidCharEncoding","","Returned if the deserializer attempts to deserialize a …",40,null],[13,"InvalidTagEncoding","","Returned if the deserializer attempts to deserialize the …",40,null],[13,"DeserializeAnyNotSupported","","Serde has a deserialize_any method that lets the format …",40,null],[13,"SizeLimit","","If (de)serializing a message takes more than the provided …",40,null],[13,"SequenceMustHaveLength","","Bincode can not encode sequences of unknown length (like …",40,null],[13,"Custom","","A custom error message from Serde.",40,null],[4,"ConnectError","","Errors in the parameters being used to create a new …",null,null],[13,"EndpointStopping","","The endpoint can no longer create new connections",41,null],[13,"TooManyConnections","","The number of active connections on the local endpoint is …",41,null],[13,"InvalidDnsName","","The domain name supplied was malformed",41,null],[13,"Config","","The transport configuration was invalid",41,null],[13,"InvalidRemoteAddress","","The remote [<code>SocketAddr</code>] supplied was malformed",41,null],[4,"ConnectionError","","Reasons why a connection might be lost",null,null],[13,"VersionMismatch","","The peer doesn\'t implement any supported version",42,null],[13,"TransportError","","The peer violated the QUIC specification as understood by …",42,null],[13,"ConnectionClosed","","The peer\'s QUIC stack aborted the connection automatically",42,null],[13,"ApplicationClosed","","The peer closed the connection",42,null],[13,"Reset","","The peer is unable to continue processing this …",42,null],[13,"TimedOut","","Communication with the peer has lapsed for longer than …",42,null],[13,"LocallyClosed","","The local application closed the connection",42,null],[4,"EndpointError","","Errors that can occur during the construction of an …",null,null],[13,"Socket","","An error during setup of the underlying UDP socket.",43,null],[3,"ParseError","","Errors encountered while parsing a TLS certificate or …",null,null],[4,"ReadError","","Errors that arise from reading from a stream.",null,null],[13,"Reset","","The peer abandoned transmitting data on this stream.",44,null],[13,"ConnectionClosed","","The connection was closed.",44,null],[13,"UnknownStream","","The stream has already been stopped, finished, or reset",44,null],[13,"IllegalOrderedRead","","Attempted an ordered read following an unordered read",44,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",44,null],[4,"WriteError","","Errors that arise from writing to a stream",null,null],[13,"Stopped","","The peer is no longer accepting data on this stream.",45,null],[13,"ConnectionClosed","","The connection was closed.",45,null],[13,"UnknownStream","","The stream has already been finished or reset",45,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",45,null],[3,"KeyRejected","","An error parsing or validating a key.",null,null],[4,"TLSError","","rustls reports protocol errors using this type.",null,null],[13,"InappropriateMessage","","We received a TLS message that isn\'t valid right now. …",46,null],[12,"expect_types","pliantdb_local::core::networking::fabruic::error::TLSError","Which types we expected",47,null],[12,"got_type","","What type we received",47,null],[13,"InappropriateHandshakeMessage","pliantdb_local::core::networking::fabruic::error","We received a TLS handshake message that isn\'t valid …",46,null],[12,"expect_types","pliantdb_local::core::networking::fabruic::error::TLSError","Which handshake type we expected",48,null],[12,"got_type","","What handshake type we received",48,null],[13,"CorruptMessage","pliantdb_local::core::networking::fabruic::error","The peer sent us a syntactically incorrect TLS message.",46,null],[13,"CorruptMessagePayload","","The peer sent us a TLS message with invalid contents.",46,null],[13,"NoCertificatesPresented","","The peer didn\'t give us any certificates.",46,null],[13,"DecryptError","","We couldn\'t decrypt a message.  This is invariably fatal.",46,null],[13,"PeerIncompatibleError","","The peer doesn\'t support a protocol version/feature we …",46,null],[13,"PeerMisbehavedError","","The peer deviated from the standard TLS protocol. The …",46,null],[13,"AlertReceived","","We received a fatal alert.  This means the peer is …",46,null],[13,"WebPKIError","","The presented certificate chain is invalid.",46,null],[13,"InvalidSCT","","The presented SCT(s) were invalid.",46,null],[13,"General","","A catch-all error for unlikely errors.",46,null],[13,"FailedToGetCurrentTime","","We failed to figure out what time it currently is.",46,null],[13,"HandshakeNotComplete","","This function doesn\'t work until the TLS handshake is …",46,null],[13,"PeerSentOversizedRecord","","The peer sent an oversized record/fragment.",46,null],[13,"NoApplicationProtocol","","An incoming connection did not support any known …",46,null],[3,"ResolveError","","The error type for errors that get returned in the crate",null,null],[4,"WebPkiError","","An error that occurs during certificate validation or …",null,null],[13,"BadDER","","The encoding of some ASN.1 DER-encoded item is invalid.",49,null],[13,"BadDERTime","","The encoding of an ASN.1 DER-encoded time is invalid.",49,null],[13,"CAUsedAsEndEntity","","A CA certificate is veing used as an end-entity …",49,null],[13,"CertExpired","","The certificate is expired; i.e. the time it is being …",49,null],[13,"CertNotValidForName","","The certificate is not valid for the name it is being …",49,null],[13,"CertNotValidYet","","The certificate is not valid yet; i.e. the time it is …",49,null],[13,"EndEntityUsedAsCA","","An end-entity certificate is being used as a CA …",49,null],[13,"ExtensionValueInvalid","","An X.509 extension is invalid.",49,null],[13,"InvalidCertValidity","","The certificate validity period (notBefore, notAfter) is …",49,null],[13,"InvalidSignatureForPublicKey","","The signature is invalid for the given public key.",49,null],[13,"NameConstraintViolation","","The certificate violates one or more name constraints.",49,null],[13,"PathLenConstraintViolated","","The certificate violates one or more path length …",49,null],[13,"SignatureAlgorithmMismatch","","The algorithm in the TBSCertificate \\\"signature\\\" field of …",49,null],[13,"RequiredEKUNotFound","","The certificate is not valid for the Extended Key Usage …",49,null],[13,"UnknownIssuer","","A valid issuer for the certificate could not be found.",49,null],[13,"UnsupportedCertVersion","","The certificate is not a v3 X.509 certificate.",49,null],[13,"UnsupportedCriticalExtension","","The certificate contains an unsupported critical …",49,null],[13,"UnsupportedSignatureAlgorithmForPublicKey","","The signature\'s algorithm does not match the algorithm of …",49,null],[13,"UnsupportedSignatureAlgorithm","","The signature algorithm for a signature is not in the set …",49,null],[4,"X509Error","","An error that can occur while parsing or validating a …",null,null],[13,"Generic","","",50,null],[13,"InvalidVersion","","",50,null],[13,"InvalidSerial","","",50,null],[13,"InvalidAlgorithmIdentifier","","",50,null],[13,"InvalidX509Name","","",50,null],[13,"InvalidDate","","",50,null],[13,"InvalidSPKI","","",50,null],[13,"InvalidSubjectUID","","",50,null],[13,"InvalidIssuerUID","","",50,null],[13,"InvalidExtensions","","",50,null],[13,"InvalidAttributes","","",50,null],[13,"DuplicateExtensions","","",50,null],[13,"DuplicateAttributes","","",50,null],[13,"InvalidSignatureValue","","",50,null],[13,"InvalidTbsCertificate","","",50,null],[13,"InvalidUserCertificate","","",50,null],[13,"InvalidCertificate","","Top-level certificate structure is invalid",50,null],[13,"SignatureVerificationError","","",50,null],[13,"SignatureUnsupportedAlgorithm","","",50,null],[13,"Der","","",50,null],[13,"NomError","","",50,null],[4,"Err","","The <code>Err</code> enum indicates the parser was not successful",null,null],[13,"Incomplete","","There was not enough data",51,null],[13,"Error","","The parser had an error (recoverable)",51,null],[13,"Failure","","The parser had an unrecoverable error: we got to the right…",51,null],[5,"generate_self_signed","pliantdb_local::core::networking::fabruic","Generate a self signed certificate.",null,[[]]],[3,"Certificate","","A public Certificate. You can distribute it freely to …",null,null],[8,"Dangerous","","Gives read access to the [<code>PrivateKey</code>].",null,null],[10,"as_ref","","Returns a <code>&[u8]</code> to the [<code>PrivateKey</code>].",52,[[]]],[10,"into","","Returns a [<code>Vec<u8></code>] to the [<code>PrivateKey</code>].",52,[[],[["vec",3],["global",3],["u8",15]]]],[10,"serialize","","Serialize with [<code>serde</code>].",52,[[],["result",4]]],[3,"PrivateKey","","A private Key.",null,null],[4,"Error","","<code>Error</code> for this [<code>crate</code>].",null,null],[13,"ParseCertificate","","Failed to parse the given certificate.",36,null],[12,"certificate","pliantdb_local::core::networking::fabruic::Error","The certificate passed to <code>from_der</code>.",37,null],[12,"error","","The parsing error.",37,null],[13,"DanglingCertificate","pliantdb_local::core::networking::fabruic","Data passed to generate <code>Certificate</code> with <code>from_der</code> found …",36,null],[12,"certificate","pliantdb_local::core::networking::fabruic::Error","The certificate passed to <code>from_der</code>.",38,null],[12,"dangling","","The dangling bytes.",38,null],[13,"ExpiredCertificate","pliantdb_local::core::networking::fabruic","<code>Certificate</code> has expired.",36,null],[13,"DomainCertificate","","<code>Certificate</code> is missing a domain name.",36,null],[13,"ParsePrivateKey","","Failed to parse the given private key.",36,null],[13,"ParseAddress","","Parsing a <code>SocketAddr</code> from a [<code>str</code>] failed.",36,null],[13,"Certificate","","Returned by <code>Endpoint</code> when failing to parse the given …",36,null],[13,"PrivateKey","","Returned by <code>Endpoint</code> when failing to parse the given …",36,null],[13,"InvalidKeyPair","","Returned by <code>Endpoint</code> when failing to pair the given …",36,null],[13,"InvalidCertificate","","Returned by <code>Endpoint</code> when failing to add the given …",36,null],[13,"BindSocket","","Returned by <code>Endpoint</code> when failing to bind the socket on …",36,null],[13,"Resolve","","Failed to resolve domain to IP address.",36,null],[13,"NoIp","","Found no IP address for that domain.",36,null],[13,"LocalAddress","","Returned by <code>Endpoint::local_address</code> when failing to …",36,null],[13,"AlreadyClosed","","Attempting to close something that is already closed.",36,null],[13,"ConnectConfig","","Returned by <code>Endpoint::connect</code> if configuration needed to …",36,null],[13,"Connecting","","Returned by <code>Connecting::accept</code> if connecting to the peer …",36,null],[13,"ReceiveStream","","Returned by <code>Connection</code> <code>Stream</code> when receiving a new stream …",36,null],[13,"OpenStream","","Returned by <code>Connection::open_stream</code> if opening a stream …",36,null],[13,"Write","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to write into …",36,null],[13,"Finish","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to finish a …",36,null],[13,"Send","","Returned by <code>Sender::send</code> if the stream was closed by …",36,null],[13,"Serialize","","Returned by <code>Sender::send</code> if <code>serialization</code> failed.",36,null],[13,"Read","","Returned by <code>Receiver::close</code> if <code>Receiver</code> failed to read …",36,null],[13,"Deserialize","","Returned by <code>Receiver::finish</code> if <code>Receiver</code> failed to …",36,null],[13,"NoType","","Returned by <code>Incoming::type</code> if the peer closed the stream …",36,null],[6,"Result","","<code>Result</code> type for this [<code>crate</code>].",null,null],[3,"Builder","","Holding configuration for [<code>Builder</code>] to build [<code>Endpoint</code>].",null,null],[3,"Connecting","","Represent\'s an intermediate state to build a [<code>Connection</code>].",null,null],[3,"Connection","","Represents an open connection. Receives [<code>Incoming</code>] …",null,null],[3,"Endpoint","","Represents a socket using the QUIC protocol to …",null,null],[3,"Incoming","","An intermediate state to define which type to accept in …",null,null],[3,"Receiver","","Used to receive data from a stream.",null,null],[3,"Sender","","Used to send data to a stream.",null,null],[0,"schema","pliantdb_local::core","Types for defining database schema.",null,null],[0,"collection","pliantdb_local::core::schema","Types for defining a <code>Collection</code>.",null,null],[3,"Id","pliantdb_local::core::schema::collection","A unique collection id. Choose collection names that …",null,null],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_id","","The <code>Id</code> of this collection.",53,[[],["id",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",53,[[["schematic",3]]]],[0,"view","pliantdb_local::core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb_local::core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb_local::core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",54,null],[12,"key","","The key used to index the View.",54,null],[12,"value","","An associated value stored in the view.",54,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",55,null],[12,"key","","The key used to index the View.",55,null],[12,"value","","An associated value stored in the view.",55,null],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",56,null],[12,"key","","The key used to index the View.",56,null],[12,"value","","An associated value stored in the view.",56,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",57,null],[12,"value","","The value generated by the <code>View</code>",57,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",58,[[],[["result",4],["cow",4],["error",3]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",58,[[],[["error",3],["result",4]]]],[4,"Error","pliantdb_local::core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",59,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",59,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",59,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",60,null],[16,"Key","","The key for this view.",60,null],[16,"Value","","An associated type that can be stored with each entry in …",60,null],[10,"version","","The version of the view. Changing this value will cause …",60,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",60,[[],[["cow",4],["str",15]]]],[10,"map","","The map function for this view. This function is …",60,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","The reduce function for this view. If …",60,[[["bool",15]],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",61,null],[13,"Borrowed","","a borrowed value",61,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",62,[[],["id",3]]],[10,"version","","Wraps [<code>View::version</code>]",62,[[],["u64",15]]],[10,"name","","Wraps [<code>View::name</code>]",62,[[],[["cow",4],["str",15]]]],[10,"map","","Wraps [<code>View::map</code>]",62,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",62,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",58,[[],[["result",4],["cow",4],["error",3]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",58,[[],[["error",3],["result",4]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",54,null],[12,"key","","The key used to index the View.",54,null],[12,"value","","An associated value stored in the view.",54,null],[3,"Id","pliantdb_local::core::schema","The unique Id of a [<code>Schema</code>]. Primarily used to try to …",null,null],[8,"Schema","","Defines a group of collections that are stored into a …",null,null],[10,"schema_id","","Returns the unique [<code>Id</code>] for this schema.",63,[[],["id",3]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",63,[[["schematic",3]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",63,[[],["schematic",3]]],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",58,[[],[["result",4],["cow",4],["error",3]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",58,[[],[["error",3],["result",4]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",54,null],[12,"key","","The key used to index the View.",54,null],[12,"value","","An associated value stored in the view.",54,null],[3,"Schematic","","A collection of defined collections and views.",null,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",62,[[],["id",3]]],[10,"version","","Wraps [<code>View::version</code>]",62,[[],["u64",15]]],[10,"name","","Wraps [<code>View::name</code>]",62,[[],[["cow",4],["str",15]]]],[10,"map","","Wraps [<code>View::map</code>]",62,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",62,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",60,null],[16,"Key","","The key for this view.",60,null],[16,"Value","","An associated type that can be stored with each entry in …",60,null],[10,"version","","The version of the view. Changing this value will cause …",60,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",60,[[],[["cow",4],["str",15]]]],[10,"map","","The map function for this view. This function is …",60,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","The reduce function for this view. If …",60,[[["bool",15]],[["result",4],["error",4]]]],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_id","","The <code>Id</code> of this collection.",53,[[],["id",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",53,[[["schematic",3]]]],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",61,null],[13,"Borrowed","","a borrowed value",61,null],[4,"Error","","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",59,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",59,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",59,null],[0,"transaction","pliantdb_local::core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb_local::core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",64,null],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",65,null],[12,"command","","The command being performed.",65,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",66,null],[12,"contents","pliantdb_local::core::transaction::Command","The initial contents of the document.",67,null],[13,"Update","pliantdb_local::core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",66,null],[12,"header","pliantdb_local::core::transaction::Command","The current header of the <code>Document</code>.",68,null],[12,"contents","","The new contents to store within the <code>Document</code>.",68,null],[13,"Delete","pliantdb_local::core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",66,null],[12,"header","pliantdb_local::core::transaction::Command","The current header of the <code>Document</code>.",69,null],[4,"OperationResult","pliantdb_local::core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",70,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",70,null],[12,"collection","pliantdb_local::core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",71,null],[12,"header","","The header of the updated <code>Document</code>.",71,null],[13,"DocumentDeleted","pliantdb_local::core::transaction","A <code>Document</code> was deleted.",70,null],[12,"collection","pliantdb_local::core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",72,null],[12,"id","","The id of the deleted <code>Document</code>.",72,null],[3,"Executed","pliantdb_local::core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",73,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",73,null],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",74,null],[12,"id","","The id of the changed <code>Document</code>.",74,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",74,null],[4,"Error","pliantdb_local::core","an enumeration of errors that this crate can produce",null,null],[13,"Storage","","An error from interacting with local storage.",75,null],[13,"Server","","An error from interacting with a server.",75,null],[13,"Transport","","An error occurred from the QUIC transport layer.",75,null],[13,"Websocket","","An error occurred from the websocket transport layer.",75,null],[13,"Networking","","An error occurred from networking.",75,null],[13,"Io","","An error occurred from IO.",75,null],[13,"Configuration","","An error occurred with the provided configuration options.",75,null],[13,"Client","","An error occurred inside of the client.",75,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",75,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",75,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",75,null],[0,"test_util","","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb_local::core::test_util","",null,null],[12,"value","","",76,null],[12,"category","","",76,null],[12,"parent_id","","",76,null],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",77,null],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"ConnectionTest","","",null,null],[13,"StoreRetrieveUpdate","","",78,null],[13,"NotFound","","",78,null],[13,"Conflict","","",78,null],[13,"BadUpdate","","",78,null],[13,"NoUpdate","","",78,null],[13,"GetMultiple","","",78,null],[13,"ListTransactions","","",78,null],[13,"ViewQuery","","",78,null],[13,"UnassociatedCollection","","",78,null],[13,"ViewUpdate","","",78,null],[13,"ViewAccessPolicies","","",78,null],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[14,"define_connection_test_suite","pliantdb_local::core","Creates a test suite that tests methods available on […",null,null],[4,"Error","pliantdb_local","Errors that can occur from interacting with storage.",null,null],[13,"Sled","","An error occurred interacting with <code>sled</code>.",79,null],[13,"InternalSerialization","","An error occurred serializing the underlying database …",79,null],[13,"Serialization","","An error occurred serializing the contents of a <code>Document</code> …",79,null],[13,"InternalCommunication","","An internal error occurred while waiting for a message.",79,null],[13,"View","","An error occurred while executing a view",79,null],[13,"Core","","An internal error occurred while waiting for a message.",79,null],[13,"Other","","An internal error occurred while waiting for a message.",79,null],[3,"Storage","","A local, file-based database.",null,null],[12,"schema","","The [<code>Schematic</code>] of <code>DB</code>.",80,null],[11,"from","pliantdb_local::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","pliantdb_local","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"init","","",79,[[],["usize",15]]],[11,"deref","","",79,[[["usize",15]]]],[11,"deref_mut","","",79,[[["usize",15]]]],[11,"drop","","",79,[[["usize",15]]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"init","","",80,[[],["usize",15]]],[11,"deref","","",80,[[["usize",15]]]],[11,"deref_mut","","",80,[[["usize",15]]]],[11,"drop","","",80,[[["usize",15]]]],[11,"from","pliantdb_local::backup","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","pliantdb_local::core::connection","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"init","","",81,[[],["usize",15]]],[11,"deref","","",81,[[["usize",15]]]],[11,"deref_mut","","",81,[[["usize",15]]]],[11,"drop","","",81,[[["usize",15]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","pliantdb_local::core::document","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"equivalent","","",11,[[],["bool",15]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"equivalent","","",13,[[],["bool",15]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","pliantdb_local::core::networking","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[],["usize",15]]],[11,"deref","","",17,[[["usize",15]]]],[11,"deref_mut","","",17,[[["usize",15]]]],[11,"drop","","",17,[[["usize",15]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[],["usize",15]]],[11,"deref","","",19,[[["usize",15]]]],[11,"deref_mut","","",19,[[["usize",15]]]],[11,"drop","","",19,[[["usize",15]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[],["usize",15]]],[11,"deref","","",26,[[["usize",15]]]],[11,"deref_mut","","",26,[[["usize",15]]]],[11,"drop","","",26,[[["usize",15]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[],["usize",15]]],[11,"deref","","",27,[[["usize",15]]]],[11,"deref_mut","","",27,[[["usize",15]]]],[11,"drop","","",27,[[["usize",15]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[],["usize",15]]],[11,"deref","","",31,[[["usize",15]]]],[11,"deref_mut","","",31,[[["usize",15]]]],[11,"drop","","",31,[[["usize",15]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[],["usize",15]]],[11,"deref","","",32,[[["usize",15]]]],[11,"deref_mut","","",32,[[["usize",15]]]],[11,"drop","","",32,[[["usize",15]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[],["usize",15]]],[11,"deref","","",34,[[["usize",15]]]],[11,"deref_mut","","",34,[[["usize",15]]]],[11,"drop","","",34,[[["usize",15]]]],[11,"from","pliantdb_local::core::networking::fabruic","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[],["usize",15]]],[11,"deref","","",36,[[["usize",15]]]],[11,"deref_mut","","",36,[[["usize",15]]]],[11,"drop","","",36,[[["usize",15]]]],[11,"from","pliantdb_local::core::networking::fabruic::error","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[],["usize",15]]],[11,"deref","","",39,[[["usize",15]]]],[11,"deref_mut","","",39,[[["usize",15]]]],[11,"drop","","",39,[[["usize",15]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_string","","",82,[[],["string",3]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"init","","",82,[[],["usize",15]]],[11,"deref","","",82,[[["usize",15]]]],[11,"deref_mut","","",82,[[["usize",15]]]],[11,"drop","","",82,[[["usize",15]]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"equivalent","","",83,[[],["bool",15]]],[11,"init","","",83,[[],["usize",15]]],[11,"deref","","",83,[[["usize",15]]]],[11,"deref_mut","","",83,[[["usize",15]]]],[11,"drop","","",83,[[["usize",15]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[],["usize",15]]],[11,"deref","","",40,[[["usize",15]]]],[11,"deref_mut","","",40,[[["usize",15]]]],[11,"drop","","",40,[[["usize",15]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"equivalent","","",41,[[],["bool",15]]],[11,"init","","",41,[[],["usize",15]]],[11,"deref","","",41,[[["usize",15]]]],[11,"deref_mut","","",41,[[["usize",15]]]],[11,"drop","","",41,[[["usize",15]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"equivalent","","",42,[[],["bool",15]]],[11,"init","","",42,[[],["usize",15]]],[11,"deref","","",42,[[["usize",15]]]],[11,"deref_mut","","",42,[[["usize",15]]]],[11,"drop","","",42,[[["usize",15]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[],["usize",15]]],[11,"deref","","",43,[[["usize",15]]]],[11,"deref_mut","","",43,[[["usize",15]]]],[11,"drop","","",43,[[["usize",15]]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"to_string","","",84,[[],["string",3]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"init","","",84,[[],["usize",15]]],[11,"deref","","",84,[[["usize",15]]]],[11,"deref_mut","","",84,[[["usize",15]]]],[11,"drop","","",84,[[["usize",15]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"equivalent","","",44,[[],["bool",15]]],[11,"init","","",44,[[],["usize",15]]],[11,"deref","","",44,[[["usize",15]]]],[11,"deref_mut","","",44,[[["usize",15]]]],[11,"drop","","",44,[[["usize",15]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"equivalent","","",45,[[],["bool",15]]],[11,"init","","",45,[[],["usize",15]]],[11,"deref","","",45,[[["usize",15]]]],[11,"deref_mut","","",45,[[["usize",15]]]],[11,"drop","","",45,[[["usize",15]]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"to_string","","",85,[[],["string",3]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"init","","",85,[[],["usize",15]]],[11,"deref","","",85,[[["usize",15]]]],[11,"deref_mut","","",85,[[["usize",15]]]],[11,"drop","","",85,[[["usize",15]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[],["usize",15]]],[11,"deref","","",46,[[["usize",15]]]],[11,"deref_mut","","",46,[[["usize",15]]]],[11,"drop","","",46,[[["usize",15]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"to_string","","",86,[[],["string",3]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"init","","",86,[[],["usize",15]]],[11,"deref","","",86,[[["usize",15]]]],[11,"deref_mut","","",86,[[["usize",15]]]],[11,"drop","","",86,[[["usize",15]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[],["usize",15]]],[11,"deref","","",49,[[["usize",15]]]],[11,"deref_mut","","",49,[[["usize",15]]]],[11,"drop","","",49,[[["usize",15]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[],["usize",15]]],[11,"deref","","",50,[[["usize",15]]]],[11,"deref_mut","","",50,[[["usize",15]]]],[11,"drop","","",50,[[["usize",15]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"equivalent","","",51,[[],["bool",15]]],[11,"init","","",51,[[],["usize",15]]],[11,"deref","","",51,[[["usize",15]]]],[11,"deref_mut","","",51,[[["usize",15]]]],[11,"drop","","",51,[[["usize",15]]]],[11,"from","pliantdb_local::core::networking::fabruic","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"as_bits","","",87,[[],["bitslice",3]]],[11,"vzip","","",87,[[]]],[11,"equivalent","","",87,[[],["bool",15]]],[11,"init","","",87,[[],["usize",15]]],[11,"deref","","",87,[[["usize",15]]]],[11,"deref_mut","","",87,[[["usize",15]]]],[11,"drop","","",87,[[["usize",15]]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"equivalent","","",88,[[],["bool",15]]],[11,"init","","",88,[[],["usize",15]]],[11,"deref","","",88,[[["usize",15]]]],[11,"deref_mut","","",88,[[["usize",15]]]],[11,"drop","","",88,[[["usize",15]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"init","","",89,[[],["usize",15]]],[11,"deref","","",89,[[["usize",15]]]],[11,"deref_mut","","",89,[[["usize",15]]]],[11,"drop","","",89,[[["usize",15]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"init","","",90,[[],["usize",15]]],[11,"deref","","",90,[[["usize",15]]]],[11,"deref_mut","","",90,[[["usize",15]]]],[11,"drop","","",90,[[["usize",15]]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"init","","",91,[[],["usize",15]]],[11,"deref","","",91,[[["usize",15]]]],[11,"deref_mut","","",91,[[["usize",15]]]],[11,"drop","","",91,[[["usize",15]]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"init","","",92,[[],["usize",15]]],[11,"deref","","",92,[[["usize",15]]]],[11,"deref_mut","","",92,[[["usize",15]]]],[11,"drop","","",92,[[["usize",15]]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"init","","",93,[[],["usize",15]]],[11,"deref","","",93,[[["usize",15]]]],[11,"deref_mut","","",93,[[["usize",15]]]],[11,"drop","","",93,[[["usize",15]]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"try_poll_next","","",94,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"vzip","","",94,[[]]],[11,"init","","",94,[[],["usize",15]]],[11,"deref","","",94,[[["usize",15]]]],[11,"deref_mut","","",94,[[["usize",15]]]],[11,"drop","","",94,[[["usize",15]]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"init","","",95,[[],["usize",15]]],[11,"deref","","",95,[[["usize",15]]]],[11,"deref_mut","","",95,[[["usize",15]]]],[11,"drop","","",95,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema::collection","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"to_string","","",96,[[],["string",3]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"equivalent","","",96,[[],["bool",15]]],[11,"init","","",96,[[],["usize",15]]],[11,"deref","","",96,[[["usize",15]]]],[11,"deref_mut","","",96,[[["usize",15]]]],[11,"drop","","",96,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[],["usize",15]]],[11,"deref","","",54,[[["usize",15]]]],[11,"deref_mut","","",54,[[["usize",15]]]],[11,"drop","","",54,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema::view::map","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[],["usize",15]]],[11,"deref","","",55,[[["usize",15]]]],[11,"deref_mut","","",55,[[["usize",15]]]],[11,"drop","","",55,[[["usize",15]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[],["usize",15]]],[11,"deref","","",56,[[["usize",15]]]],[11,"deref_mut","","",56,[[["usize",15]]]],[11,"drop","","",56,[[["usize",15]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"init","","",57,[[],["usize",15]]],[11,"deref","","",57,[[["usize",15]]]],[11,"deref_mut","","",57,[[["usize",15]]]],[11,"drop","","",57,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[],["usize",15]]],[11,"deref","","",59,[[["usize",15]]]],[11,"deref_mut","","",59,[[["usize",15]]]],[11,"drop","","",59,[[["usize",15]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"as_bits","","",61,[[],["bitslice",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[],["usize",15]]],[11,"deref","","",61,[[["usize",15]]]],[11,"deref_mut","","",61,[[["usize",15]]]],[11,"drop","","",61,[[["usize",15]]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"to_string","","",97,[[],["string",3]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"equivalent","","",97,[[],["bool",15]]],[11,"init","","",97,[[],["usize",15]]],[11,"deref","","",97,[[["usize",15]]]],[11,"deref_mut","","",97,[[["usize",15]]]],[11,"drop","","",97,[[["usize",15]]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"init","","",98,[[],["usize",15]]],[11,"deref","","",98,[[["usize",15]]]],[11,"deref_mut","","",98,[[["usize",15]]]],[11,"drop","","",98,[[["usize",15]]]],[11,"from","pliantdb_local::core::transaction","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"init","","",64,[[],["usize",15]]],[11,"deref","","",64,[[["usize",15]]]],[11,"deref_mut","","",64,[[["usize",15]]]],[11,"drop","","",64,[[["usize",15]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[],["usize",15]]],[11,"deref","","",65,[[["usize",15]]]],[11,"deref_mut","","",65,[[["usize",15]]]],[11,"drop","","",65,[[["usize",15]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"init","","",66,[[],["usize",15]]],[11,"deref","","",66,[[["usize",15]]]],[11,"deref_mut","","",66,[[["usize",15]]]],[11,"drop","","",66,[[["usize",15]]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"init","","",70,[[],["usize",15]]],[11,"deref","","",70,[[["usize",15]]]],[11,"deref_mut","","",70,[[["usize",15]]]],[11,"drop","","",70,[[["usize",15]]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"init","","",73,[[],["usize",15]]],[11,"deref","","",73,[[["usize",15]]]],[11,"deref_mut","","",73,[[["usize",15]]]],[11,"drop","","",73,[[["usize",15]]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"init","","",74,[[],["usize",15]]],[11,"deref","","",74,[[["usize",15]]]],[11,"deref_mut","","",74,[[["usize",15]]]],[11,"drop","","",74,[[["usize",15]]]],[11,"from","pliantdb_local::core","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"to_string","","",75,[[],["string",3]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"init","","",75,[[],["usize",15]]],[11,"deref","","",75,[[["usize",15]]]],[11,"deref_mut","","",75,[[["usize",15]]]],[11,"drop","","",75,[[["usize",15]]]],[11,"from","pliantdb_local::core::test_util","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"schema_id","","",76,[[],["id",3]]],[11,"define_collections","","",76,[[["schematic",3]]]],[11,"vzip","","",76,[[]]],[11,"init","","",76,[[],["usize",15]]],[11,"deref","","",76,[[["usize",15]]]],[11,"deref_mut","","",76,[[["usize",15]]]],[11,"drop","","",76,[[["usize",15]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"collection","","",99,[[],["id",3]]],[11,"version","","",99,[[],["u64",15]]],[11,"name","","",99,[[],[["cow",4],["str",15]]]],[11,"map","","",99,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",99,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"vzip","","",99,[[]]],[11,"init","","",99,[[],["usize",15]]],[11,"deref","","",99,[[["usize",15]]]],[11,"deref_mut","","",99,[[["usize",15]]]],[11,"drop","","",99,[[["usize",15]]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"collection","","",100,[[],["id",3]]],[11,"version","","",100,[[],["u64",15]]],[11,"name","","",100,[[],[["cow",4],["str",15]]]],[11,"map","","",100,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",100,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"vzip","","",100,[[]]],[11,"init","","",100,[[],["usize",15]]],[11,"deref","","",100,[[["usize",15]]]],[11,"deref_mut","","",100,[[["usize",15]]]],[11,"drop","","",100,[[["usize",15]]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"collection","","",101,[[],["id",3]]],[11,"version","","",101,[[],["u64",15]]],[11,"name","","",101,[[],[["cow",4],["str",15]]]],[11,"map","","",101,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",101,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"vzip","","",101,[[]]],[11,"init","","",101,[[],["usize",15]]],[11,"deref","","",101,[[["usize",15]]]],[11,"deref_mut","","",101,[[["usize",15]]]],[11,"drop","","",101,[[["usize",15]]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"collection","","",102,[[],["id",3]]],[11,"version","","",102,[[],["u64",15]]],[11,"name","","",102,[[],[["cow",4],["str",15]]]],[11,"map","","",102,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",102,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"vzip","","",102,[[]]],[11,"init","","",102,[[],["usize",15]]],[11,"deref","","",102,[[["usize",15]]]],[11,"deref_mut","","",102,[[["usize",15]]]],[11,"drop","","",102,[[["usize",15]]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"init","","",103,[[],["usize",15]]],[11,"deref","","",103,[[["usize",15]]]],[11,"deref_mut","","",103,[[["usize",15]]]],[11,"drop","","",103,[[["usize",15]]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"init","","",77,[[],["usize",15]]],[11,"deref","","",77,[[["usize",15]]]],[11,"deref_mut","","",77,[[["usize",15]]]],[11,"drop","","",77,[[["usize",15]]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"schema_id","","",104,[[],["id",3]]],[11,"define_collections","","",104,[[["schematic",3]]]],[11,"vzip","","",104,[[]]],[11,"init","","",104,[[],["usize",15]]],[11,"deref","","",104,[[["usize",15]]]],[11,"deref_mut","","",104,[[["usize",15]]]],[11,"drop","","",104,[[["usize",15]]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"schema_id","","",105,[[],["id",3]]],[11,"define_collections","","",105,[[["schematic",3]]]],[11,"vzip","","",105,[[]]],[11,"init","","",105,[[],["usize",15]]],[11,"deref","","",105,[[["usize",15]]]],[11,"deref_mut","","",105,[[["usize",15]]]],[11,"drop","","",105,[[["usize",15]]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"schema_id","","",106,[[],["id",3]]],[11,"define_collections","","",106,[[["schematic",3]]]],[11,"vzip","","",106,[[]]],[11,"init","","",106,[[],["usize",15]]],[11,"deref","","",106,[[["usize",15]]]],[11,"deref_mut","","",106,[[["usize",15]]]],[11,"drop","","",106,[[["usize",15]]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"init","","",78,[[],["usize",15]]],[11,"deref","","",78,[[["usize",15]]]],[11,"deref_mut","","",78,[[["usize",15]]]],[11,"drop","","",78,[[["usize",15]]]],[11,"description","pliantdb_local::core::networking::fabruic::error","",83,[[],["str",15]]],[11,"description","","",82,[[],["str",15]]],[11,"cause","","",82,[[],[["option",4],["error",8]]]],[11,"source","","",82,[[],[["option",4],["error",8]]]],[11,"eq","","",83,[[["addrparseerror",3]],["bool",15]]],[11,"ne","","",83,[[["addrparseerror",3]],["bool",15]]],[11,"fmt","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",83,[[],["addrparseerror",3]]],[11,"fmt","","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",82,[[["intoinnererror",3]],["error",3]]],[11,"from","","Converts an [<code>ErrorKind</code>] into an [<code>Error</code>].",82,[[["errorkind",4]],["error",3]]],[11,"from","","Converts a [<code>NulError</code>] into a [<code>io::Error</code>].",82,[[["nulerror",3]],["error",3]]],[11,"fmt","pliantdb_local::core::document","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema::view::map","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::connection","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::document","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema::collection","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema::view::map","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::connection","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::document","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema::view::map","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema::collection","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","pliantdb_local::core::schema","",97,[[]]],[11,"hash","pliantdb_local::core::schema::collection","",96,[[]]],[11,"version","pliantdb_local::core::test_util","",99,[[],["u64",15]]],[11,"name","","",99,[[],[["cow",4],["str",15]]]],[11,"map","","",99,[[["document",3]],[["option",4],["result",4],["error",4]]]],[11,"reduce","","",99,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",102,[[],["u64",15]]],[11,"name","","",102,[[],[["cow",4],["str",15]]]],[11,"map","","",102,[[["document",3]],[["error",4],["option",4],["result",4]]]],[11,"version","","",100,[[],["u64",15]]],[11,"name","","",100,[[],[["cow",4],["str",15]]]],[11,"map","","",100,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",100,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",101,[[],["u64",15]]],[11,"name","","",101,[[],[["cow",4],["str",15]]]],[11,"map","","",101,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",101,[[["bool",15]],[["result",4],["error",4]]]],[11,"from","pliantdb_local::core::schema::collection","",96,[[["string",3]],["id",3]]],[11,"from","pliantdb_local::core::schema","",61,[[],["serializablevalue",4]]],[11,"from","pliantdb_local::core","",75,[[["error",3]],["error",4]]],[11,"from","pliantdb_local::core::schema","",97,[[["str",15]],["id",3]]],[11,"from","","",59,[[["error",3]],["error",4]]],[11,"from","pliantdb_local::core::schema::collection","",96,[[["str",15]],["id",3]]],[11,"serialize","pliantdb_local::core::document","",12,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",73,[[],["result",4]]],[11,"serialize","pliantdb_local::core","",75,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",19,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",66,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",30,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema::view::map","",56,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",32,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","pliantdb_local::core::connection","",10,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",65,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",14,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",64,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",27,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema::collection","",96,[[],["result",4]]],[11,"serialize","pliantdb_local::core::document","",13,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",97,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",74,[[],["result",4]]],[11,"serialize","pliantdb_local::core::test_util","",76,[[],["result",4]]],[11,"serialize","pliantdb_local::core::document","",11,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",70,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",34,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","pliantdb_local::core::connection","",9,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",26,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema::view::map","",57,[[],["result",4]]],[11,"as_ref","pliantdb_local::core::schema::collection","",96,[[],["str",15]]],[11,"as_ref","pliantdb_local::core::schema","",97,[[],["str",15]]],[11,"as_ref","pliantdb_local::core::test_util","",77,[[],["path",3]]],[11,"as_ref","pliantdb_local::core::schema","",61,[[]]],[11,"source","","",59,[[],[["option",4],["error",8]]]],[11,"default","pliantdb_local::core::transaction","",64,[[],["transaction",3]]],[11,"default","pliantdb_local::core::schema","",98,[[],["schematic",3]]],[11,"default","pliantdb_local::core::test_util","",76,[[],["basic",3]]],[11,"collection_id","","",76,[[],["id",3]]],[11,"define_views","","",76,[[["schematic",3]]]],[11,"collection_id","","",105,[[],["id",3]]],[11,"define_views","","",105,[[["schematic",3]]]],[11,"collection_id","","",106,[[],["id",3]]],[11,"define_views","","",106,[[["schematic",3]]]],[11,"collection_id","","",104,[[],["id",3]]],[11,"define_views","","",104,[[["schematic",3]]]],[11,"clone","pliantdb_local::core::transaction","",64,[[],["transaction",3]]],[11,"clone","pliantdb_local::core::document","",13,[[],["revision",3]]],[11,"clone","pliantdb_local::core::schema::view::map","",56,[[],["serialized",3]]],[11,"clone","pliantdb_local::core::networking","",15,[[],["request",4]]],[11,"clone","pliantdb_local::core::document","",11,[[],["header",3]]],[11,"clone","pliantdb_local::core::schema::collection","",96,[[],["id",3]]],[11,"clone","pliantdb_local::core::connection","",10,[[],["accesspolicy",4]]],[11,"clone","","",9,[[],["querykey",4]]],[11,"clone","pliantdb_local::core::transaction","",66,[[],["command",4]]],[11,"clone","","",73,[[],["executed",3]]],[11,"clone","pliantdb_local::core::networking","",19,[[],["databaserequest",4]]],[11,"clone","","",30,[[],["databaseresponse",4]]],[11,"clone","","",17,[[],["serverrequest",4]]],[11,"clone","pliantdb_local::core::schema::view::map","",57,[[],["mappedvalue",3]]],[11,"clone","pliantdb_local::core::document","",12,[[],["document",3]]],[11,"clone","pliantdb_local::core::networking","",14,[[],["payload",3]]],[11,"clone","pliantdb_local::core::transaction","",65,[[],["operation",3]]],[11,"clone","","",70,[[],["operationresult",4]]],[11,"clone","pliantdb_local::core::networking","",34,[[],["error",4]]],[11,"clone","","",26,[[],["response",4]]],[11,"clone","","",31,[[],["mappeddocument",3]]],[11,"clone","pliantdb_local::core::test_util","",78,[[],["connectiontest",4]]],[11,"clone","pliantdb_local::core::schema","",97,[[],["id",3]]],[11,"clone","pliantdb_local::core::networking","",27,[[],["serverresponse",4]]],[11,"clone","pliantdb_local::core","",75,[[],["error",4]]],[11,"clone","pliantdb_local::core::networking","",32,[[],["database",3]]],[11,"clone","pliantdb_local::core::transaction","",74,[[],["changeddocument",3]]],[11,"drop","pliantdb_local::core::test_util","",77,[[]]],[11,"eq","","",76,[[["basic",3]],["bool",15]]],[11,"ne","","",76,[[["basic",3]],["bool",15]]],[11,"eq","pliantdb_local::core::schema","",54,[[["map",3]],["bool",15]]],[11,"ne","","",54,[[["map",3]],["bool",15]]],[11,"eq","pliantdb_local::core::schema::view::map","",57,[[["mappedvalue",3]],["bool",15]]],[11,"ne","","",57,[[["mappedvalue",3]],["bool",15]]],[11,"eq","pliantdb_local::core::schema::collection","",96,[[["id",3]],["bool",15]]],[11,"ne","","",96,[[["id",3]],["bool",15]]],[11,"eq","pliantdb_local::core::networking","",32,[[["database",3]],["bool",15]]],[11,"ne","","",32,[[["database",3]],["bool",15]]],[11,"eq","pliantdb_local::core::document","",11,[[["header",3]],["bool",15]]],[11,"ne","","",11,[[["header",3]],["bool",15]]],[11,"eq","pliantdb_local::core::schema","",97,[[["id",3]],["bool",15]]],[11,"ne","","",97,[[["id",3]],["bool",15]]],[11,"eq","pliantdb_local::core::document","",13,[[["revision",3]],["bool",15]]],[11,"ne","","",13,[[["revision",3]],["bool",15]]],[11,"deserialize","pliantdb_local::core::transaction","",64,[[],[["result",4],["transaction",3]]]],[11,"deserialize","pliantdb_local::core::networking","",14,[[],[["result",4],["payload",3]]]],[11,"deserialize","pliantdb_local::core::schema::view::map","",56,[[],[["result",4],["serialized",3]]]],[11,"deserialize","pliantdb_local::core::networking","",34,[[],[["error",4],["result",4]]]],[11,"deserialize","","",19,[[],[["result",4],["databaserequest",4]]]],[11,"deserialize","pliantdb_local::core::document","",12,[[],[["result",4],["document",3]]]],[11,"deserialize","pliantdb_local::core::networking","",31,[[],[["result",4],["mappeddocument",3]]]],[11,"deserialize","pliantdb_local::core::document","",11,[[],[["header",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::transaction","",70,[[],[["result",4],["operationresult",4]]]],[11,"deserialize","","",74,[[],[["result",4],["changeddocument",3]]]],[11,"deserialize","pliantdb_local::core::networking","",15,[[],[["result",4],["request",4]]]],[11,"deserialize","pliantdb_local::core::document","",13,[[],[["result",4],["revision",3]]]],[11,"deserialize","pliantdb_local::core::schema","",97,[[],[["id",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::transaction","",65,[[],[["result",4],["operation",3]]]],[11,"deserialize","","",73,[[],[["executed",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::connection","",10,[[],[["accesspolicy",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::networking","",32,[[],[["database",3],["result",4]]]],[11,"deserialize","","",27,[[],[["serverresponse",4],["result",4]]]],[11,"deserialize","","",26,[[],[["response",4],["result",4]]]],[11,"deserialize","pliantdb_local::core","",75,[[],[["result",4],["error",4]]]],[11,"deserialize","pliantdb_local::core::transaction","",66,[[],[["result",4],["command",4]]]],[11,"deserialize","pliantdb_local::core::networking","",17,[[],[["result",4],["serverrequest",4]]]],[11,"deserialize","","",30,[[],[["result",4],["databaseresponse",4]]]],[11,"deserialize","pliantdb_local::core::connection","",9,[[],[["result",4],["querykey",4]]]],[11,"deserialize","pliantdb_local::core::schema::collection","",96,[[],[["id",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::schema::view::map","",57,[[],[["result",4],["mappedvalue",3]]]],[11,"deserialize","pliantdb_local::core::test_util","",76,[[],[["result",4],["basic",3]]]],[11,"schema_id","","",103,[[],["id",3]]],[11,"define_collections","","",103,[[["schematic",3]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"is_terminated","","",91,[[],["bool",15]]],[11,"is_terminated","","",92,[[],["bool",15]]],[11,"zeroize","","",88,[[]]],[11,"deserialize","","",88,[[],[["privatekey",3],["result",4]]]],[11,"deserialize","","",87,[[],[["result",4],["certificate",3]]]],[11,"fmt","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","pliantdb_local::core::networking::fabruic","",88,[[["privatekey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",88,[[["privatekey",3]],["bool",15]]],[11,"le","","",88,[[["privatekey",3]],["bool",15]]],[11,"gt","","",88,[[["privatekey",3]],["bool",15]]],[11,"ge","","",88,[[["privatekey",3]],["bool",15]]],[11,"partial_cmp","","",87,[[["certificate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",87,[[["certificate",3]],["bool",15]]],[11,"le","","",87,[[["certificate",3]],["bool",15]]],[11,"gt","","",87,[[["certificate",3]],["bool",15]]],[11,"ge","","",87,[[["certificate",3]],["bool",15]]],[11,"poll_next","","",91,[[["pin",3],["connection",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",92,[[["pin",3],["endpoint",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",94,[[["context",3],["pin",3],["receiver",3]],[["poll",4],["option",4]]]],[11,"hash","","",87,[[]]],[11,"hash","","",88,[[]]],[11,"source","pliantdb_local::core::networking::fabruic::error","",39,[[],[["option",4],["error",8]]]],[11,"as_ref","pliantdb_local::core::networking::fabruic","",87,[[]]],[11,"default","","",89,[[],["builder",3]]],[11,"clone","","",87,[[],["certificate",3]]],[11,"clone","","",88,[[],["privatekey",3]]],[11,"clone","","",95,[[],["sender",3]]],[11,"clone","","",94,[[],["receiver",3]]],[11,"clone","","",91,[[],["connection",3]]],[11,"clone","","",92,[[],["endpoint",3]]],[11,"drop","","",88,[[]]],[11,"cmp","","",88,[[["privatekey",3]],["ordering",4]]],[11,"cmp","","",87,[[["certificate",3]],["ordering",4]]],[11,"serialize","","",87,[[],["result",4]]],[11,"serialize","","",88,[[],["result",4]]],[11,"eq","","",87,[[["certificate",3]],["bool",15]]],[11,"ne","","",87,[[["certificate",3]],["bool",15]]],[11,"eq","","",88,[[["privatekey",3]],["bool",15]]],[11,"ne","","",88,[[["privatekey",3]],["bool",15]]],[11,"as_ref","","",88,[[["privatekey",3]]]],[11,"into","","",88,[[["privatekey",3]],[["vec",3],["global",3],["u8",15]]]],[11,"serialize","","",88,[[["privatekey",3]],["result",4]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",46,[[],["tlserror",4]]],[11,"eq","","",46,[[["tlserror",4]],["bool",15]]],[11,"ne","","",46,[[["tlserror",4]],["bool",15]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",49,[[],["error",4]]],[11,"eq","","",49,[[["error",4]],["bool",15]]],[11,"fmt","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",85,[[],["keyrejected",3]]],[11,"fmt","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"cause","","",85,[[],[["option",4],["error",8]]]],[11,"description","","",85,[[],["str",15]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_error_kind","","",50,[[["errorkind",4]],["x509error",4]]],[11,"append","","",50,[[["errorkind",4],["x509error",4]],["x509error",4]]],[11,"from","","",51,[[["x509error",4]],[["err",4],["x509error",4]]]],[11,"from","","",50,[[["bererror",4]],["x509error",4]]],[11,"from","","",50,[[["errorkind",4]],["x509error",4]]],[11,"source","","",50,[[],[["option",4],["error",8]]]],[11,"eq","","",50,[[["x509error",4]],["bool",15]]],[11,"ne","","",50,[[["x509error",4]],["bool",15]]],[11,"from","","",51,[[["bererror",4]],[["err",4],["bererror",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",51,[[],["err",4]]],[11,"source","","",51,[[],[["option",4],["error",8]]]],[11,"eq","","",51,[[["err",4]],["bool",15]]],[11,"ne","","",51,[[["err",4]],["bool",15]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"description","","",40,[[],["str",15]]],[11,"cause","","",40,[[],[["option",4],["error",8]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",44,[[["readableerror",4]],["readerror",4]]],[11,"from","","",82,[[["writeerror",4]],["error",3]]],[11,"from","","",82,[[["readerror",4]],["error",3]]],[11,"source","","",45,[[],[["option",4],["error",8]]]],[11,"clone","","",45,[[],["writeerror",4]]],[11,"clone","","",44,[[],["readerror",4]]],[11,"eq","","",44,[[["readerror",4]],["bool",15]]],[11,"ne","","",44,[[["readerror",4]],["bool",15]]],[11,"eq","","",45,[[["writeerror",4]],["bool",15]]],[11,"ne","","",45,[[["writeerror",4]],["bool",15]]],[11,"fmt","","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",42,[[["error",3]],["connectionerror",4]]],[11,"from","","",42,[[["close",4]],["connectionerror",4]]],[11,"from","","",82,[[["connectionerror",4]],["error",3]]],[11,"clone","","",84,[[],["parseerror",3]]],[11,"clone","","",42,[[],["connectionerror",4]]],[11,"clone","","",41,[[],["connecterror",4]]],[11,"source","","",42,[[],[["option",4],["error",8]]]],[11,"source","","",41,[[],[["option",4],["error",8]]]],[11,"eq","","",42,[[["connectionerror",4]],["bool",15]]],[11,"ne","","",42,[[["connectionerror",4]],["bool",15]]],[11,"eq","","",41,[[["connecterror",4]],["bool",15]]],[11,"ne","","",41,[[["connecterror",4]],["bool",15]]],[11,"from","","",82,[[["error",3]],["error",3]]],[11,"from","","",82,[[["error",3]],["error",3]]],[11,"from","","",82,[[["elapsed",3]],["error",3]]],[11,"from","","",82,[[["joinerror",3]],["error",3]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",86,[[["string",3]],["resolveerror",3]]],[11,"from","","",86,[[["poisonerror",3]],["resolveerror",3]]],[11,"from","","",86,[[["error",3]],["resolveerror",3]]],[11,"from","","",82,[[["resolveerror",3]],["error",3]]],[11,"from","","",86,[[["resolveerrorkind",4]],["resolveerror",3]]],[11,"from","","",86,[[["protoerror",3]],["resolveerror",3]]],[11,"from","","",86,[[["str",15]],["resolveerror",3]]],[11,"should_retry","","",86,[[],["bool",15]]],[11,"attempted","","",86,[[],["bool",15]]],[11,"clone","","",86,[[],["resolveerror",3]]],[11,"from","","",82,[[["protoerror",3]],["error",3]]],[11,"from","","",82,[[["error",3]],["error",3]]],[11,"from","","",82,[[["asn1error",3]],["error",3]]],[11,"from","","",82,[[["error",4]],["error",3]]],[11,"from","pliantdb_local","",79,[[["error",4]]]],[11,"from","","",79,[[["error",6]]]],[11,"from","","",79,[[["error",3]]]],[11,"from","","",79,[[["recverror",4]]]],[11,"from","","",79,[[["error",4]]]],[11,"from","","",79,[[["error",4]]]],[11,"from","","",79,[[["error",3],["arc",3]]]],[11,"from","pliantdb_local::core","",75,[[["error",4]]]],[11,"clone","pliantdb_local::config","",0,[[],["configuration",3]]],[11,"clone","","",1,[[],["tasks",3]]],[11,"clone","","",2,[[],["views",3]]],[11,"clone","pliantdb_local","",80,[[]]],[11,"default","pliantdb_local::config","",0,[[],["configuration",3]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_local","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_local::backup","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_local","",79,[[["formatter",3]],["result",6]]],[11,"source","","",79,[[],[["option",4],["error",8]]]],[11,"apply_transaction","","",80,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"get","","",80,[[["u64",15]],[["pin",3],["box",3]]]],[11,"get_multiple","","",80,[[],[["box",3],["pin",3]]]],[11,"list_executed_transactions","","",80,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[11,"query","","",80,[[["option",4],["querykey",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[11,"query_with_docs","","",80,[[["option",4],["querykey",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[11,"reduce","","",80,[[["option",4],["querykey",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[11,"reduce_grouped","","",80,[[["option",4],["querykey",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[11,"last_transaction_id","","",80,[[],[["pin",3],["box",3]]]],[11,"clap","pliantdb_local::backup","",3,[[],["app",3]]],[11,"from_clap","","",3,[[["argmatches",3]]]],[11,"clap","","",4,[[],["app",3]]],[11,"from_clap","","",4,[[["argmatches",3]]]],[11,"augment_clap","","",3,[[["app",3]],["app",3]]],[11,"is_subcommand","","",3,[[],["bool",15]]],[11,"augment_clap","","",4,[[["app",3]],["app",3]]],[11,"from_subcommand","","",4,[[],["option",4]]],[11,"is_subcommand","","",4,[[],["bool",15]]],[11,"open_local","pliantdb_local","Opens a local file as a pliantdb.",80,[[["configuration",3],["path",3],["asref",8],["send",8]]]],[11,"for_each_in_view","","Iterate over each view entry matching <code>key</code>.",80,[[["fnmut",8],["option",4],["sync",8],["querykey",4],["send",8],["serialized",8],["accesspolicy",4]]]],[11,"for_each_view_entry","","Iterate over each view entry matching <code>key</code>.",80,[[["fnmut",8],["option",4],["send",8],["querykey",4],["accesspolicy",4],["sync",8]]]],[11,"get_from_collection_id","","Retrieves document <code>id</code> from the specified <code>collection</code>.",80,[[["id",3],["u64",15]]]],[11,"get_multiple_from_collection_id","","Retrieves document <code>id</code> from the specified <code>collection</code>.",80,[[["id",3]]]],[11,"reduce_in_view","","Reduce view <code>view_name</code>.",80,[[["option",4],["querykey",4],["accesspolicy",4],["str",15]]]],[11,"grouped_reduce_in_view","","Reduce view <code>view_name</code>, grouping by unique keys.",80,[[["option",4],["querykey",4],["accesspolicy",4],["str",15]]]],[11,"new","pliantdb_local::core::connection","Creates a new instance using <code>connection</code>.",81,[[],["collection",3]]],[11,"push","","Adds a new <code>Document<Cl></code> with the contents <code>item</code>.",81,[[]]],[11,"get","","Retrieves a <code>Document<Cl></code> with <code>id</code> from the connection.",81,[[["u64",15]]]],[11,"with_key","","Filters for entries in the view with <code>key</code>.",8,[[],["view",3]]],[11,"with_keys","","Filters for entries in the view with <code>keys</code>.",8,[[["vec",3],["global",3]],["view",3]]],[11,"with_key_range","","Filters for entries in the view with the range <code>keys</code>.",8,[[["range",3]],["view",3]]],[11,"with_access_policy","","Sets the access policy for queries.",8,[[["accesspolicy",4]],["view",3]]],[11,"query","","Executes the query and retrieves the results.",8,[[]]],[11,"query_with_docs","","Executes the query and retrieves the results with the …",8,[[]]],[11,"reduce","","Executes a reduce over the results of the query",8,[[]]],[11,"reduce_grouped","","Executes a reduce over the results of the query",8,[[]]],[11,"serialized","","Converts this key to a serialized format using the [<code>Key</code>] …",9,[[],[["error",4],["result",4],["querykey",4]]]],[11,"deserialized","","Deserializes the bytes into <code>K</code> via the [<code>Key</code>] trait.",9,[[],[["result",4],["error",4],["querykey",4]]]],[11,"new","pliantdb_local::core::document","Creates a new document with <code>contents</code>.",12,[[["id",3],["cow",4],["u64",15]],["document",3]]],[11,"with_contents","","Creates a new document with serialized bytes from <code>contents</code>…",12,[[["id",3],["u64",15]],[["document",3],["error",3],["result",4]]]],[11,"contents","","Retrieves <code>contents</code> through deserialization into the type <code>D</code>…",12,[[],[["result",4],["error",3]]]],[11,"set_contents","","Serializes and stores <code>contents</code> into this document.",12,[[],[["error",3],["result",4]]]],[11,"create_new_revision","","Creates a new revision.",12,[[["cow",4]],[["option",4],["document",3]]]],[11,"emit","","Creates a <code>Map</code> result with an empty key and value.",12,[[],["map",3]]],[11,"emit_key","","Creates a <code>Map</code> result with a <code>key</code> and an empty value.",12,[[],["map",3]]],[11,"emit_value","","Creates a <code>Map</code> result with <code>value</code> and an empty key.",12,[[],["map",3]]],[11,"emit_key_and_value","","Creates a <code>Map</code> result with a <code>key</code> and <code>value</code>.",12,[[],["map",3]]],[11,"to_owned","","Clone the document\'s data so that it\'s no longer borrowed …",12,[[],["document",3]]],[11,"new","","Creates the first revision for a document with the SHA256 …",13,[[],["revision",3]]],[11,"with_id","","Creates a revision with <code>id</code> for a document with the SHA256 …",13,[[["u32",15]],["revision",3]]],[11,"next_revision","","Creates the next revision in sequence with an updated …",13,[[],[["option",4],["revision",3]]]],[11,"deserialized","pliantdb_local::core::networking","Deserialize into a <code>MappedDocument</code>.",31,[[],[["mappeddocument",3],["error",4],["result",4]]]],[11,"new","pliantdb_local::core::networking::fabruic::error","Creates a new I/O error from a known kind of error as …",82,[[["errorkind",4]],["error",3]]],[11,"last_os_error","","Returns an error representing the last OS error which …",82,[[],["error",3]]],[11,"from_raw_os_error","","Creates a new instance of an [<code>Error</code>] from a particular OS …",82,[[["i32",15]],["error",3]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",82,[[],[["option",4],["i32",15]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this …",82,[[],[["option",4],["error",8]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by …",82,[[],[["error",8],["option",4]]]],[11,"into_inner","","Consumes the <code>Error</code>, returning its inner error (if any).",82,[[],[["box",3],["option",4]]]],[11,"kind","","Returns the corresponding [<code>ErrorKind</code>] for this error.",82,[[],["errorkind",4]]],[11,"description_","","The value returned from ::description()",85,[[],["str",15]]],[11,"kind","","Get the kind of the error",86,[[],["resolveerrorkind",4]]],[11,"from_response","","A conversion to determine if the response is an error",86,[[["dnsresponse",3],["bool",15]],[["dnsresponse",3],["resolveerror",3],["result",4]]]],[11,"is_incomplete","","Tests if the result is Incomplete",51,[[],["bool",15]]],[11,"map","","Applies the given function to the inner error",51,[[],["err",4]]],[11,"convert","","Automatically converts between errors if the underlying …",51,[[["err",4]],["err",4]]],[11,"map_input","","Maps <code>Err<(T, ErrorKind)></code> to <code>Err<(U, ErrorKind)></code> with the …",51,[[],["err",4]]],[11,"to_owned","","Obtaining ownership",51,[[],["err",4]]],[11,"to_owned","","Automatically converts between errors if the underlying …",51,[[],["err",4]]],[11,"from_der","pliantdb_local::core::networking::fabruic","Build [<code>Certificate</code>] from DER-format. This is not meant as …",87,[[["vec",3],["global",3],["u8",15]],[["result",4],["error",4],["certificate",3]]]],[11,"unchecked_from_der","","Build [<code>Certificate</code>] from DER-format. This skips the …",87,[[["vec",3],["global",3],["u8",15]],["certificate",3]]],[11,"from_der","","Build [<code>PrivateKey</code>] from DER-format. This is not meant as …",88,[[["vec",3],["global",3],["u8",15]],[["result",4],["privatekey",3],["error",4]]]],[11,"unchecked_from_der","","Build [<code>PrivateKey</code>] from DER-format. This skips the …",88,[[["vec",3],["global",3],["u8",15]],["privatekey",3]]],[11,"new","","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …",89,[[],["builder",3]]],[11,"set_address","","Set\'s the [<code>SocketAddr</code>]. Default is \\\"[::]:0\\\".",89,[[["socketaddr",4]],["builder",3]]],[11,"set_address_str","","Set\'s the [<code>SocketAddr</code>]. Default is \\\"[::]:0\\\".",89,[[["str",15]],[["builder",3],["result",4],["error",4]]]],[11,"add_ca","","Adds a [<code>Certificate</code>] as a certificate authority for client…",89,[[["certificate",3]],[["builder",3],["result",4],["error",4]]]],[11,"add_key_pair","","Add a [<code>Certificate</code>] and [<code>PrivateKey</code>] for the server. This …",89,[[["privatekey",3],["certificate",3]],[["builder",3],["result",4],["error",4]]]],[11,"set_protocols","","Set the application-layer protocols to accept, in order …",89,[[],["builder",3]]],[11,"build","","Consumes [<code>Builder</code>] to build [<code>Endpoint</code>]. Must be called …",89,[[],[["endpoint",3],["result",4]]]],[11,"protocol","","The negotiated application protocol. See …",90,[[]]],[11,"accept","","Accept the [<code>Connection</code>] with the given <code>T</code> as the type …",90,[[]]],[11,"open_stream","","Open a stream on this [<code>Connection</code>], allowing to send data …",91,[[]]],[11,"protocol","","The negotiated application protocol. See …",91,[[],[["vec",3],["option",4]]]],[11,"remote_address","","The peer\'s address. Clients may change addresses at will, …",91,[[],["socketaddr",4]]],[11,"close_incoming","","Prevents any new incoming streams. Already incoming …",91,[[]]],[11,"close","","Close the [<code>Connection</code>] immediately.",91,[[]]],[11,"builder","","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …",92,[[],["builder",3]]],[11,"new_client","","Simplified version of creating a client. See [<code>Builder</code>] …",92,[[["certificate",3]],[["endpoint",3],["error",4],["result",4]]]],[11,"new_server","","Simplified version of creating a server. See [<code>Builder</code>] …",92,[[["privatekey",3],["u16",15],["certificate",3]],[["endpoint",3],["error",4],["result",4]]]],[11,"connect","","Establish a new <code>Connection</code> to a client. The <code>domain</code> …",92,[[["socketaddr",4]],[["result",4],["error",4],["connecting",3]]]],[11,"connect_with","","Attempts to resolve the IP with the given domain name. …",92,[[["u16",15]]]],[11,"local_address","","Get the local [<code>SocketAddr</code>] the underlying socket is bound …",92,[[],[["socketaddr",4],["error",4],["result",4]]]],[11,"close","","Close all of this [<code>Endpoint</code>]\'s <code>Connection</code>s immediately …",92,[[]]],[11,"close_incoming","","Prevents any new incoming connections. Already incoming …",92,[[]]],[11,"wait_idle","","Wait for all <code>Connection</code>s to the [<code>Endpoint</code>] to be cleanly …",92,[[]]],[11,"type","","Returns the type information for that stream.",93,[[]]],[11,"accept","","Accept the incoming stream with the given types.",93,[[]]],[11,"finish","","Wait for the [<code>Receiver</code>] part of the stream to finish …",94,[[]]],[11,"close","","Close the [<code>Receiver</code>] immediately. To close a [<code>Receiver</code>] …",94,[[]]],[11,"send","","Send <code>data</code> into the stream.",95,[[],[["result",4],["error",4]]]],[11,"finish","","Shut down the [<code>Send</code>] part of the stream gracefully.",95,[[]]],[11,"close","","Close the [<code>Sender</code>] immediately.",95,[[]]],[11,"serialized","pliantdb_local::core::schema","Serializes this map.",54,[[],[["error",4],["result",4],["serialized",3]]]],[11,"new","","Creates a new Map entry for the document with id <code>source</code>.",54,[[["u64",15]],["map",3]]],[11,"deserialized","pliantdb_local::core::schema::view::map","Deserializes this map.",56,[[],[["map",3],["result",4],["error",4]]]],[11,"new","pliantdb_local::core::schema","Creates a new id.",97,[[],["id",3]]],[11,"define_collection","","Adds the collection <code>C</code> and its views.",98,[[]]],[11,"define_view","","Adds the view <code>V</code>.",98,[[]]],[11,"contains","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",98,[[],["bool",15]]],[11,"contains_collection_id","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",98,[[["id",3]],["bool",15]]],[11,"view_by_name","","Looks up a [<code>view::Serialized</code>] by name.",98,[[["str",15]],[["option",4],["serialized",8]]]],[11,"view","","Looks up a [<code>view::Serialized</code>] through the the type <code>V</code>.",98,[[],[["option",4],["serialized",8]]]],[11,"views","","Iterates over all registered views.",98,[[]]],[11,"views_in_collection","","Iterates over all views that belong to <code>collection</code>.",98,[[["id",3]],[["vec",3],["option",4]]]],[11,"push","pliantdb_local::core::transaction","Adds an operation to the transaction.",64,[[["operation",3]]]],[11,"to_owned","","Convert this structure to be free of borrows.",73,[[],["executed",3]]],[11,"new","pliantdb_local::core::test_util","",76,[[],["basic",3]]],[11,"with_category","","",76,[[],["basic",3]]],[11,"with_parent_id","","",76,[[["u64",15]],["basic",3]]],[11,"new","","",77,[[],["testdirectory",3]]],[11,"port","","",78,[[["u16",15]],["u16",15]]]],"p":[[3,"Configuration"],[3,"Tasks"],[3,"Views"],[3,"Cli"],[4,"Command"],[13,"Save"],[13,"Load"],[8,"Connection"],[3,"View"],[4,"QueryKey"],[4,"AccessPolicy"],[3,"Header"],[3,"Document"],[3,"Revision"],[3,"Payload"],[4,"Request"],[13,"Database"],[4,"ServerRequest"],[13,"DeleteDatabase"],[4,"DatabaseRequest"],[13,"Get"],[13,"GetMultiple"],[13,"Query"],[13,"Reduce"],[13,"ApplyTransaction"],[13,"ListExecutedTransactions"],[4,"Response"],[4,"ServerResponse"],[13,"DatabaseCreated"],[13,"DatabaseDeleted"],[4,"DatabaseResponse"],[3,"MappedDocument"],[3,"Database"],[8,"ServerConnection"],[4,"Error"],[13,"SchemaMismatch"],[4,"Error"],[13,"ParseCertificate"],[13,"DanglingCertificate"],[4,"ParseCertificate"],[4,"ErrorKind"],[4,"ConnectError"],[4,"ConnectionError"],[4,"EndpointError"],[4,"ReadError"],[4,"WriteError"],[4,"TLSError"],[13,"InappropriateMessage"],[13,"InappropriateHandshakeMessage"],[4,"WebPkiError"],[4,"X509Error"],[4,"Err"],[8,"Dangerous"],[8,"Collection"],[3,"Map"],[3,"MappedDocument"],[3,"Serialized"],[3,"MappedValue"],[8,"Key"],[4,"Error"],[8,"View"],[4,"SerializableValue"],[8,"Serialized"],[8,"Schema"],[3,"Transaction"],[3,"Operation"],[4,"Command"],[13,"Insert"],[13,"Update"],[13,"Delete"],[4,"OperationResult"],[13,"DocumentUpdated"],[13,"DocumentDeleted"],[3,"Executed"],[3,"ChangedDocument"],[4,"Error"],[3,"Basic"],[3,"TestDirectory"],[4,"ConnectionTest"],[4,"Error"],[3,"Storage"],[3,"Collection"],[3,"IoError"],[3,"AddrParseError"],[3,"ParseError"],[3,"KeyRejected"],[3,"ResolveError"],[3,"Certificate"],[3,"PrivateKey"],[3,"Builder"],[3,"Connecting"],[3,"Connection"],[3,"Endpoint"],[3,"Incoming"],[3,"Receiver"],[3,"Sender"],[3,"Id"],[3,"Id"],[3,"Schematic"],[3,"BasicCount"],[3,"BasicByParentId"],[3,"BasicByCategory"],[3,"BasicByBrokenParentId"],[3,"BasicSchema"],[3,"BasicCollectionWithNoViews"],[3,"BasicCollectionWithOnlyBrokenParentId"],[3,"UnassociatedCollection"]]},\
"pliantdb_server":{"doc":"The <code>PliantDB</code> Server.","i":[[0,"cli","pliantdb_server","Command-line interface for the server.",null,null],[0,"certificate","pliantdb_server::cli","Command-line interface for managing the root certificate.",null,null],[4,"Command","pliantdb_server::cli::certificate","Command to manage the server\'s certificates.",null,null],[13,"InstallSelfSigned","","Installs a self-signed certificate into the server. The …",0,null],[12,"server_name","pliantdb_server::cli::certificate::Command","The name of the server. If this server has a DNS name, …",1,null],[12,"overwrite","","If an existing certificate exists, an error will be …",1,null],[13,"Install","pliantdb_server::cli::certificate","Installs a X.509 certificate and associated private key …",0,null],[12,"private_key","pliantdb_server::cli::certificate::Command","A private key used to generate <code>certificate</code> in binary DER …",2,null],[12,"certificate","","The X.509 certificate in binary DER format.",2,null],[11,"execute","pliantdb_server::cli::certificate","Executes the command.",0,[[["server",3]]]],[0,"serve","pliantdb_server::cli","Command-line interface for hosting a server.",null,null],[3,"Serve","pliantdb_server::cli::serve","Execute the server",null,null],[12,"listen_on","","The bind address and port. Defaults to 5645",3,null],[11,"execute","","Starts the server.",3,[[["server",3]]]],[3,"Cli","pliantdb_server::cli","Command-line interface for <code>pliantdb server</code>.",null,null],[12,"server_data_directory","","The path to the directory where the server should store …",4,null],[12,"subcommand","","The command to execute.",4,null],[4,"Command","","Available commands for <code>pliantdb server</code>.",null,null],[13,"Certificate","","Manage the server\'s root certificate.",5,null],[13,"Serve","","Execute the server.",5,null],[11,"execute","","Executes the command.",5,[[["fn",8],["path",3],["send",8]]]],[0,"test_util","pliantdb_server","",null,null],[17,"BASIC_SERVER_NAME","pliantdb_server::test_util","",null,null],[5,"initialize_basic_server","","",null,[[["path",3]]]],[5,"basic_server_connection_tests","","",null,[[["serverconnection",8]]]],[3,"Configuration","pliantdb_server","Configuration options for <code>Server</code>",null,null],[12,"request_workers","","Number of simultaneous requests to be processed. Default …",6,null],[12,"storage","","Configuration options for individual databases.",6,null],[4,"Error","","An error occurred while interacting with a <code>Server</code>.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See …",7,null],[13,"DatabaseNotFound","","The database name given was not found.",7,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",7,null],[13,"Transport","","An error occurred from the QUIC transport layer.",7,null],[13,"Websocket","","An error occurred from the Websocket transport layer.",7,null],[13,"Io","","An error occurred from IO",7,null],[13,"Request","","An error occurred while processing a request",7,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",7,null],[12,"database_name","pliantdb_server::Error","The name of the database being accessed.",8,null],[12,"schema","","The schema provided for the database.",8,null],[12,"stored_schema","","The schema stored for the database.",8,null],[13,"SchemaAlreadyRegistered","pliantdb_server","The [<code>schema::Id</code>] returned has already been registered …",7,null],[13,"Core","","An error occurred from within the schema.",7,null],[13,"Storage","","An error occurred while interacting with a local database.",7,null],[3,"Server","","A <code>PliantDB</code> server.",null,null],[11,"from","pliantdb_server::cli::certificate","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","pliantdb_server::cli::serve","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","pliantdb_server::cli","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","pliantdb_server","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["error",3]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["error",6]]]],[11,"clone","","",9,[[],["server",3]]],[11,"default","","",6,[[]]],[11,"fmt","pliantdb_server::cli::certificate","",0,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_server::cli::serve","",3,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_server::cli","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_server","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"create_database","","",9,[[["id",3],["str",15]],[["box",3],["pin",3]]]],[11,"delete_database","","",9,[[["str",15]],[["box",3],["pin",3]]]],[11,"list_databases","","",9,[[],[["pin",3],["box",3]]]],[11,"list_available_schemas","","",9,[[],[["pin",3],["box",3]]]],[11,"clap","pliantdb_server::cli::certificate","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"clap","pliantdb_server::cli::serve","",3,[[],["app",3]]],[11,"from_clap","","",3,[[["argmatches",3]]]],[11,"clap","pliantdb_server::cli","",4,[[],["app",3]]],[11,"from_clap","","",4,[[["argmatches",3]]]],[11,"clap","","",5,[[],["app",3]]],[11,"from_clap","","",5,[[["argmatches",3]]]],[11,"augment_clap","pliantdb_server::cli::certificate","",0,[[["app",3]],["app",3]]],[11,"from_subcommand","","",0,[[],["option",4]]],[11,"is_subcommand","","",0,[[],["bool",15]]],[11,"augment_clap","pliantdb_server::cli::serve","",3,[[["app",3]],["app",3]]],[11,"is_subcommand","","",3,[[],["bool",15]]],[11,"augment_clap","pliantdb_server::cli","",4,[[["app",3]],["app",3]]],[11,"is_subcommand","","",4,[[],["bool",15]]],[11,"augment_clap","","",5,[[["app",3]],["app",3]]],[11,"from_subcommand","","",5,[[],["option",4]]],[11,"is_subcommand","","",5,[[],["bool",15]]],[11,"open","pliantdb_server","Creates or opens a [<code>Server</code>] with its data stored in …",9,[[["configuration",3],["path",3]]]],[11,"register_schema","","Registers a schema for use within the server.",9,[[]]],[11,"database","","Retrieves a database. This function only verifies that …",9,[[["str",15]]]],[11,"install_self_signed_certificate","","Installs an X.509 certificate used for general purpose …",9,[[["bool",15],["str",15]]]],[11,"install_certificate","","Installs an X.509 certificate used for general purpose …",9,[[["privatekey",3],["certificate",3]]]],[11,"certificate","","Returns the current certificate.",9,[[]]],[11,"listen_on","","Listens for incoming client connections. Does not return …",9,[[["u16",15]]]],[11,"listen_for_websockets_on","","Listens for <code>WebSocket</code> traffic on <code>port</code>.",9,[[["send",8],["tosocketaddrs",8],["sync",8]]]],[11,"shutdown","","Shuts the server down. If a <code>timeout</code> is provided, the …",9,[[["option",4],["duration",3]]]]],"p":[[4,"Command"],[13,"InstallSelfSigned"],[13,"Install"],[3,"Serve"],[3,"Cli"],[4,"Command"],[3,"Configuration"],[4,"Error"],[13,"SchemaMismatch"],[3,"Server"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);
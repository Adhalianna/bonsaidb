var searchIndex = JSON.parse('{\
"circulate":{"doc":"Lightweight async <code>PubSub</code> framework.","i":[[3,"Message","circulate","A <code>PubSub</code> message.",null,null],[12,"topic","","The topic of the message.",0,null],[12,"payload","","The payload of the message.",0,null],[11,"new","","Creates a new message.",0,[[["string",3],["into",8]],[["error",3],["result",4]]]],[11,"payload","","Deserialize the payload as <code>P</code> using CBOR.",0,[[],[["deserialize",8],["error",3],["result",4]]]],[3,"Relay","","Manages subscriptions and notifications for <code>PubSub</code>.",null,null],[11,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",1,[[]]],[11,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",1,[[["string",3],["into",8],["send",8]]]],[11,"publish_message","","Publishes a message to all subscribers of its topic.",1,[[["message",3]]]],[3,"Subscriber","","A subscriber for [<code>Message</code>]s published to subscribed …",null,null],[11,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",2,[[["string",3],["into",8],["send",8]]]],[11,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",2,[[["str",15]]]],[11,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",2,[[],["receiver",3]]],[11,"id","","Returns the unique ID of the subscriber.",2,[[],["u64",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",0,[[],["message",3]]],[11,"clone","","",1,[[],["relay",3]]],[11,"clone","","",2,[[],["subscriber",3]]],[11,"default","","",1,[[],["relay",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"Message"],[3,"Relay"],[3,"Subscriber"]]},\
"pliantdb":{"doc":"A programmable document database inspired by <code>CouchDB</code> …","i":[[0,"cli","pliantdb","<code>PliantDB</code> command line tools.",null,null],[4,"Command","pliantdb::cli","The command line interface for <code>pliantdb</code>.",null,null],[13,"LocalBackup","","Back up or restore a local database",0,null],[13,"Server","","Execute a <code>PliantDB</code> server command.",0,null],[11,"execute","","Executes the command.",0,[[["fn",8],["send",8]]]],[3,"Url","pliantdb::client::url","A parsed URL record.",null,null],[3,"ParseOptions","","Full configuration for the URL parser.",null,null],[3,"UrlQuery","","Implementation detail of <code>Url::query_pairs_mut</code>. Typically …",null,null],[5,"parse","pliantdb::client::url::form_urlencoded","Convert a byte string in the …",null,[[],["parse",3]]],[3,"Parse","","The return type of <code>parse()</code>.",null,null],[3,"ParseIntoOwned","","Like <code>Parse</code>, but yields pairs of <code>String</code> instead of pairs …",null,null],[5,"byte_serialize","","The <code>application/x-www-form-urlencoded</code> byte serializer.",null,[[],["byteserialize",3]]],[3,"ByteSerialize","","Return value of <code>byte_serialize()</code>.",null,null],[3,"Serializer","","The <code>application/x-www-form-urlencoded</code> serializer.",null,null],[8,"Target","","",null,null],[10,"as_mut_string","","",1,[[],["string",3]]],[10,"finish","","",1,[[]]],[16,"Finished","","",1,null],[6,"EncodingOverride","","",null,null],[4,"Host","pliantdb::client::url","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as \'.\' dot-separated labels. Non-ASCII …",2,null],[13,"Ipv4","","An IPv4 address. <code>Url::host_str</code> returns the serialization …",2,null],[13,"Ipv6","","An IPv6 address. <code>Url::host_str</code> returns the serialization …",2,null],[3,"OpaqueOrigin","","Opaque identifier for URLs that have file or other schemes",null,null],[4,"Origin","","The origin of an URL",null,null],[13,"Opaque","","A globally unique identifier",3,null],[13,"Tuple","","Consists of the URL\'s scheme, host and port",3,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",4,null],[13,"IdnaError","","",4,null],[13,"InvalidPort","","",4,null],[13,"InvalidIpv4Address","","",4,null],[13,"InvalidIpv6Address","","",4,null],[13,"InvalidDomainCharacter","","",4,null],[13,"RelativeUrlWithoutBase","","",4,null],[13,"RelativeUrlWithCannotBeABaseBase","","",4,null],[13,"SetHostOnCannotBeABaseUrl","","",4,null],[13,"Overflow","","",4,null],[4,"SyntaxViolation","","Non-fatal syntax violations that can occur during parsing.",null,null],[13,"Backslash","","",5,null],[13,"C0SpaceIgnored","","",5,null],[13,"EmbeddedCredentials","","",5,null],[13,"ExpectedDoubleSlash","","",5,null],[13,"ExpectedFileDoubleSlash","","",5,null],[13,"FileWithHostAndWindowsDrive","","",5,null],[13,"NonUrlCodePoint","","",5,null],[13,"NullInFragment","","",5,null],[13,"PercentDecode","","",5,null],[13,"TabOrNewlineIgnored","","",5,null],[13,"UnencodedAtSign","","",5,null],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is …",null,null],[4,"Position","","Indicates a position within a URL based on its components.",null,null],[13,"BeforeScheme","","",6,null],[13,"AfterScheme","","",6,null],[13,"BeforeUsername","","",6,null],[13,"AfterUsername","","",6,null],[13,"BeforePassword","","",6,null],[13,"AfterPassword","","",6,null],[13,"BeforeHost","","",6,null],[13,"AfterHost","","",6,null],[13,"BeforePort","","",6,null],[13,"AfterPort","","",6,null],[13,"BeforePath","","",6,null],[13,"AfterPath","","",6,null],[13,"BeforeQuery","","",6,null],[13,"AfterQuery","","",6,null],[13,"BeforeFragment","","",6,null],[13,"AfterFragment","","",6,null],[6,"EncodingOverride","","",null,null],[3,"Client","pliantdb::client","Client for connecting to a <code>PliantDB</code> server.",null,null],[3,"RemoteDatabase","","A database on a remote server.",null,null],[4,"Error","","Errors related to working with <code>Client</code>",null,null],[13,"WebSocket","","An error occurred from the WebSocket transport layer.",7,null],[13,"Network","","An error occurred from networking.",7,null],[13,"InvalidUrl","","An invalid Url was provided.",7,null],[13,"Disconnected","","The connection was interrupted.",7,null],[13,"Core","","The connection was interrupted.",7,null],[0,"connection","pliantdb::core","Types for interacting with a database.",null,null],[8,"Connection","pliantdb::core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",8,[[],["collection",3]]],[11,"insert","","Inserts a newly created document into the connected […",8,[[["vec",3],["global",3],["u8",15]],[["pin",3],["box",3]]]],[11,"update","","Updates an existing document in the connected […",8,[[["document",3]],[["pin",3],["box",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",8,[[["u64",15]],[["pin",3],["box",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",8,[[],[["box",3],["pin",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",8,[[["document",3]],[["pin",3],["box",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",8,[[],["view",3]]],[10,"query","","Queries for view entries matching [<code>View</code>].",8,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",8,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",8,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",8,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",8,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",8,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",8,[[],[["pin",3],["box",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",9,null],[12,"access_policy","","The view\'s data access policy. The default value is […",9,null],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",10,null],[13,"Range","","Matches all entires with keys in the range provided.",10,null],[13,"Multiple","","Matches all entries that have keys that are included in …",10,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",11,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",11,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",11,null],[0,"document","pliantdb::core","Types for interacting with <code>Document</code>s.",null,null],[3,"Header","pliantdb::core::document","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",12,null],[12,"revision","","The revision of the stored document.",12,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",13,null],[12,"header","","The header of the document, which contains the id and …",13,null],[12,"contents","","The serialized bytes of the stored item.",13,null],[3,"Revision","","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",14,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",14,null],[0,"limits","pliantdb::core","Limits used within <code>PliantDB</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb::core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"networking","pliantdb::core","Types for networked communications.",null,null],[3,"Payload","pliantdb::core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",15,null],[12,"wrapped","","The wrapped payload.",15,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",16,null],[13,"Database","","A database-related request.",16,null],[12,"database","pliantdb::core::networking::Request","The name of the database.",17,null],[12,"request","","The request made to the database.",17,null],[4,"ServerRequest","pliantdb::core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",18,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",18,null],[12,"name","pliantdb::core::networking::ServerRequest","The name of the database to delete.",19,null],[13,"ListDatabases","pliantdb::core::networking","Lists all databases.",18,null],[13,"ListAvailableSchemas","","Lists available schemas.",18,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",20,null],[12,"collection","pliantdb::core::networking::DatabaseRequest","The collection of the document.",21,null],[12,"id","","The id of the document.",21,null],[13,"GetMultiple","pliantdb::core::networking","Retrieve multiple documents.",20,null],[12,"collection","pliantdb::core::networking::DatabaseRequest","The collection of the documents.",22,null],[12,"ids","","The ids of the documents.",22,null],[13,"Query","pliantdb::core::networking","Queries a view.",20,null],[12,"view","pliantdb::core::networking::DatabaseRequest","The name of the view.",23,null],[12,"key","","The filter for the view.",23,null],[12,"access_policy","","The access policy for the query.",23,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",23,null],[13,"Reduce","pliantdb::core::networking","Reduces a view.",20,null],[12,"view","pliantdb::core::networking::DatabaseRequest","The name of the view.",24,null],[12,"key","","The filter for the view.",24,null],[12,"access_policy","","The access policy for the query.",24,null],[12,"grouped","","Whether to return a single value or values grouped by …",24,null],[13,"ApplyTransaction","pliantdb::core::networking","Applies a transaction.",20,null],[12,"transaction","pliantdb::core::networking::DatabaseRequest","The trasnaction to apply.",25,null],[13,"ListExecutedTransactions","pliantdb::core::networking","Lists executed transactions.",20,null],[12,"starting_id","pliantdb::core::networking::DatabaseRequest","The starting transaction id.",26,null],[12,"result_limit","","The maximum number of results.",26,null],[13,"LastTransactionId","pliantdb::core::networking","Queries the last transaction id.",20,null],[13,"CreateSubscriber","","Creates a <code>PubSub</code> <code>Subscriber</code>",20,null],[13,"Publish","","Publishes a <code>PubSub</code> message.",20,null],[13,"SubscribeTo","","Subscribes <code>subscriber_id</code> to messages for <code>topic</code>.",20,null],[12,"subscriber_id","pliantdb::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",27,null],[12,"topic","","The topic to subscribe to.",27,null],[13,"UnsubscribeFrom","pliantdb::core::networking","Unsubscribes <code>subscriber_id</code> from messages for <code>topic</code>.",20,null],[12,"subscriber_id","pliantdb::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",28,null],[12,"topic","","The topic to unsubscribe from.",28,null],[13,"UnregisterSubscriber","pliantdb::core::networking","Unregisters the subscriber.",20,null],[12,"subscriber_id","pliantdb::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",29,null],[13,"ExecuteKeyOperation","pliantdb::core::networking","Excutes a key-value store operation.",20,null],[4,"Response","","A response from a server.",null,null],[13,"Ok","","A request succeded but provided no output.",30,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",30,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",30,null],[13,"Error","","An error occurred processing a request.",30,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",31,null],[12,"name","pliantdb::core::networking::ServerResponse","The name of the database to create.",32,null],[13,"DatabaseDeleted","pliantdb::core::networking","A database with <code>name</code> was successfully removed.",31,null],[12,"name","pliantdb::core::networking::ServerResponse","The name of the database to remove.",33,null],[13,"Databases","pliantdb::core::networking","A list of available databases.",31,null],[13,"AvailableSchemas","","A list of availble schemas.",31,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",34,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",34,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",34,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",34,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",34,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",34,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",34,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",34,null],[13,"SubscriberCreated","","A new <code>PubSub</code> subscriber was created.",34,null],[12,"subscriber_id","pliantdb::core::networking::DatabaseResponse","The unique ID of the subscriber.",35,null],[13,"MessageReceived","pliantdb::core::networking","A PubSub message was received.",34,null],[12,"subscriber_id","pliantdb::core::networking::DatabaseResponse","The ID of the subscriber receiving the message.",36,null],[12,"message","","The message received.",36,null],[13,"KvOutput","pliantdb::core::networking","Output from a [<code>KeyOperation</code>] being executed.",34,null],[3,"MappedDocument","","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",37,null],[12,"value","","The serialized value.",37,null],[12,"source","","The source document.",37,null],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",38,null],[12,"schema","","The schema defining the database.",38,null],[8,"ServerConnection","","Functions for interacting with a <code>PliantDB</code> server.",null,null],[10,"create_database","","Creates a database named <code>name</code> using the [<code>SchemaName</code>] …",39,[[["str",15],["schemaname",3]],[["pin",3],["box",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",39,[[["str",15]],[["pin",3],["box",3]]]],[10,"list_databases","","Lists the databases on this server.",39,[[],[["pin",3],["box",3]]]],[10,"list_available_schemas","","Lists the [<code>SchemaName</code>]s on this server.",39,[[],[["pin",3],["box",3]]]],[4,"Error","","A networking error.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See […",40,null],[13,"DatabaseNotFound","","The database name given was not found.",40,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",40,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",40,null],[13,"Disconnected","","The connection was interrupted.",40,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",40,null],[12,"database_name","pliantdb::core::networking::Error","The name of the database being accessed.",41,null],[12,"schema","","The schema provided for the database.",41,null],[12,"stored_schema","","The schema stored for the database.",41,null],[13,"SchemaAlreadyRegistered","pliantdb::core::networking","The [<code>SchemaName</code>] returned has already been registered …",40,null],[13,"SchemaNotRegistered","","The [<code>SchemaName</code>] requested was not registered with this …",40,null],[0,"dangerous","pliantdb::core::networking::fabruic","Security-sensitive settings are hidden behind these …",null,null],[8,"Builder","pliantdb::core::networking::fabruic::dangerous","Security-sensitive configuration for [<code>Builder</code>].",null,null],[10,"set_root_certificates","","Set [<code>Certificate</code>]s to be added into the root certificate …",42,[[]]],[8,"PrivateKey","","Gives read access to the [<code>PrivateKey</code>].",null,null],[10,"as_ref","","Returns a <code>&[u8]</code> to the [<code>PrivateKey</code>].",43,[[]]],[10,"into","","Returns a [<code>Vec<u8></code>] to the [<code>PrivateKey</code>].",43,[[],[["vec",3],["global",3],["u8",15]]]],[10,"serialize","","Serialize with [<code>serde</code>].",43,[[],["result",4]]],[8,"KeyPair","","Gives serialization access to [<code>KeyPair</code>].",null,null],[10,"serialize","","Serialize with [<code>serde</code>].",44,[[],["result",4]]],[0,"error","pliantdb::core::networking::fabruic","<code>Error</code> for this [<code>crate</code>].",null,null],[3,"Certificate","pliantdb::core::networking::fabruic::error","Error constructing <code>Certificate</code> with <code>Certificate::from_der</code>.",null,null],[12,"error","","The error.",45,null],[12,"certificate","","The bytes used to build the <code>Certificate</code>.",45,null],[4,"CertificateError","","Error constructing <code>Certificate</code> with <code>Certificate::from_der</code>.",null,null],[13,"WebPki","","<code>Error</code> returned by [<code>webpki</code>].",46,null],[13,"X509","","<code>Error</code> returned by [<code>x509_parser</code>].",46,null],[13,"Dangling","","Bytes passed contain uncorrelated bytes.",46,null],[13,"Expired","","<code>Certificate</code> has expired.",46,null],[13,"Domain","","<code>Certificate</code> is missing a domain name.",46,null],[3,"PrivateKey","","Failed to parse the given private key with …",null,null],[12,"0","","",47,null],[3,"KeyPair","","Failed to pair given <code>CertificateChain</code> and <code>PrivateKey</code> with …",null,null],[3,"CertificateChain","","Failed to verify the certificate chain with …",null,null],[3,"AlreadyClosed","","Attempting to close something that is already closed.",null,null],[3,"Builder","","Error binding socket during construction of <code>Endpoint</code> with …",null,null],[12,"error","","The error binding <code>Endpoint</code>.",48,null],[12,"builder","","Recovered <code>Builder</code> for re-use.",48,null],[4,"Connect","","Error connecting to a server with <code>Endpoint::connect</code>.",null,null],[13,"MultipleDomains","","The passed <code>Certificate</code> has multiple domains, this is not …",49,null],[13,"ParseUrl","","Failed to parse URL.",49,null],[13,"Domain","","URL didn\'t contain a domain.",49,null],[13,"Port","","URL didn\'t contain a port.",49,null],[13,"ParseDomain","","Failed to parse domain.",49,null],[13,"TrustDns","","Failed to resolve domain with <code>trust-dns</code>.",49,null],[13,"StdDns","","Failed to resolve domain with <code>ToSocketAddrs</code>.",49,null],[13,"NoIp","","Found no IP address for that domain.",49,null],[13,"Config","","Configuration needed to connect to a server is faulty.",49,null],[3,"Connection","","Error receiving connection from peer with <code>Stream</code> on from …",null,null],[12,"0","","",50,null],[3,"Connecting","","Error completing connection with peer with <code>Incoming::type</code> …",null,null],[12,"0","","",51,null],[4,"Stream","","Error opening a new stream to peer with …",null,null],[13,"Open","","Opening a new stream with <code>Connection::open_stream</code> failed.",52,null],[13,"Sender","","Sending the type information to peer failed.",52,null],[4,"Incoming","","Error receiving type information from <code>Incoming</code> stream.",null,null],[13,"Receiver","","Failed receiving type information from <code>Incoming</code> stream.",53,null],[13,"Closed","","<code>Incoming</code> was closed before type information could be …",53,null],[4,"Receiver","","Error receiving a message from a <code>Receiver</code>.",null,null],[13,"Read","","Failed to read from a <code>Receiver</code>.",54,null],[13,"Deserialize","","Failed to <code>Deserialize</code> a message from a <code>Receiver</code>.",54,null],[4,"Sender","","Error sending a message to a <code>Sender</code>.",null,null],[13,"Serialize","","Failed to <code>Serialize</code> a message for a <code>Sender</code>.",55,null],[13,"Write","","Failed to write to a <code>Sender</code>.",55,null],[13,"Closed","","[<code>Sender</code>] is closed.",55,null],[4,"ErrorKind","","The kind of error that can be produced during a …",null,null],[13,"Io","","If the error stems from the reader/writer that is being …",56,null],[13,"InvalidUtf8Encoding","","Returned if the deserializer attempts to deserialize a …",56,null],[13,"InvalidBoolEncoding","","Returned if the deserializer attempts to deserialize a …",56,null],[13,"InvalidCharEncoding","","Returned if the deserializer attempts to deserialize a …",56,null],[13,"InvalidTagEncoding","","Returned if the deserializer attempts to deserialize the …",56,null],[13,"DeserializeAnyNotSupported","","Serde has a deserialize_any method that lets the format …",56,null],[13,"SizeLimit","","If (de)serializing a message takes more than the provided …",56,null],[13,"SequenceMustHaveLength","","Bincode can not encode sequences of unknown length (like …",56,null],[13,"Custom","","A custom error message from Serde.",56,null],[4,"ConnectError","","Errors in the parameters being used to create a new …",null,null],[13,"EndpointStopping","","The endpoint can no longer create new connections",57,null],[13,"TooManyConnections","","The number of active connections on the local endpoint is …",57,null],[13,"InvalidDnsName","","The domain name supplied was malformed",57,null],[13,"Config","","The transport configuration was invalid",57,null],[13,"InvalidRemoteAddress","","The remote [<code>SocketAddr</code>] supplied was malformed",57,null],[4,"ConnectionError","","Reasons why a connection might be lost",null,null],[13,"VersionMismatch","","The peer doesn\'t implement any supported version",58,null],[13,"TransportError","","The peer violated the QUIC specification as understood by …",58,null],[13,"ConnectionClosed","","The peer\'s QUIC stack aborted the connection automatically",58,null],[13,"ApplicationClosed","","The peer closed the connection",58,null],[13,"Reset","","The peer is unable to continue processing this …",58,null],[13,"TimedOut","","Communication with the peer has lapsed for longer than …",58,null],[13,"LocallyClosed","","The local application closed the connection",58,null],[4,"ReadError","","Errors that arise from reading from a stream.",null,null],[13,"Reset","","The peer abandoned transmitting data on this stream.",59,null],[13,"ConnectionClosed","","The connection was closed.",59,null],[13,"UnknownStream","","The stream has already been stopped, finished, or reset",59,null],[13,"IllegalOrderedRead","","Attempted an ordered read following an unordered read",59,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",59,null],[4,"WriteError","","Errors that arise from writing to a stream",null,null],[13,"Stopped","","The peer is no longer accepting data on this stream.",60,null],[13,"ConnectionClosed","","The connection was closed.",60,null],[13,"UnknownStream","","The stream has already been finished or reset",60,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",60,null],[4,"Error","","An error that occurs during certificate validation or …",null,null],[13,"BadDER","","The encoding of some ASN.1 DER-encoded item is invalid.",61,null],[13,"BadDERTime","","The encoding of an ASN.1 DER-encoded time is invalid.",61,null],[13,"CAUsedAsEndEntity","","A CA certificate is veing used as an end-entity …",61,null],[13,"CertExpired","","The certificate is expired; i.e. the time it is being …",61,null],[13,"CertNotValidForName","","The certificate is not valid for the name it is being …",61,null],[13,"CertNotValidYet","","The certificate is not valid yet; i.e. the time it is …",61,null],[13,"EndEntityUsedAsCA","","An end-entity certificate is being used as a CA …",61,null],[13,"ExtensionValueInvalid","","An X.509 extension is invalid.",61,null],[13,"InvalidCertValidity","","The certificate validity period (notBefore, notAfter) is …",61,null],[13,"InvalidSignatureForPublicKey","","The signature is invalid for the given public key.",61,null],[13,"NameConstraintViolation","","The certificate violates one or more name constraints.",61,null],[13,"PathLenConstraintViolated","","The certificate violates one or more path length …",61,null],[13,"SignatureAlgorithmMismatch","","The algorithm in the TBSCertificate \\\"signature\\\" field of …",61,null],[13,"RequiredEKUNotFound","","The certificate is not valid for the Extended Key Usage …",61,null],[13,"UnknownIssuer","","A valid issuer for the certificate could not be found.",61,null],[13,"UnsupportedCertVersion","","The certificate is not a v3 X.509 certificate.",61,null],[13,"UnsupportedCriticalExtension","","The certificate contains an unsupported critical …",61,null],[13,"UnsupportedSignatureAlgorithmForPublicKey","","The signature\'s algorithm does not match the algorithm of …",61,null],[13,"UnsupportedSignatureAlgorithm","","The signature algorithm for a signature is not in the set …",61,null],[3,"ResolveError","","The error type for errors that get returned in the crate",null,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",4,null],[13,"IdnaError","","",4,null],[13,"InvalidPort","","",4,null],[13,"InvalidIpv4Address","","",4,null],[13,"InvalidIpv6Address","","",4,null],[13,"InvalidDomainCharacter","","",4,null],[13,"RelativeUrlWithoutBase","","",4,null],[13,"RelativeUrlWithCannotBeABaseBase","","",4,null],[13,"SetHostOnCannotBeABaseUrl","","",4,null],[13,"Overflow","","",4,null],[4,"X509Error","","An error that can occur while parsing or validating a …",null,null],[13,"Generic","","",62,null],[13,"InvalidVersion","","",62,null],[13,"InvalidSerial","","",62,null],[13,"InvalidAlgorithmIdentifier","","",62,null],[13,"InvalidX509Name","","",62,null],[13,"InvalidDate","","",62,null],[13,"InvalidSPKI","","",62,null],[13,"InvalidSubjectUID","","",62,null],[13,"InvalidIssuerUID","","",62,null],[13,"InvalidExtensions","","",62,null],[13,"InvalidAttributes","","",62,null],[13,"DuplicateExtensions","","",62,null],[13,"DuplicateAttributes","","",62,null],[13,"InvalidSignatureValue","","",62,null],[13,"InvalidTbsCertificate","","",62,null],[13,"InvalidUserCertificate","","",62,null],[13,"InvalidCertificate","","Top-level certificate structure is invalid",62,null],[13,"SignatureVerificationError","","",62,null],[13,"SignatureUnsupportedAlgorithm","","",62,null],[13,"Der","","",62,null],[13,"NomError","","",62,null],[4,"Err","","The <code>Err</code> enum indicates the parser was not successful",null,null],[13,"Incomplete","","There was not enough data",63,null],[13,"Error","","The parser had an error (recoverable)",63,null],[13,"Failure","","The parser had an unrecoverable error: we got to the right…",63,null],[3,"Builder","pliantdb::core::networking::fabruic","Helper for constructing an [<code>Endpoint</code>].",null,null],[3,"Connecting","","Represent\'s an intermediate state to build a [<code>Connection</code>].",null,null],[3,"Connection","","Represents an open connection. Receives [<code>Incoming</code>] …",null,null],[3,"Endpoint","","Represents a socket using the QUIC protocol to …",null,null],[3,"Incoming","","An intermediate state to define which type to accept in …",null,null],[3,"Receiver","","Used to receive data from a stream. Will stop receiving …",null,null],[3,"Sender","","Used to send data to a stream.",null,null],[4,"Store","","Configuration option for [<code>Builder::set_store</code>].",null,null],[13,"Empty","","Empty root certificate store.",64,null],[13,"Os","","Uses the OS root certificate store, see …",64,null],[13,"Embedded","","Use an embedded root certificate store, see <code>webpki-roots</code>.",64,null],[3,"Certificate","","A public certificate. You can distribute it freely to …",null,null],[3,"CertificateChain","","A public [<code>Certificate</code>] chain, used to prese",null,null],[3,"KeyPair","","A key-pair, consisting of a [<code>CertificateChain</code>] and […",null,null],[3,"PrivateKey","","A private key.",null,null],[0,"schema","pliantdb::core","Types for defining database schema.",null,null],[0,"view","pliantdb::core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb::core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb::core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",65,null],[12,"key","","The key used to index the View.",65,null],[12,"value","","An associated value stored in the view.",65,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",66,null],[12,"key","","The key used to index the View.",66,null],[12,"value","","An associated value stored in the view.",66,null],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",67,null],[12,"key","","The key used to index the View.",67,null],[12,"value","","An associated value stored in the view.",67,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",68,null],[12,"value","","The value generated by the <code>View</code>",68,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",69,[[],[["cow",4],["error",3],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",69,[[],[["result",4],["error",3]]]],[8,"EnumKey","","Adds <code>Key</code> support to an enum. Requires implementing …",null,null],[4,"Error","pliantdb::core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",70,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",70,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",70,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",71,null],[16,"Key","","The key for this view.",71,null],[16,"Value","","An associated type that can be stored with each entry in …",71,null],[10,"version","","The version of the view. Changing this value will cause …",71,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",71,[[],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"view_name","","The namespaced name of the view.",71,[[],[["invalidnameerror",3],["result",4],["viewname",3]]]],[10,"map","","The map function for this view. This function is …",71,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",71,[[["bool",15]],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",72,null],[13,"Borrowed","","a borrowed value",72,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",73,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[10,"version","","Wraps [<code>View::version</code>]",73,[[],["u64",15]]],[10,"view_name","","Wraps [<code>View::view_name</code>]",73,[[],[["invalidnameerror",3],["result",4],["viewname",3]]]],[10,"map","","Wraps [<code>View::map</code>]",73,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",73,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[8,"Schema","pliantdb::core::schema","Defines a group of collections that are stored into a …",null,null],[10,"schema_name","","Returns the unique [<code>SchemaName</code>] for this schema.",74,[[],[["result",4],["invalidnameerror",3],["schemaname",3]]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",74,[[["schematic",3]],[["error",4],["result",4]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",74,[[],[["error",4],["schematic",3],["result",4]]]],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_name","","The <code>Id</code> of this collection.",75,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",75,[[["schematic",3]],[["error",4],["result",4]]]],[3,"Authority","","The owner of a schema item. This should represent the …",null,null],[3,"CollectionName","","The name of a <code>Collection</code>.",null,null],[12,"authority","","The authority of this collection.",76,null],[12,"name","","The name of this collection.",76,null],[3,"InvalidNameError","","An invalid name was used in a schema definition.",null,null],[12,"0","","",77,null],[3,"Name","","A valid schema name. Must be alphanumeric (<code>a-zA-Z9-0</code>) or …",null,null],[3,"SchemaName","","The name of a <code>Schema</code>.",null,null],[12,"authority","","The authority of this schema.",78,null],[12,"name","","The name of this schema.",78,null],[3,"ViewName","","The name of a <code>View</code>.",null,null],[12,"collection","","The name of the collection that contains this view.",79,null],[12,"name","","The name of this view.",79,null],[3,"Schematic","","A collection of defined collections and views.",null,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",69,[[],[["cow",4],["error",3],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",69,[[],[["result",4],["error",3]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",65,null],[12,"key","","The key used to index the View.",65,null],[12,"value","","An associated value stored in the view.",65,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",66,null],[12,"key","","The key used to index the View.",66,null],[12,"value","","An associated value stored in the view.",66,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",68,null],[12,"value","","The value generated by the <code>View</code>",68,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",71,null],[16,"Key","","The key for this view.",71,null],[16,"Value","","An associated type that can be stored with each entry in …",71,null],[10,"version","","The version of the view. Changing this value will cause …",71,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",71,[[],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"view_name","","The namespaced name of the view.",71,[[],[["invalidnameerror",3],["result",4],["viewname",3]]]],[10,"map","","The map function for this view. This function is …",71,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",71,[[["bool",15]],[["result",4],["error",4]]]],[0,"transaction","pliantdb::core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb::core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",80,null],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",81,null],[12,"command","","The command being performed.",81,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",82,null],[12,"contents","pliantdb::core::transaction::Command","The initial contents of the document.",83,null],[13,"Update","pliantdb::core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",82,null],[12,"header","pliantdb::core::transaction::Command","The current header of the <code>Document</code>.",84,null],[12,"contents","","The new contents to store within the <code>Document</code>.",84,null],[13,"Delete","pliantdb::core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",82,null],[12,"header","pliantdb::core::transaction::Command","The current header of the <code>Document</code>.",85,null],[4,"OperationResult","pliantdb::core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",86,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",86,null],[12,"collection","pliantdb::core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",87,null],[12,"header","","The header of the updated <code>Document</code>.",87,null],[13,"DocumentDeleted","pliantdb::core::transaction","A <code>Document</code> was deleted.",86,null],[12,"collection","pliantdb::core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",88,null],[12,"id","","The id of the deleted <code>Document</code>.",88,null],[3,"Executed","pliantdb::core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",89,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",89,null],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",90,null],[12,"id","","The id of the changed <code>Document</code>.",90,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",90,null],[0,"kv","pliantdb::core","Types for utilizing a lightweight atomic Key-Value store.",null,null],[0,"get","pliantdb::core::kv","Types for executing get operations.",null,null],[3,"Builder","pliantdb::core::kv::get","Executes [<code>Command::Get</code>] when awaited. Also offers methods …",null,null],[0,"namespaced","pliantdb::core::kv","Types for handling key namespaces.",null,null],[3,"Namespaced","pliantdb::core::kv::namespaced","A namespaced key-value store. All operations performed …",null,null],[0,"set","pliantdb::core::kv","Types for executing set operations.",null,null],[3,"Builder","pliantdb::core::kv::set","Executes [<code>Command::Set</code>] when awaited. Also offers methods …",null,null],[3,"Timestamp","pliantdb::core::kv","A timestamp relative to [<code>UNIX_EPOCH</code>].",null,null],[12,"seconds","","The number of whole seconds since [<code>UNIX_EPOCH</code>].",91,null],[12,"nanos","","The number of nanoseconds in the timestamp.",91,null],[8,"Kv","","Key-Value store methods. The Key-Value store is designed …",null,null],[10,"execute_key_operation","","Executes a single [<code>KeyOperation</code>].",92,[[["keyoperation",3]],[["box",3],["pin",3]]]],[11,"set_key","","Sets <code>key</code> to <code>value</code>. This function returns a builder that …",92,[[],["builder",3]]],[11,"get_key","","Gets the value stored at <code>key</code>. This function returns a …",92,[[],["builder",3]]],[11,"delete_key","","Deletes the value stored at <code>key</code>.",92,[[],[["box",3],["pin",3]]]],[11,"key_namespace","","The current namespace.",92,[[],[["str",15],["option",4]]]],[11,"with_key_namespace","","Access this Key-Value store within a namespace. When …",92,[[["str",15]],["namespaced",3]]],[4,"KeyCheck","","Checks for existing keys.",null,null],[13,"OnlyIfPresent","","Only allow the operation if an existing key is present.",93,null],[13,"OnlyIfVacant","","Only allow the opeartion if the key isn\'t present.",93,null],[3,"KeyOperation","","An operation performed on a key.",null,null],[12,"namespace","","The namespace for the key.",94,null],[12,"key","","The key to operate on.",94,null],[12,"command","","The command to execute.",94,null],[4,"Command","","Commands for a key-value store.",null,null],[13,"Set","","Set a key/value pair.",95,null],[12,"value","pliantdb::core::kv::Command","The value.",96,null],[12,"expiration","","If set, the key will be set to expire automatically.",96,null],[12,"keep_existing_expiration","","If true and the key already exists, the expiration will …",96,null],[12,"check","","Conditional checks for whether the key is already present …",96,null],[12,"return_previous_value","","If true and the key already exists, the existing key will …",96,null],[13,"Get","pliantdb::core::kv","Get the value from a key.",95,null],[12,"delete","pliantdb::core::kv::Command","Remove the key after retrieving the value.",97,null],[13,"Delete","pliantdb::core::kv","Delete a key.",95,null],[4,"Output","","The result of a [<code>KeyOperation</code>].",null,null],[13,"Status","","A status was returned.",98,null],[13,"Value","","A value was returned.",98,null],[4,"KeyStatus","","The status of an operation on a Key.",null,null],[13,"Inserted","","A new key was inserted.",99,null],[13,"Updated","","An existing key was updated with a new value.",99,null],[13,"Deleted","","A key was deleted.",99,null],[13,"NotChanged","","No changes were made.",99,null],[0,"pubsub","pliantdb::core","Types for Publish/Subscribe (<code>PubSub</code>) messaging.",null,null],[8,"PubSub","pliantdb::core::pubsub","Publishes and Subscribes to messages on topics.",null,null],[16,"Subscriber","","The Subscriber type for this <code>PubSub</code> connection.",100,null],[10,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",100,[[],[["pin",3],["box",3]]]],[10,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",100,[[],[["pin",3],["box",3]]]],[8,"Subscriber","","A subscriber to one or more topics.",null,null],[10,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",101,[[],[["pin",3],["box",3]]]],[10,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",101,[[["str",15]],[["pin",3],["box",3]]]],[10,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",101,[[],["receiver",3]]],[4,"Error","pliantdb::core","an enumeration of errors that this crate can produce",null,null],[13,"Storage","","An error from interacting with local storage.",102,null],[13,"Server","","An error from interacting with a server.",102,null],[13,"Transport","","An error occurred from the QUIC transport layer.",102,null],[13,"Websocket","","An error occurred from the websocket transport layer.",102,null],[13,"Networking","","An error occurred from networking.",102,null],[13,"Io","","An error occurred from IO.",102,null],[13,"Configuration","","An error occurred with the provided configuration options.",102,null],[13,"Client","","An error occurred inside of the client.",102,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",102,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",102,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",102,null],[13,"InvalidName","","An invalid name was specified during schema creation.",102,null],[0,"test_util","","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb::core::test_util","",null,null],[12,"value","","",103,null],[12,"category","","",103,null],[12,"parent_id","","",103,null],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",104,null],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"HarnessTest","","",null,null],[13,"StoreRetrieveUpdate","","",105,null],[13,"NotFound","","",105,null],[13,"Conflict","","",105,null],[13,"BadUpdate","","",105,null],[13,"NoUpdate","","",105,null],[13,"GetMultiple","","",105,null],[13,"ListTransactions","","",105,null],[13,"ViewQuery","","",105,null],[13,"UnassociatedCollection","","",105,null],[13,"ViewUpdate","","",105,null],[13,"ViewAccessPolicies","","",105,null],[13,"PubSubSimple","","",105,null],[13,"PubSubMultipleSubscribers","","",105,null],[13,"PubSubDropAndSend","","",105,null],[13,"PubSubUnsubscribe","","",105,null],[13,"PubSubDropCleanup","","",105,null],[13,"KvBasic","","",105,null],[13,"KvSet","","",105,null],[13,"KvExpiration","","",105,null],[13,"KvDeleteExpire","","",105,null],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[3,"TimingTest","","",null,null],[3,"Message","pliantdb::core::circulate","A <code>PubSub</code> message.",null,null],[12,"topic","","The topic of the message.",106,null],[12,"payload","","The payload of the message.",106,null],[3,"Relay","","Manages subscriptions and notifications for <code>PubSub</code>.",null,null],[3,"Subscriber","","A subscriber for [<code>Message</code>]s published to subscribed …",null,null],[0,"select","pliantdb::core::circulate::flume","Types that permit waiting upon multiple blocking …",null,null],[4,"SelectError","pliantdb::core::circulate::flume::select","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",107,null],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[0,"async","pliantdb::core::circulate::flume","Futures and other types that allow asynchronous …",null,null],[3,"SendFut","pliantdb::core::circulate::flume::async","A future that sends a value into a channel.",null,null],[3,"SendSink","","A sink that allows sending values into a channel.",null,null],[3,"RecvFut","","A future which allows asynchronously receiving a message.",null,null],[3,"RecvStream","","A stream which allows asynchronously receiving messages.",null,null],[3,"SendError","pliantdb::core::circulate::flume","An error that may be emitted when attempting to send a …",null,null],[12,"0","","",108,null],[4,"TrySendError","","An error that may be emitted when attempting to send a …",null,null],[13,"Full","","",109,null],[13,"Disconnected","","",109,null],[4,"SendTimeoutError","","An error that may be emitted when sending a value into a …",null,null],[13,"Timeout","","",110,null],[13,"Disconnected","","",110,null],[4,"RecvError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Disconnected","","",111,null],[4,"TryRecvError","","An error that may be emitted when attempting to fetch a …",null,null],[13,"Empty","","",112,null],[13,"Disconnected","","",112,null],[4,"RecvTimeoutError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",113,null],[13,"Disconnected","","",113,null],[3,"Sender","","A transmitting end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel.",null,null],[3,"Iter","","An iterator over the msgs received from a channel.",null,null],[3,"TryIter","","An non-blocking iterator over the msgs received from a …",null,null],[3,"Drain","","An fixed-sized iterator over the msgs drained from a …",null,null],[3,"IntoIter","","An owned iterator over the msgs received from a channel.",null,null],[5,"unbounded","","Create a channel with no maximum capacity.",null,[[]]],[5,"bounded","","Create a channel with a maximum capacity.",null,[[["usize",15]]]],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[0,"bounds","pliantdb::core::num_traits","",null,null],[8,"Bounded","pliantdb::core::num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",114,[[]]],[10,"max_value","","returns the largest finite number this type can represent",114,[[]]],[0,"cast","pliantdb::core::num_traits","",null,null],[8,"ToPrimitive","pliantdb::core::num_traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",115,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",115,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",115,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",115,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",115,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",115,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",115,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",115,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",115,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",115,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",115,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",115,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",115,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",115,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",116,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",116,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",116,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",116,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",116,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",116,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",116,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",116,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",116,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",116,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",116,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",116,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",116,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",116,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",117,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",118,[[]]],[0,"float","pliantdb::core::num_traits","",null,null],[8,"FloatCore","pliantdb::core::num_traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",119,[[]]],[10,"neg_infinity","","Returns negative infinity.",119,[[]]],[10,"nan","","Returns NaN.",119,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",119,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",119,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",119,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",119,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",119,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",119,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",119,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",119,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",119,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",119,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",119,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",119,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",119,[[]]],[11,"trunc","","Return the integer part of a number.",119,[[]]],[11,"fract","","Returns the fractional part of a number.",119,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",119,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",119,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",119,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",119,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",119,[[]]],[11,"max","","Returns the maximum of the two numbers.",119,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",119,[[]]],[11,"powi","","Raise a number to an integer power.",119,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",119,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",119,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",119,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",120,[[]]],[10,"infinity","","Returns the infinite value.",120,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",120,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",120,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",120,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",120,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",120,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",120,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",120,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",120,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",120,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",120,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",120,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",120,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",120,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",120,[[]]],[10,"trunc","","Return the integer part of a number.",120,[[]]],[10,"fract","","Returns the fractional part of a number.",120,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",120,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",120,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",120,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",120,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",120,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",120,[[]]],[10,"powi","","Raise a number to an integer power.",120,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",120,[[]]],[10,"sqrt","","Take the square root of a number.",120,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",120,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",120,[[]]],[10,"ln","","Returns the natural logarithm of the number.",120,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",120,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",120,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",120,[[]]],[11,"to_degrees","","Converts radians to degrees.",120,[[]]],[11,"to_radians","","Converts degrees to radians.",120,[[]]],[10,"max","","Returns the maximum of the two numbers.",120,[[]]],[10,"min","","Returns the minimum of the two numbers.",120,[[]]],[10,"abs_sub","","The positive difference of two numbers.",120,[[]]],[10,"cbrt","","Take the cubic root of a number.",120,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",120,[[]]],[10,"sin","","Computes the sine of a number (in radians).",120,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",120,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",120,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",120,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",120,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",120,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",120,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",120,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",120,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",120,[[]]],[10,"sinh","","Hyperbolic sine function.",120,[[]]],[10,"cosh","","Hyperbolic cosine function.",120,[[]]],[10,"tanh","","Hyperbolic tangent function.",120,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",120,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",120,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",120,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",120,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",121,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",121,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",121,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",121,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",121,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",121,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",121,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",121,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",121,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",121,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",121,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",121,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",121,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",121,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",121,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",121,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",121,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",121,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",121,[[]]],[0,"identities","pliantdb::core::num_traits","",null,null],[8,"Zero","pliantdb::core::num_traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",122,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",122,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",122,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",123,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",123,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",123,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[0,"int","pliantdb::core::num_traits","",null,null],[8,"PrimInt","pliantdb::core::num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",124,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",124,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",124,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",124,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",124,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",124,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",124,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",124,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",124,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",124,[[["u32",15]]]],[0,"ops","pliantdb::core::num_traits","",null,null],[0,"checked","pliantdb::core::num_traits::ops","",null,null],[8,"CheckedAdd","pliantdb::core::num_traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",125,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",126,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",127,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",128,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",129,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",130,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",131,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",132,[[["u32",15]],["option",4]]],[0,"inv","pliantdb::core::num_traits::ops","",null,null],[8,"Inv","pliantdb::core::num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",133,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",133,[[]]],[0,"mul_add","pliantdb::core::num_traits::ops","",null,null],[8,"MulAdd","pliantdb::core::num_traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",134,null],[10,"mul_add","","Performs the fused multiply-add operation.",134,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",135,[[]]],[0,"overflowing","pliantdb::core::num_traits::ops","",null,null],[8,"OverflowingAdd","pliantdb::core::num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean …",136,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean …",137,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean …",138,[[]]],[0,"saturating","pliantdb::core::num_traits::ops","",null,null],[8,"Saturating","pliantdb::core::num_traits::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",139,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",139,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",140,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",141,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",142,[[]]],[0,"wrapping","pliantdb::core::num_traits::ops","",null,null],[8,"WrappingAdd","pliantdb::core::num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",143,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",144,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",145,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",146,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",147,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",148,[[["u32",15]]]],[0,"pow","pliantdb::core::num_traits","",null,null],[8,"Pow","pliantdb::core::num_traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",149,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",149,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[0,"real","pliantdb::core::num_traits","",null,null],[8,"Real","pliantdb::core::num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can …",150,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",150,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",150,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",150,[[]]],[10,"floor","","Returns the largest integer less than or equal to a …",150,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",150,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",150,[[]]],[10,"trunc","","Return the integer part of a number.",150,[[]]],[10,"fract","","Returns the fractional part of a number.",150,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",150,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",150,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",150,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",150,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",150,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",150,[[]]],[10,"powi","","Raise a number to an integer power.",150,[[["i32",15]]]],[10,"powf","","Raise a number to a real number power.",150,[[]]],[10,"sqrt","","Take the square root of a number.",150,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",150,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",150,[[]]],[10,"ln","","Returns the natural logarithm of the number.",150,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",150,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",150,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",150,[[]]],[10,"to_degrees","","Converts radians to degrees.",150,[[]]],[10,"to_radians","","Converts degrees to radians.",150,[[]]],[10,"max","","Returns the maximum of the two numbers.",150,[[]]],[10,"min","","Returns the minimum of the two numbers.",150,[[]]],[10,"abs_sub","","The positive difference of two numbers.",150,[[]]],[10,"cbrt","","Take the cubic root of a number.",150,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",150,[[]]],[10,"sin","","Computes the sine of a number (in radians).",150,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",150,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",150,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",150,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",150,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",150,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",150,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",150,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",150,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",150,[[]]],[10,"sinh","","Hyperbolic sine function.",150,[[]]],[10,"cosh","","Hyperbolic cosine function.",150,[[]]],[10,"tanh","","Hyperbolic tangent function.",150,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",150,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",150,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",150,[[]]],[0,"sign","pliantdb::core::num_traits","",null,null],[8,"Signed","pliantdb::core::num_traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",151,[[]]],[10,"abs_sub","","The positive difference of two numbers.",151,[[]]],[10,"signum","","Returns the sign of the number.",151,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",151,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",151,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","pliantdb::core::num_traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",152,null],[10,"from_str_radix","","Convert from a string and radix (typically <code>2..=36</code>).",152,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",153,null],[13,"Invalid","","",153,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",154,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",114,[[]]],[10,"max_value","","returns the largest finite number this type can represent",114,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",120,[[]]],[10,"infinity","","Returns the infinite value.",120,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",120,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",120,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",120,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",120,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",120,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",120,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",120,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",120,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",120,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",120,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",120,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",120,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",120,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",120,[[]]],[10,"trunc","","Return the integer part of a number.",120,[[]]],[10,"fract","","Returns the fractional part of a number.",120,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",120,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",120,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",120,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",120,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",120,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",120,[[]]],[10,"powi","","Raise a number to an integer power.",120,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",120,[[]]],[10,"sqrt","","Take the square root of a number.",120,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",120,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",120,[[]]],[10,"ln","","Returns the natural logarithm of the number.",120,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",120,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",120,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",120,[[]]],[11,"to_degrees","","Converts radians to degrees.",120,[[]]],[11,"to_radians","","Converts degrees to radians.",120,[[]]],[10,"max","","Returns the maximum of the two numbers.",120,[[]]],[10,"min","","Returns the minimum of the two numbers.",120,[[]]],[10,"abs_sub","","The positive difference of two numbers.",120,[[]]],[10,"cbrt","","Take the cubic root of a number.",120,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",120,[[]]],[10,"sin","","Computes the sine of a number (in radians).",120,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",120,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",120,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",120,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",120,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",120,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",120,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",120,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",120,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",120,[[]]],[10,"sinh","","Hyperbolic sine function.",120,[[]]],[10,"cosh","","Hyperbolic cosine function.",120,[[]]],[10,"tanh","","Hyperbolic tangent function.",120,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",120,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",120,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",120,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",120,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",121,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",121,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",121,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",121,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",121,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",121,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",121,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",121,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",121,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",121,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",121,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",121,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",121,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",121,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",121,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",121,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",121,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",121,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",121,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",118,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",116,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",116,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",116,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",116,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",116,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",116,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",116,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",116,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",116,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",116,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",116,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",116,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",116,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",116,[[["f64",15]],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",117,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",115,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",115,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",115,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",115,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",115,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",115,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",115,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",115,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",115,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",115,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",115,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",115,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",115,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",115,[[],[["f64",15],["option",4]]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",123,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",123,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",123,[[],["bool",15]]],[8,"Zero","","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",122,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",122,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",122,[[],["bool",15]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",124,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",124,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",124,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",124,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",124,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",124,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",124,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",124,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",124,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",124,[[["u32",15]]]],[8,"CheckedAdd","","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",125,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",128,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",127,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",130,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",129,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",131,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",132,[[["u32",15]],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",126,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",133,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",133,[[]]],[8,"MulAdd","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",134,null],[10,"mul_add","","Performs the fused multiply-add operation.",134,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",135,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",139,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",139,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",140,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",142,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",141,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",143,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",145,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",146,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",147,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",148,[[["u32",15]]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",144,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",149,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",149,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",151,[[]]],[10,"abs_sub","","The positive difference of two numbers.",151,[[]]],[10,"signum","","Returns the sign of the number.",151,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",151,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",151,[[],["bool",15]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[14,"define_pubsub_test_suite","pliantdb::core","Expands into a suite of pubsub unit tests using the …",null,null],[14,"define_connection_test_suite","","Creates a test suite that tests methods available on […",null,null],[14,"define_kv_test_suite","","Defines the Kv test suite",null,null],[0,"config","pliantdb::local","Configuration options.",null,null],[3,"Configuration","pliantdb::local::config","Configuration options for <code>Storage</code>.",null,null],[12,"workers","","Configuration options related to background tasks.",155,null],[12,"views","","Configuration options related to views.",155,null],[3,"Tasks","","Configujration options for background tasks.",null,null],[12,"worker_count","","Defines how many workers should be spawned to process …",156,null],[3,"Views","","Configuration options for views.",null,null],[12,"check_integrity_on_open","","If true, the database will scan all views during the call …",157,null],[0,"backup","pliantdb::local","Local database tool to save and load databases into plain …",null,null],[3,"Cli","pliantdb::local::backup","The command line interface for <code>pliantdb local-backup</code>.",null,null],[12,"database_path","","The path to the database you wish to operate on.",158,null],[12,"subcommand","","The command to execute on the database.",158,null],[4,"Command","","The command to execute.",null,null],[13,"Save","","Exports all of the data into a straightforward file …",159,null],[12,"output_directory","pliantdb::local::backup::Command","The directory to export the data within. The process will …",160,null],[12,"output_name","","The name of the folder to export the data to. If not …",160,null],[13,"Load","pliantdb::local::backup","Loads all of the data from a previously saved backup. Any …",159,null],[12,"backup","pliantdb::local::backup::Command","The path to the previously saved backup.",161,null],[0,"connection","pliantdb::local::core","Types for interacting with a database.",null,null],[8,"Connection","pliantdb::local::core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",8,[[],["collection",3]]],[11,"insert","","Inserts a newly created document into the connected […",8,[[["vec",3],["global",3],["u8",15]],[["pin",3],["box",3]]]],[11,"update","","Updates an existing document in the connected […",8,[[["document",3]],[["pin",3],["box",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",8,[[["u64",15]],[["pin",3],["box",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",8,[[],[["box",3],["pin",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",8,[[["document",3]],[["pin",3],["box",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",8,[[],["view",3]]],[10,"query","","Queries for view entries matching [<code>View</code>].",8,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",8,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",8,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",8,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",8,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",8,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",8,[[],[["pin",3],["box",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",9,null],[12,"access_policy","","The view\'s data access policy. The default value is […",9,null],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",10,null],[13,"Range","","Matches all entires with keys in the range provided.",10,null],[13,"Multiple","","Matches all entries that have keys that are included in …",10,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",11,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",11,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",11,null],[0,"document","pliantdb::local::core","Types for interacting with <code>Document</code>s.",null,null],[3,"Header","pliantdb::local::core::document","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",12,null],[12,"revision","","The revision of the stored document.",12,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",13,null],[12,"header","","The header of the document, which contains the id and …",13,null],[12,"contents","","The serialized bytes of the stored item.",13,null],[3,"Revision","","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",14,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",14,null],[0,"limits","pliantdb::local::core","Limits used within <code>PliantDB</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb::local::core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"networking","pliantdb::local::core","Types for networked communications.",null,null],[3,"Payload","pliantdb::local::core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",15,null],[12,"wrapped","","The wrapped payload.",15,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",16,null],[13,"Database","","A database-related request.",16,null],[12,"database","pliantdb::local::core::networking::Request","The name of the database.",17,null],[12,"request","","The request made to the database.",17,null],[4,"ServerRequest","pliantdb::local::core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",18,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",18,null],[12,"name","pliantdb::local::core::networking::ServerRequest","The name of the database to delete.",19,null],[13,"ListDatabases","pliantdb::local::core::networking","Lists all databases.",18,null],[13,"ListAvailableSchemas","","Lists available schemas.",18,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",20,null],[12,"collection","pliantdb::local::core::networking::DatabaseRequest","The collection of the document.",21,null],[12,"id","","The id of the document.",21,null],[13,"GetMultiple","pliantdb::local::core::networking","Retrieve multiple documents.",20,null],[12,"collection","pliantdb::local::core::networking::DatabaseRequest","The collection of the documents.",22,null],[12,"ids","","The ids of the documents.",22,null],[13,"Query","pliantdb::local::core::networking","Queries a view.",20,null],[12,"view","pliantdb::local::core::networking::DatabaseRequest","The name of the view.",23,null],[12,"key","","The filter for the view.",23,null],[12,"access_policy","","The access policy for the query.",23,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",23,null],[13,"Reduce","pliantdb::local::core::networking","Reduces a view.",20,null],[12,"view","pliantdb::local::core::networking::DatabaseRequest","The name of the view.",24,null],[12,"key","","The filter for the view.",24,null],[12,"access_policy","","The access policy for the query.",24,null],[12,"grouped","","Whether to return a single value or values grouped by …",24,null],[13,"ApplyTransaction","pliantdb::local::core::networking","Applies a transaction.",20,null],[12,"transaction","pliantdb::local::core::networking::DatabaseRequest","The trasnaction to apply.",25,null],[13,"ListExecutedTransactions","pliantdb::local::core::networking","Lists executed transactions.",20,null],[12,"starting_id","pliantdb::local::core::networking::DatabaseRequest","The starting transaction id.",26,null],[12,"result_limit","","The maximum number of results.",26,null],[13,"LastTransactionId","pliantdb::local::core::networking","Queries the last transaction id.",20,null],[13,"CreateSubscriber","","Creates a <code>PubSub</code> <code>Subscriber</code>",20,null],[13,"Publish","","Publishes a <code>PubSub</code> message.",20,null],[13,"SubscribeTo","","Subscribes <code>subscriber_id</code> to messages for <code>topic</code>.",20,null],[12,"subscriber_id","pliantdb::local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",27,null],[12,"topic","","The topic to subscribe to.",27,null],[13,"UnsubscribeFrom","pliantdb::local::core::networking","Unsubscribes <code>subscriber_id</code> from messages for <code>topic</code>.",20,null],[12,"subscriber_id","pliantdb::local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",28,null],[12,"topic","","The topic to unsubscribe from.",28,null],[13,"UnregisterSubscriber","pliantdb::local::core::networking","Unregisters the subscriber.",20,null],[12,"subscriber_id","pliantdb::local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",29,null],[13,"ExecuteKeyOperation","pliantdb::local::core::networking","Excutes a key-value store operation.",20,null],[4,"Response","","A response from a server.",null,null],[13,"Ok","","A request succeded but provided no output.",30,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",30,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",30,null],[13,"Error","","An error occurred processing a request.",30,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",31,null],[12,"name","pliantdb::local::core::networking::ServerResponse","The name of the database to create.",32,null],[13,"DatabaseDeleted","pliantdb::local::core::networking","A database with <code>name</code> was successfully removed.",31,null],[12,"name","pliantdb::local::core::networking::ServerResponse","The name of the database to remove.",33,null],[13,"Databases","pliantdb::local::core::networking","A list of available databases.",31,null],[13,"AvailableSchemas","","A list of availble schemas.",31,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",34,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",34,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",34,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",34,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",34,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",34,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",34,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",34,null],[13,"SubscriberCreated","","A new <code>PubSub</code> subscriber was created.",34,null],[12,"subscriber_id","pliantdb::local::core::networking::DatabaseResponse","The unique ID of the subscriber.",35,null],[13,"MessageReceived","pliantdb::local::core::networking","A PubSub message was received.",34,null],[12,"subscriber_id","pliantdb::local::core::networking::DatabaseResponse","The ID of the subscriber receiving the message.",36,null],[12,"message","","The message received.",36,null],[13,"KvOutput","pliantdb::local::core::networking","Output from a [<code>KeyOperation</code>] being executed.",34,null],[3,"MappedDocument","","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",37,null],[12,"value","","The serialized value.",37,null],[12,"source","","The source document.",37,null],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",38,null],[12,"schema","","The schema defining the database.",38,null],[8,"ServerConnection","","Functions for interacting with a <code>PliantDB</code> server.",null,null],[10,"create_database","","Creates a database named <code>name</code> using the [<code>SchemaName</code>] …",39,[[["str",15],["schemaname",3]],[["pin",3],["box",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",39,[[["str",15]],[["pin",3],["box",3]]]],[10,"list_databases","","Lists the databases on this server.",39,[[],[["pin",3],["box",3]]]],[10,"list_available_schemas","","Lists the [<code>SchemaName</code>]s on this server.",39,[[],[["pin",3],["box",3]]]],[4,"Error","","A networking error.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See […",40,null],[13,"DatabaseNotFound","","The database name given was not found.",40,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",40,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",40,null],[13,"Disconnected","","The connection was interrupted.",40,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",40,null],[12,"database_name","pliantdb::local::core::networking::Error","The name of the database being accessed.",41,null],[12,"schema","","The schema provided for the database.",41,null],[12,"stored_schema","","The schema stored for the database.",41,null],[13,"SchemaAlreadyRegistered","pliantdb::local::core::networking","The [<code>SchemaName</code>] returned has already been registered …",40,null],[13,"SchemaNotRegistered","","The [<code>SchemaName</code>] requested was not registered with this …",40,null],[0,"dangerous","pliantdb::local::core::networking::fabruic","Security-sensitive settings are hidden behind these …",null,null],[8,"Builder","pliantdb::local::core::networking::fabruic::dangerous","Security-sensitive configuration for [<code>Builder</code>].",null,null],[10,"set_root_certificates","","Set [<code>Certificate</code>]s to be added into the root certificate …",42,[[]]],[8,"PrivateKey","","Gives read access to the [<code>PrivateKey</code>].",null,null],[10,"as_ref","","Returns a <code>&[u8]</code> to the [<code>PrivateKey</code>].",43,[[]]],[10,"into","","Returns a [<code>Vec<u8></code>] to the [<code>PrivateKey</code>].",43,[[],[["vec",3],["global",3],["u8",15]]]],[10,"serialize","","Serialize with [<code>serde</code>].",43,[[],["result",4]]],[8,"KeyPair","","Gives serialization access to [<code>KeyPair</code>].",null,null],[10,"serialize","","Serialize with [<code>serde</code>].",44,[[],["result",4]]],[0,"error","pliantdb::local::core::networking::fabruic","<code>Error</code> for this [<code>crate</code>].",null,null],[3,"Certificate","pliantdb::local::core::networking::fabruic::error","Error constructing <code>Certificate</code> with <code>Certificate::from_der</code>.",null,null],[12,"error","","The error.",45,null],[12,"certificate","","The bytes used to build the <code>Certificate</code>.",45,null],[4,"CertificateError","","Error constructing <code>Certificate</code> with <code>Certificate::from_der</code>.",null,null],[13,"WebPki","","<code>Error</code> returned by [<code>webpki</code>].",46,null],[13,"X509","","<code>Error</code> returned by [<code>x509_parser</code>].",46,null],[13,"Dangling","","Bytes passed contain uncorrelated bytes.",46,null],[13,"Expired","","<code>Certificate</code> has expired.",46,null],[13,"Domain","","<code>Certificate</code> is missing a domain name.",46,null],[3,"PrivateKey","","Failed to parse the given private key with …",null,null],[12,"0","","",47,null],[3,"KeyPair","","Failed to pair given <code>CertificateChain</code> and <code>PrivateKey</code> with …",null,null],[3,"CertificateChain","","Failed to verify the certificate chain with …",null,null],[3,"AlreadyClosed","","Attempting to close something that is already closed.",null,null],[3,"Builder","","Error binding socket during construction of <code>Endpoint</code> with …",null,null],[12,"error","","The error binding <code>Endpoint</code>.",48,null],[12,"builder","","Recovered <code>Builder</code> for re-use.",48,null],[4,"Connect","","Error connecting to a server with <code>Endpoint::connect</code>.",null,null],[13,"MultipleDomains","","The passed <code>Certificate</code> has multiple domains, this is not …",49,null],[13,"ParseUrl","","Failed to parse URL.",49,null],[13,"Domain","","URL didn\'t contain a domain.",49,null],[13,"Port","","URL didn\'t contain a port.",49,null],[13,"ParseDomain","","Failed to parse domain.",49,null],[13,"TrustDns","","Failed to resolve domain with <code>trust-dns</code>.",49,null],[13,"StdDns","","Failed to resolve domain with <code>ToSocketAddrs</code>.",49,null],[13,"NoIp","","Found no IP address for that domain.",49,null],[13,"Config","","Configuration needed to connect to a server is faulty.",49,null],[3,"Connection","","Error receiving connection from peer with <code>Stream</code> on from …",null,null],[12,"0","","",50,null],[3,"Connecting","","Error completing connection with peer with <code>Incoming::type</code> …",null,null],[12,"0","","",51,null],[4,"Stream","","Error opening a new stream to peer with …",null,null],[13,"Open","","Opening a new stream with <code>Connection::open_stream</code> failed.",52,null],[13,"Sender","","Sending the type information to peer failed.",52,null],[4,"Incoming","","Error receiving type information from <code>Incoming</code> stream.",null,null],[13,"Receiver","","Failed receiving type information from <code>Incoming</code> stream.",53,null],[13,"Closed","","<code>Incoming</code> was closed before type information could be …",53,null],[4,"Receiver","","Error receiving a message from a <code>Receiver</code>.",null,null],[13,"Read","","Failed to read from a <code>Receiver</code>.",54,null],[13,"Deserialize","","Failed to <code>Deserialize</code> a message from a <code>Receiver</code>.",54,null],[4,"Sender","","Error sending a message to a <code>Sender</code>.",null,null],[13,"Serialize","","Failed to <code>Serialize</code> a message for a <code>Sender</code>.",55,null],[13,"Write","","Failed to write to a <code>Sender</code>.",55,null],[13,"Closed","","[<code>Sender</code>] is closed.",55,null],[4,"ErrorKind","","The kind of error that can be produced during a …",null,null],[13,"Io","","If the error stems from the reader/writer that is being …",56,null],[13,"InvalidUtf8Encoding","","Returned if the deserializer attempts to deserialize a …",56,null],[13,"InvalidBoolEncoding","","Returned if the deserializer attempts to deserialize a …",56,null],[13,"InvalidCharEncoding","","Returned if the deserializer attempts to deserialize a …",56,null],[13,"InvalidTagEncoding","","Returned if the deserializer attempts to deserialize the …",56,null],[13,"DeserializeAnyNotSupported","","Serde has a deserialize_any method that lets the format …",56,null],[13,"SizeLimit","","If (de)serializing a message takes more than the provided …",56,null],[13,"SequenceMustHaveLength","","Bincode can not encode sequences of unknown length (like …",56,null],[13,"Custom","","A custom error message from Serde.",56,null],[4,"ConnectError","","Errors in the parameters being used to create a new …",null,null],[13,"EndpointStopping","","The endpoint can no longer create new connections",57,null],[13,"TooManyConnections","","The number of active connections on the local endpoint is …",57,null],[13,"InvalidDnsName","","The domain name supplied was malformed",57,null],[13,"Config","","The transport configuration was invalid",57,null],[13,"InvalidRemoteAddress","","The remote [<code>SocketAddr</code>] supplied was malformed",57,null],[4,"ConnectionError","","Reasons why a connection might be lost",null,null],[13,"VersionMismatch","","The peer doesn\'t implement any supported version",58,null],[13,"TransportError","","The peer violated the QUIC specification as understood by …",58,null],[13,"ConnectionClosed","","The peer\'s QUIC stack aborted the connection automatically",58,null],[13,"ApplicationClosed","","The peer closed the connection",58,null],[13,"Reset","","The peer is unable to continue processing this …",58,null],[13,"TimedOut","","Communication with the peer has lapsed for longer than …",58,null],[13,"LocallyClosed","","The local application closed the connection",58,null],[4,"ReadError","","Errors that arise from reading from a stream.",null,null],[13,"Reset","","The peer abandoned transmitting data on this stream.",59,null],[13,"ConnectionClosed","","The connection was closed.",59,null],[13,"UnknownStream","","The stream has already been stopped, finished, or reset",59,null],[13,"IllegalOrderedRead","","Attempted an ordered read following an unordered read",59,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",59,null],[4,"WriteError","","Errors that arise from writing to a stream",null,null],[13,"Stopped","","The peer is no longer accepting data on this stream.",60,null],[13,"ConnectionClosed","","The connection was closed.",60,null],[13,"UnknownStream","","The stream has already been finished or reset",60,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",60,null],[4,"Error","","An error that occurs during certificate validation or …",null,null],[13,"BadDER","","The encoding of some ASN.1 DER-encoded item is invalid.",61,null],[13,"BadDERTime","","The encoding of an ASN.1 DER-encoded time is invalid.",61,null],[13,"CAUsedAsEndEntity","","A CA certificate is veing used as an end-entity …",61,null],[13,"CertExpired","","The certificate is expired; i.e. the time it is being …",61,null],[13,"CertNotValidForName","","The certificate is not valid for the name it is being …",61,null],[13,"CertNotValidYet","","The certificate is not valid yet; i.e. the time it is …",61,null],[13,"EndEntityUsedAsCA","","An end-entity certificate is being used as a CA …",61,null],[13,"ExtensionValueInvalid","","An X.509 extension is invalid.",61,null],[13,"InvalidCertValidity","","The certificate validity period (notBefore, notAfter) is …",61,null],[13,"InvalidSignatureForPublicKey","","The signature is invalid for the given public key.",61,null],[13,"NameConstraintViolation","","The certificate violates one or more name constraints.",61,null],[13,"PathLenConstraintViolated","","The certificate violates one or more path length …",61,null],[13,"SignatureAlgorithmMismatch","","The algorithm in the TBSCertificate \\\"signature\\\" field of …",61,null],[13,"RequiredEKUNotFound","","The certificate is not valid for the Extended Key Usage …",61,null],[13,"UnknownIssuer","","A valid issuer for the certificate could not be found.",61,null],[13,"UnsupportedCertVersion","","The certificate is not a v3 X.509 certificate.",61,null],[13,"UnsupportedCriticalExtension","","The certificate contains an unsupported critical …",61,null],[13,"UnsupportedSignatureAlgorithmForPublicKey","","The signature\'s algorithm does not match the algorithm of …",61,null],[13,"UnsupportedSignatureAlgorithm","","The signature algorithm for a signature is not in the set …",61,null],[3,"ResolveError","","The error type for errors that get returned in the crate",null,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",4,null],[13,"IdnaError","","",4,null],[13,"InvalidPort","","",4,null],[13,"InvalidIpv4Address","","",4,null],[13,"InvalidIpv6Address","","",4,null],[13,"InvalidDomainCharacter","","",4,null],[13,"RelativeUrlWithoutBase","","",4,null],[13,"RelativeUrlWithCannotBeABaseBase","","",4,null],[13,"SetHostOnCannotBeABaseUrl","","",4,null],[13,"Overflow","","",4,null],[4,"X509Error","","An error that can occur while parsing or validating a …",null,null],[13,"Generic","","",62,null],[13,"InvalidVersion","","",62,null],[13,"InvalidSerial","","",62,null],[13,"InvalidAlgorithmIdentifier","","",62,null],[13,"InvalidX509Name","","",62,null],[13,"InvalidDate","","",62,null],[13,"InvalidSPKI","","",62,null],[13,"InvalidSubjectUID","","",62,null],[13,"InvalidIssuerUID","","",62,null],[13,"InvalidExtensions","","",62,null],[13,"InvalidAttributes","","",62,null],[13,"DuplicateExtensions","","",62,null],[13,"DuplicateAttributes","","",62,null],[13,"InvalidSignatureValue","","",62,null],[13,"InvalidTbsCertificate","","",62,null],[13,"InvalidUserCertificate","","",62,null],[13,"InvalidCertificate","","Top-level certificate structure is invalid",62,null],[13,"SignatureVerificationError","","",62,null],[13,"SignatureUnsupportedAlgorithm","","",62,null],[13,"Der","","",62,null],[13,"NomError","","",62,null],[4,"Err","","The <code>Err</code> enum indicates the parser was not successful",null,null],[13,"Incomplete","","There was not enough data",63,null],[13,"Error","","The parser had an error (recoverable)",63,null],[13,"Failure","","The parser had an unrecoverable error: we got to the right…",63,null],[3,"Builder","pliantdb::local::core::networking::fabruic","Helper for constructing an [<code>Endpoint</code>].",null,null],[3,"Connecting","","Represent\'s an intermediate state to build a [<code>Connection</code>].",null,null],[3,"Connection","","Represents an open connection. Receives [<code>Incoming</code>] …",null,null],[3,"Endpoint","","Represents a socket using the QUIC protocol to …",null,null],[3,"Incoming","","An intermediate state to define which type to accept in …",null,null],[3,"Receiver","","Used to receive data from a stream. Will stop receiving …",null,null],[3,"Sender","","Used to send data to a stream.",null,null],[4,"Store","","Configuration option for [<code>Builder::set_store</code>].",null,null],[13,"Empty","","Empty root certificate store.",64,null],[13,"Os","","Uses the OS root certificate store, see …",64,null],[13,"Embedded","","Use an embedded root certificate store, see <code>webpki-roots</code>.",64,null],[3,"Certificate","","A public certificate. You can distribute it freely to …",null,null],[3,"CertificateChain","","A public [<code>Certificate</code>] chain, used to prese",null,null],[3,"KeyPair","","A key-pair, consisting of a [<code>CertificateChain</code>] and […",null,null],[3,"PrivateKey","","A private key.",null,null],[0,"schema","pliantdb::local::core","Types for defining database schema.",null,null],[0,"view","pliantdb::local::core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb::local::core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb::local::core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",65,null],[12,"key","","The key used to index the View.",65,null],[12,"value","","An associated value stored in the view.",65,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",66,null],[12,"key","","The key used to index the View.",66,null],[12,"value","","An associated value stored in the view.",66,null],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",67,null],[12,"key","","The key used to index the View.",67,null],[12,"value","","An associated value stored in the view.",67,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",68,null],[12,"value","","The value generated by the <code>View</code>",68,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",69,[[],[["cow",4],["error",3],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",69,[[],[["result",4],["error",3]]]],[8,"EnumKey","","Adds <code>Key</code> support to an enum. Requires implementing …",null,null],[4,"Error","pliantdb::local::core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",70,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",70,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",70,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",71,null],[16,"Key","","The key for this view.",71,null],[16,"Value","","An associated type that can be stored with each entry in …",71,null],[10,"version","","The version of the view. Changing this value will cause …",71,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",71,[[],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"view_name","","The namespaced name of the view.",71,[[],[["invalidnameerror",3],["result",4],["viewname",3]]]],[10,"map","","The map function for this view. This function is …",71,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",71,[[["bool",15]],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",72,null],[13,"Borrowed","","a borrowed value",72,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",73,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[10,"version","","Wraps [<code>View::version</code>]",73,[[],["u64",15]]],[10,"view_name","","Wraps [<code>View::view_name</code>]",73,[[],[["invalidnameerror",3],["result",4],["viewname",3]]]],[10,"map","","Wraps [<code>View::map</code>]",73,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",73,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[8,"Schema","pliantdb::local::core::schema","Defines a group of collections that are stored into a …",null,null],[10,"schema_name","","Returns the unique [<code>SchemaName</code>] for this schema.",74,[[],[["result",4],["invalidnameerror",3],["schemaname",3]]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",74,[[["schematic",3]],[["error",4],["result",4]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",74,[[],[["error",4],["schematic",3],["result",4]]]],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_name","","The <code>Id</code> of this collection.",75,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",75,[[["schematic",3]],[["error",4],["result",4]]]],[3,"Authority","","The owner of a schema item. This should represent the …",null,null],[3,"CollectionName","","The name of a <code>Collection</code>.",null,null],[12,"authority","","The authority of this collection.",76,null],[12,"name","","The name of this collection.",76,null],[3,"InvalidNameError","","An invalid name was used in a schema definition.",null,null],[12,"0","","",77,null],[3,"Name","","A valid schema name. Must be alphanumeric (<code>a-zA-Z9-0</code>) or …",null,null],[3,"SchemaName","","The name of a <code>Schema</code>.",null,null],[12,"authority","","The authority of this schema.",78,null],[12,"name","","The name of this schema.",78,null],[3,"ViewName","","The name of a <code>View</code>.",null,null],[12,"collection","","The name of the collection that contains this view.",79,null],[12,"name","","The name of this view.",79,null],[3,"Schematic","","A collection of defined collections and views.",null,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",69,[[],[["cow",4],["error",3],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",69,[[],[["result",4],["error",3]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",65,null],[12,"key","","The key used to index the View.",65,null],[12,"value","","An associated value stored in the view.",65,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",66,null],[12,"key","","The key used to index the View.",66,null],[12,"value","","An associated value stored in the view.",66,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",68,null],[12,"value","","The value generated by the <code>View</code>",68,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",71,null],[16,"Key","","The key for this view.",71,null],[16,"Value","","An associated type that can be stored with each entry in …",71,null],[10,"version","","The version of the view. Changing this value will cause …",71,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",71,[[],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"view_name","","The namespaced name of the view.",71,[[],[["invalidnameerror",3],["result",4],["viewname",3]]]],[10,"map","","The map function for this view. This function is …",71,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",71,[[["bool",15]],[["result",4],["error",4]]]],[0,"transaction","pliantdb::local::core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb::local::core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",80,null],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",81,null],[12,"command","","The command being performed.",81,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",82,null],[12,"contents","pliantdb::local::core::transaction::Command","The initial contents of the document.",83,null],[13,"Update","pliantdb::local::core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",82,null],[12,"header","pliantdb::local::core::transaction::Command","The current header of the <code>Document</code>.",84,null],[12,"contents","","The new contents to store within the <code>Document</code>.",84,null],[13,"Delete","pliantdb::local::core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",82,null],[12,"header","pliantdb::local::core::transaction::Command","The current header of the <code>Document</code>.",85,null],[4,"OperationResult","pliantdb::local::core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",86,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",86,null],[12,"collection","pliantdb::local::core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",87,null],[12,"header","","The header of the updated <code>Document</code>.",87,null],[13,"DocumentDeleted","pliantdb::local::core::transaction","A <code>Document</code> was deleted.",86,null],[12,"collection","pliantdb::local::core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",88,null],[12,"id","","The id of the deleted <code>Document</code>.",88,null],[3,"Executed","pliantdb::local::core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",89,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",89,null],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",90,null],[12,"id","","The id of the changed <code>Document</code>.",90,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",90,null],[0,"kv","pliantdb::local::core","Types for utilizing a lightweight atomic Key-Value store.",null,null],[0,"get","pliantdb::local::core::kv","Types for executing get operations.",null,null],[3,"Builder","pliantdb::local::core::kv::get","Executes [<code>Command::Get</code>] when awaited. Also offers methods …",null,null],[0,"namespaced","pliantdb::local::core::kv","Types for handling key namespaces.",null,null],[3,"Namespaced","pliantdb::local::core::kv::namespaced","A namespaced key-value store. All operations performed …",null,null],[0,"set","pliantdb::local::core::kv","Types for executing set operations.",null,null],[3,"Builder","pliantdb::local::core::kv::set","Executes [<code>Command::Set</code>] when awaited. Also offers methods …",null,null],[3,"Timestamp","pliantdb::local::core::kv","A timestamp relative to [<code>UNIX_EPOCH</code>].",null,null],[12,"seconds","","The number of whole seconds since [<code>UNIX_EPOCH</code>].",91,null],[12,"nanos","","The number of nanoseconds in the timestamp.",91,null],[8,"Kv","","Key-Value store methods. The Key-Value store is designed …",null,null],[10,"execute_key_operation","","Executes a single [<code>KeyOperation</code>].",92,[[["keyoperation",3]],[["box",3],["pin",3]]]],[11,"set_key","","Sets <code>key</code> to <code>value</code>. This function returns a builder that …",92,[[],["builder",3]]],[11,"get_key","","Gets the value stored at <code>key</code>. This function returns a …",92,[[],["builder",3]]],[11,"delete_key","","Deletes the value stored at <code>key</code>.",92,[[],[["box",3],["pin",3]]]],[11,"key_namespace","","The current namespace.",92,[[],[["str",15],["option",4]]]],[11,"with_key_namespace","","Access this Key-Value store within a namespace. When …",92,[[["str",15]],["namespaced",3]]],[4,"KeyCheck","","Checks for existing keys.",null,null],[13,"OnlyIfPresent","","Only allow the operation if an existing key is present.",93,null],[13,"OnlyIfVacant","","Only allow the opeartion if the key isn\'t present.",93,null],[3,"KeyOperation","","An operation performed on a key.",null,null],[12,"namespace","","The namespace for the key.",94,null],[12,"key","","The key to operate on.",94,null],[12,"command","","The command to execute.",94,null],[4,"Command","","Commands for a key-value store.",null,null],[13,"Set","","Set a key/value pair.",95,null],[12,"value","pliantdb::local::core::kv::Command","The value.",96,null],[12,"expiration","","If set, the key will be set to expire automatically.",96,null],[12,"keep_existing_expiration","","If true and the key already exists, the expiration will …",96,null],[12,"check","","Conditional checks for whether the key is already present …",96,null],[12,"return_previous_value","","If true and the key already exists, the existing key will …",96,null],[13,"Get","pliantdb::local::core::kv","Get the value from a key.",95,null],[12,"delete","pliantdb::local::core::kv::Command","Remove the key after retrieving the value.",97,null],[13,"Delete","pliantdb::local::core::kv","Delete a key.",95,null],[4,"Output","","The result of a [<code>KeyOperation</code>].",null,null],[13,"Status","","A status was returned.",98,null],[13,"Value","","A value was returned.",98,null],[4,"KeyStatus","","The status of an operation on a Key.",null,null],[13,"Inserted","","A new key was inserted.",99,null],[13,"Updated","","An existing key was updated with a new value.",99,null],[13,"Deleted","","A key was deleted.",99,null],[13,"NotChanged","","No changes were made.",99,null],[0,"pubsub","pliantdb::local::core","Types for Publish/Subscribe (<code>PubSub</code>) messaging.",null,null],[8,"PubSub","pliantdb::local::core::pubsub","Publishes and Subscribes to messages on topics.",null,null],[16,"Subscriber","","The Subscriber type for this <code>PubSub</code> connection.",100,null],[10,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",100,[[],[["pin",3],["box",3]]]],[10,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",100,[[],[["pin",3],["box",3]]]],[8,"Subscriber","","A subscriber to one or more topics.",null,null],[10,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",101,[[],[["pin",3],["box",3]]]],[10,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",101,[[["str",15]],[["pin",3],["box",3]]]],[10,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",101,[[],["receiver",3]]],[4,"Error","pliantdb::local::core","an enumeration of errors that this crate can produce",null,null],[13,"Storage","","An error from interacting with local storage.",102,null],[13,"Server","","An error from interacting with a server.",102,null],[13,"Transport","","An error occurred from the QUIC transport layer.",102,null],[13,"Websocket","","An error occurred from the websocket transport layer.",102,null],[13,"Networking","","An error occurred from networking.",102,null],[13,"Io","","An error occurred from IO.",102,null],[13,"Configuration","","An error occurred with the provided configuration options.",102,null],[13,"Client","","An error occurred inside of the client.",102,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",102,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",102,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",102,null],[13,"InvalidName","","An invalid name was specified during schema creation.",102,null],[0,"test_util","","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb::local::core::test_util","",null,null],[12,"value","","",103,null],[12,"category","","",103,null],[12,"parent_id","","",103,null],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",104,null],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"HarnessTest","","",null,null],[13,"StoreRetrieveUpdate","","",105,null],[13,"NotFound","","",105,null],[13,"Conflict","","",105,null],[13,"BadUpdate","","",105,null],[13,"NoUpdate","","",105,null],[13,"GetMultiple","","",105,null],[13,"ListTransactions","","",105,null],[13,"ViewQuery","","",105,null],[13,"UnassociatedCollection","","",105,null],[13,"ViewUpdate","","",105,null],[13,"ViewAccessPolicies","","",105,null],[13,"PubSubSimple","","",105,null],[13,"PubSubMultipleSubscribers","","",105,null],[13,"PubSubDropAndSend","","",105,null],[13,"PubSubUnsubscribe","","",105,null],[13,"PubSubDropCleanup","","",105,null],[13,"KvBasic","","",105,null],[13,"KvSet","","",105,null],[13,"KvExpiration","","",105,null],[13,"KvDeleteExpire","","",105,null],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[3,"TimingTest","","",null,null],[3,"Message","pliantdb::local::core::circulate","A <code>PubSub</code> message.",null,null],[12,"topic","","The topic of the message.",106,null],[12,"payload","","The payload of the message.",106,null],[3,"Relay","","Manages subscriptions and notifications for <code>PubSub</code>.",null,null],[3,"Subscriber","","A subscriber for [<code>Message</code>]s published to subscribed …",null,null],[0,"select","pliantdb::local::core::circulate::flume","Types that permit waiting upon multiple blocking …",null,null],[4,"SelectError","pliantdb::local::core::circulate::flume::select","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",107,null],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[0,"async","pliantdb::local::core::circulate::flume","Futures and other types that allow asynchronous …",null,null],[3,"SendFut","pliantdb::local::core::circulate::flume::async","A future that sends a value into a channel.",null,null],[3,"SendSink","","A sink that allows sending values into a channel.",null,null],[3,"RecvFut","","A future which allows asynchronously receiving a message.",null,null],[3,"RecvStream","","A stream which allows asynchronously receiving messages.",null,null],[3,"SendError","pliantdb::local::core::circulate::flume","An error that may be emitted when attempting to send a …",null,null],[12,"0","","",108,null],[4,"TrySendError","","An error that may be emitted when attempting to send a …",null,null],[13,"Full","","",109,null],[13,"Disconnected","","",109,null],[4,"SendTimeoutError","","An error that may be emitted when sending a value into a …",null,null],[13,"Timeout","","",110,null],[13,"Disconnected","","",110,null],[4,"RecvError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Disconnected","","",111,null],[4,"TryRecvError","","An error that may be emitted when attempting to fetch a …",null,null],[13,"Empty","","",112,null],[13,"Disconnected","","",112,null],[4,"RecvTimeoutError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",113,null],[13,"Disconnected","","",113,null],[3,"Sender","","A transmitting end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel.",null,null],[3,"Iter","","An iterator over the msgs received from a channel.",null,null],[3,"TryIter","","An non-blocking iterator over the msgs received from a …",null,null],[3,"Drain","","An fixed-sized iterator over the msgs drained from a …",null,null],[3,"IntoIter","","An owned iterator over the msgs received from a channel.",null,null],[5,"unbounded","","Create a channel with no maximum capacity.",null,[[]]],[5,"bounded","","Create a channel with a maximum capacity.",null,[[["usize",15]]]],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[0,"bounds","pliantdb::local::core::num_traits","",null,null],[8,"Bounded","pliantdb::local::core::num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",114,[[]]],[10,"max_value","","returns the largest finite number this type can represent",114,[[]]],[0,"cast","pliantdb::local::core::num_traits","",null,null],[8,"ToPrimitive","pliantdb::local::core::num_traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",115,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",115,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",115,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",115,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",115,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",115,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",115,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",115,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",115,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",115,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",115,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",115,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",115,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",115,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",116,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",116,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",116,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",116,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",116,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",116,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",116,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",116,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",116,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",116,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",116,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",116,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",116,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",116,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",117,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",118,[[]]],[0,"float","pliantdb::local::core::num_traits","",null,null],[8,"FloatCore","pliantdb::local::core::num_traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",119,[[]]],[10,"neg_infinity","","Returns negative infinity.",119,[[]]],[10,"nan","","Returns NaN.",119,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",119,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",119,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",119,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",119,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",119,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",119,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",119,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",119,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",119,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",119,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",119,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",119,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",119,[[]]],[11,"trunc","","Return the integer part of a number.",119,[[]]],[11,"fract","","Returns the fractional part of a number.",119,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",119,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",119,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",119,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",119,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",119,[[]]],[11,"max","","Returns the maximum of the two numbers.",119,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",119,[[]]],[11,"powi","","Raise a number to an integer power.",119,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",119,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",119,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",119,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",120,[[]]],[10,"infinity","","Returns the infinite value.",120,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",120,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",120,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",120,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",120,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",120,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",120,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",120,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",120,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",120,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",120,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",120,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",120,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",120,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",120,[[]]],[10,"trunc","","Return the integer part of a number.",120,[[]]],[10,"fract","","Returns the fractional part of a number.",120,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",120,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",120,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",120,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",120,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",120,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",120,[[]]],[10,"powi","","Raise a number to an integer power.",120,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",120,[[]]],[10,"sqrt","","Take the square root of a number.",120,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",120,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",120,[[]]],[10,"ln","","Returns the natural logarithm of the number.",120,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",120,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",120,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",120,[[]]],[11,"to_degrees","","Converts radians to degrees.",120,[[]]],[11,"to_radians","","Converts degrees to radians.",120,[[]]],[10,"max","","Returns the maximum of the two numbers.",120,[[]]],[10,"min","","Returns the minimum of the two numbers.",120,[[]]],[10,"abs_sub","","The positive difference of two numbers.",120,[[]]],[10,"cbrt","","Take the cubic root of a number.",120,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",120,[[]]],[10,"sin","","Computes the sine of a number (in radians).",120,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",120,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",120,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",120,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",120,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",120,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",120,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",120,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",120,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",120,[[]]],[10,"sinh","","Hyperbolic sine function.",120,[[]]],[10,"cosh","","Hyperbolic cosine function.",120,[[]]],[10,"tanh","","Hyperbolic tangent function.",120,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",120,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",120,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",120,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",120,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",121,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",121,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",121,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",121,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",121,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",121,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",121,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",121,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",121,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",121,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",121,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",121,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",121,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",121,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",121,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",121,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",121,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",121,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",121,[[]]],[0,"identities","pliantdb::local::core::num_traits","",null,null],[8,"Zero","pliantdb::local::core::num_traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",122,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",122,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",122,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",123,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",123,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",123,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[0,"int","pliantdb::local::core::num_traits","",null,null],[8,"PrimInt","pliantdb::local::core::num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",124,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",124,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",124,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",124,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",124,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",124,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",124,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",124,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",124,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",124,[[["u32",15]]]],[0,"ops","pliantdb::local::core::num_traits","",null,null],[0,"checked","pliantdb::local::core::num_traits::ops","",null,null],[8,"CheckedAdd","pliantdb::local::core::num_traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",125,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",126,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",127,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",128,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",129,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",130,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",131,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",132,[[["u32",15]],["option",4]]],[0,"inv","pliantdb::local::core::num_traits::ops","",null,null],[8,"Inv","pliantdb::local::core::num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",133,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",133,[[]]],[0,"mul_add","pliantdb::local::core::num_traits::ops","",null,null],[8,"MulAdd","pliantdb::local::core::num_traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",134,null],[10,"mul_add","","Performs the fused multiply-add operation.",134,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",135,[[]]],[0,"overflowing","pliantdb::local::core::num_traits::ops","",null,null],[8,"OverflowingAdd","pliantdb::local::core::num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean …",136,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean …",137,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean …",138,[[]]],[0,"saturating","pliantdb::local::core::num_traits::ops","",null,null],[8,"Saturating","pliantdb::local::core::num_traits::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",139,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",139,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",140,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",141,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",142,[[]]],[0,"wrapping","pliantdb::local::core::num_traits::ops","",null,null],[8,"WrappingAdd","pliantdb::local::core::num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",143,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",144,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",145,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",146,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",147,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",148,[[["u32",15]]]],[0,"pow","pliantdb::local::core::num_traits","",null,null],[8,"Pow","pliantdb::local::core::num_traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",149,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",149,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[0,"real","pliantdb::local::core::num_traits","",null,null],[8,"Real","pliantdb::local::core::num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can …",150,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",150,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",150,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",150,[[]]],[10,"floor","","Returns the largest integer less than or equal to a …",150,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",150,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",150,[[]]],[10,"trunc","","Return the integer part of a number.",150,[[]]],[10,"fract","","Returns the fractional part of a number.",150,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",150,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",150,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",150,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",150,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",150,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",150,[[]]],[10,"powi","","Raise a number to an integer power.",150,[[["i32",15]]]],[10,"powf","","Raise a number to a real number power.",150,[[]]],[10,"sqrt","","Take the square root of a number.",150,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",150,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",150,[[]]],[10,"ln","","Returns the natural logarithm of the number.",150,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",150,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",150,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",150,[[]]],[10,"to_degrees","","Converts radians to degrees.",150,[[]]],[10,"to_radians","","Converts degrees to radians.",150,[[]]],[10,"max","","Returns the maximum of the two numbers.",150,[[]]],[10,"min","","Returns the minimum of the two numbers.",150,[[]]],[10,"abs_sub","","The positive difference of two numbers.",150,[[]]],[10,"cbrt","","Take the cubic root of a number.",150,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",150,[[]]],[10,"sin","","Computes the sine of a number (in radians).",150,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",150,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",150,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",150,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",150,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",150,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",150,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",150,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",150,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",150,[[]]],[10,"sinh","","Hyperbolic sine function.",150,[[]]],[10,"cosh","","Hyperbolic cosine function.",150,[[]]],[10,"tanh","","Hyperbolic tangent function.",150,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",150,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",150,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",150,[[]]],[0,"sign","pliantdb::local::core::num_traits","",null,null],[8,"Signed","pliantdb::local::core::num_traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",151,[[]]],[10,"abs_sub","","The positive difference of two numbers.",151,[[]]],[10,"signum","","Returns the sign of the number.",151,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",151,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",151,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","pliantdb::local::core::num_traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",152,null],[10,"from_str_radix","","Convert from a string and radix (typically <code>2..=36</code>).",152,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",153,null],[13,"Invalid","","",153,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",154,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",114,[[]]],[10,"max_value","","returns the largest finite number this type can represent",114,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",120,[[]]],[10,"infinity","","Returns the infinite value.",120,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",120,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",120,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",120,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",120,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",120,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",120,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",120,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",120,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",120,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",120,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",120,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",120,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",120,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",120,[[]]],[10,"trunc","","Return the integer part of a number.",120,[[]]],[10,"fract","","Returns the fractional part of a number.",120,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",120,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",120,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",120,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",120,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",120,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",120,[[]]],[10,"powi","","Raise a number to an integer power.",120,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",120,[[]]],[10,"sqrt","","Take the square root of a number.",120,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",120,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",120,[[]]],[10,"ln","","Returns the natural logarithm of the number.",120,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",120,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",120,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",120,[[]]],[11,"to_degrees","","Converts radians to degrees.",120,[[]]],[11,"to_radians","","Converts degrees to radians.",120,[[]]],[10,"max","","Returns the maximum of the two numbers.",120,[[]]],[10,"min","","Returns the minimum of the two numbers.",120,[[]]],[10,"abs_sub","","The positive difference of two numbers.",120,[[]]],[10,"cbrt","","Take the cubic root of a number.",120,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",120,[[]]],[10,"sin","","Computes the sine of a number (in radians).",120,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",120,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",120,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",120,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",120,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",120,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",120,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",120,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",120,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",120,[[]]],[10,"sinh","","Hyperbolic sine function.",120,[[]]],[10,"cosh","","Hyperbolic cosine function.",120,[[]]],[10,"tanh","","Hyperbolic tangent function.",120,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",120,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",120,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",120,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",120,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",121,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",121,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",121,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",121,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",121,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",121,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",121,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",121,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",121,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",121,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",121,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",121,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",121,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",121,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",121,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",121,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",121,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",121,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",121,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",118,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",116,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",116,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",116,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",116,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",116,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",116,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",116,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",116,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",116,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",116,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",116,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",116,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",116,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",116,[[["f64",15]],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",117,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",115,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",115,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",115,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",115,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",115,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",115,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",115,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",115,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",115,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",115,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",115,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",115,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",115,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",115,[[],[["f64",15],["option",4]]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",123,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",123,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",123,[[],["bool",15]]],[8,"Zero","","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",122,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",122,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",122,[[],["bool",15]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",124,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",124,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",124,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",124,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",124,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",124,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",124,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",124,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",124,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",124,[[["u32",15]]]],[8,"CheckedAdd","","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",125,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",128,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",127,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",130,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",129,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",131,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",132,[[["u32",15]],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",126,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",133,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",133,[[]]],[8,"MulAdd","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",134,null],[10,"mul_add","","Performs the fused multiply-add operation.",134,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",135,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",139,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",139,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",140,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",142,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",141,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",143,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",145,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",146,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",147,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",148,[[["u32",15]]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",144,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",149,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",149,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",151,[[]]],[10,"abs_sub","","The positive difference of two numbers.",151,[[]]],[10,"signum","","Returns the sign of the number.",151,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",151,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",151,[[],["bool",15]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[14,"define_pubsub_test_suite","pliantdb::local::core","Expands into a suite of pubsub unit tests using the …",null,null],[14,"define_connection_test_suite","","Creates a test suite that tests methods available on […",null,null],[14,"define_kv_test_suite","","Defines the Kv test suite",null,null],[3,"Configuration","pliantdb::local","Configuration options for <code>Storage</code>.",null,null],[12,"workers","","Configuration options related to background tasks.",155,null],[12,"views","","Configuration options related to views.",155,null],[4,"Error","","Errors that can occur from interacting with storage.",null,null],[13,"Sled","","An error occurred interacting with <code>sled</code>.",162,null],[13,"InternalSerialization","","An error occurred serializing the underlying database …",162,null],[13,"Serialization","","An error occurred serializing the contents of a <code>Document</code> …",162,null],[13,"InternalCommunication","","An internal error occurred while waiting for a message.",162,null],[13,"View","","An error occurred while executing a view",162,null],[13,"Core","","An internal error occurred while waiting for a message.",162,null],[13,"Other","","An internal error occurred while waiting for a message.",162,null],[3,"Storage","","A local, file-based database.",null,null],[0,"cli","pliantdb::server","Command-line interface for the server.",null,null],[0,"certificate","pliantdb::server::cli","Command-line interface for managing the root certificate.",null,null],[4,"Command","pliantdb::server::cli::certificate","Command to manage the server\'s certificates.",null,null],[13,"InstallSelfSigned","","Installs a self-signed certificate into the server. The …",163,null],[12,"server_name","pliantdb::server::cli::certificate::Command","The name of the server. If this server has a DNS name, …",164,null],[12,"overwrite","","If an existing certificate exists, an error will be …",164,null],[13,"Install","pliantdb::server::cli::certificate","Installs a X.509 certificate and associated private key …",163,null],[12,"private_key","pliantdb::server::cli::certificate::Command","A private key used to generate <code>certificate</code> in binary DER …",165,null],[12,"certificate","","The X.509 certificate in binary DER format.",165,null],[0,"serve","pliantdb::server::cli","Command-line interface for hosting a server.",null,null],[3,"Serve","pliantdb::server::cli::serve","Execute the server",null,null],[12,"listen_on","","The bind address and port. Defaults to 5645",166,null],[3,"Cli","pliantdb::server::cli","Command-line interface for <code>pliantdb server</code>.",null,null],[12,"server_data_directory","","The path to the directory where the server should store …",167,null],[12,"subcommand","","The command to execute.",167,null],[4,"Command","","Available commands for <code>pliantdb server</code>.",null,null],[13,"Certificate","","Manage the server\'s root certificate.",168,null],[13,"Serve","","Execute the server.",168,null],[0,"test_util","pliantdb::server","",null,null],[17,"BASIC_SERVER_NAME","pliantdb::server::test_util","",null,null],[5,"initialize_basic_server","","",null,[[["path",3]]]],[5,"basic_server_connection_tests","","",null,[[]]],[3,"Configuration","pliantdb::server","Configuration options for <code>Server</code>",null,null],[12,"request_workers","","Number of simultaneous requests to be processed. Default …",169,null],[12,"storage","","Configuration options for individual databases.",169,null],[4,"Error","","An error occurred while interacting with a <code>Server</code>.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See …",170,null],[13,"DatabaseNotFound","","The database name given was not found.",170,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",170,null],[13,"Transport","","An error occurred from the QUIC transport layer.",170,null],[13,"Websocket","","An error occurred from the Websocket transport layer.",170,null],[13,"Io","","An error occurred from IO",170,null],[13,"Request","","An error occurred while processing a request",170,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",170,null],[12,"database_name","pliantdb::server::Error","The name of the database being accessed.",171,null],[12,"schema","","The schema provided for the database.",171,null],[12,"stored_schema","","The schema stored for the database.",171,null],[13,"SchemaAlreadyRegistered","pliantdb::server","The [<code>SchemaName</code>] returned has already been registered …",170,null],[13,"Core","","An error occurred from within the schema.",170,null],[13,"Storage","","An error occurred while interacting with a local database.",170,null],[3,"Database","","A database hosted on a server.",null,null],[3,"Server","","A <code>PliantDB</code> server.",null,null],[11,"from","pliantdb::cli","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","pliantdb::client::url","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"to_string","","",172,[[],["string",3]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"vzip","","",172,[[]]],[11,"equivalent","","",172,[[],["bool",15]]],[11,"init","","",172,[[],["usize",15]]],[11,"deref","","",172,[[["usize",15]]]],[11,"deref_mut","","",172,[[["usize",15]]]],[11,"drop","","",172,[[["usize",15]]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"vzip","","",173,[[]]],[11,"init","","",173,[[],["usize",15]]],[11,"deref","","",173,[[["usize",15]]]],[11,"deref_mut","","",173,[[["usize",15]]]],[11,"drop","","",173,[[["usize",15]]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"vzip","","",174,[[]]],[11,"init","","",174,[[],["usize",15]]],[11,"deref","","",174,[[["usize",15]]]],[11,"deref_mut","","",174,[[["usize",15]]]],[11,"drop","","",174,[[["usize",15]]]],[11,"from","pliantdb::client::url::form_urlencoded","",175,[[]]],[11,"into","","",175,[[]]],[11,"into_iter","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"vzip","","",175,[[]]],[11,"init","","",175,[[],["usize",15]]],[11,"deref","","",175,[[["usize",15]]]],[11,"deref_mut","","",175,[[["usize",15]]]],[11,"drop","","",175,[[["usize",15]]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"into_iter","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"vzip","","",176,[[]]],[11,"init","","",176,[[],["usize",15]]],[11,"deref","","",176,[[["usize",15]]]],[11,"deref_mut","","",176,[[["usize",15]]]],[11,"drop","","",176,[[["usize",15]]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"into_iter","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"vzip","","",177,[[]]],[11,"init","","",177,[[],["usize",15]]],[11,"deref","","",177,[[["usize",15]]]],[11,"deref_mut","","",177,[[["usize",15]]]],[11,"drop","","",177,[[["usize",15]]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"vzip","","",178,[[]]],[11,"init","","",178,[[],["usize",15]]],[11,"deref","","",178,[[["usize",15]]]],[11,"deref_mut","","",178,[[["usize",15]]]],[11,"drop","","",178,[[["usize",15]]]],[11,"from","pliantdb::client::url","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"equivalent","","",2,[[],["bool",15]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"vzip","","",179,[[]]],[11,"equivalent","","",179,[[],["bool",15]]],[11,"init","","",179,[[],["usize",15]]],[11,"deref","","",179,[[["usize",15]]]],[11,"deref_mut","","",179,[[["usize",15]]]],[11,"drop","","",179,[[["usize",15]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"equivalent","","",3,[[],["bool",15]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","pliantdb::local::core::networking::fabruic::error","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"equivalent","","",4,[[],["bool",15]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","pliantdb::client::url","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"equivalent","","",5,[[],["bool",15]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"vzip","","",180,[[]]],[11,"init","","",180,[[],["usize",15]]],[11,"deref","","",180,[[["usize",15]]]],[11,"deref_mut","","",180,[[["usize",15]]]],[11,"drop","","",180,[[["usize",15]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","pliantdb::client","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"vzip","","",181,[[]]],[11,"init","","",181,[[],["usize",15]]],[11,"deref","","",181,[[["usize",15]]]],[11,"deref_mut","","",181,[[["usize",15]]]],[11,"drop","","",181,[[["usize",15]]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"vzip","","",182,[[]]],[11,"init","","",182,[[],["usize",15]]],[11,"deref","","",182,[[["usize",15]]]],[11,"deref_mut","","",182,[[["usize",15]]]],[11,"drop","","",182,[[["usize",15]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","pliantdb::local::core::connection","",183,[[]]],[11,"into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"vzip","","",183,[[]]],[11,"init","","",183,[[],["usize",15]]],[11,"deref","","",183,[[["usize",15]]]],[11,"deref_mut","","",183,[[["usize",15]]]],[11,"drop","","",183,[[["usize",15]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","pliantdb::local::core::document","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"equivalent","","",12,[[],["bool",15]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"equivalent","","",14,[[],["bool",15]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"from","pliantdb::local::core::networking","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[],["usize",15]]],[11,"deref","","",18,[[["usize",15]]]],[11,"deref_mut","","",18,[[["usize",15]]]],[11,"drop","","",18,[[["usize",15]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[],["usize",15]]],[11,"deref","","",20,[[["usize",15]]]],[11,"deref_mut","","",20,[[["usize",15]]]],[11,"drop","","",20,[[["usize",15]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[],["usize",15]]],[11,"deref","","",31,[[["usize",15]]]],[11,"deref_mut","","",31,[[["usize",15]]]],[11,"drop","","",31,[[["usize",15]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[],["usize",15]]],[11,"deref","","",34,[[["usize",15]]]],[11,"deref_mut","","",34,[[["usize",15]]]],[11,"drop","","",34,[[["usize",15]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[],["usize",15]]],[11,"deref","","",37,[[["usize",15]]]],[11,"deref_mut","","",37,[[["usize",15]]]],[11,"drop","","",37,[[["usize",15]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[],["usize",15]]],[11,"deref","","",38,[[["usize",15]]]],[11,"deref_mut","","",38,[[["usize",15]]]],[11,"drop","","",38,[[["usize",15]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[],["usize",15]]],[11,"deref","","",40,[[["usize",15]]]],[11,"deref_mut","","",40,[[["usize",15]]]],[11,"drop","","",40,[[["usize",15]]]],[11,"from","pliantdb::local::core::networking::fabruic::error","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[],["usize",15]]],[11,"deref","","",45,[[["usize",15]]]],[11,"deref_mut","","",45,[[["usize",15]]]],[11,"drop","","",45,[[["usize",15]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[],["usize",15]]],[11,"deref","","",46,[[["usize",15]]]],[11,"deref_mut","","",46,[[["usize",15]]]],[11,"drop","","",46,[[["usize",15]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"equivalent","","",47,[[],["bool",15]]],[11,"init","","",47,[[],["usize",15]]],[11,"deref","","",47,[[["usize",15]]]],[11,"deref_mut","","",47,[[["usize",15]]]],[11,"drop","","",47,[[["usize",15]]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"to_string","","",184,[[],["string",3]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"vzip","","",184,[[]]],[11,"equivalent","","",184,[[],["bool",15]]],[11,"init","","",184,[[],["usize",15]]],[11,"deref","","",184,[[["usize",15]]]],[11,"deref_mut","","",184,[[["usize",15]]]],[11,"drop","","",184,[[["usize",15]]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"to_string","","",185,[[],["string",3]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"vzip","","",185,[[]]],[11,"equivalent","","",185,[[],["bool",15]]],[11,"init","","",185,[[],["usize",15]]],[11,"deref","","",185,[[["usize",15]]]],[11,"deref_mut","","",185,[[["usize",15]]]],[11,"drop","","",185,[[["usize",15]]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"to_string","","",186,[[],["string",3]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"vzip","","",186,[[]]],[11,"equivalent","","",186,[[],["bool",15]]],[11,"init","","",186,[[],["usize",15]]],[11,"deref","","",186,[[["usize",15]]]],[11,"deref_mut","","",186,[[["usize",15]]]],[11,"drop","","",186,[[["usize",15]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[],["usize",15]]],[11,"deref","","",48,[[["usize",15]]]],[11,"deref_mut","","",48,[[["usize",15]]]],[11,"drop","","",48,[[["usize",15]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[],["usize",15]]],[11,"deref","","",49,[[["usize",15]]]],[11,"deref_mut","","",49,[[["usize",15]]]],[11,"drop","","",49,[[["usize",15]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"equivalent","","",50,[[],["bool",15]]],[11,"init","","",50,[[],["usize",15]]],[11,"deref","","",50,[[["usize",15]]]],[11,"deref_mut","","",50,[[["usize",15]]]],[11,"drop","","",50,[[["usize",15]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"equivalent","","",51,[[],["bool",15]]],[11,"init","","",51,[[],["usize",15]]],[11,"deref","","",51,[[["usize",15]]]],[11,"deref_mut","","",51,[[["usize",15]]]],[11,"drop","","",51,[[["usize",15]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[],["usize",15]]],[11,"deref","","",52,[[["usize",15]]]],[11,"deref_mut","","",52,[[["usize",15]]]],[11,"drop","","",52,[[["usize",15]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[],["usize",15]]],[11,"deref","","",53,[[["usize",15]]]],[11,"deref_mut","","",53,[[["usize",15]]]],[11,"drop","","",53,[[["usize",15]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[],["usize",15]]],[11,"deref","","",54,[[["usize",15]]]],[11,"deref_mut","","",54,[[["usize",15]]]],[11,"drop","","",54,[[["usize",15]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[],["usize",15]]],[11,"deref","","",55,[[["usize",15]]]],[11,"deref_mut","","",55,[[["usize",15]]]],[11,"drop","","",55,[[["usize",15]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[],["usize",15]]],[11,"deref","","",56,[[["usize",15]]]],[11,"deref_mut","","",56,[[["usize",15]]]],[11,"drop","","",56,[[["usize",15]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"equivalent","","",57,[[],["bool",15]]],[11,"init","","",57,[[],["usize",15]]],[11,"deref","","",57,[[["usize",15]]]],[11,"deref_mut","","",57,[[["usize",15]]]],[11,"drop","","",57,[[["usize",15]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"equivalent","","",58,[[],["bool",15]]],[11,"init","","",58,[[],["usize",15]]],[11,"deref","","",58,[[["usize",15]]]],[11,"deref_mut","","",58,[[["usize",15]]]],[11,"drop","","",58,[[["usize",15]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"equivalent","","",59,[[],["bool",15]]],[11,"init","","",59,[[],["usize",15]]],[11,"deref","","",59,[[["usize",15]]]],[11,"deref_mut","","",59,[[["usize",15]]]],[11,"drop","","",59,[[["usize",15]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"to_string","","",60,[[],["string",3]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"equivalent","","",60,[[],["bool",15]]],[11,"init","","",60,[[],["usize",15]]],[11,"deref","","",60,[[["usize",15]]]],[11,"deref_mut","","",60,[[["usize",15]]]],[11,"drop","","",60,[[["usize",15]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"to_string","","",61,[[],["string",3]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[],["usize",15]]],[11,"deref","","",61,[[["usize",15]]]],[11,"deref_mut","","",61,[[["usize",15]]]],[11,"drop","","",61,[[["usize",15]]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"to_string","","",187,[[],["string",3]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"vzip","","",187,[[]]],[11,"init","","",187,[[],["usize",15]]],[11,"deref","","",187,[[["usize",15]]]],[11,"deref_mut","","",187,[[["usize",15]]]],[11,"drop","","",187,[[["usize",15]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[],["usize",15]]],[11,"deref","","",62,[[["usize",15]]]],[11,"deref_mut","","",62,[[["usize",15]]]],[11,"drop","","",62,[[["usize",15]]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"equivalent","","",63,[[],["bool",15]]],[11,"init","","",63,[[],["usize",15]]],[11,"deref","","",63,[[["usize",15]]]],[11,"deref_mut","","",63,[[["usize",15]]]],[11,"drop","","",63,[[["usize",15]]]],[11,"from","pliantdb::local::core::networking::fabruic","",188,[[]]],[11,"into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"vzip","","",188,[[]]],[11,"init","","",188,[[],["usize",15]]],[11,"deref","","",188,[[["usize",15]]]],[11,"deref_mut","","",188,[[["usize",15]]]],[11,"drop","","",188,[[["usize",15]]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"vzip","","",189,[[]]],[11,"init","","",189,[[],["usize",15]]],[11,"deref","","",189,[[["usize",15]]]],[11,"deref_mut","","",189,[[["usize",15]]]],[11,"drop","","",189,[[["usize",15]]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"try_poll_next","","",190,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"vzip","","",190,[[]]],[11,"init","","",190,[[],["usize",15]]],[11,"deref","","",190,[[["usize",15]]]],[11,"deref_mut","","",190,[[["usize",15]]]],[11,"drop","","",190,[[["usize",15]]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"vzip","","",191,[[]]],[11,"init","","",191,[[],["usize",15]]],[11,"deref","","",191,[[["usize",15]]]],[11,"deref_mut","","",191,[[["usize",15]]]],[11,"drop","","",191,[[["usize",15]]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"vzip","","",192,[[]]],[11,"init","","",192,[[],["usize",15]]],[11,"deref","","",192,[[["usize",15]]]],[11,"deref_mut","","",192,[[["usize",15]]]],[11,"drop","","",192,[[["usize",15]]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"try_poll_next","","",193,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"vzip","","",193,[[]]],[11,"init","","",193,[[],["usize",15]]],[11,"deref","","",193,[[["usize",15]]]],[11,"deref_mut","","",193,[[["usize",15]]]],[11,"drop","","",193,[[["usize",15]]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"vzip","","",194,[[]]],[11,"init","","",194,[[],["usize",15]]],[11,"deref","","",194,[[["usize",15]]]],[11,"deref_mut","","",194,[[["usize",15]]]],[11,"drop","","",194,[[["usize",15]]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"equivalent","","",64,[[],["bool",15]]],[11,"init","","",64,[[],["usize",15]]],[11,"deref","","",64,[[["usize",15]]]],[11,"deref_mut","","",64,[[["usize",15]]]],[11,"drop","","",64,[[["usize",15]]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"as_bits","","",195,[[],["bitslice",3]]],[11,"vzip","","",195,[[]]],[11,"equivalent","","",195,[[],["bool",15]]],[11,"init","","",195,[[],["usize",15]]],[11,"deref","","",195,[[["usize",15]]]],[11,"deref_mut","","",195,[[["usize",15]]]],[11,"drop","","",195,[[["usize",15]]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"vzip","","",196,[[]]],[11,"equivalent","","",196,[[],["bool",15]]],[11,"init","","",196,[[],["usize",15]]],[11,"deref","","",196,[[["usize",15]]]],[11,"deref_mut","","",196,[[["usize",15]]]],[11,"drop","","",196,[[["usize",15]]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"vzip","","",197,[[]]],[11,"equivalent","","",197,[[],["bool",15]]],[11,"init","","",197,[[],["usize",15]]],[11,"deref","","",197,[[["usize",15]]]],[11,"deref_mut","","",197,[[["usize",15]]]],[11,"drop","","",197,[[["usize",15]]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"vzip","","",198,[[]]],[11,"equivalent","","",198,[[],["bool",15]]],[11,"init","","",198,[[],["usize",15]]],[11,"deref","","",198,[[["usize",15]]]],[11,"deref_mut","","",198,[[["usize",15]]]],[11,"drop","","",198,[[["usize",15]]]],[11,"from","pliantdb::local::core::schema","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[],["usize",15]]],[11,"deref","","",65,[[["usize",15]]]],[11,"deref_mut","","",65,[[["usize",15]]]],[11,"drop","","",65,[[["usize",15]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"init","","",66,[[],["usize",15]]],[11,"deref","","",66,[[["usize",15]]]],[11,"deref_mut","","",66,[[["usize",15]]]],[11,"drop","","",66,[[["usize",15]]]],[11,"from","pliantdb::local::core::schema::view::map","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"init","","",67,[[],["usize",15]]],[11,"deref","","",67,[[["usize",15]]]],[11,"deref_mut","","",67,[[["usize",15]]]],[11,"drop","","",67,[[["usize",15]]]],[11,"from","pliantdb::local::core::schema","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"init","","",68,[[],["usize",15]]],[11,"deref","","",68,[[["usize",15]]]],[11,"deref_mut","","",68,[[["usize",15]]]],[11,"drop","","",68,[[["usize",15]]]],[11,"from","pliantdb::local::core::schema::view","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_string","","",70,[[],["string",3]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"init","","",70,[[],["usize",15]]],[11,"deref","","",70,[[["usize",15]]]],[11,"deref_mut","","",70,[[["usize",15]]]],[11,"drop","","",70,[[["usize",15]]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"as_bits","","",72,[[],["bitslice",3]]],[11,"vzip","","",72,[[]]],[11,"init","","",72,[[],["usize",15]]],[11,"deref","","",72,[[["usize",15]]]],[11,"deref_mut","","",72,[[["usize",15]]]],[11,"drop","","",72,[[["usize",15]]]],[11,"from","pliantdb::local::core::schema","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"to_string","","",199,[[],["string",3]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"vzip","","",199,[[]]],[11,"equivalent","","",199,[[],["bool",15]]],[11,"init","","",199,[[],["usize",15]]],[11,"deref","","",199,[[["usize",15]]]],[11,"deref_mut","","",199,[[["usize",15]]]],[11,"drop","","",199,[[["usize",15]]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"to_string","","",76,[[],["string",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"equivalent","","",76,[[],["bool",15]]],[11,"init","","",76,[[],["usize",15]]],[11,"deref","","",76,[[["usize",15]]]],[11,"deref_mut","","",76,[[["usize",15]]]],[11,"drop","","",76,[[["usize",15]]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"to_string","","",77,[[],["string",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"init","","",77,[[],["usize",15]]],[11,"deref","","",77,[[["usize",15]]]],[11,"deref_mut","","",77,[[["usize",15]]]],[11,"drop","","",77,[[["usize",15]]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"to_string","","",200,[[],["string",3]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"vzip","","",200,[[]]],[11,"equivalent","","",200,[[],["bool",15]]],[11,"init","","",200,[[],["usize",15]]],[11,"deref","","",200,[[["usize",15]]]],[11,"deref_mut","","",200,[[["usize",15]]]],[11,"drop","","",200,[[["usize",15]]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"equivalent","","",78,[[],["bool",15]]],[11,"init","","",78,[[],["usize",15]]],[11,"deref","","",78,[[["usize",15]]]],[11,"deref_mut","","",78,[[["usize",15]]]],[11,"drop","","",78,[[["usize",15]]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"equivalent","","",79,[[],["bool",15]]],[11,"init","","",79,[[],["usize",15]]],[11,"deref","","",79,[[["usize",15]]]],[11,"deref_mut","","",79,[[["usize",15]]]],[11,"drop","","",79,[[["usize",15]]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"vzip","","",201,[[]]],[11,"init","","",201,[[],["usize",15]]],[11,"deref","","",201,[[["usize",15]]]],[11,"deref_mut","","",201,[[["usize",15]]]],[11,"drop","","",201,[[["usize",15]]]],[11,"from","pliantdb::local::core::transaction","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"init","","",80,[[],["usize",15]]],[11,"deref","","",80,[[["usize",15]]]],[11,"deref_mut","","",80,[[["usize",15]]]],[11,"drop","","",80,[[["usize",15]]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"init","","",81,[[],["usize",15]]],[11,"deref","","",81,[[["usize",15]]]],[11,"deref_mut","","",81,[[["usize",15]]]],[11,"drop","","",81,[[["usize",15]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"init","","",82,[[],["usize",15]]],[11,"deref","","",82,[[["usize",15]]]],[11,"deref_mut","","",82,[[["usize",15]]]],[11,"drop","","",82,[[["usize",15]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"init","","",86,[[],["usize",15]]],[11,"deref","","",86,[[["usize",15]]]],[11,"deref_mut","","",86,[[["usize",15]]]],[11,"drop","","",86,[[["usize",15]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"init","","",89,[[],["usize",15]]],[11,"deref","","",89,[[["usize",15]]]],[11,"deref_mut","","",89,[[["usize",15]]]],[11,"drop","","",89,[[["usize",15]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"init","","",90,[[],["usize",15]]],[11,"deref","","",90,[[["usize",15]]]],[11,"deref_mut","","",90,[[["usize",15]]]],[11,"drop","","",90,[[["usize",15]]]],[11,"from","pliantdb::local::core::kv::get","",202,[[]]],[11,"into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"into_future","","",202,[[]]],[11,"try_poll","","",202,[[["pin",3],["context",3]],["poll",4]]],[11,"vzip","","",202,[[]]],[11,"init","","",202,[[],["usize",15]]],[11,"deref","","",202,[[["usize",15]]]],[11,"deref_mut","","",202,[[["usize",15]]]],[11,"drop","","",202,[[["usize",15]]]],[11,"from","pliantdb::local::core::kv::namespaced","",203,[[]]],[11,"into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"vzip","","",203,[[]]],[11,"init","","",203,[[],["usize",15]]],[11,"deref","","",203,[[["usize",15]]]],[11,"deref_mut","","",203,[[["usize",15]]]],[11,"drop","","",203,[[["usize",15]]]],[11,"from","pliantdb::local::core::kv::set","",204,[[]]],[11,"into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"into_future","","",204,[[]]],[11,"try_poll","","",204,[[["pin",3],["context",3]],["poll",4]]],[11,"vzip","","",204,[[]]],[11,"init","","",204,[[],["usize",15]]],[11,"deref","","",204,[[["usize",15]]]],[11,"deref_mut","","",204,[[["usize",15]]]],[11,"drop","","",204,[[["usize",15]]]],[11,"from","pliantdb::local::core::kv","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"equivalent","","",91,[[],["bool",15]]],[11,"init","","",91,[[],["usize",15]]],[11,"deref","","",91,[[["usize",15]]]],[11,"deref_mut","","",91,[[["usize",15]]]],[11,"drop","","",91,[[["usize",15]]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"init","","",93,[[],["usize",15]]],[11,"deref","","",93,[[["usize",15]]]],[11,"deref_mut","","",93,[[["usize",15]]]],[11,"drop","","",93,[[["usize",15]]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"init","","",94,[[],["usize",15]]],[11,"deref","","",94,[[["usize",15]]]],[11,"deref_mut","","",94,[[["usize",15]]]],[11,"drop","","",94,[[["usize",15]]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"init","","",95,[[],["usize",15]]],[11,"deref","","",95,[[["usize",15]]]],[11,"deref_mut","","",95,[[["usize",15]]]],[11,"drop","","",95,[[["usize",15]]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"init","","",98,[[],["usize",15]]],[11,"deref","","",98,[[["usize",15]]]],[11,"deref_mut","","",98,[[["usize",15]]]],[11,"drop","","",98,[[["usize",15]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"init","","",99,[[],["usize",15]]],[11,"deref","","",99,[[["usize",15]]]],[11,"deref_mut","","",99,[[["usize",15]]]],[11,"drop","","",99,[[["usize",15]]]],[11,"from","pliantdb::local::core","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"to_string","","",102,[[],["string",3]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"init","","",102,[[],["usize",15]]],[11,"deref","","",102,[[["usize",15]]]],[11,"deref_mut","","",102,[[["usize",15]]]],[11,"drop","","",102,[[["usize",15]]]],[11,"from","pliantdb::local::core::test_util","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"schema_name","","",103,[[],[["result",4],["invalidnameerror",3],["schemaname",3]]]],[11,"define_collections","","",103,[[["schematic",3]],[["error",4],["result",4]]]],[11,"vzip","","",103,[[]]],[11,"init","","",103,[[],["usize",15]]],[11,"deref","","",103,[[["usize",15]]]],[11,"deref_mut","","",103,[[["usize",15]]]],[11,"drop","","",103,[[["usize",15]]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"collection","","",205,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"version","","",205,[[],["u64",15]]],[11,"view_name","","",205,[[],[["invalidnameerror",3],["result",4],["viewname",3]]]],[11,"map","","",205,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",205,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"vzip","","",205,[[]]],[11,"init","","",205,[[],["usize",15]]],[11,"deref","","",205,[[["usize",15]]]],[11,"deref_mut","","",205,[[["usize",15]]]],[11,"drop","","",205,[[["usize",15]]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"collection","","",206,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"version","","",206,[[],["u64",15]]],[11,"view_name","","",206,[[],[["invalidnameerror",3],["result",4],["viewname",3]]]],[11,"map","","",206,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",206,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"vzip","","",206,[[]]],[11,"init","","",206,[[],["usize",15]]],[11,"deref","","",206,[[["usize",15]]]],[11,"deref_mut","","",206,[[["usize",15]]]],[11,"drop","","",206,[[["usize",15]]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"collection","","",207,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"version","","",207,[[],["u64",15]]],[11,"view_name","","",207,[[],[["invalidnameerror",3],["result",4],["viewname",3]]]],[11,"map","","",207,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",207,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"vzip","","",207,[[]]],[11,"init","","",207,[[],["usize",15]]],[11,"deref","","",207,[[["usize",15]]]],[11,"deref_mut","","",207,[[["usize",15]]]],[11,"drop","","",207,[[["usize",15]]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"collection","","",208,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"version","","",208,[[],["u64",15]]],[11,"view_name","","",208,[[],[["invalidnameerror",3],["result",4],["viewname",3]]]],[11,"map","","",208,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",208,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"vzip","","",208,[[]]],[11,"init","","",208,[[],["usize",15]]],[11,"deref","","",208,[[["usize",15]]]],[11,"deref_mut","","",208,[[["usize",15]]]],[11,"drop","","",208,[[["usize",15]]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"vzip","","",209,[[]]],[11,"init","","",209,[[],["usize",15]]],[11,"deref","","",209,[[["usize",15]]]],[11,"deref_mut","","",209,[[["usize",15]]]],[11,"drop","","",209,[[["usize",15]]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"init","","",104,[[],["usize",15]]],[11,"deref","","",104,[[["usize",15]]]],[11,"deref_mut","","",104,[[["usize",15]]]],[11,"drop","","",104,[[["usize",15]]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"schema_name","","",210,[[],[["result",4],["invalidnameerror",3],["schemaname",3]]]],[11,"define_collections","","",210,[[["schematic",3]],[["error",4],["result",4]]]],[11,"vzip","","",210,[[]]],[11,"init","","",210,[[],["usize",15]]],[11,"deref","","",210,[[["usize",15]]]],[11,"deref_mut","","",210,[[["usize",15]]]],[11,"drop","","",210,[[["usize",15]]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"schema_name","","",211,[[],[["result",4],["invalidnameerror",3],["schemaname",3]]]],[11,"define_collections","","",211,[[["schematic",3]],[["error",4],["result",4]]]],[11,"vzip","","",211,[[]]],[11,"init","","",211,[[],["usize",15]]],[11,"deref","","",211,[[["usize",15]]]],[11,"deref_mut","","",211,[[["usize",15]]]],[11,"drop","","",211,[[["usize",15]]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"schema_name","","",212,[[],[["result",4],["invalidnameerror",3],["schemaname",3]]]],[11,"define_collections","","",212,[[["schematic",3]],[["error",4],["result",4]]]],[11,"vzip","","",212,[[]]],[11,"init","","",212,[[],["usize",15]]],[11,"deref","","",212,[[["usize",15]]]],[11,"deref_mut","","",212,[[["usize",15]]]],[11,"drop","","",212,[[["usize",15]]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"to_string","","",105,[[],["string",3]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"init","","",105,[[],["usize",15]]],[11,"deref","","",105,[[["usize",15]]]],[11,"deref_mut","","",105,[[["usize",15]]]],[11,"drop","","",105,[[["usize",15]]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"vzip","","",213,[[]]],[11,"init","","",213,[[],["usize",15]]],[11,"deref","","",213,[[["usize",15]]]],[11,"deref_mut","","",213,[[["usize",15]]]],[11,"drop","","",213,[[["usize",15]]]],[11,"from","pliantdb::local::core::circulate","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"init","","",106,[[],["usize",15]]],[11,"deref","","",106,[[["usize",15]]]],[11,"deref_mut","","",106,[[["usize",15]]]],[11,"drop","","",106,[[["usize",15]]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"vzip","","",214,[[]]],[11,"init","","",214,[[],["usize",15]]],[11,"deref","","",214,[[["usize",15]]]],[11,"deref_mut","","",214,[[["usize",15]]]],[11,"drop","","",214,[[["usize",15]]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"vzip","","",215,[[]]],[11,"init","","",215,[[],["usize",15]]],[11,"deref","","",215,[[["usize",15]]]],[11,"deref_mut","","",215,[[["usize",15]]]],[11,"drop","","",215,[[["usize",15]]]],[11,"from","pliantdb::local::core::circulate::flume::select","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"to_string","","",107,[[],["string",3]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"equivalent","","",107,[[],["bool",15]]],[11,"init","","",107,[[],["usize",15]]],[11,"deref","","",107,[[["usize",15]]]],[11,"deref_mut","","",107,[[["usize",15]]]],[11,"drop","","",107,[[["usize",15]]]],[11,"from","pliantdb::local::core::circulate::flume","",216,[[]]],[11,"into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"vzip","","",216,[[]]],[11,"init","","",216,[[],["usize",15]]],[11,"deref","","",216,[[["usize",15]]]],[11,"deref_mut","","",216,[[["usize",15]]]],[11,"drop","","",216,[[["usize",15]]]],[11,"from","pliantdb::local::core::circulate::flume::async","",217,[[]]],[11,"into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"into_future","","",217,[[]]],[11,"try_poll","","",217,[[["pin",3],["context",3]],["poll",4]]],[11,"vzip","","",217,[[]]],[11,"init","","",217,[[],["usize",15]]],[11,"deref","","",217,[[["usize",15]]]],[11,"deref_mut","","",217,[[["usize",15]]]],[11,"drop","","",217,[[["usize",15]]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"vzip","","",218,[[]]],[11,"init","","",218,[[],["usize",15]]],[11,"deref","","",218,[[["usize",15]]]],[11,"deref_mut","","",218,[[["usize",15]]]],[11,"drop","","",218,[[["usize",15]]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"into_future","","",219,[[]]],[11,"try_poll","","",219,[[["pin",3],["context",3]],["poll",4]]],[11,"vzip","","",219,[[]]],[11,"init","","",219,[[],["usize",15]]],[11,"deref","","",219,[[["usize",15]]]],[11,"deref_mut","","",219,[[["usize",15]]]],[11,"drop","","",219,[[["usize",15]]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"try_poll_next","","",220,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"vzip","","",220,[[]]],[11,"init","","",220,[[],["usize",15]]],[11,"deref","","",220,[[["usize",15]]]],[11,"deref_mut","","",220,[[["usize",15]]]],[11,"drop","","",220,[[["usize",15]]]],[11,"from","pliantdb::local::core::circulate::flume","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"to_string","","",108,[[],["string",3]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"equivalent","","",108,[[],["bool",15]]],[11,"init","","",108,[[],["usize",15]]],[11,"deref","","",108,[[["usize",15]]]],[11,"deref_mut","","",108,[[["usize",15]]]],[11,"drop","","",108,[[["usize",15]]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"to_string","","",109,[[],["string",3]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"equivalent","","",109,[[],["bool",15]]],[11,"init","","",109,[[],["usize",15]]],[11,"deref","","",109,[[["usize",15]]]],[11,"deref_mut","","",109,[[["usize",15]]]],[11,"drop","","",109,[[["usize",15]]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"to_string","","",110,[[],["string",3]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"equivalent","","",110,[[],["bool",15]]],[11,"init","","",110,[[],["usize",15]]],[11,"deref","","",110,[[["usize",15]]]],[11,"deref_mut","","",110,[[["usize",15]]]],[11,"drop","","",110,[[["usize",15]]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"to_string","","",111,[[],["string",3]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"equivalent","","",111,[[],["bool",15]]],[11,"init","","",111,[[],["usize",15]]],[11,"deref","","",111,[[["usize",15]]]],[11,"deref_mut","","",111,[[["usize",15]]]],[11,"drop","","",111,[[["usize",15]]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"to_string","","",112,[[],["string",3]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"equivalent","","",112,[[],["bool",15]]],[11,"init","","",112,[[],["usize",15]]],[11,"deref","","",112,[[["usize",15]]]],[11,"deref_mut","","",112,[[["usize",15]]]],[11,"drop","","",112,[[["usize",15]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"equivalent","","",113,[[],["bool",15]]],[11,"init","","",113,[[],["usize",15]]],[11,"deref","","",113,[[["usize",15]]]],[11,"deref_mut","","",113,[[["usize",15]]]],[11,"drop","","",113,[[["usize",15]]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"vzip","","",221,[[]]],[11,"init","","",221,[[],["usize",15]]],[11,"deref","","",221,[[["usize",15]]]],[11,"deref_mut","","",221,[[["usize",15]]]],[11,"drop","","",221,[[["usize",15]]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"vzip","","",222,[[]]],[11,"init","","",222,[[],["usize",15]]],[11,"deref","","",222,[[["usize",15]]]],[11,"deref_mut","","",222,[[["usize",15]]]],[11,"drop","","",222,[[["usize",15]]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"into_iter","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"nfd","","",223,[[],["decompositions",3]]],[11,"nfkd","","",223,[[],["decompositions",3]]],[11,"nfc","","",223,[[],["recompositions",3]]],[11,"nfkc","","",223,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",223,[[],["replacements",3]]],[11,"stream_safe","","",223,[[],["streamsafe",3]]],[11,"vzip","","",223,[[]]],[11,"emit","","",223,[[["binencoder",3]],[["usize",15],["result",4],["protoerror",3]]]],[11,"init","","",223,[[],["usize",15]]],[11,"deref","","",223,[[["usize",15]]]],[11,"deref_mut","","",223,[[["usize",15]]]],[11,"drop","","",223,[[["usize",15]]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"into_iter","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"nfd","","",224,[[],["decompositions",3]]],[11,"nfkd","","",224,[[],["decompositions",3]]],[11,"nfc","","",224,[[],["recompositions",3]]],[11,"nfkc","","",224,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",224,[[],["replacements",3]]],[11,"stream_safe","","",224,[[],["streamsafe",3]]],[11,"vzip","","",224,[[]]],[11,"emit","","",224,[[["binencoder",3]],[["usize",15],["result",4],["protoerror",3]]]],[11,"init","","",224,[[],["usize",15]]],[11,"deref","","",224,[[["usize",15]]]],[11,"deref_mut","","",224,[[["usize",15]]]],[11,"drop","","",224,[[["usize",15]]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"into_iter","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"nfd","","",225,[[],["decompositions",3]]],[11,"nfkd","","",225,[[],["decompositions",3]]],[11,"nfc","","",225,[[],["recompositions",3]]],[11,"nfkc","","",225,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",225,[[],["replacements",3]]],[11,"stream_safe","","",225,[[],["streamsafe",3]]],[11,"vzip","","",225,[[]]],[11,"emit","","",225,[[["binencoder",3]],[["usize",15],["result",4],["protoerror",3]]]],[11,"init","","",225,[[],["usize",15]]],[11,"deref","","",225,[[["usize",15]]]],[11,"deref_mut","","",225,[[["usize",15]]]],[11,"drop","","",225,[[["usize",15]]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"into_iter","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"nfd","","",226,[[],["decompositions",3]]],[11,"nfkd","","",226,[[],["decompositions",3]]],[11,"nfc","","",226,[[],["recompositions",3]]],[11,"nfkc","","",226,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",226,[[],["replacements",3]]],[11,"stream_safe","","",226,[[],["streamsafe",3]]],[11,"vzip","","",226,[[]]],[11,"emit","","",226,[[["binencoder",3]],[["usize",15],["result",4],["protoerror",3]]]],[11,"init","","",226,[[],["usize",15]]],[11,"deref","","",226,[[["usize",15]]]],[11,"deref_mut","","",226,[[["usize",15]]]],[11,"drop","","",226,[[["usize",15]]]],[11,"from","pliantdb::local::core::num_traits","",153,[[]]],[11,"into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"vzip","","",153,[[]]],[11,"init","","",153,[[],["usize",15]]],[11,"deref","","",153,[[["usize",15]]]],[11,"deref_mut","","",153,[[["usize",15]]]],[11,"drop","","",153,[[["usize",15]]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_string","","",154,[[],["string",3]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"vzip","","",154,[[]]],[11,"init","","",154,[[],["usize",15]]],[11,"deref","","",154,[[["usize",15]]]],[11,"deref_mut","","",154,[[["usize",15]]]],[11,"drop","","",154,[[["usize",15]]]],[11,"from","pliantdb::local","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"vzip","","",155,[[]]],[11,"init","","",155,[[],["usize",15]]],[11,"deref","","",155,[[["usize",15]]]],[11,"deref_mut","","",155,[[["usize",15]]]],[11,"drop","","",155,[[["usize",15]]]],[11,"from","pliantdb::local::config","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"vzip","","",156,[[]]],[11,"init","","",156,[[],["usize",15]]],[11,"deref","","",156,[[["usize",15]]]],[11,"deref_mut","","",156,[[["usize",15]]]],[11,"drop","","",156,[[["usize",15]]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"vzip","","",157,[[]]],[11,"init","","",157,[[],["usize",15]]],[11,"deref","","",157,[[["usize",15]]]],[11,"deref_mut","","",157,[[["usize",15]]]],[11,"drop","","",157,[[["usize",15]]]],[11,"from","pliantdb::local::backup","",158,[[]]],[11,"into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"vzip","","",158,[[]]],[11,"init","","",158,[[],["usize",15]]],[11,"deref","","",158,[[["usize",15]]]],[11,"deref_mut","","",158,[[["usize",15]]]],[11,"drop","","",158,[[["usize",15]]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"vzip","","",159,[[]]],[11,"init","","",159,[[],["usize",15]]],[11,"deref","","",159,[[["usize",15]]]],[11,"deref_mut","","",159,[[["usize",15]]]],[11,"drop","","",159,[[["usize",15]]]],[11,"from","pliantdb::local","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_string","","",162,[[],["string",3]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"vzip","","",162,[[]]],[11,"init","","",162,[[],["usize",15]]],[11,"deref","","",162,[[["usize",15]]]],[11,"deref_mut","","",162,[[["usize",15]]]],[11,"drop","","",162,[[["usize",15]]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"vzip","","",227,[[]]],[11,"init","","",227,[[],["usize",15]]],[11,"deref","","",227,[[["usize",15]]]],[11,"deref_mut","","",227,[[["usize",15]]]],[11,"drop","","",227,[[["usize",15]]]],[11,"from","pliantdb::server::cli::certificate","",163,[[]]],[11,"into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"vzip","","",163,[[]]],[11,"init","","",163,[[],["usize",15]]],[11,"deref","","",163,[[["usize",15]]]],[11,"deref_mut","","",163,[[["usize",15]]]],[11,"drop","","",163,[[["usize",15]]]],[11,"from","pliantdb::server::cli::serve","",166,[[]]],[11,"into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"vzip","","",166,[[]]],[11,"init","","",166,[[],["usize",15]]],[11,"deref","","",166,[[["usize",15]]]],[11,"deref_mut","","",166,[[["usize",15]]]],[11,"drop","","",166,[[["usize",15]]]],[11,"from","pliantdb::server::cli","",167,[[]]],[11,"into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"vzip","","",167,[[]]],[11,"init","","",167,[[],["usize",15]]],[11,"deref","","",167,[[["usize",15]]]],[11,"deref_mut","","",167,[[["usize",15]]]],[11,"drop","","",167,[[["usize",15]]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"vzip","","",168,[[]]],[11,"init","","",168,[[],["usize",15]]],[11,"deref","","",168,[[["usize",15]]]],[11,"deref_mut","","",168,[[["usize",15]]]],[11,"drop","","",168,[[["usize",15]]]],[11,"from","pliantdb::server","",169,[[]]],[11,"into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"vzip","","",169,[[]]],[11,"init","","",169,[[],["usize",15]]],[11,"deref","","",169,[[["usize",15]]]],[11,"deref_mut","","",169,[[["usize",15]]]],[11,"drop","","",169,[[["usize",15]]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_string","","",170,[[],["string",3]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"vzip","","",170,[[]]],[11,"init","","",170,[[],["usize",15]]],[11,"deref","","",170,[[["usize",15]]]],[11,"deref_mut","","",170,[[["usize",15]]]],[11,"drop","","",170,[[["usize",15]]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"vzip","","",228,[[]]],[11,"init","","",228,[[],["usize",15]]],[11,"deref","","",228,[[["usize",15]]]],[11,"deref_mut","","",228,[[["usize",15]]]],[11,"drop","","",228,[[["usize",15]]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"vzip","","",229,[[]]],[11,"init","","",229,[[],["usize",15]]],[11,"deref","","",229,[[["usize",15]]]],[11,"deref_mut","","",229,[[["usize",15]]]],[11,"drop","","",229,[[["usize",15]]]],[11,"fmt","pliantdb::client","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",181,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"get","","",182,[[["u64",15]],[["pin",3],["box",3]]]],[11,"get_multiple","","",182,[[],[["box",3],["pin",3]]]],[11,"query","","",182,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"query_with_docs","","",182,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[11,"reduce","","",182,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"reduce_grouped","","",182,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"apply_transaction","","",182,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"list_executed_transactions","","",182,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[11,"last_transaction_id","","",182,[[],[["pin",3],["box",3]]]],[11,"execute_key_operation","","",182,[[["keyoperation",3]],[["box",3],["pin",3]]]],[11,"clone","","",182,[[],["remotedatabase",3]]],[11,"clone","","",181,[[],["client",3]]],[11,"create_subscriber","","",182,[[],[["box",3],["pin",3]]]],[11,"publish","","",182,[[],[["pin",3],["box",3]]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"from","pliantdb::local::core","",102,[[["error",4]],["error",4]]],[11,"from","pliantdb::client","",7,[[["sender",4]],["error",4]]],[11,"from","","",7,[[["error",4]],["error",4]]],[11,"from","","",7,[[["error",4]],["error",4]]],[11,"from","","",7,[[["stream",4]],["error",4]]],[11,"from","","",7,[[["senderror",3]],["error",4]]],[11,"from","","",7,[[["error",4]],["error",4]]],[11,"from","","",7,[[["connect",4]],["error",4]]],[11,"from","","",7,[[["recverror",4]],["error",4]]],[11,"from","","",7,[[["connecting",3]],["error",4]]],[11,"from","","",7,[[["receiver",4]],["error",4]]],[11,"from","","",7,[[["global",3],["box",3],["errorkind",4]],["error",4]]],[11,"create_database","","",181,[[["str",15],["schemaname",3]],[["pin",3],["box",3]]]],[11,"delete_database","","",181,[[["str",15]],[["pin",3],["box",3]]]],[11,"list_databases","","",181,[[],[["pin",3],["box",3]]]],[11,"list_available_schemas","","",181,[[],[["pin",3],["box",3]]]],[11,"try_from","pliantdb::client::url","",172,[[["str",15]],[["result",4],["url",3]]]],[11,"fmt","","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::client::url","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::client::url","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",2,[[]]],[11,"hash","","",179,[[]]],[11,"hash","","",172,[[]]],[11,"hash","","",3,[[]]],[11,"index","","",172,[[["range",3],["position",4]],["str",15]]],[11,"index","","",172,[[["rangefull",3]],["str",15]]],[11,"index","","",172,[[["rangeto",3],["position",4]],["str",15]]],[11,"index","","",172,[[["rangefrom",3],["position",4]],["str",15]]],[11,"partial_cmp","","",172,[[["url",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["host",4]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["host",4]],["bool",15]]],[11,"le","","",2,[[["host",4]],["bool",15]]],[11,"gt","","",2,[[["host",4]],["bool",15]]],[11,"ge","","",2,[[["host",4]],["bool",15]]],[11,"from","pliantdb::local::core::networking::fabruic::error","",4,[[["errors",3]],["parseerror",4]]],[11,"as_ref","pliantdb::client::url","",172,[[],["str",15]]],[11,"clone","","",3,[[],["origin",4]]],[11,"clone","","",173,[[],["parseoptions",3]]],[11,"clone","","",5,[[],["syntaxviolation",4]]],[11,"clone","","",6,[[],["position",4]]],[11,"clone","","",179,[[],["opaqueorigin",3]]],[11,"clone","pliantdb::local::core::networking::fabruic::error","",4,[[],["parseerror",4]]],[11,"clone","pliantdb::client::url","",2,[[],["host",4]]],[11,"clone","","",172,[[],["url",3]]],[11,"drop","","",174,[[]]],[11,"drop","","",180,[[]]],[11,"cmp","","",172,[[["url",3]],["ordering",4]]],[11,"cmp","","",2,[[["host",4]],["ordering",4]]],[11,"as_mut_string","","",174,[[],["string",3]]],[11,"finish","","",174,[[],["url",3]]],[11,"eq","","",172,[[["url",3]],["bool",15]]],[11,"eq","","",5,[[["syntaxviolation",4]],["bool",15]]],[11,"eq","","",3,[[["origin",4]],["bool",15]]],[11,"ne","","",3,[[["origin",4]],["bool",15]]],[11,"eq","","",179,[[["opaqueorigin",3]],["bool",15]]],[11,"ne","","",179,[[["opaqueorigin",3]],["bool",15]]],[11,"eq","","",2,[[["host",4]],["bool",15]]],[11,"eq","pliantdb::local::core::networking::fabruic::error","",4,[[["parseerror",4]],["bool",15]]],[11,"from_str","pliantdb::client::url","",172,[[["str",15]],[["result",4],["url",3],["parseerror",4]]]],[11,"fmt","pliantdb::client::url::form_urlencoded","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next","","",175,[[],["option",4]]],[11,"next","","",176,[[],["option",4]]],[11,"next","","",177,[[],[["option",4],["str",15]]]],[11,"size_hint","","",177,[[]]],[11,"clone","","",175,[[],["parse",3]]],[11,"fmt","pliantdb::local::core::circulate::flume","",222,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",221,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::circulate::flume::select","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::circulate::flume","",216,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",225,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"len","","",225,[[],["usize",15]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::circulate::flume::select","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::circulate::flume","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"is_terminated","pliantdb::local::core::circulate::flume::async","",219,[[],["bool",15]]],[11,"is_terminated","","",217,[[],["bool",15]]],[11,"into_iter","pliantdb::local::core::circulate::flume","",222,[[]]],[11,"next","","",225,[[],["option",4]]],[11,"next","","",224,[[],["option",4]]],[11,"next","","",226,[[],["option",4]]],[11,"next","","",223,[[],["option",4]]],[11,"poll_next","pliantdb::local::core::circulate::flume::async","",220,[[["context",3],["pin",3],["recvstream",3]],[["poll",4],["option",4]]]],[11,"default","pliantdb::local::core::circulate::flume","",216,[[],["selector",3]]],[11,"poll","pliantdb::local::core::circulate::flume::async","",219,[[["context",3],["recvfut",3],["pin",3]],["poll",4]]],[11,"poll","","",217,[[["context",3],["sendfut",3],["pin",3]],["poll",4]]],[11,"clone","","",218,[[],["sendsink",3]]],[11,"clone","pliantdb::local::core::circulate::flume::select","",107,[[],["selecterror",4]]],[11,"clone","pliantdb::local::core::circulate::flume","Clone this receiver. [<code>Receiver</code>] acts as a handle to the …",222,[[],["receiver",3]]],[11,"clone","","",112,[[],["tryrecverror",4]]],[11,"clone","","",108,[[],["senderror",3]]],[11,"clone","pliantdb::local::core::circulate::flume::async","",220,[[],["recvstream",3]]],[11,"clone","pliantdb::local::core::circulate::flume","",110,[[],["sendtimeouterror",4]]],[11,"clone","","",111,[[],["recverror",4]]],[11,"clone","","Clone this sender. [<code>Sender</code>] acts as a handle to the …",221,[[],["sender",3]]],[11,"clone","","",109,[[],["trysenderror",4]]],[11,"clone","","",113,[[],["recvtimeouterror",4]]],[11,"drop","pliantdb::local::core::circulate::flume::async","",217,[[]]],[11,"drop","pliantdb::local::core::circulate::flume","",221,[[]]],[11,"drop","","",222,[[]]],[11,"drop","pliantdb::local::core::circulate::flume::async","",219,[[]]],[11,"is_terminated","","",220,[[],["bool",15]]],[11,"eq","pliantdb::local::core::circulate::flume","",110,[[["sendtimeouterror",4]],["bool",15]]],[11,"ne","","",110,[[["sendtimeouterror",4]],["bool",15]]],[11,"eq","","",108,[[["senderror",3]],["bool",15]]],[11,"ne","","",108,[[["senderror",3]],["bool",15]]],[11,"eq","pliantdb::local::core::circulate::flume::select","",107,[[["selecterror",4]],["bool",15]]],[11,"eq","pliantdb::local::core::circulate::flume","",109,[[["trysenderror",4]],["bool",15]]],[11,"ne","","",109,[[["trysenderror",4]],["bool",15]]],[11,"eq","","",111,[[["recverror",4]],["bool",15]]],[11,"eq","","",113,[[["recvtimeouterror",4]],["bool",15]]],[11,"eq","","",112,[[["tryrecverror",4]],["bool",15]]],[11,"poll_ready","pliantdb::local::core::circulate::flume::async","",218,[[["pin",3],["sendsink",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",218,[[["pin",3],["sendsink",3]],["result",4]]],[11,"poll_flush","","",218,[[["pin",3],["sendsink",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",218,[[["pin",3],["sendsink",3],["context",3]],[["poll",4],["result",4]]]],[11,"try_from","pliantdb::local::core::schema","",199,[[["str",15]],[["authority",3],["result",4],["invalidnameerror",3]]]],[11,"try_from","","",199,[[["string",3]],[["authority",3],["result",4],["invalidnameerror",3]]]],[11,"try_from","","",200,[[["str",15]],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"try_from","","",76,[[["str",15]],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"try_from","","",78,[[["str",15]],[["result",4],["invalidnameerror",3],["schemaname",3]]]],[11,"try_from","","",200,[[["string",3]],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"fmt","pliantdb::local::core::networking","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::document","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::transaction","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",212,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::document","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::transaction","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema::view","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::kv","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::transaction","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::transaction","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",207,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",206,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::kv","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",210,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",200,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",208,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::transaction","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",211,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::kv","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::connection","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::document","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema::view::map","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::connection","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",205,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::kv","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",209,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema::view","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",200,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",78,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",200,[[]]],[11,"hash","","",199,[[]]],[11,"schema_name","pliantdb::local::core::test_util","",209,[[],[["result",4],["invalidnameerror",3],["schemaname",3]]]],[11,"define_collections","","",209,[[["schematic",3]],[["error",4],["result",4]]]],[11,"partial_cmp","pliantdb::local::core::kv","",91,[[["timestamp",3]],[["option",4],["ordering",4]]]],[11,"lt","","",91,[[["timestamp",3]],["bool",15]]],[11,"le","","",91,[[["timestamp",3]],["bool",15]]],[11,"gt","","",91,[[["timestamp",3]],["bool",15]]],[11,"ge","","",91,[[["timestamp",3]],["bool",15]]],[11,"from","pliantdb::local::core::schema::view","",70,[[["error",3]],["error",4]]],[11,"from","pliantdb::local::core","",102,[[["invalidnameerror",3]],["error",4]]],[11,"from","pliantdb::local::core::kv","",91,[[["systemtime",3]],["timestamp",3]]],[11,"from","pliantdb::local::core::schema::view","",72,[[],["serializablevalue",4]]],[11,"from","pliantdb::local::core","",102,[[["error",3]],["error",4]]],[11,"serialize","pliantdb::local::core::kv","",94,[[],["result",4]]],[11,"serialize","pliantdb::local::core","",102,[[],["result",4]]],[11,"serialize","pliantdb::local::core::test_util","",103,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema","",76,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",40,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","pliantdb::local::core::connection","",11,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema","",78,[[],["result",4]]],[11,"serialize","","",200,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",18,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",89,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema::view::map","",67,[[],["result",4]]],[11,"serialize","pliantdb::local::core::connection","",10,[[],["result",4]]],[11,"serialize","pliantdb::local::core::document","",13,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema","",77,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",86,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema","",79,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",82,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema","",68,[[],["result",4]]],[11,"serialize","pliantdb::local::core::document","",14,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",30,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","pliantdb::local::core::kv","",98,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",80,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",38,[[],["result",4]]],[11,"serialize","pliantdb::local::core::kv","",93,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",15,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",81,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",20,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema","",199,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",16,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",90,[[],["result",4]]],[11,"serialize","pliantdb::local::core::kv","",99,[[],["result",4]]],[11,"serialize","","",91,[[],["result",4]]],[11,"serialize","","",95,[[],["result",4]]],[11,"serialize","pliantdb::local::core::document","",12,[[],["result",4]]],[11,"as_ref","pliantdb::local::core::schema::view","",72,[[]]],[11,"as_ref","pliantdb::local::core::test_util","",104,[[],["path",3]]],[11,"default","pliantdb::local::core::schema","",201,[[],["schematic",3]]],[11,"default","pliantdb::local::core::transaction","",80,[[],["transaction",3]]],[11,"default","pliantdb::local::core::test_util","",103,[[],["basic",3]]],[11,"poll","pliantdb::local::core::kv::set","",204,[[["pin",3],["context",3],["builder",3]],["poll",4]]],[11,"poll","pliantdb::local::core::kv::get","",202,[[["builder",3],["context",3],["pin",3]],["poll",4]]],[11,"clone","pliantdb::local::core::networking","",18,[[],["serverrequest",4]]],[11,"clone","pliantdb::local::core::kv","",99,[[],["keystatus",4]]],[11,"clone","pliantdb::local::core::transaction","",82,[[],["command",4]]],[11,"clone","pliantdb::local::core::schema","",77,[[],["invalidnameerror",3]]],[11,"clone","pliantdb::local::core::kv","",94,[[],["keyoperation",3]]],[11,"clone","pliantdb::local::core::schema::view::map","",67,[[],["serialized",3]]],[11,"clone","pliantdb::local::core::networking","",40,[[],["error",4]]],[11,"clone","","",15,[[],["payload",3]]],[11,"clone","pliantdb::local::core::schema","",78,[[],["schemaname",3]]],[11,"clone","pliantdb::local::core::transaction","",86,[[],["operationresult",4]]],[11,"clone","","",80,[[],["transaction",3]]],[11,"clone","pliantdb::local::core::kv","",93,[[],["keycheck",4]]],[11,"clone","","",95,[[],["command",4]]],[11,"clone","pliantdb::local::core::schema","",199,[[],["authority",3]]],[11,"clone","pliantdb::local::core::test_util","",105,[[],["harnesstest",4]]],[11,"clone","pliantdb::local::core::transaction","",89,[[],["executed",3]]],[11,"clone","pliantdb::local::core::networking","",31,[[],["serverresponse",4]]],[11,"clone","pliantdb::local::core::kv","",91,[[],["timestamp",3]]],[11,"clone","pliantdb::local::core::schema","",79,[[],["viewname",3]]],[11,"clone","pliantdb::local::core::connection","",11,[[],["accesspolicy",4]]],[11,"clone","pliantdb::local::core::networking","",34,[[],["databaseresponse",4]]],[11,"clone","","",38,[[],["database",3]]],[11,"clone","pliantdb::local::core::transaction","",81,[[],["operation",3]]],[11,"clone","pliantdb::local::core::networking","",20,[[],["databaserequest",4]]],[11,"clone","pliantdb::local::core::schema","",200,[[],["name",3]]],[11,"clone","pliantdb::local::core::document","",14,[[],["revision",3]]],[11,"clone","pliantdb::local::core","",102,[[],["error",4]]],[11,"clone","pliantdb::local::core::connection","",10,[[],["querykey",4]]],[11,"clone","pliantdb::local::core::schema","",68,[[],["mappedvalue",3]]],[11,"clone","pliantdb::local::core::kv","",98,[[],["output",4]]],[11,"clone","pliantdb::local::core::transaction","",90,[[],["changeddocument",3]]],[11,"clone","pliantdb::local::core::document","",12,[[],["header",3]]],[11,"clone","pliantdb::local::core::schema","",76,[[],["collectionname",3]]],[11,"clone","pliantdb::local::core::networking","",37,[[],["mappeddocument",3]]],[11,"clone","","",16,[[],["request",4]]],[11,"clone","pliantdb::local::core::document","",13,[[],["document",3]]],[11,"clone","pliantdb::local::core::networking","",30,[[],["response",4]]],[11,"cmp","pliantdb::local::core::kv","",91,[[["timestamp",3]],["ordering",4]]],[11,"subscribe_to","pliantdb::local::core::circulate","",215,[[],[["pin",3],["box",3]]]],[11,"unsubscribe_from","","",215,[[["str",15]],[["pin",3],["box",3]]]],[11,"receiver","","",215,[[],["receiver",3]]],[11,"as_big_endian_bytes","pliantdb::local::core::kv","",91,[[],[["cow",4],["error",3],["result",4]]]],[11,"from_big_endian_bytes","","",91,[[],[["result",4],["timestamp",3],["error",3]]]],[11,"collection_name","pliantdb::local::core::test_util","",103,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"define_views","","",103,[[["schematic",3]],[["error",4],["result",4]]]],[11,"collection_name","","",212,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"define_views","","",212,[[["schematic",3]],[["error",4],["result",4]]]],[11,"collection_name","","",210,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"define_views","","",210,[[["schematic",3]],[["error",4],["result",4]]]],[11,"collection_name","","",211,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"define_views","","",211,[[["schematic",3]],[["error",4],["result",4]]]],[11,"source","pliantdb::local::core::schema::view","",70,[[],[["option",4],["error",8]]]],[11,"source","pliantdb::local::core","",102,[[],[["option",4],["error",8]]]],[11,"add","pliantdb::local::core::kv","",91,[[["duration",3]]]],[11,"sub","","",91,[[["timestamp",3]]]],[11,"version","pliantdb::local::core::test_util","",205,[[],["u64",15]]],[11,"name","","",205,[[],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"map","","",205,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",205,[[["bool",15]],[["error",4],["result",4]]]],[11,"version","","",208,[[],["u64",15]]],[11,"name","","",208,[[],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"map","","",208,[[["document",3]],[["result",4],["error",4],["option",4]]]],[11,"version","","",207,[[],["u64",15]]],[11,"name","","",207,[[],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"map","","",207,[[["document",3]],[["result",4],["error",4],["option",4]]]],[11,"reduce","","",207,[[["bool",15]],[["error",4],["result",4]]]],[11,"version","","",206,[[],["u64",15]]],[11,"name","","",206,[[],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"map","","",206,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",206,[[["bool",15]],[["result",4],["error",4]]]],[11,"into","pliantdb::local::core::schema","",200,[[],["string",3]]],[11,"drop","pliantdb::local::core::test_util","",104,[[]]],[11,"create_subscriber","pliantdb::local::core::circulate","",214,[[],[["box",3],["pin",3]]]],[11,"publish","","",214,[[],[["pin",3],["box",3]]]],[11,"eq","pliantdb::local::core::kv","",99,[[["keystatus",4]],["bool",15]]],[11,"eq","pliantdb::local::core::schema","",199,[[["authority",3]],["bool",15]]],[11,"ne","","",199,[[["authority",3]],["bool",15]]],[11,"eq","pliantdb::local::core::document","",12,[[["header",3]],["bool",15]]],[11,"ne","","",12,[[["header",3]],["bool",15]]],[11,"eq","pliantdb::local::core::schema","",68,[[["mappedvalue",3]],["bool",15]]],[11,"ne","","",68,[[["mappedvalue",3]],["bool",15]]],[11,"eq","","",76,[[["collectionname",3]],["bool",15]]],[11,"ne","","",76,[[["collectionname",3]],["bool",15]]],[11,"eq","","",200,[[["name",3]],["bool",15]]],[11,"ne","","",200,[[["name",3]],["bool",15]]],[11,"eq","","",79,[[["viewname",3]],["bool",15]]],[11,"ne","","",79,[[["viewname",3]],["bool",15]]],[11,"eq","pliantdb::local::core::test_util","",103,[[["basic",3]],["bool",15]]],[11,"ne","","",103,[[["basic",3]],["bool",15]]],[11,"eq","pliantdb::local::core::networking","",38,[[["database",3]],["bool",15]]],[11,"ne","","",38,[[["database",3]],["bool",15]]],[11,"eq","pliantdb::local::core::schema","",78,[[["schemaname",3]],["bool",15]]],[11,"ne","","",78,[[["schemaname",3]],["bool",15]]],[11,"eq","pliantdb::local::core::kv","",91,[[["timestamp",3]],["bool",15]]],[11,"ne","","",91,[[["timestamp",3]],["bool",15]]],[11,"eq","pliantdb::local::core::schema","",65,[[["map",3]],["bool",15]]],[11,"ne","","",65,[[["map",3]],["bool",15]]],[11,"eq","pliantdb::local::core::document","",14,[[["revision",3]],["bool",15]]],[11,"ne","","",14,[[["revision",3]],["bool",15]]],[11,"execute_key_operation","pliantdb::local::core::kv::namespaced","",203,[[["keyoperation",3]],[["box",3],["pin",3]]]],[11,"key_namespace","","",203,[[],[["str",15],["option",4]]]],[11,"with_key_namespace","","",203,[[["str",15]],[["namespaced",3],["namespaced",3]]]],[11,"deserialize","pliantdb::local::core::kv","",94,[[],[["result",4],["keyoperation",3]]]],[11,"deserialize","pliantdb::local::core::networking","",37,[[],[["result",4],["mappeddocument",3]]]],[11,"deserialize","pliantdb::local::core::document","",13,[[],[["document",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::test_util","",103,[[],[["basic",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::kv","",98,[[],[["result",4],["output",4]]]],[11,"deserialize","pliantdb::local::core::schema","",199,[[],[["authority",3],["result",4]]]],[11,"deserialize","","",78,[[],[["result",4],["schemaname",3]]]],[11,"deserialize","pliantdb::local::core::kv","",95,[[],[["command",4],["result",4]]]],[11,"deserialize","pliantdb::local::core::connection","",11,[[],[["result",4],["accesspolicy",4]]]],[11,"deserialize","pliantdb::local::core::document","",14,[[],[["result",4],["revision",3]]]],[11,"deserialize","pliantdb::local::core::schema","",68,[[],[["result",4],["mappedvalue",3]]]],[11,"deserialize","pliantdb::local::core::networking","",30,[[],[["response",4],["result",4]]]],[11,"deserialize","pliantdb::local::core::document","",12,[[],[["result",4],["header",3]]]],[11,"deserialize","pliantdb::local::core::networking","",40,[[],[["result",4],["error",4]]]],[11,"deserialize","pliantdb::local::core::schema","",77,[[],[["result",4],["invalidnameerror",3]]]],[11,"deserialize","pliantdb::local::core::kv","",93,[[],[["result",4],["keycheck",4]]]],[11,"deserialize","pliantdb::local::core::transaction","",80,[[],[["result",4],["transaction",3]]]],[11,"deserialize","pliantdb::local::core::schema","",200,[[],[["result",4],["name",3]]]],[11,"deserialize","pliantdb::local::core::networking","",16,[[],[["result",4],["request",4]]]],[11,"deserialize","pliantdb::local::core::schema","",76,[[],[["result",4],["collectionname",3]]]],[11,"deserialize","","",79,[[],[["result",4],["viewname",3]]]],[11,"deserialize","pliantdb::local::core::transaction","",81,[[],[["result",4],["operation",3]]]],[11,"deserialize","pliantdb::local::core::kv","",99,[[],[["keystatus",4],["result",4]]]],[11,"deserialize","pliantdb::local::core::transaction","",82,[[],[["command",4],["result",4]]]],[11,"deserialize","pliantdb::local::core::connection","",10,[[],[["result",4],["querykey",4]]]],[11,"deserialize","pliantdb::local::core::networking","",38,[[],[["result",4],["database",3]]]],[11,"deserialize","","",34,[[],[["result",4],["databaseresponse",4]]]],[11,"deserialize","pliantdb::local::core","",102,[[],[["error",4],["result",4]]]],[11,"deserialize","pliantdb::local::core::kv","",91,[[],[["result",4],["timestamp",3]]]],[11,"deserialize","pliantdb::local::core::transaction","",89,[[],[["executed",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::networking","",20,[[],[["result",4],["databaserequest",4]]]],[11,"deserialize","pliantdb::local::core::transaction","",90,[[],[["changeddocument",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::schema::view::map","",67,[[],[["serialized",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::networking","",15,[[],[["payload",3],["result",4]]]],[11,"deserialize","","",18,[[],[["result",4],["serverrequest",4]]]],[11,"deserialize","pliantdb::local::core::transaction","",86,[[],[["operationresult",4],["result",4]]]],[11,"deserialize","pliantdb::local::core::networking","",31,[[],[["result",4],["serverresponse",4]]]],[11,"fmt","pliantdb::local::core::circulate","",215,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",214,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","","",106,[[],[["result",4],["message",3]]]],[11,"default","","",214,[[],["relay",3]]],[11,"serialize","","",106,[[],["result",4]]],[11,"clone","","",215,[[],["subscriber",3]]],[11,"clone","","",106,[[],["message",3]]],[11,"clone","","",214,[[],["relay",3]]],[11,"try_from","pliantdb::local::core::networking::fabruic","",197,[[],[["keypair",3],["result",4]]]],[11,"try_from","","",196,[[["vec",3],["global",3],["certificate",3]],[["result",4],["certificatechain",3]]]],[11,"try_from","","",195,[[["vec",3],["global",3],["u8",15]],[["result",4],["certificate",3]]]],[11,"try_from","","",198,[[["vec",3],["global",3],["u8",15]],[["result",4],["privatekey",3]]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",185,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",185,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"serialize","pliantdb::local::core::networking::fabruic","",197,[[["keypair",3]],["result",4]]],[11,"hash","","",64,[[]]],[11,"hash","","",195,[[]]],[11,"hash","pliantdb::local::core::networking::fabruic::error","",186,[[]]],[11,"hash","pliantdb::local::core::networking::fabruic","",196,[[]]],[11,"hash","pliantdb::local::core::networking::fabruic::error","",184,[[]]],[11,"hash","","",185,[[]]],[11,"hash","pliantdb::local::core::networking::fabruic","",198,[[]]],[11,"hash","","",197,[[]]],[11,"hash","pliantdb::local::core::networking::fabruic::error","",47,[[]]],[11,"index","pliantdb::local::core::networking::fabruic","",196,[[["usize",15]]]],[11,"partial_cmp","","",64,[[["store",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",197,[[["keypair",3]],[["option",4],["ordering",4]]]],[11,"lt","","",197,[[["keypair",3]],["bool",15]]],[11,"le","","",197,[[["keypair",3]],["bool",15]]],[11,"gt","","",197,[[["keypair",3]],["bool",15]]],[11,"ge","","",197,[[["keypair",3]],["bool",15]]],[11,"partial_cmp","pliantdb::local::core::networking::fabruic::error","",184,[[["keypair",3]],[["option",4],["ordering",4]]]],[11,"lt","","",184,[[["keypair",3]],["bool",15]]],[11,"le","","",184,[[["keypair",3]],["bool",15]]],[11,"gt","","",184,[[["keypair",3]],["bool",15]]],[11,"ge","","",184,[[["keypair",3]],["bool",15]]],[11,"partial_cmp","pliantdb::local::core::networking::fabruic","",195,[[["certificate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",195,[[["certificate",3]],["bool",15]]],[11,"le","","",195,[[["certificate",3]],["bool",15]]],[11,"gt","","",195,[[["certificate",3]],["bool",15]]],[11,"ge","","",195,[[["certificate",3]],["bool",15]]],[11,"partial_cmp","pliantdb::local::core::networking::fabruic::error","",47,[[["privatekey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",47,[[["privatekey",3]],["bool",15]]],[11,"le","","",47,[[["privatekey",3]],["bool",15]]],[11,"gt","","",47,[[["privatekey",3]],["bool",15]]],[11,"ge","","",47,[[["privatekey",3]],["bool",15]]],[11,"partial_cmp","","",185,[[["certificatechain",3]],[["option",4],["ordering",4]]]],[11,"lt","","",185,[[["certificatechain",3]],["bool",15]]],[11,"le","","",185,[[["certificatechain",3]],["bool",15]]],[11,"gt","","",185,[[["certificatechain",3]],["bool",15]]],[11,"ge","","",185,[[["certificatechain",3]],["bool",15]]],[11,"partial_cmp","pliantdb::local::core::networking::fabruic","",196,[[["certificatechain",3]],[["option",4],["ordering",4]]]],[11,"lt","","",196,[[["certificatechain",3]],["bool",15]]],[11,"le","","",196,[[["certificatechain",3]],["bool",15]]],[11,"gt","","",196,[[["certificatechain",3]],["bool",15]]],[11,"ge","","",196,[[["certificatechain",3]],["bool",15]]],[11,"partial_cmp","pliantdb::local::core::networking::fabruic::error","",186,[[["alreadyclosed",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","pliantdb::local::core::networking::fabruic","",198,[[["privatekey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",198,[[["privatekey",3]],["bool",15]]],[11,"le","","",198,[[["privatekey",3]],["bool",15]]],[11,"gt","","",198,[[["privatekey",3]],["bool",15]]],[11,"ge","","",198,[[["privatekey",3]],["bool",15]]],[11,"from","pliantdb::local::core::networking::fabruic::error","",55,[[["global",3],["box",3],["errorkind",4]],["sender",4]]],[11,"from","","",55,[[["alreadyclosed",3]],["sender",4]]],[11,"from","","",54,[[["readerror",4]],["receiver",4]]],[11,"from","","",52,[[["sender",4]],["stream",4]]],[11,"from","","",49,[[["box",3],["global",3],["resolveerror",3]],["connect",4]]],[11,"from","","",54,[[["errorkind",4]],["receiver",4]]],[11,"from","","",52,[[["connectionerror",4]],["stream",4]]],[11,"from","","",49,[[["connecterror",4]],["connect",4]]],[11,"from","","",49,[[["error",3]],["connect",4]]],[11,"from","","",55,[[["writeerror",4]],["sender",4]]],[11,"as_ref","pliantdb::local::core::networking::fabruic","",195,[[]]],[11,"into_iter","","",196,[[]]],[11,"default","","",188,[[],["builder",3]]],[11,"clone","","",194,[[],["sender",3]]],[11,"clone","","",64,[[],["store",4]]],[11,"clone","pliantdb::local::core::networking::fabruic::error","",47,[[],["privatekey",3]]],[11,"clone","","",50,[[],["connection",3]]],[11,"clone","","",185,[[],["certificatechain",3]]],[11,"clone","","",184,[[],["keypair",3]]],[11,"clone","","",186,[[],["alreadyclosed",3]]],[11,"clone","pliantdb::local::core::networking::fabruic","",193,[[],["receiver",3]]],[11,"clone","","",191,[[],["endpoint",3]]],[11,"clone","","",197,[[],["keypair",3]]],[11,"clone","","",195,[[],["certificate",3]]],[11,"clone","","",198,[[],["privatekey",3]]],[11,"clone","","",196,[[],["certificatechain",3]]],[11,"clone","pliantdb::local::core::networking::fabruic::error","",51,[[],["connecting",3]]],[11,"clone","pliantdb::local::core::networking::fabruic","",190,[[],["connection",3]]],[11,"cmp","","",196,[[["certificatechain",3]],["ordering",4]]],[11,"cmp","","",64,[[["store",4]],["ordering",4]]],[11,"cmp","pliantdb::local::core::networking::fabruic::error","",186,[[["alreadyclosed",3]],["ordering",4]]],[11,"cmp","","",185,[[["certificatechain",3]],["ordering",4]]],[11,"cmp","pliantdb::local::core::networking::fabruic","",197,[[["keypair",3]],["ordering",4]]],[11,"cmp","","",195,[[["certificate",3]],["ordering",4]]],[11,"cmp","pliantdb::local::core::networking::fabruic::error","",47,[[["privatekey",3]],["ordering",4]]],[11,"cmp","pliantdb::local::core::networking::fabruic","",198,[[["privatekey",3]],["ordering",4]]],[11,"cmp","pliantdb::local::core::networking::fabruic::error","",184,[[["keypair",3]],["ordering",4]]],[11,"zeroize","","",47,[[]]],[11,"zeroize","pliantdb::local::core::networking::fabruic","",198,[[]]],[11,"poll_next","","",193,[[["context",3],["pin",3],["receiver",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",190,[[["pin",3],["connection",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",191,[[["endpoint",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"serialize","","",195,[[],["result",4]]],[11,"serialize","","",64,[[],["result",4]]],[11,"serialize","","",196,[[],["result",4]]],[11,"is_terminated","","",190,[[],["bool",15]]],[11,"is_terminated","","",191,[[],["bool",15]]],[11,"source","pliantdb::local::core::networking::fabruic::error","",52,[[],[["option",4],["error",8]]]],[11,"source","","",46,[[],[["option",4],["error",8]]]],[11,"source","","",45,[[],[["option",4],["error",8]]]],[11,"source","","",49,[[],[["option",4],["error",8]]]],[11,"source","","",55,[[],[["option",4],["error",8]]]],[11,"source","","",48,[[],[["option",4],["error",8]]]],[11,"source","","",54,[[],[["option",4],["error",8]]]],[11,"deserialize","pliantdb::local::core::networking::fabruic","",196,[[],[["result",4],["certificatechain",3]]]],[11,"deserialize","","",195,[[],[["certificate",3],["result",4]]]],[11,"deserialize","","",64,[[],[["store",4],["result",4]]]],[11,"deserialize","","",198,[[],[["result",4],["privatekey",3]]]],[11,"deserialize","","",197,[[],[["keypair",3],["result",4]]]],[11,"as_ref","","",198,[[["privatekey",3]]]],[11,"into","","",198,[[["privatekey",3]],[["vec",3],["global",3],["u8",15]]]],[11,"serialize","","",198,[[["privatekey",3]],["result",4]]],[11,"drop","","",198,[[]]],[11,"drop","pliantdb::local::core::networking::fabruic::error","",47,[[]]],[11,"eq","","",51,[[["connecting",3]],["bool",15]]],[11,"ne","","",51,[[["connecting",3]],["bool",15]]],[11,"eq","pliantdb::local::core::networking::fabruic","",64,[[["store",4]],["bool",15]]],[11,"eq","","",197,[[["keypair",3]],["bool",15]]],[11,"ne","","",197,[[["keypair",3]],["bool",15]]],[11,"eq","pliantdb::local::core::networking::fabruic::error","",184,[[["keypair",3]],["bool",15]]],[11,"ne","","",184,[[["keypair",3]],["bool",15]]],[11,"eq","","",185,[[["certificatechain",3]],["bool",15]]],[11,"ne","","",185,[[["certificatechain",3]],["bool",15]]],[11,"eq","pliantdb::local::core::networking::fabruic","",198,[[["privatekey",3]],["bool",15]]],[11,"ne","","",198,[[["privatekey",3]],["bool",15]]],[11,"eq","","",195,[[["certificate",3]],["bool",15]]],[11,"ne","","",195,[[["certificate",3]],["bool",15]]],[11,"eq","","",196,[[["certificatechain",3]],["bool",15]]],[11,"ne","","",196,[[["certificatechain",3]],["bool",15]]],[11,"eq","pliantdb::local::core::networking::fabruic::error","",50,[[["connection",3]],["bool",15]]],[11,"ne","","",50,[[["connection",3]],["bool",15]]],[11,"eq","","",47,[[["privatekey",3]],["bool",15]]],[11,"ne","","",47,[[["privatekey",3]],["bool",15]]],[11,"eq","","",186,[[["alreadyclosed",3]],["bool",15]]],[11,"set_root_certificates","pliantdb::local::core::networking::fabruic","",188,[[["builder",3]]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",61,[[],["error",4]]],[11,"eq","","",61,[[["error",4]],["bool",15]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",62,[[["errorkind",4]],["x509error",4]]],[11,"from","","",63,[[["x509error",4]],[["x509error",4],["err",4]]]],[11,"from","","",62,[[["bererror",4]],["x509error",4]]],[11,"source","","",62,[[],[["option",4],["error",8]]]],[11,"from_error_kind","","",62,[[["errorkind",4]],["x509error",4]]],[11,"append","","",62,[[["errorkind",4],["x509error",4]],["x509error",4]]],[11,"eq","","",62,[[["x509error",4]],["bool",15]]],[11,"ne","","",62,[[["x509error",4]],["bool",15]]],[11,"from","","",63,[[["bererror",4]],[["bererror",4],["err",4]]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",63,[[],["err",4]]],[11,"source","","",63,[[],[["option",4],["error",8]]]],[11,"eq","","",63,[[["err",4]],["bool",15]]],[11,"ne","","",63,[[["err",4]],["bool",15]]],[11,"fmt","pliantdb::local::core::num_traits","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"description","","",56,[[],["str",15]]],[11,"cause","","",56,[[],[["option",4],["error",8]]]],[11,"fmt","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",59,[[["readableerror",4]],["readerror",4]]],[11,"source","","",60,[[],[["option",4],["error",8]]]],[11,"clone","","",60,[[],["writeerror",4]]],[11,"clone","","",59,[[],["readerror",4]]],[11,"eq","","",59,[[["readerror",4]],["bool",15]]],[11,"ne","","",59,[[["readerror",4]],["bool",15]]],[11,"eq","","",60,[[["writeerror",4]],["bool",15]]],[11,"ne","","",60,[[["writeerror",4]],["bool",15]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",58,[[["close",4]],["connectionerror",4]]],[11,"from","","",58,[[["error",3]],["connectionerror",4]]],[11,"clone","","",57,[[],["connecterror",4]]],[11,"clone","","",58,[[],["connectionerror",4]]],[11,"source","","",58,[[],[["option",4],["error",8]]]],[11,"source","","",57,[[],[["option",4],["error",8]]]],[11,"eq","","",57,[[["connecterror",4]],["bool",15]]],[11,"ne","","",57,[[["connecterror",4]],["bool",15]]],[11,"eq","","",58,[[["connectionerror",4]],["bool",15]]],[11,"ne","","",58,[[["connectionerror",4]],["bool",15]]],[11,"fmt","","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",187,[[["poisonerror",3]],["resolveerror",3]]],[11,"from","","",187,[[["error",3]],["resolveerror",3]]],[11,"from","","",187,[[["protoerror",3]],["resolveerror",3]]],[11,"from","","",187,[[["str",15]],["resolveerror",3]]],[11,"from","","",187,[[["resolveerrorkind",4]],["resolveerror",3]]],[11,"from","","",187,[[["string",3]],["resolveerror",3]]],[11,"should_retry","","",187,[[],["bool",15]]],[11,"attempted","","",187,[[],["bool",15]]],[11,"clone","","",187,[[],["resolveerror",3]]],[11,"into_client_request","pliantdb::client::url","",172,[[],[["result",4],["request",3],["error",4]]]],[11,"fmt","pliantdb::local","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::config","",157,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::backup","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::config","",156,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local","",227,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::backup","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local","",155,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clap","pliantdb::local::backup","",159,[[],["app",3]]],[11,"from_clap","","",159,[[["argmatches",3]],["command",4]]],[11,"clap","","",158,[[],["app",3]]],[11,"from_clap","","",158,[[["argmatches",3]],["cli",3]]],[11,"apply_transaction","pliantdb::local","",227,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"get","","",227,[[["u64",15]],[["pin",3],["box",3]]]],[11,"get_multiple","","",227,[[],[["box",3],["pin",3]]]],[11,"list_executed_transactions","","",227,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[11,"query","","",227,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"query_with_docs","","",227,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[11,"reduce","","",227,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"reduce_grouped","","",227,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"last_transaction_id","","",227,[[],[["pin",3],["box",3]]]],[11,"fmt","","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"create_subscriber","","",227,[[],[["box",3],["pin",3]]]],[11,"publish","","",227,[[],[["pin",3],["box",3]]]],[11,"from","","",162,[[["recverror",4]],["error",4]]],[11,"from","","",162,[[["error",3]],["error",4]]],[11,"from","","",162,[[["error",4]],["error",4]]],[11,"from","","",162,[[["error",4]],["error",4]]],[11,"from","pliantdb::local::core","",102,[[["error",4]],["error",4]]],[11,"from","pliantdb::local","",162,[[["global",3],["box",3],["errorkind",4]],["error",4]]],[11,"from","","",162,[[["invalidnameerror",3]],["error",4]]],[11,"from","","",162,[[["arc",3],["error",3]],["error",4]]],[11,"from","","",162,[[["error",4]],["error",4]]],[11,"source","","",162,[[],[["option",4],["error",8]]]],[11,"default","pliantdb::local::config","",157,[[],["views",3]]],[11,"default","pliantdb::local","",155,[[],["configuration",3]]],[11,"default","pliantdb::local::config","",156,[[],["tasks",3]]],[11,"execute_key_operation","pliantdb::local","",227,[[["keyoperation",3]],[["box",3],["pin",3]]]],[11,"clone","","",227,[[],["storage",3]]],[11,"clone","","",155,[[],["configuration",3]]],[11,"clone","pliantdb::local::config","",156,[[],["tasks",3]]],[11,"clone","","",157,[[],["views",3]]],[11,"fmt","pliantdb::server","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",229,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::cli::certificate","",163,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::cli","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::cli::serve","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::cli","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"get","","",228,[[["u64",15]],[["pin",3],["box",3]]]],[11,"get_multiple","","",228,[[],[["box",3],["pin",3]]]],[11,"query","","",228,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"query_with_docs","","",228,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[11,"reduce","","",228,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"reduce_grouped","","",228,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"apply_transaction","","",228,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"list_executed_transactions","","",228,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[11,"last_transaction_id","","",228,[[],[["pin",3],["box",3]]]],[11,"create_subscriber","","",228,[[],[["box",3],["pin",3]]]],[11,"publish","","",228,[[],[["pin",3],["box",3]]]],[11,"from","","",170,[[["global",3],["box",3],["errorkind",4]],["error",4]]],[11,"from","","",170,[[["receiver",4]],["error",4]]],[11,"from","","",170,[[["error",4]],["error",4]]],[11,"from","","",170,[[["alreadyclosed",3]],["error",4]]],[11,"from","","",170,[[["connecting",3]],["error",4]]],[11,"from","","",170,[[["incoming",4]],["error",4]]],[11,"from","","",170,[[["invalidnameerror",3]],["error",4]]],[11,"from","","",170,[[["error",4]],["error",4]]],[11,"from","","",170,[[["error",3]],["error",4]]],[11,"from","","",170,[[["keypair",3]],["error",4]]],[11,"from","pliantdb::local::core","",102,[[["error",4]],["error",4]]],[11,"from","pliantdb::server","",170,[[["error",4]],["error",4]]],[11,"from","","",170,[[["certificatechain",3]],["error",4]]],[11,"from","","",170,[[["connection",3]],["error",4]]],[11,"from","","",170,[[["privatekey",3]],["error",4]]],[11,"create_database","","",229,[[["str",15],["schemaname",3]],[["pin",3],["box",3]]]],[11,"delete_database","","",229,[[["str",15]],[["pin",3],["box",3]]]],[11,"list_databases","","",229,[[],[["pin",3],["box",3]]]],[11,"list_available_schemas","","",229,[[],[["pin",3],["box",3]]]],[11,"source","","",170,[[],[["option",4],["error",8]]]],[11,"clap","pliantdb::server::cli::serve","",166,[[],["app",3]]],[11,"from_clap","","",166,[[["argmatches",3]],["serve",3]]],[11,"clap","pliantdb::server::cli::certificate","",163,[[],["app",3]]],[11,"from_clap","","",163,[[["argmatches",3]],["command",4]]],[11,"clap","pliantdb::server::cli","",168,[[],["app",3]]],[11,"from_clap","","",168,[[["argmatches",3]],["command",4]]],[11,"clap","","",167,[[],["app",3]]],[11,"from_clap","","",167,[[["argmatches",3]],["cli",3]]],[11,"default","pliantdb::server","",169,[[],["configuration",3]]],[11,"execute_key_operation","","",228,[[["keyoperation",3]],[["box",3],["pin",3]]]],[11,"clone","","",229,[[],["server",3]]],[11,"fmt","pliantdb::cli","",0,[[["formatter",3]],["result",6]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_subcommand","","",0,[[],["option",4]]],[11,"is_subcommand","","",0,[[],["bool",15]]],[11,"parse","pliantdb::client::url","Parse an absolute URL from a string.",172,[[["str",15]],[["result",4],["url",3],["parseerror",4]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its …",172,[[["str",15]],[["result",4],["url",3],["parseerror",4]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",172,[[["str",15]],[["result",4],["url",3],["parseerror",4]]]],[11,"options","","Return a default <code>ParseOptions</code> that can fully configure …",172,[[],["parseoptions",3]]],[11,"as_str","","Return the serialization of this URL.",172,[[],["str",15]]],[11,"into_string","","Return the serialization of this URL.",172,[[],["string",3]]],[11,"origin","","Return the origin of this URL (…",172,[[],["origin",4]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII …",172,[[],["str",15]]],[11,"has_authority","","Return whether the URL has an \'authority\', which can …",172,[[],["bool",15]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, …",172,[[],["bool",15]]],[11,"username","","Return the username for this URL (typically the empty …",172,[[],["str",15]]],[11,"password","","Return the password for this URL, if any, as a …",172,[[],[["str",15],["option",4]]]],[11,"has_host","","Equivalent to <code>url.host().is_some()</code>.",172,[[],["bool",15]]],[11,"host_str","","Return the string representation of the host (domain or …",172,[[],[["str",15],["option",4]]]],[11,"host","","Return the parsed representation of the host for this URL.…",172,[[],[["option",4],["host",4]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP …",172,[[],[["str",15],["option",4]]]],[11,"port","","Return the port number for this URL, if any.",172,[[],[["option",4],["u16",15]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port …",172,[[],[["option",4],["u16",15]]]],[11,"socket_addrs","","Resolve a URL’s host and port number to <code>SocketAddr</code>.",172,[[],[["result",4],["vec",3],["error",3]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII …",172,[[],["str",15]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator …",172,[[],[["split",3],["option",4]]]],[11,"query","","Return this URL’s query string, if any, as a …",172,[[],[["str",15],["option",4]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as …",172,[[],["parse",3]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",172,[[],[["str",15],["option",4]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",172,[[["option",4],["str",15]]]],[11,"set_query","","Change this URL’s query string.",172,[[["option",4],["str",15]]]],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a …",172,[[],[["serializer",3],["urlquery",3]]]],[11,"set_path","","Change this URL’s path.",172,[[["str",15]]]],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s …",172,[[],[["pathsegmentsmut",3],["result",4]]]],[11,"set_port","","Change this URL’s port number.",172,[[["option",4],["u16",15]],["result",4]]],[11,"set_host","","Change this URL’s host.",172,[[["option",4],["str",15]],[["result",4],["parseerror",4]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",172,[[["ipaddr",4]],["result",4]]],[11,"set_password","","Change this URL’s password.",172,[[["option",4],["str",15]],["result",4]]],[11,"set_username","","Change this URL’s username.",172,[[["str",15]],["result",4]]],[11,"set_scheme","","Change this URL’s scheme.",172,[[["str",15]],["result",4]]],[11,"from_file_path","","Convert a file name as <code>std::path::Path</code> into an URL in the …",172,[[],[["result",4],["url",3]]]],[11,"from_directory_path","","Convert a directory name as <code>std::path::Path</code> into an URL …",172,[[],[["result",4],["url",3]]]],[11,"to_file_path","","Assuming the URL is in the <code>file</code> scheme or similar, …",172,[[],[["pathbuf",3],["result",4]]]],[11,"base_url","","Change the base URL",173,[[["option",4],["url",3]],["parseoptions",3]]],[11,"encoding_override","","Override the character encoding of query strings. This is …",173,[[["option",4],["fn",8]],["parseoptions",3]]],[11,"syntax_violation_callback","","Call the provided function or closure for a non-fatal …",173,[[["fn",8],["option",4]],["parseoptions",3]]],[11,"parse","","Parse an URL string with the configuration so far.",173,[[["str",15]],[["result",4],["url",3],["parseerror",4]]]],[11,"into_owned","pliantdb::client::url::form_urlencoded","Return a new iterator that yields pairs of <code>String</code> instead …",175,[[],["parseintoowned",3]]],[11,"new","","Create a new <code>application/x-www-form-urlencoded</code> serializer …",178,[[],["serializer",3]]],[11,"for_suffix","","Create a new <code>application/x-www-form-urlencoded</code> serializer …",178,[[["usize",15]],["serializer",3]]],[11,"clear","","Remove any existing name/value pair.",178,[[],["serializer",3]]],[11,"encoding_override","","Set the character encoding to be used for names and …",178,[[["option",4],["fn",8]],["serializer",3]]],[11,"append_pair","","Serialize and append a name/value pair.",178,[[["str",15]],["serializer",3]]],[11,"append_key_only","","Serialize and append a name of parameter without any …",178,[[["str",15]],["serializer",3]]],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",178,[[],["serializer",3]]],[11,"extend_keys_only","","Serialize and append a number of names without values.",178,[[],["serializer",3]]],[11,"finish","","If this serializer was constructed with a string, take …",178,[[]]],[11,"to_owned","pliantdb::client::url","Return a copy of <code>self</code> that owns an allocated <code>String</code> but …",2,[[],[["string",3],["host",4]]]],[11,"parse","","Parse a host: either an IPv6 address in [] square …",2,[[["str",15]],[["parseerror",4],["result",4],["host",4]]]],[11,"parse_opaque","","",2,[[["str",15]],[["parseerror",4],["result",4],["host",4]]]],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",3,[[],["origin",4]]],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple…",3,[[],["bool",15]]],[11,"ascii_serialization","","…",3,[[],["string",3]]],[11,"unicode_serialization","","…",3,[[],["string",3]]],[11,"description","","",5,[[],["str",15]]],[11,"clear","","Remove all segments in the path, leaving the minimal …",180,[[],["pathsegmentsmut",3]]],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is …",180,[[],["pathsegmentsmut",3]]],[11,"pop","","Remove the last segment of this URL’s path.",180,[[],["pathsegmentsmut",3]]],[11,"push","","Append the given segment at the end of this URL’s path.",180,[[["str",15]],["pathsegmentsmut",3]]],[11,"extend","","Append each segment from the given iterator at the end of …",180,[[],["pathsegmentsmut",3]]],[11,"new","pliantdb::client","Initialize a client connecting to <code>url</code> with <code>certificate</code> …",181,[[["option",4],["url",3],["certificate",3]]]],[11,"database","","Returns a structure representing a remote database. No …",181,[[["str",15]]]],[11,"new","pliantdb::local::core::connection","Creates a new instance using <code>connection</code>.",183,[[],["collection",3]]],[11,"push","","Adds a new <code>Document<Cl></code> with the contents <code>item</code>.",183,[[]]],[11,"get","","Retrieves a <code>Document<Cl></code> with <code>id</code> from the connection.",183,[[["u64",15]]]],[11,"with_key","","Filters for entries in the view with <code>key</code>.",9,[[],["view",3]]],[11,"with_keys","","Filters for entries in the view with <code>keys</code>.",9,[[["global",3],["vec",3]],["view",3]]],[11,"with_key_range","","Filters for entries in the view with the range <code>keys</code>.",9,[[["range",3]],["view",3]]],[11,"with_access_policy","","Sets the access policy for queries.",9,[[["accesspolicy",4]],["view",3]]],[11,"query","","Executes the query and retrieves the results.",9,[[]]],[11,"query_with_docs","","Executes the query and retrieves the results with the …",9,[[]]],[11,"reduce","","Executes a reduce over the results of the query",9,[[]]],[11,"reduce_grouped","","Executes a reduce over the results of the query",9,[[]]],[11,"serialized","","Converts this key to a serialized format using the [<code>Key</code>] …",10,[[],[["result",4],["error",4],["querykey",4]]]],[11,"deserialized","","Deserializes the bytes into <code>K</code> via the [<code>Key</code>] trait.",10,[[],[["error",4],["querykey",4],["result",4]]]],[11,"new","pliantdb::local::core::document","Creates a new document with <code>contents</code>.",13,[[["cow",4],["collectionname",3],["u64",15]],["document",3]]],[11,"with_contents","","Creates a new document with serialized bytes from <code>contents</code>…",13,[[["collectionname",3],["u64",15]],[["document",3],["result",4],["error",3]]]],[11,"contents","","Retrieves <code>contents</code> through deserialization into the type <code>D</code>…",13,[[],[["result",4],["error",3]]]],[11,"set_contents","","Serializes and stores <code>contents</code> into this document.",13,[[],[["result",4],["error",3]]]],[11,"create_new_revision","","Creates a new revision.",13,[[["cow",4]],[["document",3],["option",4]]]],[11,"emit","","Creates a <code>Map</code> result with an empty key and value.",13,[[],["map",3]]],[11,"emit_key","","Creates a <code>Map</code> result with a <code>key</code> and an empty value.",13,[[],["map",3]]],[11,"emit_value","","Creates a <code>Map</code> result with <code>value</code> and an empty key.",13,[[],["map",3]]],[11,"emit_key_and_value","","Creates a <code>Map</code> result with a <code>key</code> and <code>value</code>.",13,[[],["map",3]]],[11,"to_owned","","Clone the document\'s data so that it\'s no longer borrowed …",13,[[],["document",3]]],[11,"new","","Creates the first revision for a document with the SHA256 …",14,[[],["revision",3]]],[11,"with_id","","Creates a revision with <code>id</code> for a document with the SHA256 …",14,[[["u32",15]],["revision",3]]],[11,"next_revision","","Creates the next revision in sequence with an updated …",14,[[],[["revision",3],["option",4]]]],[11,"deserialized","pliantdb::local::core::networking","Deserialize into a <code>MappedDocument</code>.",37,[[],[["error",4],["mappeddocument",3],["result",4]]]],[11,"kind","pliantdb::local::core::networking::fabruic::error","Get the kind of the error",187,[[],["resolveerrorkind",4]]],[11,"from_response","","A conversion to determine if the response is an error",187,[[["bool",15],["dnsresponse",3]],[["result",4],["dnsresponse",3],["resolveerror",3]]]],[11,"is_incomplete","","Tests if the result is Incomplete",63,[[],["bool",15]]],[11,"map","","Applies the given function to the inner error",63,[[],["err",4]]],[11,"convert","","Automatically converts between errors if the underlying …",63,[[["err",4]],["err",4]]],[11,"map_input","","Maps <code>Err<(T, ErrorKind)></code> to <code>Err<(U, ErrorKind)></code> with the …",63,[[],["err",4]]],[11,"to_owned","","Obtaining ownership",63,[[],["err",4]]],[11,"to_owned","","Automatically converts between errors if the underlying …",63,[[],["err",4]]],[11,"new","pliantdb::local::core::networking::fabruic","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …",188,[[],["builder",3]]],[11,"set_address","","Set\'s the [<code>SocketAddr</code>] to bind to.",188,[[["socketaddr",4]]]],[11,"address","","Returns the [<code>SocketAddr</code>] to bind to.",188,[[],["socketaddr",4]]],[11,"set_server_key_pair","","Set a server certificate [<code>KeyPair</code>], use [<code>None</code>] to remove …",188,[[["keypair",3],["option",4]]]],[11,"server_key_pair","","Returns the server certificate [<code>KeyPair</code>].",188,[[],["option",4]]],[11,"set_client_key_pair","","Set a client certificate [<code>KeyPair</code>], use [<code>None</code>] to remove …",188,[[["keypair",3],["option",4]]]],[11,"client_key_pair","","Returns the client certificate [<code>KeyPair</code>].",188,[[],["option",4]]],[11,"set_protocols","","Set the protocols to accept, in order of descending …",188,[[]]],[11,"protocols","","Returns the set protocols.",188,[[]]],[11,"set_trust_dns","","Controls the use of <code>trust-dns</code> for [<code>Endpoint::connect</code>].",188,[[["bool",15]]]],[11,"disable_trust_dns","","Disables the use of <code>trust-dns</code> for [<code>Endpoint::connect</code>] …",188,[[]]],[11,"trust_dns","","Returns if <code>trust-dns</code> is enabled.",188,[[],["bool",15]]],[11,"set_dnssec","","Controls DNSSEC validation for <code>trust-dns</code> in […",188,[[["bool",15]]]],[11,"dnssec","","Returns if DNSSEC is enabled for <code>trust-dns</code>.",188,[[],["bool",15]]],[11,"set_hosts_file","","Controls <code>/etc/hosts</code> file support for <code>trust-dns</code> in […",188,[[["bool",15]]]],[11,"hosts_file","","Returns if <code>/etc/hosts</code> file support is enabled for …",188,[[],["bool",15]]],[11,"set_store","","Set\'s the default root certificate store.",188,[[["store",4]]]],[11,"store","","Returns the set [<code>Store</code>].",188,[[],["store",4]]],[11,"build","","Consumes [<code>Builder</code>] to build [<code>Endpoint</code>]. Must be called …",188,[[],[["result",4],["builder",3],["endpoint",3]]]],[11,"protocol","","The negotiated application protocol. See …",189,[[]]],[11,"accept","","Accept the [<code>Connection</code>] with the given <code>T</code> as the type …",189,[[]]],[11,"open_stream","","Open a stream on this [<code>Connection</code>], allowing to send data …",190,[[]]],[11,"protocol","","The negotiated application protocol. See …",190,[[],[["vec",3],["option",4]]]],[11,"peer_identity","","Get the peer’s identity, if available.",190,[[],[["option",4],["certificatechain",3]]]],[11,"remote_address","","The peer\'s address. Clients may change addresses at will, …",190,[[],["socketaddr",4]]],[11,"close_incoming","","Prevents any new incoming streams. Already incoming …",190,[[]]],[11,"close","","Close the [<code>Connection</code>] immediately.",190,[[]]],[11,"builder","","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …",191,[[],["builder",3]]],[11,"new_client","","Simplified version of creating a client. See [<code>Builder</code>] …",191,[[],[["result",4],["endpoint",3],["error",3]]]],[11,"new_server","","Simplified version of creating a server. See [<code>Builder</code>] …",191,[[["keypair",3],["u16",15]],[["result",4],["endpoint",3],["error",3]]]],[11,"connect","","Establishes a new <code>Connection</code> to a server. The servers […",191,[[]]],[11,"connect_pinned","","Establishes a new <code>Connection</code> to a server.",191,[[["keypair",3],["certificate",3],["option",4]]]],[11,"local_address","","Get the local [<code>SocketAddr</code>] the underlying socket is bound …",191,[[],[["socketaddr",4],["error",3],["result",4]]]],[11,"close","","Close all of this [<code>Endpoint</code>]\'s <code>Connection</code>s immediately …",191,[[]]],[11,"close_incoming","","Prevents any new incoming connections. Already incoming …",191,[[]]],[11,"wait_idle","","Wait for all <code>Connection</code>s to the [<code>Endpoint</code>] to be cleanly …",191,[[]]],[11,"type","","Returns the type information for that stream.",192,[[]]],[11,"accept","","Accept the incoming stream with the given types.",192,[[]]],[11,"finish","","Wait for the [<code>Receiver</code>] part of the stream to finish …",193,[[]]],[11,"close","","Close the [<code>Receiver</code>] immediately. To close a [<code>Receiver</code>] …",193,[[]]],[11,"send","","Send <code>data</code> into the stream.",194,[[],[["result",4],["sender",4]]]],[11,"finish","","Shut down the [<code>Send</code>] part of the stream gracefully.",194,[[]]],[11,"close","","Close the [<code>Sender</code>] immediately.",194,[[]]],[11,"from_der","","Build [<code>Certificate</code>] from DER-format. This is not meant as …",195,[[],[["result",4],["certificate",3],["certificate",3]]]],[11,"unchecked_from_der","","Build [<code>Certificate</code>] from DER-format. This skips the …",195,[[],["certificate",3]]],[11,"domains","","PanicsPanics if [<code>Certificate</code>] couldn\'t be parsed or …",195,[[],[["global",3],["vec",3],["string",3]]]],[11,"from_certificates","","Builds a new [<code>CertificateChain</code>] from the given […",196,[[],[["certificatechain",3],["result",4],["certificatechain",3]]]],[11,"unchecked_from_certificates","","Builds [<code>CertificateChain</code>] from the given [<code>Certificate</code>]s. …",196,[[],["certificatechain",3]]],[11,"into_end_entity_certificate","","Returns the end-entity [<code>Certificate</code>].",196,[[],["certificate",3]]],[11,"end_entity_certificate","","Returns a reference to the end-entity [<code>Certificate</code>].",196,[[],["certificate",3]]],[11,"iter","","Returns an iterator over the [<code>CertificateChain</code>].",196,[[],[["certificate",3],["iter",3]]]],[11,"get","","Provides a reference to the [<code>Certificate</code>] at the given …",196,[[["usize",15]],[["option",4],["certificate",3]]]],[11,"new_self_signed","","Generate a self signed certificate.",197,[[],["keypair",3]]],[11,"from_parts","","Builds a new [<code>KeyPair</code>] from the given [<code>CertificateChain</code>] …",197,[[["privatekey",3],["certificatechain",3]],[["keypair",3],["keypair",3],["result",4]]]],[11,"unchecked_from_parts","","Build [<code>KeyPair</code>] from the given [<code>CertificateChain</code>] and […",197,[[["privatekey",3],["certificatechain",3]],["keypair",3]]],[11,"certificate_chain","","Return the [<code>CertificateChain</code>] of this [<code>KeyPair</code>].",197,[[],["certificatechain",3]]],[11,"end_entity_certificate","","Returns the end-entity [<code>Certificate</code>].",197,[[],["certificate",3]]],[11,"private_key","","Return the secret [<code>PrivateKey</code>] of this [<code>KeyPair</code>].",197,[[],["privatekey",3]]],[11,"into_parts","","Destructure [<code>KeyPair</code>] into it\'s owned parts.",197,[[]]],[11,"parts","","Destructure [<code>KeyPair</code>] into it\'s borrowed parts.",197,[[]]],[11,"from_der","","Build [<code>PrivateKey</code>] from DER-format. This is not meant as …",198,[[],[["privatekey",3],["result",4],["privatekey",3]]]],[11,"unchecked_from_der","","Build [<code>PrivateKey</code>] from DER-format. This skips the …",198,[[],["privatekey",3]]],[11,"serialized","pliantdb::local::core::schema","Serializes this map.",65,[[],[["result",4],["serialized",3],["error",4]]]],[11,"new","","Creates a new Map entry for the document with id <code>source</code>.",65,[[["u64",15]],["map",3]]],[11,"deserialized","pliantdb::local::core::schema::view::map","Deserializes this map.",67,[[],[["map",3],["result",4],["error",4]]]],[11,"new","pliantdb::local::core::schema","Creates a new collection name.",76,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"new","","Creates a new name after validating it.",200,[[],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"new","","Creates a new schema name.",78,[[],[["result",4],["invalidnameerror",3],["schemaname",3]]]],[11,"new","","Creates a new view name.",79,[[],[["invalidnameerror",3],["result",4],["viewname",3]]]],[11,"define_collection","","Adds the collection <code>C</code> and its views.",201,[[],[["error",4],["result",4]]]],[11,"define_view","","Adds the view <code>V</code>.",201,[[],[["error",4],["result",4]]]],[11,"contains","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",201,[[],["bool",15]]],[11,"contains_collection_id","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",201,[[["collectionname",3]],["bool",15]]],[11,"view_by_name","","Looks up a [<code>view::Serialized</code>] by name.",201,[[["viewname",3]],[["option",4],["serialized",8]]]],[11,"view","","Looks up a [<code>view::Serialized</code>] through the the type <code>V</code>.",201,[[],[["option",4],["serialized",8]]]],[11,"views","","Iterates over all registered views.",201,[[]]],[11,"views_in_collection","","Iterates over all views that belong to <code>collection</code>.",201,[[["collectionname",3]],[["option",4],["vec",3]]]],[11,"push","pliantdb::local::core::transaction","Adds an operation to the transaction.",80,[[["operation",3]]]],[11,"to_owned","","Convert this structure to be free of borrows.",89,[[],["executed",3]]],[11,"and_delete","pliantdb::local::core::kv::get","Delete the key after retrieving the value.",202,[[],["builder",3]]],[11,"expire_in","pliantdb::local::core::kv::set","Set this key to expire after <code>duration</code> from now.",204,[[["duration",3]],["builder",3]]],[11,"expire_at","","Set this key to expire at the provided <code>time</code>.",204,[[["systemtime",3]],["builder",3]]],[11,"keep_existing_expiration","","If the key already exists, do not update the currently …",204,[[],["builder",3]]],[11,"only_if_exists","","Only set the value if this key already exists.",204,[[],["builder",3]]],[11,"only_if_vacant","","Only set the value if this key isn\'t present.",204,[[],["builder",3]]],[11,"returning_previous","","Executes the Set operation, requesting the previous value …",204,[[]]],[11,"now","pliantdb::local::core::kv","Returns the current timestamp according to the OS. Uses […",91,[[],["timestamp",3]]],[11,"new","pliantdb::local::core::test_util","",103,[[],["basic",3]]],[11,"with_category","","",103,[[],["basic",3]]],[11,"with_parent_id","","",103,[[["u64",15]],["basic",3]]],[11,"new","","",104,[[],["testdirectory",3]]],[11,"port","","",105,[[["u16",15]],["u16",15]]],[11,"new","","",213,[[["duration",3]],["timingtest",3]]],[11,"wait_until","","",213,[[["duration",3]]]],[11,"elapsed","","",213,[[],["duration",3]]],[11,"new","pliantdb::local::core::circulate","Creates a new message.",106,[[],[["message",3],["result",4],["error",3]]]],[11,"payload","","Deserialize the payload as <code>P</code> using CBOR.",106,[[],[["result",4],["error",3]]]],[11,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",214,[[]]],[11,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",214,[[]]],[11,"publish_message","","Publishes a message to all subscribers of its topic.",214,[[["message",3]]]],[11,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",215,[[]]],[11,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",215,[[["str",15]]]],[11,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",215,[[],["receiver",3]]],[11,"id","","Returns the unique ID of the subscriber.",215,[[],["u64",15]]],[11,"new","pliantdb::local::core::circulate::flume","Create a new selector.",216,[[],["selector",3]]],[11,"send","","Add a send operation to the selector that sends the …",216,[[["sender",3]],["selector",3]]],[11,"recv","","Add a receive operation to the selector.",216,[[["receiver",3]],["selector",3]]],[11,"wait","","Wait until one of the events associated with this […",216,[[]]],[11,"wait_timeout","","Wait until one of the events associated with this […",216,[[["duration",3]],[["result",4],["selecterror",4]]]],[11,"wait_deadline","","Wait until one of the events associated with this […",216,[[["instant",3]],[["result",4],["selecterror",4]]]],[11,"is_disconnected","pliantdb::local::core::circulate::flume::async","",218,[[],["bool",15]]],[11,"send_async","pliantdb::local::core::circulate::flume","Asynchronously send a value into the channel, returning …",221,[[],["sendfut",3]]],[11,"into_send_async","","Convert this sender into a future that asynchronously …",221,[[],["sendfut",3]]],[11,"sink","","Create an asynchronous sink that uses this sender to …",221,[[],["sendsink",3]]],[11,"into_sink","","Convert this sender into a sink that allows …",221,[[],["sendsink",3]]],[11,"try_send","","Attempt to send a value into the channel. If the channel …",221,[[],[["result",4],["trysenderror",4]]]],[11,"send","","Send a value into the channel, returning an error if all …",221,[[],[["senderror",3],["result",4]]]],[11,"send_deadline","","Send a value into the channel, returning an error if all …",221,[[["instant",3]],[["result",4],["sendtimeouterror",4]]]],[11,"send_timeout","","Send a value into the channel, returning an error if all …",221,[[["duration",3]],[["result",4],["sendtimeouterror",4]]]],[11,"is_disconnected","","Returns true if all receivers for this channel have been …",221,[[],["bool",15]]],[11,"is_empty","","Returns true if the channel is empty. Note: Zero-capacity …",221,[[],["bool",15]]],[11,"is_full","","Returns true if the channel is full. Note: Zero-capacity …",221,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel",221,[[],["usize",15]]],[11,"capacity","","If the channel is bounded, returns its capacity.",221,[[],[["usize",15],["option",4]]]],[11,"recv_async","","Asynchronously receive a value from the channel, …",222,[[],["recvfut",3]]],[11,"into_recv_async","","Convert this receiver into a future that asynchronously …",222,[[],["recvfut",3]]],[11,"stream","","Create an asynchronous stream that uses this receiver to …",222,[[],["recvstream",3]]],[11,"into_stream","","Convert this receiver into a stream that allows …",222,[[],["recvstream",3]]],[11,"try_recv","","Attempt to fetch an incoming value from the channel …",222,[[],[["tryrecverror",4],["result",4]]]],[11,"recv","","Wait for an incoming value from the channel associated …",222,[[],[["result",4],["recverror",4]]]],[11,"recv_deadline","","Wait for an incoming value from the channel associated …",222,[[["instant",3]],[["recvtimeouterror",4],["result",4]]]],[11,"recv_timeout","","Wait for an incoming value from the channel associated …",222,[[["duration",3]],[["recvtimeouterror",4],["result",4]]]],[11,"iter","","Create a blocking iterator over the values received on …",222,[[],["iter",3]]],[11,"try_iter","","A non-blocking iterator over the values received on the …",222,[[],["tryiter",3]]],[11,"drain","","Take all msgs currently sitting in the channel and …",222,[[],["drain",3]]],[11,"is_disconnected","","Returns true if all senders for this channel have been …",222,[[],["bool",15]]],[11,"is_empty","","Returns true if the channel is empty. Note: Zero-capacity …",222,[[],["bool",15]]],[11,"is_full","","Returns true if the channel is full. Note: Zero-capacity …",222,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel.",222,[[],["usize",15]]],[11,"capacity","","If the channel is bounded, returns its capacity.",222,[[],[["usize",15],["option",4]]]],[11,"execute","pliantdb::local::backup","Executes the command.",159,[[["pathbuf",3]]]],[11,"open_local","pliantdb::local","Opens a local file as a pliantdb.",227,[[["configuration",3]]]],[11,"schematic","","Returns the [<code>Schematic</code>] for <code>DB</code>.",227,[[],["schematic",3]]],[11,"execute","pliantdb::server::cli::certificate","Executes the command.",163,[[["server",3]]]],[11,"execute","pliantdb::server::cli::serve","Starts the server.",166,[[["server",3]]]],[11,"execute","pliantdb::server::cli","Executes the command.",168,[[["path",3]]]],[11,"open","pliantdb::server","Creates or opens a [<code>Server</code>] with its data stored in …",229,[[["path",3],["configuration",3]]]],[11,"register_schema","","Registers a schema for use within the server.",229,[[]]],[11,"database","","Retrieves a database. This function only verifies that …",229,[[["str",15]]]],[11,"install_self_signed_certificate","","Installs an X.509 certificate used for general purpose …",229,[[["str",15],["bool",15]]]],[11,"install_certificate","","Installs an X.509 certificate used for general purpose …",229,[[["privatekey",3],["certificate",3]]]],[11,"certificate","","Returns the current certificate.",229,[[]]],[11,"listen_on","","Listens for incoming client connections. Does not return …",229,[[["u16",15]]]],[11,"listen_for_websockets_on","","Listens for <code>WebSocket</code> traffic on <code>port</code>.",229,[[]]],[11,"shutdown","","Shuts the server down. If a <code>timeout</code> is provided, the …",229,[[["option",4],["duration",3]]]]],"p":[[4,"Command"],[8,"Target"],[4,"Host"],[4,"Origin"],[4,"ParseError"],[4,"SyntaxViolation"],[4,"Position"],[4,"Error"],[8,"Connection"],[3,"View"],[4,"QueryKey"],[4,"AccessPolicy"],[3,"Header"],[3,"Document"],[3,"Revision"],[3,"Payload"],[4,"Request"],[13,"Database"],[4,"ServerRequest"],[13,"DeleteDatabase"],[4,"DatabaseRequest"],[13,"Get"],[13,"GetMultiple"],[13,"Query"],[13,"Reduce"],[13,"ApplyTransaction"],[13,"ListExecutedTransactions"],[13,"SubscribeTo"],[13,"UnsubscribeFrom"],[13,"UnregisterSubscriber"],[4,"Response"],[4,"ServerResponse"],[13,"DatabaseCreated"],[13,"DatabaseDeleted"],[4,"DatabaseResponse"],[13,"SubscriberCreated"],[13,"MessageReceived"],[3,"MappedDocument"],[3,"Database"],[8,"ServerConnection"],[4,"Error"],[13,"SchemaMismatch"],[8,"Builder"],[8,"PrivateKey"],[8,"KeyPair"],[3,"Certificate"],[4,"CertificateError"],[3,"PrivateKey"],[3,"Builder"],[4,"Connect"],[3,"Connection"],[3,"Connecting"],[4,"Stream"],[4,"Incoming"],[4,"Receiver"],[4,"Sender"],[4,"ErrorKind"],[4,"ConnectError"],[4,"ConnectionError"],[4,"ReadError"],[4,"WriteError"],[4,"Error"],[4,"X509Error"],[4,"Err"],[4,"Store"],[3,"Map"],[3,"MappedDocument"],[3,"Serialized"],[3,"MappedValue"],[8,"Key"],[4,"Error"],[8,"View"],[4,"SerializableValue"],[8,"Serialized"],[8,"Schema"],[8,"Collection"],[3,"CollectionName"],[3,"InvalidNameError"],[3,"SchemaName"],[3,"ViewName"],[3,"Transaction"],[3,"Operation"],[4,"Command"],[13,"Insert"],[13,"Update"],[13,"Delete"],[4,"OperationResult"],[13,"DocumentUpdated"],[13,"DocumentDeleted"],[3,"Executed"],[3,"ChangedDocument"],[3,"Timestamp"],[8,"Kv"],[4,"KeyCheck"],[3,"KeyOperation"],[4,"Command"],[13,"Set"],[13,"Get"],[4,"Output"],[4,"KeyStatus"],[8,"PubSub"],[8,"Subscriber"],[4,"Error"],[3,"Basic"],[3,"TestDirectory"],[4,"HarnessTest"],[3,"Message"],[4,"SelectError"],[3,"SendError"],[4,"TrySendError"],[4,"SendTimeoutError"],[4,"RecvError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"Configuration"],[3,"Tasks"],[3,"Views"],[3,"Cli"],[4,"Command"],[13,"Save"],[13,"Load"],[4,"Error"],[4,"Command"],[13,"InstallSelfSigned"],[13,"Install"],[3,"Serve"],[3,"Cli"],[4,"Command"],[3,"Configuration"],[4,"Error"],[13,"SchemaMismatch"],[3,"Url"],[3,"ParseOptions"],[3,"UrlQuery"],[3,"Parse"],[3,"ParseIntoOwned"],[3,"ByteSerialize"],[3,"Serializer"],[3,"OpaqueOrigin"],[3,"PathSegmentsMut"],[3,"Client"],[3,"RemoteDatabase"],[3,"Collection"],[3,"KeyPair"],[3,"CertificateChain"],[3,"AlreadyClosed"],[3,"ResolveError"],[3,"Builder"],[3,"Connecting"],[3,"Connection"],[3,"Endpoint"],[3,"Incoming"],[3,"Receiver"],[3,"Sender"],[3,"Certificate"],[3,"CertificateChain"],[3,"KeyPair"],[3,"PrivateKey"],[3,"Authority"],[3,"Name"],[3,"Schematic"],[3,"Builder"],[3,"Namespaced"],[3,"Builder"],[3,"BasicCount"],[3,"BasicByParentId"],[3,"BasicByCategory"],[3,"BasicByBrokenParentId"],[3,"BasicSchema"],[3,"BasicCollectionWithNoViews"],[3,"BasicCollectionWithOnlyBrokenParentId"],[3,"UnassociatedCollection"],[3,"TimingTest"],[3,"Relay"],[3,"Subscriber"],[3,"Selector"],[3,"SendFut"],[3,"SendSink"],[3,"RecvFut"],[3,"RecvStream"],[3,"Sender"],[3,"Receiver"],[3,"Iter"],[3,"TryIter"],[3,"Drain"],[3,"IntoIter"],[3,"Storage"],[3,"Database"],[3,"Server"]]},\
"pliantdb_client":{"doc":"Client for <code>pliantdb-server</code>.","i":[[3,"Client","pliantdb_client","Client for connecting to a <code>PliantDB</code> server.",null,null],[3,"RemoteDatabase","","A database on a remote server.",null,null],[4,"Error","","Errors related to working with <code>Client</code>",null,null],[13,"WebSocket","","An error occurred from the WebSocket transport layer.",0,null],[13,"Network","","An error occurred from networking.",0,null],[13,"InvalidUrl","","An invalid Url was provided.",0,null],[13,"Disconnected","","The connection was interrupted.",0,null],[13,"Core","","The connection was interrupted.",0,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["senderror",3]]]],[11,"from","","",0,[[["recverror",4]]]],[11,"from","","",0,[[["error",6]]]],[11,"from","","",0,[[["sender",4]]]],[11,"from","","",0,[[["receiver",4]]]],[11,"from","","",0,[[["stream",4]]]],[11,"from","","",0,[[["connecting",3]]]],[11,"from","","",0,[[["connect",4]]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[],["client",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"get","","",1,[[["u64",15]],[["pin",3],["box",3]]]],[11,"get_multiple","","",1,[[],[["box",3],["pin",3]]]],[11,"query","","",1,[[["option",4],["accesspolicy",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"query_with_docs","","",1,[[["option",4],["accesspolicy",4],["querykey",4]],[["box",3],["pin",3]]]],[11,"reduce","","",1,[[["option",4],["accesspolicy",4],["querykey",4]],[["box",3],["pin",3]]]],[11,"reduce_grouped","","",1,[[["option",4],["accesspolicy",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"apply_transaction","","",1,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"list_executed_transactions","","",1,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[11,"last_transaction_id","","",1,[[],[["box",3],["pin",3]]]],[11,"create_database","","",2,[[["str",15],["schemaname",3]],[["pin",3],["box",3]]]],[11,"delete_database","","",2,[[["str",15]],[["pin",3],["box",3]]]],[11,"list_databases","","",2,[[],[["pin",3],["box",3]]]],[11,"list_available_schemas","","",2,[[],[["pin",3],["box",3]]]],[11,"execute_key_operation","","",1,[[["keyoperation",3]],[["pin",3],["box",3]]]],[11,"create_subscriber","","",1,[[],[["box",3],["pin",3]]]],[11,"publish","","",1,[[["into",8],["string",3],["send",8]],[["pin",3],["box",3]]]],[11,"new","","Initialize a client connecting to <code>url</code> with <code>certificate</code> …",2,[[["url",3],["certificate",3],["option",4]]]],[11,"database","","Returns a structure representing a remote database. No …",2,[[["str",15]]]]],"p":[[4,"Error"],[3,"RemoteDatabase"],[3,"Client"]]},\
"pliantdb_core":{"doc":"Core functionality and types for <code>PliantDB</code>.","i":[[0,"connection","pliantdb_core","Types for interacting with a database.",null,null],[8,"Connection","pliantdb_core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",0,[[],[["collection",3],["collection",8]]]],[11,"insert","","Inserts a newly created document into the connected […",0,[[["vec",3],["u8",15]],[["box",3],["pin",3]]]],[11,"update","","Updates an existing document in the connected […",0,[[["document",3]],[["box",3],["pin",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",0,[[["u64",15]],[["pin",3],["box",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",0,[[],[["box",3],["pin",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",0,[[["document",3]],[["box",3],["pin",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",0,[[],[["view",3],["view",8]]]],[10,"query","","Queries for view entries matching [<code>View</code>].",0,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",0,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",0,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",0,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",0,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",0,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",0,[[],[["pin",3],["box",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[11,"new","","Creates a new instance using <code>connection</code>.",1,[[]]],[11,"push","","Adds a new <code>Document<Cl></code> with the contents <code>item</code>.",1,[[]]],[11,"get","","Retrieves a <code>Document<Cl></code> with <code>id</code> from the connection.",1,[[["u64",15]]]],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",2,null],[12,"access_policy","","The view\'s data access policy. The default value is […",2,null],[11,"with_key","","Filters for entries in the view with <code>key</code>.",2,[[]]],[11,"with_keys","","Filters for entries in the view with <code>keys</code>.",2,[[["vec",3]]]],[11,"with_key_range","","Filters for entries in the view with the range <code>keys</code>.",2,[[["range",3]]]],[11,"with_access_policy","","Sets the access policy for queries.",2,[[["accesspolicy",4]]]],[11,"query","","Executes the query and retrieves the results.",2,[[]]],[11,"query_with_docs","","Executes the query and retrieves the results with the …",2,[[]]],[11,"reduce","","Executes a reduce over the results of the query",2,[[]]],[11,"reduce_grouped","","Executes a reduce over the results of the query",2,[[]]],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",3,null],[13,"Range","","Matches all entires with keys in the range provided.",3,null],[13,"Multiple","","Matches all entries that have keys that are included in …",3,null],[11,"serialized","","Converts this key to a serialized format using the [<code>Key</code>] …",3,[[],[["querykey",4],["error",4],["result",4]]]],[11,"deserialized","","Deserializes the bytes into <code>K</code> via the [<code>Key</code>] trait.",3,[[],[["querykey",4],["result",4],["error",4]]]],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",4,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",4,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",4,null],[0,"document","pliantdb_core","Types for interacting with <code>Document</code>s.",null,null],[3,"Revision","pliantdb_core::document","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",5,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",5,null],[3,"Header","","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",6,null],[12,"revision","","The revision of the stored document.",6,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",7,null],[12,"header","","The header of the document, which contains the id and …",7,null],[12,"contents","","The serialized bytes of the stored item.",7,null],[11,"new","","Creates a new document with <code>contents</code>.",7,[[["collectionname",3],["cow",4],["u64",15]]]],[11,"with_contents","","Creates a new document with serialized bytes from <code>contents</code>…",7,[[["collectionname",3],["u64",15]],[["error",3],["result",4]]]],[11,"contents","","Retrieves <code>contents</code> through deserialization into the type <code>D</code>…",7,[[],[["result",4],["error",3],["deserialize",8]]]],[11,"set_contents","","Serializes and stores <code>contents</code> into this document.",7,[[],[["error",3],["result",4]]]],[11,"create_new_revision","","Creates a new revision.",7,[[["cow",4]],["option",4]]],[11,"emit","","Creates a <code>Map</code> result with an empty key and value.",7,[[],["map",3]]],[11,"emit_key","","Creates a <code>Map</code> result with a <code>key</code> and an empty value.",7,[[["key",8]],[["map",3],["key",8]]]],[11,"emit_value","","Creates a <code>Map</code> result with <code>value</code> and an empty key.",7,[[["serialize",8]],[["serialize",8],["map",3]]]],[11,"emit_key_and_value","","Creates a <code>Map</code> result with a <code>key</code> and <code>value</code>.",7,[[["key",8],["serialize",8]],[["serialize",8],["map",3],["key",8]]]],[11,"to_owned","","Clone the document\'s data so that it\'s no longer borrowed …",7,[[],["document",3]]],[0,"limits","pliantdb_core","Limits used within <code>PliantDB</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb_core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"networking","pliantdb_core","Types for networked communications.",null,null],[3,"Payload","pliantdb_core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",8,null],[12,"wrapped","","The wrapped payload.",8,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",9,null],[13,"Database","","A database-related request.",9,null],[12,"database","pliantdb_core::networking::Request","The name of the database.",10,null],[12,"request","","The request made to the database.",10,null],[4,"ServerRequest","pliantdb_core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",11,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",11,null],[12,"name","pliantdb_core::networking::ServerRequest","The name of the database to delete.",12,null],[13,"ListDatabases","pliantdb_core::networking","Lists all databases.",11,null],[13,"ListAvailableSchemas","","Lists available schemas.",11,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",13,null],[12,"collection","pliantdb_core::networking::DatabaseRequest","The collection of the document.",14,null],[12,"id","","The id of the document.",14,null],[13,"GetMultiple","pliantdb_core::networking","Retrieve multiple documents.",13,null],[12,"collection","pliantdb_core::networking::DatabaseRequest","The collection of the documents.",15,null],[12,"ids","","The ids of the documents.",15,null],[13,"Query","pliantdb_core::networking","Queries a view.",13,null],[12,"view","pliantdb_core::networking::DatabaseRequest","The name of the view.",16,null],[12,"key","","The filter for the view.",16,null],[12,"access_policy","","The access policy for the query.",16,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",16,null],[13,"Reduce","pliantdb_core::networking","Reduces a view.",13,null],[12,"view","pliantdb_core::networking::DatabaseRequest","The name of the view.",17,null],[12,"key","","The filter for the view.",17,null],[12,"access_policy","","The access policy for the query.",17,null],[12,"grouped","","Whether to return a single value or values grouped by …",17,null],[13,"ApplyTransaction","pliantdb_core::networking","Applies a transaction.",13,null],[12,"transaction","pliantdb_core::networking::DatabaseRequest","The trasnaction to apply.",18,null],[13,"ListExecutedTransactions","pliantdb_core::networking","Lists executed transactions.",13,null],[12,"starting_id","pliantdb_core::networking::DatabaseRequest","The starting transaction id.",19,null],[12,"result_limit","","The maximum number of results.",19,null],[13,"LastTransactionId","pliantdb_core::networking","Queries the last transaction id.",13,null],[13,"CreateSubscriber","","Creates a <code>PubSub</code> <code>Subscriber</code>",13,null],[13,"Publish","","Publishes a <code>PubSub</code> message.",13,null],[13,"SubscribeTo","","Subscribes <code>subscriber_id</code> to messages for <code>topic</code>.",13,null],[12,"subscriber_id","pliantdb_core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",20,null],[12,"topic","","The topic to subscribe to.",20,null],[13,"UnsubscribeFrom","pliantdb_core::networking","Unsubscribes <code>subscriber_id</code> from messages for <code>topic</code>.",13,null],[12,"subscriber_id","pliantdb_core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",21,null],[12,"topic","","The topic to unsubscribe from.",21,null],[13,"UnregisterSubscriber","pliantdb_core::networking","Unregisters the subscriber.",13,null],[12,"subscriber_id","pliantdb_core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",22,null],[13,"ExecuteKeyOperation","pliantdb_core::networking","Excutes a key-value store operation.",13,null],[4,"Response","","A response from a server.",null,null],[13,"Ok","","A request succeded but provided no output.",23,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",23,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",23,null],[13,"Error","","An error occurred processing a request.",23,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",24,null],[12,"name","pliantdb_core::networking::ServerResponse","The name of the database to create.",25,null],[13,"DatabaseDeleted","pliantdb_core::networking","A database with <code>name</code> was successfully removed.",24,null],[12,"name","pliantdb_core::networking::ServerResponse","The name of the database to remove.",26,null],[13,"Databases","pliantdb_core::networking","A list of available databases.",24,null],[13,"AvailableSchemas","","A list of availble schemas.",24,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",27,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",27,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",27,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",27,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",27,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",27,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",27,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",27,null],[13,"SubscriberCreated","","A new <code>PubSub</code> subscriber was created.",27,null],[12,"subscriber_id","pliantdb_core::networking::DatabaseResponse","The unique ID of the subscriber.",28,null],[13,"MessageReceived","pliantdb_core::networking","A PubSub message was received.",27,null],[12,"subscriber_id","pliantdb_core::networking::DatabaseResponse","The ID of the subscriber receiving the message.",29,null],[12,"message","","The message received.",29,null],[13,"KvOutput","pliantdb_core::networking","Output from a [<code>KeyOperation</code>] being executed.",27,null],[3,"MappedDocument","","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",30,null],[12,"value","","The serialized value.",30,null],[12,"source","","The source document.",30,null],[11,"deserialized","","Deserialize into a <code>MappedDocument</code>.",30,[[],[["result",4],["mappeddocument",3],["error",4]]]],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",31,null],[12,"schema","","The schema defining the database.",31,null],[8,"ServerConnection","","Functions for interacting with a <code>PliantDB</code> server.",null,null],[10,"create_database","","Creates a database named <code>name</code> using the [<code>SchemaName</code>] …",32,[[["str",15],["schemaname",3]],[["pin",3],["box",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",32,[[["str",15]],[["pin",3],["box",3]]]],[10,"list_databases","","Lists the databases on this server.",32,[[],[["pin",3],["box",3]]]],[10,"list_available_schemas","","Lists the [<code>SchemaName</code>]s on this server.",32,[[],[["pin",3],["box",3]]]],[4,"Error","","A networking error.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See […",33,null],[13,"DatabaseNotFound","","The database name given was not found.",33,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",33,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",33,null],[13,"Disconnected","","The connection was interrupted.",33,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",33,null],[12,"database_name","pliantdb_core::networking::Error","The name of the database being accessed.",34,null],[12,"schema","","The schema provided for the database.",34,null],[12,"stored_schema","","The schema stored for the database.",34,null],[13,"SchemaAlreadyRegistered","pliantdb_core::networking","The [<code>SchemaName</code>] returned has already been registered …",33,null],[13,"SchemaNotRegistered","","The [<code>SchemaName</code>] requested was not registered with this …",33,null],[0,"schema","pliantdb_core","Types for defining database schema.",null,null],[0,"view","pliantdb_core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb_core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb_core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",35,null],[12,"key","","The key used to index the View.",35,null],[12,"value","","An associated value stored in the view.",35,null],[11,"serialized","","Serializes this map.",35,[[],[["serialized",3],["error",4],["result",4]]]],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",36,null],[12,"key","","The key used to index the View.",36,null],[12,"value","","An associated value stored in the view.",36,null],[11,"new","","Creates a new Map entry for the document with id <code>source</code>.",35,[[["u64",15]]]],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",37,null],[12,"key","","The key used to index the View.",37,null],[12,"value","","An associated value stored in the view.",37,null],[11,"deserialized","","Deserializes this map.",37,[[],[["result",4],["map",3],["error",4]]]],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",38,null],[12,"value","","The value generated by the <code>View</code>",38,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",39,[[],[["cow",4],["result",6]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",39,[[],["result",6]]],[8,"EnumKey","","Adds <code>Key</code> support to an enum. Requires implementing …",null,null],[4,"Error","pliantdb_core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",40,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",40,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",40,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",41,null],[16,"Key","","The key for this view.",41,null],[16,"Value","","An associated type that can be stored with each entry in …",41,null],[10,"version","","The version of the view. Changing this value will cause …",41,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",41,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"view_name","","The namespaced name of the view.",41,[[],[["result",4],["invalidnameerror",3],["viewname",3]]]],[10,"map","","The map function for this view. This function is …",41,[[["document",3]],["mapresult",6]]],[11,"reduce","","The reduce function for this view. If …",41,[[["bool",15]],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",42,null],[13,"Borrowed","","a borrowed value",42,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",43,[[],[["invalidnameerror",3],["result",4],["collectionname",3]]]],[10,"version","","Wraps [<code>View::version</code>]",43,[[],["u64",15]]],[10,"view_name","","Wraps [<code>View::view_name</code>]",43,[[],[["result",4],["invalidnameerror",3],["viewname",3]]]],[10,"map","","Wraps [<code>View::map</code>]",43,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",43,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[8,"Collection","pliantdb_core::schema","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_name","","The <code>Id</code> of this collection.",44,[[],[["invalidnameerror",3],["result",4],["collectionname",3]]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",44,[[["schematic",3]],[["result",4],["error",4]]]],[3,"Authority","","The owner of a schema item. This should represent the …",null,null],[3,"CollectionName","","The name of a <code>Collection</code>.",null,null],[12,"authority","","The authority of this collection.",45,null],[12,"name","","The name of this collection.",45,null],[3,"InvalidNameError","","An invalid name was used in a schema definition.",null,null],[12,"0","","",46,null],[3,"Name","","A valid schema name. Must be alphanumeric (<code>a-zA-Z9-0</code>) or …",null,null],[3,"SchemaName","","The name of a <code>Schema</code>.",null,null],[12,"authority","","The authority of this schema.",47,null],[12,"name","","The name of this schema.",47,null],[3,"ViewName","","The name of a <code>View</code>.",null,null],[12,"collection","","The name of the collection that contains this view.",48,null],[12,"name","","The name of this view.",48,null],[3,"Schematic","","A collection of defined collections and views.",null,null],[8,"Schema","","Defines a group of collections that are stored into a …",null,null],[10,"schema_name","","Returns the unique [<code>SchemaName</code>] for this schema.",49,[[],[["invalidnameerror",3],["result",4],["schemaname",3]]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",49,[[["schematic",3]],[["result",4],["error",4]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",49,[[],[["result",4],["schematic",3],["error",4]]]],[0,"transaction","pliantdb_core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb_core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",50,null],[11,"push","","Adds an operation to the transaction.",50,[[["operation",3]]]],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",51,null],[12,"command","","The command being performed.",51,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",52,null],[12,"contents","pliantdb_core::transaction::Command","The initial contents of the document.",53,null],[13,"Update","pliantdb_core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",52,null],[12,"header","pliantdb_core::transaction::Command","The current header of the <code>Document</code>.",54,null],[12,"contents","","The new contents to store within the <code>Document</code>.",54,null],[13,"Delete","pliantdb_core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",52,null],[12,"header","pliantdb_core::transaction::Command","The current header of the <code>Document</code>.",55,null],[4,"OperationResult","pliantdb_core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",56,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",56,null],[12,"collection","pliantdb_core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",57,null],[12,"header","","The header of the updated <code>Document</code>.",57,null],[13,"DocumentDeleted","pliantdb_core::transaction","A <code>Document</code> was deleted.",56,null],[12,"collection","pliantdb_core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",58,null],[12,"id","","The id of the deleted <code>Document</code>.",58,null],[3,"Executed","pliantdb_core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",59,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",59,null],[11,"to_owned","","Convert this structure to be free of borrows.",59,[[],["executed",3]]],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",60,null],[12,"id","","The id of the changed <code>Document</code>.",60,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",60,null],[0,"kv","pliantdb_core","Types for utilizing a lightweight atomic Key-Value store.",null,null],[0,"get","pliantdb_core::kv","Types for executing get operations.",null,null],[3,"Builder","pliantdb_core::kv::get","Executes [<code>Command::Get</code>] when awaited. Also offers methods …",null,null],[11,"and_delete","","Delete the key after retrieving the value.",61,[[]]],[0,"namespaced","pliantdb_core::kv","Types for handling key namespaces.",null,null],[3,"Namespaced","pliantdb_core::kv::namespaced","A namespaced key-value store. All operations performed …",null,null],[0,"set","pliantdb_core::kv","Types for executing set operations.",null,null],[3,"Builder","pliantdb_core::kv::set","Executes [<code>Command::Set</code>] when awaited. Also offers methods …",null,null],[11,"expire_in","","Set this key to expire after <code>duration</code> from now.",62,[[["duration",3]]]],[11,"expire_at","","Set this key to expire at the provided <code>time</code>.",62,[[["systemtime",3]]]],[11,"keep_existing_expiration","","If the key already exists, do not update the currently …",62,[[]]],[11,"only_if_exists","","Only set the value if this key already exists.",62,[[]]],[11,"only_if_vacant","","Only set the value if this key isn\'t present.",62,[[]]],[11,"returning_previous","","Executes the Set operation, requesting the previous value …",62,[[]]],[3,"Timestamp","pliantdb_core::kv","A timestamp relative to [<code>UNIX_EPOCH</code>].",null,null],[12,"seconds","","The number of whole seconds since [<code>UNIX_EPOCH</code>].",63,null],[12,"nanos","","The number of nanoseconds in the timestamp.",63,null],[11,"now","","Returns the current timestamp according to the OS. Uses […",63,[[]]],[8,"Kv","","Key-Value store methods. The Key-Value store is designed …",null,null],[10,"execute_key_operation","","Executes a single [<code>KeyOperation</code>].",64,[[["keyoperation",3]],[["pin",3],["box",3]]]],[11,"set_key","","Sets <code>key</code> to <code>value</code>. This function returns a builder that …",64,[[["string",3],["into",8]],[["serialize",8],["builder",3]]]],[11,"get_key","","Gets the value stored at <code>key</code>. This function returns a …",64,[[["string",3],["into",8]],[["builder",3],["deserialize",8]]]],[11,"delete_key","","Deletes the value stored at <code>key</code>.",64,[[["string",3],["into",8],["send",8]],[["box",3],["pin",3]]]],[11,"key_namespace","","The current namespace.",64,[[],[["option",4],["str",15]]]],[11,"with_key_namespace","","Access this Key-Value store within a namespace. When …",64,[[["str",15]],["namespaced",3]]],[4,"KeyCheck","","Checks for existing keys.",null,null],[13,"OnlyIfPresent","","Only allow the operation if an existing key is present.",65,null],[13,"OnlyIfVacant","","Only allow the opeartion if the key isn\'t present.",65,null],[3,"KeyOperation","","An operation performed on a key.",null,null],[12,"namespace","","The namespace for the key.",66,null],[12,"key","","The key to operate on.",66,null],[12,"command","","The command to execute.",66,null],[4,"Command","","Commands for a key-value store.",null,null],[13,"Set","","Set a key/value pair.",67,null],[12,"value","pliantdb_core::kv::Command","The value.",68,null],[12,"expiration","","If set, the key will be set to expire automatically.",68,null],[12,"keep_existing_expiration","","If true and the key already exists, the expiration will …",68,null],[12,"check","","Conditional checks for whether the key is already present …",68,null],[12,"return_previous_value","","If true and the key already exists, the existing key will …",68,null],[13,"Get","pliantdb_core::kv","Get the value from a key.",67,null],[12,"delete","pliantdb_core::kv::Command","Remove the key after retrieving the value.",69,null],[13,"Delete","pliantdb_core::kv","Delete a key.",67,null],[4,"Output","","The result of a [<code>KeyOperation</code>].",null,null],[13,"Status","","A status was returned.",70,null],[13,"Value","","A value was returned.",70,null],[4,"KeyStatus","","The status of an operation on a Key.",null,null],[13,"Inserted","","A new key was inserted.",71,null],[13,"Updated","","An existing key was updated with a new value.",71,null],[13,"Deleted","","A key was deleted.",71,null],[13,"NotChanged","","No changes were made.",71,null],[0,"pubsub","pliantdb_core","Types for Publish/Subscribe (<code>PubSub</code>) messaging.",null,null],[8,"PubSub","pliantdb_core::pubsub","Publishes and Subscribes to messages on topics.",null,null],[16,"Subscriber","","The Subscriber type for this <code>PubSub</code> connection.",72,null],[10,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",72,[[],[["box",3],["pin",3]]]],[10,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",72,[[["string",3],["into",8],["send",8]],[["box",3],["pin",3]]]],[8,"Subscriber","","A subscriber to one or more topics.",null,null],[10,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",73,[[["string",3],["into",8],["send",8]],[["box",3],["pin",3]]]],[10,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",73,[[["str",15]],[["box",3],["pin",3]]]],[10,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",73,[[],["receiver",3]]],[0,"test_util","pliantdb_core","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb_core::test_util","",null,null],[12,"value","","",74,null],[12,"category","","",74,null],[12,"parent_id","","",74,null],[11,"new","","",74,[[]]],[11,"with_category","","",74,[[]]],[11,"with_parent_id","","",74,[[["u64",15]]]],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",75,null],[11,"new","","",75,[[["asref",8],["path",3]]]],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"HarnessTest","","",null,null],[13,"StoreRetrieveUpdate","","",76,null],[13,"NotFound","","",76,null],[13,"Conflict","","",76,null],[13,"BadUpdate","","",76,null],[13,"NoUpdate","","",76,null],[13,"GetMultiple","","",76,null],[13,"ListTransactions","","",76,null],[13,"ViewQuery","","",76,null],[13,"UnassociatedCollection","","",76,null],[13,"ViewUpdate","","",76,null],[13,"ViewAccessPolicies","","",76,null],[13,"PubSubSimple","","",76,null],[13,"PubSubMultipleSubscribers","","",76,null],[13,"PubSubDropAndSend","","",76,null],[13,"PubSubUnsubscribe","","",76,null],[13,"PubSubDropCleanup","","",76,null],[13,"KvBasic","","",76,null],[13,"KvSet","","",76,null],[13,"KvExpiration","","",76,null],[13,"KvDeleteExpire","","",76,null],[11,"port","","",76,[[["u16",15]],["u16",15]]],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[3,"TimingTest","","",null,null],[11,"new","","",77,[[["duration",3]]]],[11,"wait_until","","",77,[[["duration",3]]]],[11,"elapsed","","",77,[[],["duration",3]]],[4,"Error","pliantdb_core","an enumeration of errors that this crate can produce",null,null],[13,"Storage","","An error from interacting with local storage.",78,null],[13,"Server","","An error from interacting with a server.",78,null],[13,"Transport","","An error occurred from the QUIC transport layer.",78,null],[13,"Websocket","","An error occurred from the websocket transport layer.",78,null],[13,"Networking","","An error occurred from networking.",78,null],[13,"Io","","An error occurred from IO.",78,null],[13,"Configuration","","An error occurred with the provided configuration options.",78,null],[13,"Client","","An error occurred inside of the client.",78,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",78,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",78,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",78,null],[13,"InvalidName","","An invalid name was specified during schema creation.",78,null],[14,"define_pubsub_test_suite","","Expands into a suite of pubsub unit tests using the …",null,null],[14,"define_connection_test_suite","","Creates a test suite that tests methods available on […",null,null],[14,"define_kv_test_suite","","Defines the Kv test suite",null,null],[11,"from","pliantdb_core::connection","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","pliantdb_core::document","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"equivalent","","",5,[[],["bool",15]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"equivalent","","",6,[[],["bool",15]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","pliantdb_core::networking","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","pliantdb_core::schema","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"equivalent","","",79,[[],["bool",15]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"to_string","","",80,[[],["string",3]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"equivalent","","",80,[[],["bool",15]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"equivalent","","",47,[[],["bool",15]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"equivalent","","",45,[[],["bool",15]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"equivalent","","",48,[[],["bool",15]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","pliantdb_core::schema::view::map","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","pliantdb_core::schema::view","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"as_bits","","",42,[[],["bitslice",3]]],[11,"vzip","","",42,[[]]],[11,"from","pliantdb_core::transaction","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","pliantdb_core::kv::get","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_future","","",61,[[]]],[11,"try_poll","","",61,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",61,[[]]],[11,"from","pliantdb_core::kv::namespaced","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","pliantdb_core::kv::set","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_future","","",62,[[]]],[11,"try_poll","","",62,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",62,[[]]],[11,"from","pliantdb_core::kv","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"equivalent","","",63,[[],["bool",15]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"schema_name","pliantdb_core::test_util","",74,[[],[["schemaname",3],["result",4],["invalidnameerror",3]]]],[11,"define_collections","","",74,[[["schematic",3]],[["error",4],["result",4]]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"collection","","",83,[[],[["invalidnameerror",3],["result",4],["collectionname",3]]]],[11,"version","","",83,[[],["u64",15]]],[11,"view_name","","",83,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[11,"map","","",83,[[["document",3]],[["option",4],["result",4],["error",4]]]],[11,"reduce","","",83,[[["bool",15]],[["error",4],["vec",3],["result",4]]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"collection","","",84,[[],[["invalidnameerror",3],["result",4],["collectionname",3]]]],[11,"version","","",84,[[],["u64",15]]],[11,"view_name","","",84,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[11,"map","","",84,[[["document",3]],[["option",4],["result",4],["error",4]]]],[11,"reduce","","",84,[[["bool",15]],[["error",4],["vec",3],["result",4]]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"collection","","",85,[[],[["invalidnameerror",3],["result",4],["collectionname",3]]]],[11,"version","","",85,[[],["u64",15]]],[11,"view_name","","",85,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[11,"map","","",85,[[["document",3]],[["option",4],["result",4],["error",4]]]],[11,"reduce","","",85,[[["bool",15]],[["error",4],["vec",3],["result",4]]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"collection","","",86,[[],[["invalidnameerror",3],["result",4],["collectionname",3]]]],[11,"version","","",86,[[],["u64",15]]],[11,"view_name","","",86,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[11,"map","","",86,[[["document",3]],[["option",4],["result",4],["error",4]]]],[11,"reduce","","",86,[[["bool",15]],[["error",4],["vec",3],["result",4]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"schema_name","","",88,[[],[["schemaname",3],["result",4],["invalidnameerror",3]]]],[11,"define_collections","","",88,[[["schematic",3]],[["error",4],["result",4]]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"schema_name","","",89,[[],[["schemaname",3],["result",4],["invalidnameerror",3]]]],[11,"define_collections","","",89,[[["schematic",3]],[["error",4],["result",4]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"schema_name","","",90,[[],[["schemaname",3],["result",4],["invalidnameerror",3]]]],[11,"define_collections","","",90,[[["schematic",3]],[["error",4],["result",4]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"to_string","","",76,[[],["string",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","pliantdb_core","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"collection_name","pliantdb_core::test_util","",74,[[],[["invalidnameerror",3],["result",4],["collectionname",3]]]],[11,"define_views","","",74,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","","",88,[[],[["invalidnameerror",3],["result",4],["collectionname",3]]]],[11,"define_views","","",88,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","","",89,[[],[["invalidnameerror",3],["result",4],["collectionname",3]]]],[11,"define_views","","",89,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","","",90,[[],[["invalidnameerror",3],["result",4],["collectionname",3]]]],[11,"define_views","","",90,[[["schematic",3]],[["result",4],["error",4]]]],[11,"as_big_endian_bytes","pliantdb_core::kv","",63,[[],[["cow",4],["result",6]]]],[11,"from_big_endian_bytes","","",63,[[],["result",6]]],[11,"version","pliantdb_core::test_util","",83,[[],["u64",15]]],[11,"name","","",83,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",83,[[["document",3]],["mapresult",6]]],[11,"reduce","","",83,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",84,[[],["u64",15]]],[11,"name","","",84,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",84,[[["document",3]],["mapresult",6]]],[11,"reduce","","",84,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",85,[[],["u64",15]]],[11,"name","","",85,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",85,[[["document",3]],["mapresult",6]]],[11,"reduce","","",85,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",86,[[],["u64",15]]],[11,"name","","",86,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",86,[[["document",3]],["mapresult",6]]],[11,"schema_name","","",87,[[],[["invalidnameerror",3],["result",4],["schemaname",3]]]],[11,"define_collections","","",87,[[["schematic",3]],[["result",4],["error",4]]]],[11,"execute_key_operation","pliantdb_core::kv::namespaced","",82,[[["keyoperation",3]],[["pin",3],["box",3]]]],[11,"key_namespace","","",82,[[],[["option",4],["str",15]]]],[11,"with_key_namespace","","",82,[[["str",15]],["namespaced",3]]],[11,"drop","pliantdb_core::test_util","",75,[[]]],[11,"as_ref","pliantdb_core::schema::view","",42,[[]]],[11,"as_ref","pliantdb_core::test_util","",75,[[],["path",3]]],[11,"from","pliantdb_core::schema::view","",40,[[["error",3]]]],[11,"from","","",42,[[],["serializablevalue",4]]],[11,"from","pliantdb_core::kv","",63,[[["systemtime",3]]]],[11,"from","pliantdb_core","",78,[[["invalidnameerror",3]]]],[11,"from","","",78,[[["error",3]]]],[11,"into","pliantdb_core::schema","",79,[[],["string",3]]],[11,"clone","pliantdb_core::connection","",3,[[],["querykey",4]]],[11,"clone","","",4,[[],["accesspolicy",4]]],[11,"clone","pliantdb_core::document","",5,[[],["revision",3]]],[11,"clone","","",6,[[],["header",3]]],[11,"clone","","",7,[[],["document",3]]],[11,"clone","pliantdb_core::networking","",8,[[],["payload",3]]],[11,"clone","","",9,[[],["request",4]]],[11,"clone","","",11,[[],["serverrequest",4]]],[11,"clone","","",13,[[],["databaserequest",4]]],[11,"clone","","",23,[[],["response",4]]],[11,"clone","","",24,[[],["serverresponse",4]]],[11,"clone","","",27,[[],["databaseresponse",4]]],[11,"clone","","",30,[[],["mappeddocument",3]]],[11,"clone","","",31,[[],["database",3]]],[11,"clone","","",33,[[],["error",4]]],[11,"clone","pliantdb_core::schema","",79,[[],["name",3]]],[11,"clone","","",46,[[],["invalidnameerror",3]]],[11,"clone","","",80,[[],["authority",3]]],[11,"clone","","",47,[[],["schemaname",3]]],[11,"clone","","",45,[[],["collectionname",3]]],[11,"clone","","",48,[[],["viewname",3]]],[11,"clone","pliantdb_core::schema::view::map","",37,[[],["serialized",3]]],[11,"clone","","",38,[[],["mappedvalue",3]]],[11,"clone","pliantdb_core::transaction","",50,[[],["transaction",3]]],[11,"clone","","",51,[[],["operation",3]]],[11,"clone","","",52,[[],["command",4]]],[11,"clone","","",56,[[],["operationresult",4]]],[11,"clone","","",59,[[],["executed",3]]],[11,"clone","","",60,[[],["changeddocument",3]]],[11,"clone","pliantdb_core::kv","",63,[[],["timestamp",3]]],[11,"clone","","",65,[[],["keycheck",4]]],[11,"clone","","",66,[[],["keyoperation",3]]],[11,"clone","","",67,[[],["command",4]]],[11,"clone","","",70,[[],["output",4]]],[11,"clone","","",71,[[],["keystatus",4]]],[11,"clone","pliantdb_core","",78,[[],["error",4]]],[11,"clone","pliantdb_core::test_util","",76,[[],["harnesstest",4]]],[11,"default","pliantdb_core::schema","",81,[[],["schematic",3]]],[11,"default","pliantdb_core::transaction","",50,[[],["transaction",3]]],[11,"default","pliantdb_core::test_util","",74,[[],["basic",3]]],[11,"cmp","pliantdb_core::kv","",63,[[["timestamp",3]],["ordering",4]]],[11,"eq","pliantdb_core::document","",5,[[["revision",3]],["bool",15]]],[11,"ne","","",5,[[["revision",3]],["bool",15]]],[11,"eq","","",6,[[["header",3]],["bool",15]]],[11,"ne","","",6,[[["header",3]],["bool",15]]],[11,"eq","pliantdb_core::networking","",31,[[["database",3]],["bool",15]]],[11,"ne","","",31,[[["database",3]],["bool",15]]],[11,"eq","pliantdb_core::schema","",79,[[["name",3]],["bool",15]]],[11,"ne","","",79,[[["name",3]],["bool",15]]],[11,"eq","","",80,[[["authority",3]],["bool",15]]],[11,"ne","","",80,[[["authority",3]],["bool",15]]],[11,"eq","","",47,[[["schemaname",3]],["bool",15]]],[11,"ne","","",47,[[["schemaname",3]],["bool",15]]],[11,"eq","","",45,[[["collectionname",3]],["bool",15]]],[11,"ne","","",45,[[["collectionname",3]],["bool",15]]],[11,"eq","","",48,[[["viewname",3]],["bool",15]]],[11,"ne","","",48,[[["viewname",3]],["bool",15]]],[11,"eq","pliantdb_core::schema::view::map","",35,[[["map",3]],["bool",15]]],[11,"ne","","",35,[[["map",3]],["bool",15]]],[11,"eq","","",38,[[["mappedvalue",3]],["bool",15]]],[11,"ne","","",38,[[["mappedvalue",3]],["bool",15]]],[11,"eq","pliantdb_core::kv","",63,[[["timestamp",3]],["bool",15]]],[11,"ne","","",63,[[["timestamp",3]],["bool",15]]],[11,"eq","","",71,[[["keystatus",4]],["bool",15]]],[11,"eq","pliantdb_core::test_util","",74,[[["basic",3]],["bool",15]]],[11,"ne","","",74,[[["basic",3]],["bool",15]]],[11,"partial_cmp","pliantdb_core::kv","",63,[[["timestamp",3]],[["option",4],["ordering",4]]]],[11,"lt","","",63,[[["timestamp",3]],["bool",15]]],[11,"le","","",63,[[["timestamp",3]],["bool",15]]],[11,"gt","","",63,[[["timestamp",3]],["bool",15]]],[11,"ge","","",63,[[["timestamp",3]],["bool",15]]],[11,"fmt","pliantdb_core::connection","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::document","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::networking","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::view::map","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::view","",40,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::transaction","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::kv","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core","",78,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::test_util","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::networking","",33,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::view","",40,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core","",78,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::test_util","",76,[[["formatter",3]],["result",6]]],[11,"sub","pliantdb_core::kv","",63,[[]]],[11,"add","","",63,[[["duration",3]]]],[11,"hash","pliantdb_core::schema","",79,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",48,[[]]],[11,"try_from","","",79,[[["str",15]],[["invalidnameerror",3],["result",4]]]],[11,"try_from","","",79,[[["string",3]],[["invalidnameerror",3],["result",4]]]],[11,"try_from","","",80,[[["str",15]],[["invalidnameerror",3],["result",4]]]],[11,"try_from","","",80,[[["string",3]],[["invalidnameerror",3],["result",4]]]],[11,"try_from","","",47,[[["str",15]],[["invalidnameerror",3],["result",4]]]],[11,"try_from","","",45,[[["str",15]],[["invalidnameerror",3],["result",4]]]],[11,"source","pliantdb_core::schema::view","",40,[[],[["option",4],["error",8]]]],[11,"source","pliantdb_core","",78,[[],[["option",4],["error",8]]]],[11,"poll","pliantdb_core::kv::get","",61,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","pliantdb_core::kv::set","",62,[[["pin",3],["context",3]],["poll",4]]],[11,"deserialize","pliantdb_core::connection","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","pliantdb_core::document","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","pliantdb_core::networking","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","pliantdb_core::schema","",79,[[],["result",4]]],[11,"deserialize","","",46,[[],["result",4]]],[11,"deserialize","","",80,[[],["result",4]]],[11,"deserialize","","",47,[[],["result",4]]],[11,"deserialize","","",45,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","pliantdb_core::schema::view::map","",37,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","pliantdb_core::transaction","",50,[[],["result",4]]],[11,"deserialize","","",51,[[],["result",4]]],[11,"deserialize","","",52,[[],["result",4]]],[11,"deserialize","","",56,[[],["result",4]]],[11,"deserialize","","",59,[[],["result",4]]],[11,"deserialize","","",60,[[],["result",4]]],[11,"deserialize","pliantdb_core::kv","",63,[[],["result",4]]],[11,"deserialize","","",65,[[],["result",4]]],[11,"deserialize","","",66,[[],["result",4]]],[11,"deserialize","","",67,[[],["result",4]]],[11,"deserialize","","",70,[[],["result",4]]],[11,"deserialize","","",71,[[],["result",4]]],[11,"deserialize","pliantdb_core","",78,[[],["result",4]]],[11,"deserialize","pliantdb_core::test_util","",74,[[],["result",4]]],[11,"serialize","pliantdb_core::connection","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","pliantdb_core::document","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","pliantdb_core::networking","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","pliantdb_core::schema","",79,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","","",80,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","","",45,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","pliantdb_core::schema::view::map","",37,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","pliantdb_core::transaction","",50,[[],["result",4]]],[11,"serialize","","",51,[[],["result",4]]],[11,"serialize","","",52,[[],["result",4]]],[11,"serialize","","",56,[[],["result",4]]],[11,"serialize","","",59,[[],["result",4]]],[11,"serialize","","",60,[[],["result",4]]],[11,"serialize","pliantdb_core::kv","",63,[[],["result",4]]],[11,"serialize","","",65,[[],["result",4]]],[11,"serialize","","",66,[[],["result",4]]],[11,"serialize","","",67,[[],["result",4]]],[11,"serialize","","",70,[[],["result",4]]],[11,"serialize","","",71,[[],["result",4]]],[11,"serialize","pliantdb_core","",78,[[],["result",4]]],[11,"serialize","pliantdb_core::test_util","",74,[[],["result",4]]],[11,"new","pliantdb_core::document","Creates the first revision for a document with the SHA256 …",5,[[]]],[11,"with_id","","Creates a revision with <code>id</code> for a document with the SHA256 …",5,[[["u32",15]]]],[11,"next_revision","","Creates the next revision in sequence with an updated …",5,[[],["option",4]]],[11,"new","pliantdb_core::schema","Creates a new name after validating it.",79,[[["tryinto",8]],[["invalidnameerror",3],["result",4]]]],[11,"new","","Creates a new schema name.",47,[[["authority",3],["tryinto",8],["tryinto",8],["name",3]],[["invalidnameerror",3],["result",4]]]],[11,"new","","Creates a new collection name.",45,[[["authority",3],["tryinto",8],["tryinto",8],["name",3]],[["invalidnameerror",3],["result",4]]]],[11,"new","","Creates a new view name.",48,[[["collectionname",3],["tryinto",8],["tryinto",8],["name",3]],[["invalidnameerror",3],["result",4]]]],[11,"define_collection","","Adds the collection <code>C</code> and its views.",81,[[],[["result",4],["error",4]]]],[11,"define_view","","Adds the view <code>V</code>.",81,[[["view",8]],[["result",4],["error",4]]]],[11,"contains","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",81,[[],["bool",15]]],[11,"contains_collection_id","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",81,[[["collectionname",3]],["bool",15]]],[11,"view_by_name","","Looks up a [<code>view::Serialized</code>] by name.",81,[[["viewname",3]],[["option",4],["serialized",8]]]],[11,"view","","Looks up a [<code>view::Serialized</code>] through the the type <code>V</code>.",81,[[],[["option",4],["serialized",8]]]],[11,"views","","Iterates over all registered views.",81,[[]]],[11,"views_in_collection","","Iterates over all views that belong to <code>collection</code>.",81,[[["collectionname",3]],[["vec",3],["option",4]]]]],"p":[[8,"Connection"],[3,"Collection"],[3,"View"],[4,"QueryKey"],[4,"AccessPolicy"],[3,"Revision"],[3,"Header"],[3,"Document"],[3,"Payload"],[4,"Request"],[13,"Database"],[4,"ServerRequest"],[13,"DeleteDatabase"],[4,"DatabaseRequest"],[13,"Get"],[13,"GetMultiple"],[13,"Query"],[13,"Reduce"],[13,"ApplyTransaction"],[13,"ListExecutedTransactions"],[13,"SubscribeTo"],[13,"UnsubscribeFrom"],[13,"UnregisterSubscriber"],[4,"Response"],[4,"ServerResponse"],[13,"DatabaseCreated"],[13,"DatabaseDeleted"],[4,"DatabaseResponse"],[13,"SubscriberCreated"],[13,"MessageReceived"],[3,"MappedDocument"],[3,"Database"],[8,"ServerConnection"],[4,"Error"],[13,"SchemaMismatch"],[3,"Map"],[3,"MappedDocument"],[3,"Serialized"],[3,"MappedValue"],[8,"Key"],[4,"Error"],[8,"View"],[4,"SerializableValue"],[8,"Serialized"],[8,"Collection"],[3,"CollectionName"],[3,"InvalidNameError"],[3,"SchemaName"],[3,"ViewName"],[8,"Schema"],[3,"Transaction"],[3,"Operation"],[4,"Command"],[13,"Insert"],[13,"Update"],[13,"Delete"],[4,"OperationResult"],[13,"DocumentUpdated"],[13,"DocumentDeleted"],[3,"Executed"],[3,"ChangedDocument"],[3,"Builder"],[3,"Builder"],[3,"Timestamp"],[8,"Kv"],[4,"KeyCheck"],[3,"KeyOperation"],[4,"Command"],[13,"Set"],[13,"Get"],[4,"Output"],[4,"KeyStatus"],[8,"PubSub"],[8,"Subscriber"],[3,"Basic"],[3,"TestDirectory"],[4,"HarnessTest"],[3,"TimingTest"],[4,"Error"],[3,"Name"],[3,"Authority"],[3,"Schematic"],[3,"Namespaced"],[3,"BasicCount"],[3,"BasicByParentId"],[3,"BasicByCategory"],[3,"BasicByBrokenParentId"],[3,"BasicSchema"],[3,"BasicCollectionWithNoViews"],[3,"BasicCollectionWithOnlyBrokenParentId"],[3,"UnassociatedCollection"]]},\
"pliantdb_jobs":{"doc":"Aysnc jobs management for <code>PliantDB</code>.","i":[[0,"manager","pliantdb_jobs","Types related to the job <code>Manager</code>.",null,null],[3,"Manager","pliantdb_jobs::manager","A background jobs manager.",null,null],[11,"enqueue","","Pushes a <code>job</code> into the queue. Pushing the same job …",0,[[["job",8]]]],[11,"lookup_or_enqueue","","Uses [<code>Keyed::key</code>] to ensure no other job with the same <code>key</code>…",0,[[["keyed",8]]]],[11,"spawn_worker","","Spawns a worker. In general, you shouldn\'t need to call …",0,[[]]],[0,"task","pliantdb_jobs","Types related to defining [<code>Job</code>]s.",null,null],[3,"Id","pliantdb_jobs::task","he <code>Id</code> of an executing task.",null,null],[3,"Handle","","References a background task.",null,null],[12,"id","","The task\'s id.",1,null],[11,"clone","","Returns a copy of this handle. When the job is completed, …",1,[[]]],[11,"receive","","Waits for the job to complete and returns the result.",1,[[]]],[11,"try_receive","","Tries to receive the status of the job. If available, it …",1,[[],[["result",4],["tryrecverror",4],["result",4]]]],[8,"Job","pliantdb_jobs","Defines a background job that can be queued and executed.",null,null],[16,"Output","","The output type of the job.",2,null],[10,"execute","","Executes the job and returns the result.",2,[[],[["pin",3],["box",3]]]],[8,"Keyed","","Defines a background job that has a unique <code>key</code>.",null,null],[10,"key","","The unique <code>key</code> for this <code>Job</code>",3,[[]]],[11,"from","pliantdb_jobs::manager","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","pliantdb_jobs::task","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","pliantdb_jobs::manager","",0,[[]]],[11,"clone","pliantdb_jobs::task","",4,[[],["id",3]]],[11,"default","pliantdb_jobs::manager","",0,[[]]],[11,"eq","pliantdb_jobs::task","",4,[[["id",3]],["bool",15]]],[11,"ne","","",4,[[["id",3]],["bool",15]]],[11,"fmt","pliantdb_jobs::manager","",0,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_jobs::task","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"hash","","",4,[[]]]],"p":[[3,"Manager"],[3,"Handle"],[8,"Job"],[8,"Keyed"],[3,"Id"]]},\
"pliantdb_local":{"doc":"Local storage backend for <code>PliantDB</code>.","i":[[0,"config","pliantdb_local","Configuration options.",null,null],[3,"Configuration","pliantdb_local::config","Configuration options for <code>Storage</code>.",null,null],[12,"workers","","Configuration options related to background tasks.",0,null],[12,"views","","Configuration options related to views.",0,null],[3,"Tasks","","Configujration options for background tasks.",null,null],[12,"worker_count","","Defines how many workers should be spawned to process …",1,null],[3,"Views","","Configuration options for views.",null,null],[12,"check_integrity_on_open","","If true, the database will scan all views during the call …",2,null],[0,"backup","pliantdb_local","Local database tool to save and load databases into plain …",null,null],[3,"Cli","pliantdb_local::backup","The command line interface for <code>pliantdb local-backup</code>.",null,null],[12,"database_path","","The path to the database you wish to operate on.",3,null],[12,"subcommand","","The command to execute on the database.",3,null],[4,"Command","","The command to execute.",null,null],[13,"Save","","Exports all of the data into a straightforward file …",4,null],[12,"output_directory","pliantdb_local::backup::Command","The directory to export the data within. The process will …",5,null],[12,"output_name","","The name of the folder to export the data to. If not …",5,null],[13,"Load","pliantdb_local::backup","Loads all of the data from a previously saved backup. Any …",4,null],[12,"backup","pliantdb_local::backup::Command","The path to the previously saved backup.",6,null],[11,"execute","pliantdb_local::backup","Executes the command.",4,[[["pathbuf",3]]]],[0,"connection","pliantdb_local::core","Types for interacting with a database.",null,null],[8,"Connection","pliantdb_local::core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",7,[[],["collection",3]]],[11,"insert","","Inserts a newly created document into the connected […",7,[[["vec",3],["global",3],["u8",15]],[["box",3],["pin",3]]]],[11,"update","","Updates an existing document in the connected […",7,[[["document",3]],[["box",3],["pin",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",7,[[["u64",15]],[["pin",3],["box",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",7,[[],[["pin",3],["box",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",7,[[["document",3]],[["box",3],["pin",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",7,[[],["view",3]]],[10,"query","","Queries for view entries matching [<code>View</code>].",7,[[["option",4],["querykey",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",7,[[["option",4],["querykey",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",7,[[["option",4],["querykey",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",7,[[["option",4],["querykey",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",7,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",7,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",7,[[],[["box",3],["pin",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",8,null],[12,"access_policy","","The view\'s data access policy. The default value is […",8,null],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",9,null],[13,"Range","","Matches all entires with keys in the range provided.",9,null],[13,"Multiple","","Matches all entries that have keys that are included in …",9,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",10,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",10,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",10,null],[0,"document","pliantdb_local::core","Types for interacting with <code>Document</code>s.",null,null],[3,"Header","pliantdb_local::core::document","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",11,null],[12,"revision","","The revision of the stored document.",11,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",12,null],[12,"header","","The header of the document, which contains the id and …",12,null],[12,"contents","","The serialized bytes of the stored item.",12,null],[3,"Revision","","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",13,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",13,null],[0,"limits","pliantdb_local::core","Limits used within <code>PliantDB</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb_local::core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"networking","pliantdb_local::core","Types for networked communications.",null,null],[3,"Payload","pliantdb_local::core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",14,null],[12,"wrapped","","The wrapped payload.",14,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",15,null],[13,"Database","","A database-related request.",15,null],[12,"database","pliantdb_local::core::networking::Request","The name of the database.",16,null],[12,"request","","The request made to the database.",16,null],[4,"ServerRequest","pliantdb_local::core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",17,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",17,null],[12,"name","pliantdb_local::core::networking::ServerRequest","The name of the database to delete.",18,null],[13,"ListDatabases","pliantdb_local::core::networking","Lists all databases.",17,null],[13,"ListAvailableSchemas","","Lists available schemas.",17,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",19,null],[12,"collection","pliantdb_local::core::networking::DatabaseRequest","The collection of the document.",20,null],[12,"id","","The id of the document.",20,null],[13,"GetMultiple","pliantdb_local::core::networking","Retrieve multiple documents.",19,null],[12,"collection","pliantdb_local::core::networking::DatabaseRequest","The collection of the documents.",21,null],[12,"ids","","The ids of the documents.",21,null],[13,"Query","pliantdb_local::core::networking","Queries a view.",19,null],[12,"view","pliantdb_local::core::networking::DatabaseRequest","The name of the view.",22,null],[12,"key","","The filter for the view.",22,null],[12,"access_policy","","The access policy for the query.",22,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",22,null],[13,"Reduce","pliantdb_local::core::networking","Reduces a view.",19,null],[12,"view","pliantdb_local::core::networking::DatabaseRequest","The name of the view.",23,null],[12,"key","","The filter for the view.",23,null],[12,"access_policy","","The access policy for the query.",23,null],[12,"grouped","","Whether to return a single value or values grouped by …",23,null],[13,"ApplyTransaction","pliantdb_local::core::networking","Applies a transaction.",19,null],[12,"transaction","pliantdb_local::core::networking::DatabaseRequest","The trasnaction to apply.",24,null],[13,"ListExecutedTransactions","pliantdb_local::core::networking","Lists executed transactions.",19,null],[12,"starting_id","pliantdb_local::core::networking::DatabaseRequest","The starting transaction id.",25,null],[12,"result_limit","","The maximum number of results.",25,null],[13,"LastTransactionId","pliantdb_local::core::networking","Queries the last transaction id.",19,null],[13,"CreateSubscriber","","Creates a <code>PubSub</code> <code>Subscriber</code>",19,null],[13,"Publish","","Publishes a <code>PubSub</code> message.",19,null],[13,"SubscribeTo","","Subscribes <code>subscriber_id</code> to messages for <code>topic</code>.",19,null],[12,"subscriber_id","pliantdb_local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",26,null],[12,"topic","","The topic to subscribe to.",26,null],[13,"UnsubscribeFrom","pliantdb_local::core::networking","Unsubscribes <code>subscriber_id</code> from messages for <code>topic</code>.",19,null],[12,"subscriber_id","pliantdb_local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",27,null],[12,"topic","","The topic to unsubscribe from.",27,null],[13,"UnregisterSubscriber","pliantdb_local::core::networking","Unregisters the subscriber.",19,null],[12,"subscriber_id","pliantdb_local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",28,null],[13,"ExecuteKeyOperation","pliantdb_local::core::networking","Excutes a key-value store operation.",19,null],[4,"Response","","A response from a server.",null,null],[13,"Ok","","A request succeded but provided no output.",29,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",29,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",29,null],[13,"Error","","An error occurred processing a request.",29,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",30,null],[12,"name","pliantdb_local::core::networking::ServerResponse","The name of the database to create.",31,null],[13,"DatabaseDeleted","pliantdb_local::core::networking","A database with <code>name</code> was successfully removed.",30,null],[12,"name","pliantdb_local::core::networking::ServerResponse","The name of the database to remove.",32,null],[13,"Databases","pliantdb_local::core::networking","A list of available databases.",30,null],[13,"AvailableSchemas","","A list of availble schemas.",30,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",33,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",33,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",33,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",33,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",33,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",33,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",33,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",33,null],[13,"SubscriberCreated","","A new <code>PubSub</code> subscriber was created.",33,null],[12,"subscriber_id","pliantdb_local::core::networking::DatabaseResponse","The unique ID of the subscriber.",34,null],[13,"MessageReceived","pliantdb_local::core::networking","A PubSub message was received.",33,null],[12,"subscriber_id","pliantdb_local::core::networking::DatabaseResponse","The ID of the subscriber receiving the message.",35,null],[12,"message","","The message received.",35,null],[13,"KvOutput","pliantdb_local::core::networking","Output from a [<code>KeyOperation</code>] being executed.",33,null],[3,"MappedDocument","","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",36,null],[12,"value","","The serialized value.",36,null],[12,"source","","The source document.",36,null],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",37,null],[12,"schema","","The schema defining the database.",37,null],[8,"ServerConnection","","Functions for interacting with a <code>PliantDB</code> server.",null,null],[10,"create_database","","Creates a database named <code>name</code> using the [<code>SchemaName</code>] …",38,[[["str",15],["schemaname",3]],[["box",3],["pin",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",38,[[["str",15]],[["box",3],["pin",3]]]],[10,"list_databases","","Lists the databases on this server.",38,[[],[["pin",3],["box",3]]]],[10,"list_available_schemas","","Lists the [<code>SchemaName</code>]s on this server.",38,[[],[["pin",3],["box",3]]]],[4,"Error","","A networking error.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See […",39,null],[13,"DatabaseNotFound","","The database name given was not found.",39,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",39,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",39,null],[13,"Disconnected","","The connection was interrupted.",39,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",39,null],[12,"database_name","pliantdb_local::core::networking::Error","The name of the database being accessed.",40,null],[12,"schema","","The schema provided for the database.",40,null],[12,"stored_schema","","The schema stored for the database.",40,null],[13,"SchemaAlreadyRegistered","pliantdb_local::core::networking","The [<code>SchemaName</code>] returned has already been registered …",39,null],[13,"SchemaNotRegistered","","The [<code>SchemaName</code>] requested was not registered with this …",39,null],[0,"dangerous","pliantdb_local::core::networking::fabruic","Security-sensitive settings are hidden behind these …",null,null],[8,"Builder","pliantdb_local::core::networking::fabruic::dangerous","Security-sensitive configuration for [<code>Builder</code>].",null,null],[10,"set_root_certificates","","Set [<code>Certificate</code>]s to be added into the root certificate …",41,[[]]],[8,"PrivateKey","","Gives read access to the [<code>PrivateKey</code>].",null,null],[10,"as_ref","","Returns a <code>&[u8]</code> to the [<code>PrivateKey</code>].",42,[[]]],[10,"into","","Returns a [<code>Vec<u8></code>] to the [<code>PrivateKey</code>].",42,[[],[["u8",15],["global",3],["vec",3]]]],[10,"serialize","","Serialize with [<code>serde</code>].",42,[[],["result",4]]],[8,"KeyPair","","Gives serialization access to [<code>KeyPair</code>].",null,null],[10,"serialize","","Serialize with [<code>serde</code>].",43,[[],["result",4]]],[0,"error","pliantdb_local::core::networking::fabruic","<code>Error</code> for this [<code>crate</code>].",null,null],[3,"Certificate","pliantdb_local::core::networking::fabruic::error","Error constructing <code>Certificate</code> with <code>Certificate::from_der</code>.",null,null],[12,"error","","The error.",44,null],[12,"certificate","","The bytes used to build the <code>Certificate</code>.",44,null],[4,"CertificateError","","Error constructing <code>Certificate</code> with <code>Certificate::from_der</code>.",null,null],[13,"WebPki","","<code>Error</code> returned by [<code>webpki</code>].",45,null],[13,"X509","","<code>Error</code> returned by [<code>x509_parser</code>].",45,null],[13,"Dangling","","Bytes passed contain uncorrelated bytes.",45,null],[13,"Expired","","<code>Certificate</code> has expired.",45,null],[13,"Domain","","<code>Certificate</code> is missing a domain name.",45,null],[3,"PrivateKey","","Failed to parse the given private key with …",null,null],[12,"0","","",46,null],[3,"KeyPair","","Failed to pair given <code>CertificateChain</code> and <code>PrivateKey</code> with …",null,null],[3,"CertificateChain","","Failed to verify the certificate chain with …",null,null],[3,"AlreadyClosed","","Attempting to close something that is already closed.",null,null],[3,"Builder","","Error binding socket during construction of <code>Endpoint</code> with …",null,null],[12,"error","","The error binding <code>Endpoint</code>.",47,null],[12,"builder","","Recovered <code>Builder</code> for re-use.",47,null],[4,"Connect","","Error connecting to a server with <code>Endpoint::connect</code>.",null,null],[13,"MultipleDomains","","The passed <code>Certificate</code> has multiple domains, this is not …",48,null],[13,"ParseUrl","","Failed to parse URL.",48,null],[13,"Domain","","URL didn\'t contain a domain.",48,null],[13,"Port","","URL didn\'t contain a port.",48,null],[13,"ParseDomain","","Failed to parse domain.",48,null],[13,"TrustDns","","Failed to resolve domain with <code>trust-dns</code>.",48,null],[13,"StdDns","","Failed to resolve domain with <code>ToSocketAddrs</code>.",48,null],[13,"NoIp","","Found no IP address for that domain.",48,null],[13,"Config","","Configuration needed to connect to a server is faulty.",48,null],[3,"Connection","","Error receiving connection from peer with <code>Stream</code> on from …",null,null],[12,"0","","",49,null],[3,"Connecting","","Error completing connection with peer with <code>Incoming::type</code> …",null,null],[12,"0","","",50,null],[4,"Stream","","Error opening a new stream to peer with …",null,null],[13,"Open","","Opening a new stream with <code>Connection::open_stream</code> failed.",51,null],[13,"Sender","","Sending the type information to peer failed.",51,null],[4,"Incoming","","Error receiving type information from <code>Incoming</code> stream.",null,null],[13,"Receiver","","Failed receiving type information from <code>Incoming</code> stream.",52,null],[13,"Closed","","<code>Incoming</code> was closed before type information could be …",52,null],[4,"Receiver","","Error receiving a message from a <code>Receiver</code>.",null,null],[13,"Read","","Failed to read from a <code>Receiver</code>.",53,null],[13,"Deserialize","","Failed to <code>Deserialize</code> a message from a <code>Receiver</code>.",53,null],[4,"Sender","","Error sending a message to a <code>Sender</code>.",null,null],[13,"Serialize","","Failed to <code>Serialize</code> a message for a <code>Sender</code>.",54,null],[13,"Write","","Failed to write to a <code>Sender</code>.",54,null],[13,"Closed","","[<code>Sender</code>] is closed.",54,null],[4,"ErrorKind","","The kind of error that can be produced during a …",null,null],[13,"Io","","If the error stems from the reader/writer that is being …",55,null],[13,"InvalidUtf8Encoding","","Returned if the deserializer attempts to deserialize a …",55,null],[13,"InvalidBoolEncoding","","Returned if the deserializer attempts to deserialize a …",55,null],[13,"InvalidCharEncoding","","Returned if the deserializer attempts to deserialize a …",55,null],[13,"InvalidTagEncoding","","Returned if the deserializer attempts to deserialize the …",55,null],[13,"DeserializeAnyNotSupported","","Serde has a deserialize_any method that lets the format …",55,null],[13,"SizeLimit","","If (de)serializing a message takes more than the provided …",55,null],[13,"SequenceMustHaveLength","","Bincode can not encode sequences of unknown length (like …",55,null],[13,"Custom","","A custom error message from Serde.",55,null],[4,"ConnectError","","Errors in the parameters being used to create a new …",null,null],[13,"EndpointStopping","","The endpoint can no longer create new connections",56,null],[13,"TooManyConnections","","The number of active connections on the local endpoint is …",56,null],[13,"InvalidDnsName","","The domain name supplied was malformed",56,null],[13,"Config","","The transport configuration was invalid",56,null],[13,"InvalidRemoteAddress","","The remote [<code>SocketAddr</code>] supplied was malformed",56,null],[4,"ConnectionError","","Reasons why a connection might be lost",null,null],[13,"VersionMismatch","","The peer doesn\'t implement any supported version",57,null],[13,"TransportError","","The peer violated the QUIC specification as understood by …",57,null],[13,"ConnectionClosed","","The peer\'s QUIC stack aborted the connection automatically",57,null],[13,"ApplicationClosed","","The peer closed the connection",57,null],[13,"Reset","","The peer is unable to continue processing this …",57,null],[13,"TimedOut","","Communication with the peer has lapsed for longer than …",57,null],[13,"LocallyClosed","","The local application closed the connection",57,null],[4,"ReadError","","Errors that arise from reading from a stream.",null,null],[13,"Reset","","The peer abandoned transmitting data on this stream.",58,null],[13,"ConnectionClosed","","The connection was closed.",58,null],[13,"UnknownStream","","The stream has already been stopped, finished, or reset",58,null],[13,"IllegalOrderedRead","","Attempted an ordered read following an unordered read",58,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",58,null],[4,"WriteError","","Errors that arise from writing to a stream",null,null],[13,"Stopped","","The peer is no longer accepting data on this stream.",59,null],[13,"ConnectionClosed","","The connection was closed.",59,null],[13,"UnknownStream","","The stream has already been finished or reset",59,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",59,null],[4,"Error","","An error that occurs during certificate validation or …",null,null],[13,"BadDER","","The encoding of some ASN.1 DER-encoded item is invalid.",60,null],[13,"BadDERTime","","The encoding of an ASN.1 DER-encoded time is invalid.",60,null],[13,"CAUsedAsEndEntity","","A CA certificate is veing used as an end-entity …",60,null],[13,"CertExpired","","The certificate is expired; i.e. the time it is being …",60,null],[13,"CertNotValidForName","","The certificate is not valid for the name it is being …",60,null],[13,"CertNotValidYet","","The certificate is not valid yet; i.e. the time it is …",60,null],[13,"EndEntityUsedAsCA","","An end-entity certificate is being used as a CA …",60,null],[13,"ExtensionValueInvalid","","An X.509 extension is invalid.",60,null],[13,"InvalidCertValidity","","The certificate validity period (notBefore, notAfter) is …",60,null],[13,"InvalidSignatureForPublicKey","","The signature is invalid for the given public key.",60,null],[13,"NameConstraintViolation","","The certificate violates one or more name constraints.",60,null],[13,"PathLenConstraintViolated","","The certificate violates one or more path length …",60,null],[13,"SignatureAlgorithmMismatch","","The algorithm in the TBSCertificate \\\"signature\\\" field of …",60,null],[13,"RequiredEKUNotFound","","The certificate is not valid for the Extended Key Usage …",60,null],[13,"UnknownIssuer","","A valid issuer for the certificate could not be found.",60,null],[13,"UnsupportedCertVersion","","The certificate is not a v3 X.509 certificate.",60,null],[13,"UnsupportedCriticalExtension","","The certificate contains an unsupported critical …",60,null],[13,"UnsupportedSignatureAlgorithmForPublicKey","","The signature\'s algorithm does not match the algorithm of …",60,null],[13,"UnsupportedSignatureAlgorithm","","The signature algorithm for a signature is not in the set …",60,null],[3,"ResolveError","","The error type for errors that get returned in the crate",null,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",61,null],[13,"IdnaError","","",61,null],[13,"InvalidPort","","",61,null],[13,"InvalidIpv4Address","","",61,null],[13,"InvalidIpv6Address","","",61,null],[13,"InvalidDomainCharacter","","",61,null],[13,"RelativeUrlWithoutBase","","",61,null],[13,"RelativeUrlWithCannotBeABaseBase","","",61,null],[13,"SetHostOnCannotBeABaseUrl","","",61,null],[13,"Overflow","","",61,null],[4,"X509Error","","An error that can occur while parsing or validating a …",null,null],[13,"Generic","","",62,null],[13,"InvalidVersion","","",62,null],[13,"InvalidSerial","","",62,null],[13,"InvalidAlgorithmIdentifier","","",62,null],[13,"InvalidX509Name","","",62,null],[13,"InvalidDate","","",62,null],[13,"InvalidSPKI","","",62,null],[13,"InvalidSubjectUID","","",62,null],[13,"InvalidIssuerUID","","",62,null],[13,"InvalidExtensions","","",62,null],[13,"InvalidAttributes","","",62,null],[13,"DuplicateExtensions","","",62,null],[13,"DuplicateAttributes","","",62,null],[13,"InvalidSignatureValue","","",62,null],[13,"InvalidTbsCertificate","","",62,null],[13,"InvalidUserCertificate","","",62,null],[13,"InvalidCertificate","","Top-level certificate structure is invalid",62,null],[13,"SignatureVerificationError","","",62,null],[13,"SignatureUnsupportedAlgorithm","","",62,null],[13,"Der","","",62,null],[13,"NomError","","",62,null],[4,"Err","","The <code>Err</code> enum indicates the parser was not successful",null,null],[13,"Incomplete","","There was not enough data",63,null],[13,"Error","","The parser had an error (recoverable)",63,null],[13,"Failure","","The parser had an unrecoverable error: we got to the right…",63,null],[3,"Builder","pliantdb_local::core::networking::fabruic","Helper for constructing an [<code>Endpoint</code>].",null,null],[3,"Connecting","","Represent\'s an intermediate state to build a [<code>Connection</code>].",null,null],[3,"Connection","","Represents an open connection. Receives [<code>Incoming</code>] …",null,null],[3,"Endpoint","","Represents a socket using the QUIC protocol to …",null,null],[3,"Incoming","","An intermediate state to define which type to accept in …",null,null],[3,"Receiver","","Used to receive data from a stream. Will stop receiving …",null,null],[3,"Sender","","Used to send data to a stream.",null,null],[4,"Store","","Configuration option for [<code>Builder::set_store</code>].",null,null],[13,"Empty","","Empty root certificate store.",64,null],[13,"Os","","Uses the OS root certificate store, see …",64,null],[13,"Embedded","","Use an embedded root certificate store, see <code>webpki-roots</code>.",64,null],[3,"Certificate","","A public certificate. You can distribute it freely to …",null,null],[3,"CertificateChain","","A public [<code>Certificate</code>] chain, used to prese",null,null],[3,"KeyPair","","A key-pair, consisting of a [<code>CertificateChain</code>] and […",null,null],[3,"PrivateKey","","A private key.",null,null],[0,"schema","pliantdb_local::core","Types for defining database schema.",null,null],[0,"view","pliantdb_local::core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb_local::core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb_local::core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",65,null],[12,"key","","The key used to index the View.",65,null],[12,"value","","An associated value stored in the view.",65,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",66,null],[12,"key","","The key used to index the View.",66,null],[12,"value","","An associated value stored in the view.",66,null],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",67,null],[12,"key","","The key used to index the View.",67,null],[12,"value","","An associated value stored in the view.",67,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",68,null],[12,"value","","The value generated by the <code>View</code>",68,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",69,[[],[["result",4],["cow",4],["error",3]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",69,[[],[["result",4],["error",3]]]],[8,"EnumKey","","Adds <code>Key</code> support to an enum. Requires implementing …",null,null],[4,"Error","pliantdb_local::core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",70,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",70,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",70,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",71,null],[16,"Key","","The key for this view.",71,null],[16,"Value","","An associated type that can be stored with each entry in …",71,null],[10,"version","","The version of the view. Changing this value will cause …",71,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",71,[[],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"view_name","","The namespaced name of the view.",71,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[10,"map","","The map function for this view. This function is …",71,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","The reduce function for this view. If …",71,[[["bool",15]],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",72,null],[13,"Borrowed","","a borrowed value",72,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",73,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[10,"version","","Wraps [<code>View::version</code>]",73,[[],["u64",15]]],[10,"view_name","","Wraps [<code>View::view_name</code>]",73,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[10,"map","","Wraps [<code>View::map</code>]",73,[[["document",3]],[["error",4],["result",4],["option",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",73,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[8,"Schema","pliantdb_local::core::schema","Defines a group of collections that are stored into a …",null,null],[10,"schema_name","","Returns the unique [<code>SchemaName</code>] for this schema.",74,[[],[["invalidnameerror",3],["schemaname",3],["result",4]]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",74,[[["schematic",3]],[["result",4],["error",4]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",74,[[],[["error",4],["result",4],["schematic",3]]]],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_name","","The <code>Id</code> of this collection.",75,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",75,[[["schematic",3]],[["result",4],["error",4]]]],[3,"Authority","","The owner of a schema item. This should represent the …",null,null],[3,"CollectionName","","The name of a <code>Collection</code>.",null,null],[12,"authority","","The authority of this collection.",76,null],[12,"name","","The name of this collection.",76,null],[3,"InvalidNameError","","An invalid name was used in a schema definition.",null,null],[12,"0","","",77,null],[3,"Name","","A valid schema name. Must be alphanumeric (<code>a-zA-Z9-0</code>) or …",null,null],[3,"SchemaName","","The name of a <code>Schema</code>.",null,null],[12,"authority","","The authority of this schema.",78,null],[12,"name","","The name of this schema.",78,null],[3,"ViewName","","The name of a <code>View</code>.",null,null],[12,"collection","","The name of the collection that contains this view.",79,null],[12,"name","","The name of this view.",79,null],[3,"Schematic","","A collection of defined collections and views.",null,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",69,[[],[["result",4],["cow",4],["error",3]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",69,[[],[["result",4],["error",3]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",65,null],[12,"key","","The key used to index the View.",65,null],[12,"value","","An associated value stored in the view.",65,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",66,null],[12,"key","","The key used to index the View.",66,null],[12,"value","","An associated value stored in the view.",66,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",68,null],[12,"value","","The value generated by the <code>View</code>",68,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",71,null],[16,"Key","","The key for this view.",71,null],[16,"Value","","An associated type that can be stored with each entry in …",71,null],[10,"version","","The version of the view. Changing this value will cause …",71,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",71,[[],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"view_name","","The namespaced name of the view.",71,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[10,"map","","The map function for this view. This function is …",71,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","The reduce function for this view. If …",71,[[["bool",15]],[["result",4],["error",4]]]],[0,"transaction","pliantdb_local::core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb_local::core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",80,null],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",81,null],[12,"command","","The command being performed.",81,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",82,null],[12,"contents","pliantdb_local::core::transaction::Command","The initial contents of the document.",83,null],[13,"Update","pliantdb_local::core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",82,null],[12,"header","pliantdb_local::core::transaction::Command","The current header of the <code>Document</code>.",84,null],[12,"contents","","The new contents to store within the <code>Document</code>.",84,null],[13,"Delete","pliantdb_local::core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",82,null],[12,"header","pliantdb_local::core::transaction::Command","The current header of the <code>Document</code>.",85,null],[4,"OperationResult","pliantdb_local::core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",86,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",86,null],[12,"collection","pliantdb_local::core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",87,null],[12,"header","","The header of the updated <code>Document</code>.",87,null],[13,"DocumentDeleted","pliantdb_local::core::transaction","A <code>Document</code> was deleted.",86,null],[12,"collection","pliantdb_local::core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",88,null],[12,"id","","The id of the deleted <code>Document</code>.",88,null],[3,"Executed","pliantdb_local::core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",89,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",89,null],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",90,null],[12,"id","","The id of the changed <code>Document</code>.",90,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",90,null],[0,"kv","pliantdb_local::core","Types for utilizing a lightweight atomic Key-Value store.",null,null],[0,"get","pliantdb_local::core::kv","Types for executing get operations.",null,null],[3,"Builder","pliantdb_local::core::kv::get","Executes [<code>Command::Get</code>] when awaited. Also offers methods …",null,null],[0,"namespaced","pliantdb_local::core::kv","Types for handling key namespaces.",null,null],[3,"Namespaced","pliantdb_local::core::kv::namespaced","A namespaced key-value store. All operations performed …",null,null],[0,"set","pliantdb_local::core::kv","Types for executing set operations.",null,null],[3,"Builder","pliantdb_local::core::kv::set","Executes [<code>Command::Set</code>] when awaited. Also offers methods …",null,null],[3,"Timestamp","pliantdb_local::core::kv","A timestamp relative to [<code>UNIX_EPOCH</code>].",null,null],[12,"seconds","","The number of whole seconds since [<code>UNIX_EPOCH</code>].",91,null],[12,"nanos","","The number of nanoseconds in the timestamp.",91,null],[8,"Kv","","Key-Value store methods. The Key-Value store is designed …",null,null],[10,"execute_key_operation","","Executes a single [<code>KeyOperation</code>].",92,[[["keyoperation",3]],[["box",3],["pin",3]]]],[11,"set_key","","Sets <code>key</code> to <code>value</code>. This function returns a builder that …",92,[[],["builder",3]]],[11,"get_key","","Gets the value stored at <code>key</code>. This function returns a …",92,[[],["builder",3]]],[11,"delete_key","","Deletes the value stored at <code>key</code>.",92,[[],[["box",3],["pin",3]]]],[11,"key_namespace","","The current namespace.",92,[[],[["str",15],["option",4]]]],[11,"with_key_namespace","","Access this Key-Value store within a namespace. When …",92,[[["str",15]],["namespaced",3]]],[4,"KeyCheck","","Checks for existing keys.",null,null],[13,"OnlyIfPresent","","Only allow the operation if an existing key is present.",93,null],[13,"OnlyIfVacant","","Only allow the opeartion if the key isn\'t present.",93,null],[3,"KeyOperation","","An operation performed on a key.",null,null],[12,"namespace","","The namespace for the key.",94,null],[12,"key","","The key to operate on.",94,null],[12,"command","","The command to execute.",94,null],[4,"Command","","Commands for a key-value store.",null,null],[13,"Set","","Set a key/value pair.",95,null],[12,"value","pliantdb_local::core::kv::Command","The value.",96,null],[12,"expiration","","If set, the key will be set to expire automatically.",96,null],[12,"keep_existing_expiration","","If true and the key already exists, the expiration will …",96,null],[12,"check","","Conditional checks for whether the key is already present …",96,null],[12,"return_previous_value","","If true and the key already exists, the existing key will …",96,null],[13,"Get","pliantdb_local::core::kv","Get the value from a key.",95,null],[12,"delete","pliantdb_local::core::kv::Command","Remove the key after retrieving the value.",97,null],[13,"Delete","pliantdb_local::core::kv","Delete a key.",95,null],[4,"Output","","The result of a [<code>KeyOperation</code>].",null,null],[13,"Status","","A status was returned.",98,null],[13,"Value","","A value was returned.",98,null],[4,"KeyStatus","","The status of an operation on a Key.",null,null],[13,"Inserted","","A new key was inserted.",99,null],[13,"Updated","","An existing key was updated with a new value.",99,null],[13,"Deleted","","A key was deleted.",99,null],[13,"NotChanged","","No changes were made.",99,null],[0,"pubsub","pliantdb_local::core","Types for Publish/Subscribe (<code>PubSub</code>) messaging.",null,null],[8,"PubSub","pliantdb_local::core::pubsub","Publishes and Subscribes to messages on topics.",null,null],[16,"Subscriber","","The Subscriber type for this <code>PubSub</code> connection.",100,null],[10,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",100,[[],[["box",3],["pin",3]]]],[10,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",100,[[],[["box",3],["pin",3]]]],[8,"Subscriber","","A subscriber to one or more topics.",null,null],[10,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",101,[[],[["box",3],["pin",3]]]],[10,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",101,[[["str",15]],[["box",3],["pin",3]]]],[10,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",101,[[],["receiver",3]]],[4,"Error","pliantdb_local::core","an enumeration of errors that this crate can produce",null,null],[13,"Storage","","An error from interacting with local storage.",102,null],[13,"Server","","An error from interacting with a server.",102,null],[13,"Transport","","An error occurred from the QUIC transport layer.",102,null],[13,"Websocket","","An error occurred from the websocket transport layer.",102,null],[13,"Networking","","An error occurred from networking.",102,null],[13,"Io","","An error occurred from IO.",102,null],[13,"Configuration","","An error occurred with the provided configuration options.",102,null],[13,"Client","","An error occurred inside of the client.",102,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",102,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",102,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",102,null],[13,"InvalidName","","An invalid name was specified during schema creation.",102,null],[0,"test_util","","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb_local::core::test_util","",null,null],[12,"value","","",103,null],[12,"category","","",103,null],[12,"parent_id","","",103,null],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",104,null],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"HarnessTest","","",null,null],[13,"StoreRetrieveUpdate","","",105,null],[13,"NotFound","","",105,null],[13,"Conflict","","",105,null],[13,"BadUpdate","","",105,null],[13,"NoUpdate","","",105,null],[13,"GetMultiple","","",105,null],[13,"ListTransactions","","",105,null],[13,"ViewQuery","","",105,null],[13,"UnassociatedCollection","","",105,null],[13,"ViewUpdate","","",105,null],[13,"ViewAccessPolicies","","",105,null],[13,"PubSubSimple","","",105,null],[13,"PubSubMultipleSubscribers","","",105,null],[13,"PubSubDropAndSend","","",105,null],[13,"PubSubUnsubscribe","","",105,null],[13,"PubSubDropCleanup","","",105,null],[13,"KvBasic","","",105,null],[13,"KvSet","","",105,null],[13,"KvExpiration","","",105,null],[13,"KvDeleteExpire","","",105,null],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[3,"TimingTest","","",null,null],[3,"Message","pliantdb_local::core::circulate","A <code>PubSub</code> message.",null,null],[12,"topic","","The topic of the message.",106,null],[12,"payload","","The payload of the message.",106,null],[3,"Relay","","Manages subscriptions and notifications for <code>PubSub</code>.",null,null],[3,"Subscriber","","A subscriber for [<code>Message</code>]s published to subscribed …",null,null],[0,"select","pliantdb_local::core::circulate::flume","Types that permit waiting upon multiple blocking …",null,null],[4,"SelectError","pliantdb_local::core::circulate::flume::select","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",107,null],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[0,"async","pliantdb_local::core::circulate::flume","Futures and other types that allow asynchronous …",null,null],[3,"SendFut","pliantdb_local::core::circulate::flume::async","A future that sends a value into a channel.",null,null],[3,"SendSink","","A sink that allows sending values into a channel.",null,null],[3,"RecvFut","","A future which allows asynchronously receiving a message.",null,null],[3,"RecvStream","","A stream which allows asynchronously receiving messages.",null,null],[3,"SendError","pliantdb_local::core::circulate::flume","An error that may be emitted when attempting to send a …",null,null],[12,"0","","",108,null],[4,"TrySendError","","An error that may be emitted when attempting to send a …",null,null],[13,"Full","","",109,null],[13,"Disconnected","","",109,null],[4,"SendTimeoutError","","An error that may be emitted when sending a value into a …",null,null],[13,"Timeout","","",110,null],[13,"Disconnected","","",110,null],[4,"RecvError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Disconnected","","",111,null],[4,"TryRecvError","","An error that may be emitted when attempting to fetch a …",null,null],[13,"Empty","","",112,null],[13,"Disconnected","","",112,null],[4,"RecvTimeoutError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",113,null],[13,"Disconnected","","",113,null],[3,"Sender","","A transmitting end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel.",null,null],[3,"Iter","","An iterator over the msgs received from a channel.",null,null],[3,"TryIter","","An non-blocking iterator over the msgs received from a …",null,null],[3,"Drain","","An fixed-sized iterator over the msgs drained from a …",null,null],[3,"IntoIter","","An owned iterator over the msgs received from a channel.",null,null],[5,"unbounded","","Create a channel with no maximum capacity.",null,[[]]],[5,"bounded","","Create a channel with a maximum capacity.",null,[[["usize",15]]]],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[0,"bounds","pliantdb_local::core::num_traits","",null,null],[8,"Bounded","pliantdb_local::core::num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",114,[[]]],[10,"max_value","","returns the largest finite number this type can represent",114,[[]]],[0,"cast","pliantdb_local::core::num_traits","",null,null],[8,"ToPrimitive","pliantdb_local::core::num_traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",115,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",115,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",115,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",115,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",115,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",115,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",115,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",115,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",115,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",115,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",115,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",115,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",115,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",115,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",116,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",116,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",116,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",116,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",116,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",116,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",116,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",116,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",116,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",116,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",116,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",116,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",116,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",116,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",117,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",118,[[]]],[0,"float","pliantdb_local::core::num_traits","",null,null],[8,"FloatCore","pliantdb_local::core::num_traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",119,[[]]],[10,"neg_infinity","","Returns negative infinity.",119,[[]]],[10,"nan","","Returns NaN.",119,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",119,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",119,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",119,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",119,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",119,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",119,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",119,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",119,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",119,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",119,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",119,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",119,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",119,[[]]],[11,"trunc","","Return the integer part of a number.",119,[[]]],[11,"fract","","Returns the fractional part of a number.",119,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",119,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",119,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",119,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",119,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",119,[[]]],[11,"max","","Returns the maximum of the two numbers.",119,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",119,[[]]],[11,"powi","","Raise a number to an integer power.",119,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",119,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",119,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",119,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",120,[[]]],[10,"infinity","","Returns the infinite value.",120,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",120,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",120,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",120,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",120,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",120,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",120,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",120,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",120,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",120,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",120,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",120,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",120,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",120,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",120,[[]]],[10,"trunc","","Return the integer part of a number.",120,[[]]],[10,"fract","","Returns the fractional part of a number.",120,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",120,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",120,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",120,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",120,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",120,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",120,[[]]],[10,"powi","","Raise a number to an integer power.",120,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",120,[[]]],[10,"sqrt","","Take the square root of a number.",120,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",120,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",120,[[]]],[10,"ln","","Returns the natural logarithm of the number.",120,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",120,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",120,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",120,[[]]],[11,"to_degrees","","Converts radians to degrees.",120,[[]]],[11,"to_radians","","Converts degrees to radians.",120,[[]]],[10,"max","","Returns the maximum of the two numbers.",120,[[]]],[10,"min","","Returns the minimum of the two numbers.",120,[[]]],[10,"abs_sub","","The positive difference of two numbers.",120,[[]]],[10,"cbrt","","Take the cubic root of a number.",120,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",120,[[]]],[10,"sin","","Computes the sine of a number (in radians).",120,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",120,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",120,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",120,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",120,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",120,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",120,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",120,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",120,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",120,[[]]],[10,"sinh","","Hyperbolic sine function.",120,[[]]],[10,"cosh","","Hyperbolic cosine function.",120,[[]]],[10,"tanh","","Hyperbolic tangent function.",120,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",120,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",120,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",120,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",120,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",121,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",121,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",121,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",121,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",121,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",121,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",121,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",121,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",121,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",121,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",121,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",121,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",121,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",121,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",121,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",121,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",121,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",121,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",121,[[]]],[0,"identities","pliantdb_local::core::num_traits","",null,null],[8,"Zero","pliantdb_local::core::num_traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",122,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",122,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",122,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",123,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",123,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",123,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[0,"int","pliantdb_local::core::num_traits","",null,null],[8,"PrimInt","pliantdb_local::core::num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",124,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",124,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",124,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",124,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",124,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",124,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",124,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",124,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",124,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",124,[[["u32",15]]]],[0,"ops","pliantdb_local::core::num_traits","",null,null],[0,"checked","pliantdb_local::core::num_traits::ops","",null,null],[8,"CheckedAdd","pliantdb_local::core::num_traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",125,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",126,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",127,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",128,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",129,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",130,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",131,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",132,[[["u32",15]],["option",4]]],[0,"inv","pliantdb_local::core::num_traits::ops","",null,null],[8,"Inv","pliantdb_local::core::num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",133,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",133,[[]]],[0,"mul_add","pliantdb_local::core::num_traits::ops","",null,null],[8,"MulAdd","pliantdb_local::core::num_traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",134,null],[10,"mul_add","","Performs the fused multiply-add operation.",134,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",135,[[]]],[0,"overflowing","pliantdb_local::core::num_traits::ops","",null,null],[8,"OverflowingAdd","pliantdb_local::core::num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean …",136,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean …",137,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean …",138,[[]]],[0,"saturating","pliantdb_local::core::num_traits::ops","",null,null],[8,"Saturating","pliantdb_local::core::num_traits::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",139,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",139,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",140,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",141,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",142,[[]]],[0,"wrapping","pliantdb_local::core::num_traits::ops","",null,null],[8,"WrappingAdd","pliantdb_local::core::num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",143,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",144,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",145,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",146,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",147,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",148,[[["u32",15]]]],[0,"pow","pliantdb_local::core::num_traits","",null,null],[8,"Pow","pliantdb_local::core::num_traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",149,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",149,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[0,"real","pliantdb_local::core::num_traits","",null,null],[8,"Real","pliantdb_local::core::num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can …",150,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",150,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",150,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",150,[[]]],[10,"floor","","Returns the largest integer less than or equal to a …",150,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",150,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",150,[[]]],[10,"trunc","","Return the integer part of a number.",150,[[]]],[10,"fract","","Returns the fractional part of a number.",150,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",150,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",150,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",150,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",150,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",150,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",150,[[]]],[10,"powi","","Raise a number to an integer power.",150,[[["i32",15]]]],[10,"powf","","Raise a number to a real number power.",150,[[]]],[10,"sqrt","","Take the square root of a number.",150,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",150,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",150,[[]]],[10,"ln","","Returns the natural logarithm of the number.",150,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",150,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",150,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",150,[[]]],[10,"to_degrees","","Converts radians to degrees.",150,[[]]],[10,"to_radians","","Converts degrees to radians.",150,[[]]],[10,"max","","Returns the maximum of the two numbers.",150,[[]]],[10,"min","","Returns the minimum of the two numbers.",150,[[]]],[10,"abs_sub","","The positive difference of two numbers.",150,[[]]],[10,"cbrt","","Take the cubic root of a number.",150,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",150,[[]]],[10,"sin","","Computes the sine of a number (in radians).",150,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",150,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",150,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",150,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",150,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",150,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",150,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",150,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",150,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",150,[[]]],[10,"sinh","","Hyperbolic sine function.",150,[[]]],[10,"cosh","","Hyperbolic cosine function.",150,[[]]],[10,"tanh","","Hyperbolic tangent function.",150,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",150,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",150,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",150,[[]]],[0,"sign","pliantdb_local::core::num_traits","",null,null],[8,"Signed","pliantdb_local::core::num_traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",151,[[]]],[10,"abs_sub","","The positive difference of two numbers.",151,[[]]],[10,"signum","","Returns the sign of the number.",151,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",151,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",151,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","pliantdb_local::core::num_traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",152,null],[10,"from_str_radix","","Convert from a string and radix (typically <code>2..=36</code>).",152,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",153,null],[13,"Invalid","","",153,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",154,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",114,[[]]],[10,"max_value","","returns the largest finite number this type can represent",114,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",120,[[]]],[10,"infinity","","Returns the infinite value.",120,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",120,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",120,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",120,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",120,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",120,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",120,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",120,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",120,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",120,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",120,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",120,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",120,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",120,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",120,[[]]],[10,"trunc","","Return the integer part of a number.",120,[[]]],[10,"fract","","Returns the fractional part of a number.",120,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",120,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",120,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",120,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",120,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",120,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",120,[[]]],[10,"powi","","Raise a number to an integer power.",120,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",120,[[]]],[10,"sqrt","","Take the square root of a number.",120,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",120,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",120,[[]]],[10,"ln","","Returns the natural logarithm of the number.",120,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",120,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",120,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",120,[[]]],[11,"to_degrees","","Converts radians to degrees.",120,[[]]],[11,"to_radians","","Converts degrees to radians.",120,[[]]],[10,"max","","Returns the maximum of the two numbers.",120,[[]]],[10,"min","","Returns the minimum of the two numbers.",120,[[]]],[10,"abs_sub","","The positive difference of two numbers.",120,[[]]],[10,"cbrt","","Take the cubic root of a number.",120,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",120,[[]]],[10,"sin","","Computes the sine of a number (in radians).",120,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",120,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",120,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",120,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",120,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",120,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",120,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",120,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",120,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",120,[[]]],[10,"sinh","","Hyperbolic sine function.",120,[[]]],[10,"cosh","","Hyperbolic cosine function.",120,[[]]],[10,"tanh","","Hyperbolic tangent function.",120,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",120,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",120,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",120,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",120,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",121,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",121,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",121,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",121,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",121,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",121,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",121,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",121,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",121,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",121,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",121,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",121,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",121,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",121,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",121,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",121,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",121,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",121,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",121,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",118,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",116,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",116,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",116,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",116,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",116,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",116,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",116,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",116,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",116,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",116,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",116,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",116,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",116,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",116,[[["f64",15]],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",117,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",115,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",115,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",115,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",115,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",115,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",115,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",115,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",115,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",115,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",115,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",115,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",115,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",115,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",115,[[],[["f64",15],["option",4]]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",123,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",123,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",123,[[],["bool",15]]],[8,"Zero","","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",122,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",122,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",122,[[],["bool",15]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",124,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",124,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",124,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",124,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",124,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",124,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",124,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",124,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",124,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",124,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",124,[[["u32",15]]]],[8,"CheckedAdd","","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",125,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",128,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",127,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",130,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",129,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",131,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",132,[[["u32",15]],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",126,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",133,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",133,[[]]],[8,"MulAdd","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",134,null],[10,"mul_add","","Performs the fused multiply-add operation.",134,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",135,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",139,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",139,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",140,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",142,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",141,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",143,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",145,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",146,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",147,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",148,[[["u32",15]]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",144,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",149,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",149,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",151,[[]]],[10,"abs_sub","","The positive difference of two numbers.",151,[[]]],[10,"signum","","Returns the sign of the number.",151,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",151,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",151,[[],["bool",15]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[14,"define_pubsub_test_suite","pliantdb_local::core","Expands into a suite of pubsub unit tests using the …",null,null],[14,"define_connection_test_suite","","Creates a test suite that tests methods available on […",null,null],[14,"define_kv_test_suite","","Defines the Kv test suite",null,null],[4,"Error","pliantdb_local","Errors that can occur from interacting with storage.",null,null],[13,"Sled","","An error occurred interacting with <code>sled</code>.",155,null],[13,"InternalSerialization","","An error occurred serializing the underlying database …",155,null],[13,"Serialization","","An error occurred serializing the contents of a <code>Document</code> …",155,null],[13,"InternalCommunication","","An internal error occurred while waiting for a message.",155,null],[13,"View","","An error occurred while executing a view",155,null],[13,"Core","","An internal error occurred while waiting for a message.",155,null],[13,"Other","","An internal error occurred while waiting for a message.",155,null],[3,"Storage","","A local, file-based database.",null,null],[11,"from","pliantdb_local::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","pliantdb_local","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_string","","",155,[[],["string",3]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"vzip","","",155,[[]]],[11,"init","","",155,[[],["usize",15]]],[11,"deref","","",155,[[["usize",15]]]],[11,"deref_mut","","",155,[[["usize",15]]]],[11,"drop","","",155,[[["usize",15]]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"vzip","","",156,[[]]],[11,"init","","",156,[[],["usize",15]]],[11,"deref","","",156,[[["usize",15]]]],[11,"deref_mut","","",156,[[["usize",15]]]],[11,"drop","","",156,[[["usize",15]]]],[11,"from","pliantdb_local::backup","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","pliantdb_local::core::connection","",157,[[]]],[11,"into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"vzip","","",157,[[]]],[11,"init","","",157,[[],["usize",15]]],[11,"deref","","",157,[[["usize",15]]]],[11,"deref_mut","","",157,[[["usize",15]]]],[11,"drop","","",157,[[["usize",15]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","pliantdb_local::core::document","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"equivalent","","",11,[[],["bool",15]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"equivalent","","",13,[[],["bool",15]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","pliantdb_local::core::networking","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[],["usize",15]]],[11,"deref","","",17,[[["usize",15]]]],[11,"deref_mut","","",17,[[["usize",15]]]],[11,"drop","","",17,[[["usize",15]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[],["usize",15]]],[11,"deref","","",19,[[["usize",15]]]],[11,"deref_mut","","",19,[[["usize",15]]]],[11,"drop","","",19,[[["usize",15]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[],["usize",15]]],[11,"deref","","",29,[[["usize",15]]]],[11,"deref_mut","","",29,[[["usize",15]]]],[11,"drop","","",29,[[["usize",15]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[],["usize",15]]],[11,"deref","","",33,[[["usize",15]]]],[11,"deref_mut","","",33,[[["usize",15]]]],[11,"drop","","",33,[[["usize",15]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[],["usize",15]]],[11,"deref","","",36,[[["usize",15]]]],[11,"deref_mut","","",36,[[["usize",15]]]],[11,"drop","","",36,[[["usize",15]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[],["usize",15]]],[11,"deref","","",37,[[["usize",15]]]],[11,"deref_mut","","",37,[[["usize",15]]]],[11,"drop","","",37,[[["usize",15]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[],["usize",15]]],[11,"deref","","",39,[[["usize",15]]]],[11,"deref_mut","","",39,[[["usize",15]]]],[11,"drop","","",39,[[["usize",15]]]],[11,"from","pliantdb_local::core::networking::fabruic::error","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[],["usize",15]]],[11,"deref","","",44,[[["usize",15]]]],[11,"deref_mut","","",44,[[["usize",15]]]],[11,"drop","","",44,[[["usize",15]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[],["usize",15]]],[11,"deref","","",45,[[["usize",15]]]],[11,"deref_mut","","",45,[[["usize",15]]]],[11,"drop","","",45,[[["usize",15]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"equivalent","","",46,[[],["bool",15]]],[11,"init","","",46,[[],["usize",15]]],[11,"deref","","",46,[[["usize",15]]]],[11,"deref_mut","","",46,[[["usize",15]]]],[11,"drop","","",46,[[["usize",15]]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"to_string","","",158,[[],["string",3]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"vzip","","",158,[[]]],[11,"equivalent","","",158,[[],["bool",15]]],[11,"init","","",158,[[],["usize",15]]],[11,"deref","","",158,[[["usize",15]]]],[11,"deref_mut","","",158,[[["usize",15]]]],[11,"drop","","",158,[[["usize",15]]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"to_string","","",159,[[],["string",3]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"vzip","","",159,[[]]],[11,"equivalent","","",159,[[],["bool",15]]],[11,"init","","",159,[[],["usize",15]]],[11,"deref","","",159,[[["usize",15]]]],[11,"deref_mut","","",159,[[["usize",15]]]],[11,"drop","","",159,[[["usize",15]]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"to_string","","",160,[[],["string",3]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"vzip","","",160,[[]]],[11,"equivalent","","",160,[[],["bool",15]]],[11,"init","","",160,[[],["usize",15]]],[11,"deref","","",160,[[["usize",15]]]],[11,"deref_mut","","",160,[[["usize",15]]]],[11,"drop","","",160,[[["usize",15]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[],["usize",15]]],[11,"deref","","",47,[[["usize",15]]]],[11,"deref_mut","","",47,[[["usize",15]]]],[11,"drop","","",47,[[["usize",15]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[],["usize",15]]],[11,"deref","","",48,[[["usize",15]]]],[11,"deref_mut","","",48,[[["usize",15]]]],[11,"drop","","",48,[[["usize",15]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"equivalent","","",49,[[],["bool",15]]],[11,"init","","",49,[[],["usize",15]]],[11,"deref","","",49,[[["usize",15]]]],[11,"deref_mut","","",49,[[["usize",15]]]],[11,"drop","","",49,[[["usize",15]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"equivalent","","",50,[[],["bool",15]]],[11,"init","","",50,[[],["usize",15]]],[11,"deref","","",50,[[["usize",15]]]],[11,"deref_mut","","",50,[[["usize",15]]]],[11,"drop","","",50,[[["usize",15]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[],["usize",15]]],[11,"deref","","",51,[[["usize",15]]]],[11,"deref_mut","","",51,[[["usize",15]]]],[11,"drop","","",51,[[["usize",15]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[],["usize",15]]],[11,"deref","","",52,[[["usize",15]]]],[11,"deref_mut","","",52,[[["usize",15]]]],[11,"drop","","",52,[[["usize",15]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[],["usize",15]]],[11,"deref","","",53,[[["usize",15]]]],[11,"deref_mut","","",53,[[["usize",15]]]],[11,"drop","","",53,[[["usize",15]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[],["usize",15]]],[11,"deref","","",54,[[["usize",15]]]],[11,"deref_mut","","",54,[[["usize",15]]]],[11,"drop","","",54,[[["usize",15]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[],["usize",15]]],[11,"deref","","",55,[[["usize",15]]]],[11,"deref_mut","","",55,[[["usize",15]]]],[11,"drop","","",55,[[["usize",15]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"equivalent","","",56,[[],["bool",15]]],[11,"init","","",56,[[],["usize",15]]],[11,"deref","","",56,[[["usize",15]]]],[11,"deref_mut","","",56,[[["usize",15]]]],[11,"drop","","",56,[[["usize",15]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"equivalent","","",57,[[],["bool",15]]],[11,"init","","",57,[[],["usize",15]]],[11,"deref","","",57,[[["usize",15]]]],[11,"deref_mut","","",57,[[["usize",15]]]],[11,"drop","","",57,[[["usize",15]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"equivalent","","",58,[[],["bool",15]]],[11,"init","","",58,[[],["usize",15]]],[11,"deref","","",58,[[["usize",15]]]],[11,"deref_mut","","",58,[[["usize",15]]]],[11,"drop","","",58,[[["usize",15]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"equivalent","","",59,[[],["bool",15]]],[11,"init","","",59,[[],["usize",15]]],[11,"deref","","",59,[[["usize",15]]]],[11,"deref_mut","","",59,[[["usize",15]]]],[11,"drop","","",59,[[["usize",15]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"to_string","","",60,[[],["string",3]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[],["usize",15]]],[11,"deref","","",60,[[["usize",15]]]],[11,"deref_mut","","",60,[[["usize",15]]]],[11,"drop","","",60,[[["usize",15]]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"to_string","","",161,[[],["string",3]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"vzip","","",161,[[]]],[11,"init","","",161,[[],["usize",15]]],[11,"deref","","",161,[[["usize",15]]]],[11,"deref_mut","","",161,[[["usize",15]]]],[11,"drop","","",161,[[["usize",15]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"to_string","","",61,[[],["string",3]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"equivalent","","",61,[[],["bool",15]]],[11,"init","","",61,[[],["usize",15]]],[11,"deref","","",61,[[["usize",15]]]],[11,"deref_mut","","",61,[[["usize",15]]]],[11,"drop","","",61,[[["usize",15]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[],["usize",15]]],[11,"deref","","",62,[[["usize",15]]]],[11,"deref_mut","","",62,[[["usize",15]]]],[11,"drop","","",62,[[["usize",15]]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"equivalent","","",63,[[],["bool",15]]],[11,"init","","",63,[[],["usize",15]]],[11,"deref","","",63,[[["usize",15]]]],[11,"deref_mut","","",63,[[["usize",15]]]],[11,"drop","","",63,[[["usize",15]]]],[11,"from","pliantdb_local::core::networking::fabruic","",162,[[]]],[11,"into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"vzip","","",162,[[]]],[11,"init","","",162,[[],["usize",15]]],[11,"deref","","",162,[[["usize",15]]]],[11,"deref_mut","","",162,[[["usize",15]]]],[11,"drop","","",162,[[["usize",15]]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"vzip","","",163,[[]]],[11,"init","","",163,[[],["usize",15]]],[11,"deref","","",163,[[["usize",15]]]],[11,"deref_mut","","",163,[[["usize",15]]]],[11,"drop","","",163,[[["usize",15]]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"try_poll_next","","",164,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"vzip","","",164,[[]]],[11,"init","","",164,[[],["usize",15]]],[11,"deref","","",164,[[["usize",15]]]],[11,"deref_mut","","",164,[[["usize",15]]]],[11,"drop","","",164,[[["usize",15]]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"vzip","","",165,[[]]],[11,"init","","",165,[[],["usize",15]]],[11,"deref","","",165,[[["usize",15]]]],[11,"deref_mut","","",165,[[["usize",15]]]],[11,"drop","","",165,[[["usize",15]]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"vzip","","",166,[[]]],[11,"init","","",166,[[],["usize",15]]],[11,"deref","","",166,[[["usize",15]]]],[11,"deref_mut","","",166,[[["usize",15]]]],[11,"drop","","",166,[[["usize",15]]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"try_poll_next","","",167,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"vzip","","",167,[[]]],[11,"init","","",167,[[],["usize",15]]],[11,"deref","","",167,[[["usize",15]]]],[11,"deref_mut","","",167,[[["usize",15]]]],[11,"drop","","",167,[[["usize",15]]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"vzip","","",168,[[]]],[11,"init","","",168,[[],["usize",15]]],[11,"deref","","",168,[[["usize",15]]]],[11,"deref_mut","","",168,[[["usize",15]]]],[11,"drop","","",168,[[["usize",15]]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"equivalent","","",64,[[],["bool",15]]],[11,"init","","",64,[[],["usize",15]]],[11,"deref","","",64,[[["usize",15]]]],[11,"deref_mut","","",64,[[["usize",15]]]],[11,"drop","","",64,[[["usize",15]]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"as_bits","","",169,[[],["bitslice",3]]],[11,"vzip","","",169,[[]]],[11,"equivalent","","",169,[[],["bool",15]]],[11,"init","","",169,[[],["usize",15]]],[11,"deref","","",169,[[["usize",15]]]],[11,"deref_mut","","",169,[[["usize",15]]]],[11,"drop","","",169,[[["usize",15]]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"vzip","","",170,[[]]],[11,"equivalent","","",170,[[],["bool",15]]],[11,"init","","",170,[[],["usize",15]]],[11,"deref","","",170,[[["usize",15]]]],[11,"deref_mut","","",170,[[["usize",15]]]],[11,"drop","","",170,[[["usize",15]]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"vzip","","",171,[[]]],[11,"equivalent","","",171,[[],["bool",15]]],[11,"init","","",171,[[],["usize",15]]],[11,"deref","","",171,[[["usize",15]]]],[11,"deref_mut","","",171,[[["usize",15]]]],[11,"drop","","",171,[[["usize",15]]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"vzip","","",172,[[]]],[11,"equivalent","","",172,[[],["bool",15]]],[11,"init","","",172,[[],["usize",15]]],[11,"deref","","",172,[[["usize",15]]]],[11,"deref_mut","","",172,[[["usize",15]]]],[11,"drop","","",172,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[],["usize",15]]],[11,"deref","","",65,[[["usize",15]]]],[11,"deref_mut","","",65,[[["usize",15]]]],[11,"drop","","",65,[[["usize",15]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"init","","",66,[[],["usize",15]]],[11,"deref","","",66,[[["usize",15]]]],[11,"deref_mut","","",66,[[["usize",15]]]],[11,"drop","","",66,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema::view::map","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"init","","",67,[[],["usize",15]]],[11,"deref","","",67,[[["usize",15]]]],[11,"deref_mut","","",67,[[["usize",15]]]],[11,"drop","","",67,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"init","","",68,[[],["usize",15]]],[11,"deref","","",68,[[["usize",15]]]],[11,"deref_mut","","",68,[[["usize",15]]]],[11,"drop","","",68,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema::view","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_string","","",70,[[],["string",3]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"init","","",70,[[],["usize",15]]],[11,"deref","","",70,[[["usize",15]]]],[11,"deref_mut","","",70,[[["usize",15]]]],[11,"drop","","",70,[[["usize",15]]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"as_bits","","",72,[[],["bitslice",3]]],[11,"vzip","","",72,[[]]],[11,"init","","",72,[[],["usize",15]]],[11,"deref","","",72,[[["usize",15]]]],[11,"deref_mut","","",72,[[["usize",15]]]],[11,"drop","","",72,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"to_string","","",173,[[],["string",3]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"vzip","","",173,[[]]],[11,"equivalent","","",173,[[],["bool",15]]],[11,"init","","",173,[[],["usize",15]]],[11,"deref","","",173,[[["usize",15]]]],[11,"deref_mut","","",173,[[["usize",15]]]],[11,"drop","","",173,[[["usize",15]]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"to_string","","",76,[[],["string",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"equivalent","","",76,[[],["bool",15]]],[11,"init","","",76,[[],["usize",15]]],[11,"deref","","",76,[[["usize",15]]]],[11,"deref_mut","","",76,[[["usize",15]]]],[11,"drop","","",76,[[["usize",15]]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"to_string","","",77,[[],["string",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"init","","",77,[[],["usize",15]]],[11,"deref","","",77,[[["usize",15]]]],[11,"deref_mut","","",77,[[["usize",15]]]],[11,"drop","","",77,[[["usize",15]]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"to_string","","",174,[[],["string",3]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"vzip","","",174,[[]]],[11,"equivalent","","",174,[[],["bool",15]]],[11,"init","","",174,[[],["usize",15]]],[11,"deref","","",174,[[["usize",15]]]],[11,"deref_mut","","",174,[[["usize",15]]]],[11,"drop","","",174,[[["usize",15]]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"equivalent","","",78,[[],["bool",15]]],[11,"init","","",78,[[],["usize",15]]],[11,"deref","","",78,[[["usize",15]]]],[11,"deref_mut","","",78,[[["usize",15]]]],[11,"drop","","",78,[[["usize",15]]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"equivalent","","",79,[[],["bool",15]]],[11,"init","","",79,[[],["usize",15]]],[11,"deref","","",79,[[["usize",15]]]],[11,"deref_mut","","",79,[[["usize",15]]]],[11,"drop","","",79,[[["usize",15]]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"vzip","","",175,[[]]],[11,"init","","",175,[[],["usize",15]]],[11,"deref","","",175,[[["usize",15]]]],[11,"deref_mut","","",175,[[["usize",15]]]],[11,"drop","","",175,[[["usize",15]]]],[11,"from","pliantdb_local::core::transaction","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"init","","",80,[[],["usize",15]]],[11,"deref","","",80,[[["usize",15]]]],[11,"deref_mut","","",80,[[["usize",15]]]],[11,"drop","","",80,[[["usize",15]]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"init","","",81,[[],["usize",15]]],[11,"deref","","",81,[[["usize",15]]]],[11,"deref_mut","","",81,[[["usize",15]]]],[11,"drop","","",81,[[["usize",15]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"init","","",82,[[],["usize",15]]],[11,"deref","","",82,[[["usize",15]]]],[11,"deref_mut","","",82,[[["usize",15]]]],[11,"drop","","",82,[[["usize",15]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"init","","",86,[[],["usize",15]]],[11,"deref","","",86,[[["usize",15]]]],[11,"deref_mut","","",86,[[["usize",15]]]],[11,"drop","","",86,[[["usize",15]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"init","","",89,[[],["usize",15]]],[11,"deref","","",89,[[["usize",15]]]],[11,"deref_mut","","",89,[[["usize",15]]]],[11,"drop","","",89,[[["usize",15]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"init","","",90,[[],["usize",15]]],[11,"deref","","",90,[[["usize",15]]]],[11,"deref_mut","","",90,[[["usize",15]]]],[11,"drop","","",90,[[["usize",15]]]],[11,"from","pliantdb_local::core::kv::get","",176,[[]]],[11,"into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"into_future","","",176,[[]]],[11,"try_poll","","",176,[[["pin",3],["context",3]],["poll",4]]],[11,"vzip","","",176,[[]]],[11,"init","","",176,[[],["usize",15]]],[11,"deref","","",176,[[["usize",15]]]],[11,"deref_mut","","",176,[[["usize",15]]]],[11,"drop","","",176,[[["usize",15]]]],[11,"from","pliantdb_local::core::kv::namespaced","",177,[[]]],[11,"into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"vzip","","",177,[[]]],[11,"init","","",177,[[],["usize",15]]],[11,"deref","","",177,[[["usize",15]]]],[11,"deref_mut","","",177,[[["usize",15]]]],[11,"drop","","",177,[[["usize",15]]]],[11,"from","pliantdb_local::core::kv::set","",178,[[]]],[11,"into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"into_future","","",178,[[]]],[11,"try_poll","","",178,[[["pin",3],["context",3]],["poll",4]]],[11,"vzip","","",178,[[]]],[11,"init","","",178,[[],["usize",15]]],[11,"deref","","",178,[[["usize",15]]]],[11,"deref_mut","","",178,[[["usize",15]]]],[11,"drop","","",178,[[["usize",15]]]],[11,"from","pliantdb_local::core::kv","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"equivalent","","",91,[[],["bool",15]]],[11,"init","","",91,[[],["usize",15]]],[11,"deref","","",91,[[["usize",15]]]],[11,"deref_mut","","",91,[[["usize",15]]]],[11,"drop","","",91,[[["usize",15]]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"init","","",93,[[],["usize",15]]],[11,"deref","","",93,[[["usize",15]]]],[11,"deref_mut","","",93,[[["usize",15]]]],[11,"drop","","",93,[[["usize",15]]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"init","","",94,[[],["usize",15]]],[11,"deref","","",94,[[["usize",15]]]],[11,"deref_mut","","",94,[[["usize",15]]]],[11,"drop","","",94,[[["usize",15]]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"init","","",95,[[],["usize",15]]],[11,"deref","","",95,[[["usize",15]]]],[11,"deref_mut","","",95,[[["usize",15]]]],[11,"drop","","",95,[[["usize",15]]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"init","","",98,[[],["usize",15]]],[11,"deref","","",98,[[["usize",15]]]],[11,"deref_mut","","",98,[[["usize",15]]]],[11,"drop","","",98,[[["usize",15]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"init","","",99,[[],["usize",15]]],[11,"deref","","",99,[[["usize",15]]]],[11,"deref_mut","","",99,[[["usize",15]]]],[11,"drop","","",99,[[["usize",15]]]],[11,"from","pliantdb_local::core","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"to_string","","",102,[[],["string",3]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"init","","",102,[[],["usize",15]]],[11,"deref","","",102,[[["usize",15]]]],[11,"deref_mut","","",102,[[["usize",15]]]],[11,"drop","","",102,[[["usize",15]]]],[11,"from","pliantdb_local::core::test_util","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"schema_name","","",103,[[],[["invalidnameerror",3],["schemaname",3],["result",4]]]],[11,"define_collections","","",103,[[["schematic",3]],[["result",4],["error",4]]]],[11,"vzip","","",103,[[]]],[11,"init","","",103,[[],["usize",15]]],[11,"deref","","",103,[[["usize",15]]]],[11,"deref_mut","","",103,[[["usize",15]]]],[11,"drop","","",103,[[["usize",15]]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"collection","","",179,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"version","","",179,[[],["u64",15]]],[11,"view_name","","",179,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[11,"map","","",179,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",179,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"vzip","","",179,[[]]],[11,"init","","",179,[[],["usize",15]]],[11,"deref","","",179,[[["usize",15]]]],[11,"deref_mut","","",179,[[["usize",15]]]],[11,"drop","","",179,[[["usize",15]]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"collection","","",180,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"version","","",180,[[],["u64",15]]],[11,"view_name","","",180,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[11,"map","","",180,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",180,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"vzip","","",180,[[]]],[11,"init","","",180,[[],["usize",15]]],[11,"deref","","",180,[[["usize",15]]]],[11,"deref_mut","","",180,[[["usize",15]]]],[11,"drop","","",180,[[["usize",15]]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"collection","","",181,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"version","","",181,[[],["u64",15]]],[11,"view_name","","",181,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[11,"map","","",181,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",181,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"vzip","","",181,[[]]],[11,"init","","",181,[[],["usize",15]]],[11,"deref","","",181,[[["usize",15]]]],[11,"deref_mut","","",181,[[["usize",15]]]],[11,"drop","","",181,[[["usize",15]]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"collection","","",182,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"version","","",182,[[],["u64",15]]],[11,"view_name","","",182,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[11,"map","","",182,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",182,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"vzip","","",182,[[]]],[11,"init","","",182,[[],["usize",15]]],[11,"deref","","",182,[[["usize",15]]]],[11,"deref_mut","","",182,[[["usize",15]]]],[11,"drop","","",182,[[["usize",15]]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"vzip","","",183,[[]]],[11,"init","","",183,[[],["usize",15]]],[11,"deref","","",183,[[["usize",15]]]],[11,"deref_mut","","",183,[[["usize",15]]]],[11,"drop","","",183,[[["usize",15]]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"init","","",104,[[],["usize",15]]],[11,"deref","","",104,[[["usize",15]]]],[11,"deref_mut","","",104,[[["usize",15]]]],[11,"drop","","",104,[[["usize",15]]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"schema_name","","",184,[[],[["invalidnameerror",3],["schemaname",3],["result",4]]]],[11,"define_collections","","",184,[[["schematic",3]],[["result",4],["error",4]]]],[11,"vzip","","",184,[[]]],[11,"init","","",184,[[],["usize",15]]],[11,"deref","","",184,[[["usize",15]]]],[11,"deref_mut","","",184,[[["usize",15]]]],[11,"drop","","",184,[[["usize",15]]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"schema_name","","",185,[[],[["invalidnameerror",3],["schemaname",3],["result",4]]]],[11,"define_collections","","",185,[[["schematic",3]],[["result",4],["error",4]]]],[11,"vzip","","",185,[[]]],[11,"init","","",185,[[],["usize",15]]],[11,"deref","","",185,[[["usize",15]]]],[11,"deref_mut","","",185,[[["usize",15]]]],[11,"drop","","",185,[[["usize",15]]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"schema_name","","",186,[[],[["invalidnameerror",3],["schemaname",3],["result",4]]]],[11,"define_collections","","",186,[[["schematic",3]],[["result",4],["error",4]]]],[11,"vzip","","",186,[[]]],[11,"init","","",186,[[],["usize",15]]],[11,"deref","","",186,[[["usize",15]]]],[11,"deref_mut","","",186,[[["usize",15]]]],[11,"drop","","",186,[[["usize",15]]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"to_string","","",105,[[],["string",3]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"init","","",105,[[],["usize",15]]],[11,"deref","","",105,[[["usize",15]]]],[11,"deref_mut","","",105,[[["usize",15]]]],[11,"drop","","",105,[[["usize",15]]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"vzip","","",187,[[]]],[11,"init","","",187,[[],["usize",15]]],[11,"deref","","",187,[[["usize",15]]]],[11,"deref_mut","","",187,[[["usize",15]]]],[11,"drop","","",187,[[["usize",15]]]],[11,"from","pliantdb_local::core::circulate","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"init","","",106,[[],["usize",15]]],[11,"deref","","",106,[[["usize",15]]]],[11,"deref_mut","","",106,[[["usize",15]]]],[11,"drop","","",106,[[["usize",15]]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"vzip","","",188,[[]]],[11,"init","","",188,[[],["usize",15]]],[11,"deref","","",188,[[["usize",15]]]],[11,"deref_mut","","",188,[[["usize",15]]]],[11,"drop","","",188,[[["usize",15]]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"vzip","","",189,[[]]],[11,"init","","",189,[[],["usize",15]]],[11,"deref","","",189,[[["usize",15]]]],[11,"deref_mut","","",189,[[["usize",15]]]],[11,"drop","","",189,[[["usize",15]]]],[11,"from","pliantdb_local::core::circulate::flume::select","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"to_string","","",107,[[],["string",3]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"equivalent","","",107,[[],["bool",15]]],[11,"init","","",107,[[],["usize",15]]],[11,"deref","","",107,[[["usize",15]]]],[11,"deref_mut","","",107,[[["usize",15]]]],[11,"drop","","",107,[[["usize",15]]]],[11,"from","pliantdb_local::core::circulate::flume","",190,[[]]],[11,"into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"vzip","","",190,[[]]],[11,"init","","",190,[[],["usize",15]]],[11,"deref","","",190,[[["usize",15]]]],[11,"deref_mut","","",190,[[["usize",15]]]],[11,"drop","","",190,[[["usize",15]]]],[11,"from","pliantdb_local::core::circulate::flume::async","",191,[[]]],[11,"into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"into_future","","",191,[[]]],[11,"try_poll","","",191,[[["pin",3],["context",3]],["poll",4]]],[11,"vzip","","",191,[[]]],[11,"init","","",191,[[],["usize",15]]],[11,"deref","","",191,[[["usize",15]]]],[11,"deref_mut","","",191,[[["usize",15]]]],[11,"drop","","",191,[[["usize",15]]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"vzip","","",192,[[]]],[11,"init","","",192,[[],["usize",15]]],[11,"deref","","",192,[[["usize",15]]]],[11,"deref_mut","","",192,[[["usize",15]]]],[11,"drop","","",192,[[["usize",15]]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"into_future","","",193,[[]]],[11,"try_poll","","",193,[[["pin",3],["context",3]],["poll",4]]],[11,"vzip","","",193,[[]]],[11,"init","","",193,[[],["usize",15]]],[11,"deref","","",193,[[["usize",15]]]],[11,"deref_mut","","",193,[[["usize",15]]]],[11,"drop","","",193,[[["usize",15]]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"try_poll_next","","",194,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"vzip","","",194,[[]]],[11,"init","","",194,[[],["usize",15]]],[11,"deref","","",194,[[["usize",15]]]],[11,"deref_mut","","",194,[[["usize",15]]]],[11,"drop","","",194,[[["usize",15]]]],[11,"from","pliantdb_local::core::circulate::flume","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"to_string","","",108,[[],["string",3]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"equivalent","","",108,[[],["bool",15]]],[11,"init","","",108,[[],["usize",15]]],[11,"deref","","",108,[[["usize",15]]]],[11,"deref_mut","","",108,[[["usize",15]]]],[11,"drop","","",108,[[["usize",15]]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"to_string","","",109,[[],["string",3]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"equivalent","","",109,[[],["bool",15]]],[11,"init","","",109,[[],["usize",15]]],[11,"deref","","",109,[[["usize",15]]]],[11,"deref_mut","","",109,[[["usize",15]]]],[11,"drop","","",109,[[["usize",15]]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"to_string","","",110,[[],["string",3]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"equivalent","","",110,[[],["bool",15]]],[11,"init","","",110,[[],["usize",15]]],[11,"deref","","",110,[[["usize",15]]]],[11,"deref_mut","","",110,[[["usize",15]]]],[11,"drop","","",110,[[["usize",15]]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"to_string","","",111,[[],["string",3]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"equivalent","","",111,[[],["bool",15]]],[11,"init","","",111,[[],["usize",15]]],[11,"deref","","",111,[[["usize",15]]]],[11,"deref_mut","","",111,[[["usize",15]]]],[11,"drop","","",111,[[["usize",15]]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"to_string","","",112,[[],["string",3]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"equivalent","","",112,[[],["bool",15]]],[11,"init","","",112,[[],["usize",15]]],[11,"deref","","",112,[[["usize",15]]]],[11,"deref_mut","","",112,[[["usize",15]]]],[11,"drop","","",112,[[["usize",15]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"equivalent","","",113,[[],["bool",15]]],[11,"init","","",113,[[],["usize",15]]],[11,"deref","","",113,[[["usize",15]]]],[11,"deref_mut","","",113,[[["usize",15]]]],[11,"drop","","",113,[[["usize",15]]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"vzip","","",195,[[]]],[11,"init","","",195,[[],["usize",15]]],[11,"deref","","",195,[[["usize",15]]]],[11,"deref_mut","","",195,[[["usize",15]]]],[11,"drop","","",195,[[["usize",15]]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"vzip","","",196,[[]]],[11,"init","","",196,[[],["usize",15]]],[11,"deref","","",196,[[["usize",15]]]],[11,"deref_mut","","",196,[[["usize",15]]]],[11,"drop","","",196,[[["usize",15]]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"into_iter","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"vzip","","",197,[[]]],[11,"emit","","",197,[[["binencoder",3]],[["result",4],["usize",15],["protoerror",3]]]],[11,"nfd","","",197,[[],["decompositions",3]]],[11,"nfkd","","",197,[[],["decompositions",3]]],[11,"nfc","","",197,[[],["recompositions",3]]],[11,"nfkc","","",197,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",197,[[],["replacements",3]]],[11,"stream_safe","","",197,[[],["streamsafe",3]]],[11,"init","","",197,[[],["usize",15]]],[11,"deref","","",197,[[["usize",15]]]],[11,"deref_mut","","",197,[[["usize",15]]]],[11,"drop","","",197,[[["usize",15]]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"into_iter","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"vzip","","",198,[[]]],[11,"emit","","",198,[[["binencoder",3]],[["result",4],["usize",15],["protoerror",3]]]],[11,"nfd","","",198,[[],["decompositions",3]]],[11,"nfkd","","",198,[[],["decompositions",3]]],[11,"nfc","","",198,[[],["recompositions",3]]],[11,"nfkc","","",198,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",198,[[],["replacements",3]]],[11,"stream_safe","","",198,[[],["streamsafe",3]]],[11,"init","","",198,[[],["usize",15]]],[11,"deref","","",198,[[["usize",15]]]],[11,"deref_mut","","",198,[[["usize",15]]]],[11,"drop","","",198,[[["usize",15]]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"into_iter","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"vzip","","",199,[[]]],[11,"emit","","",199,[[["binencoder",3]],[["result",4],["usize",15],["protoerror",3]]]],[11,"nfd","","",199,[[],["decompositions",3]]],[11,"nfkd","","",199,[[],["decompositions",3]]],[11,"nfc","","",199,[[],["recompositions",3]]],[11,"nfkc","","",199,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",199,[[],["replacements",3]]],[11,"stream_safe","","",199,[[],["streamsafe",3]]],[11,"init","","",199,[[],["usize",15]]],[11,"deref","","",199,[[["usize",15]]]],[11,"deref_mut","","",199,[[["usize",15]]]],[11,"drop","","",199,[[["usize",15]]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"into_iter","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"vzip","","",200,[[]]],[11,"emit","","",200,[[["binencoder",3]],[["result",4],["usize",15],["protoerror",3]]]],[11,"nfd","","",200,[[],["decompositions",3]]],[11,"nfkd","","",200,[[],["decompositions",3]]],[11,"nfc","","",200,[[],["recompositions",3]]],[11,"nfkc","","",200,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",200,[[],["replacements",3]]],[11,"stream_safe","","",200,[[],["streamsafe",3]]],[11,"init","","",200,[[],["usize",15]]],[11,"deref","","",200,[[["usize",15]]]],[11,"deref_mut","","",200,[[["usize",15]]]],[11,"drop","","",200,[[["usize",15]]]],[11,"from","pliantdb_local::core::num_traits","",153,[[]]],[11,"into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"vzip","","",153,[[]]],[11,"init","","",153,[[],["usize",15]]],[11,"deref","","",153,[[["usize",15]]]],[11,"deref_mut","","",153,[[["usize",15]]]],[11,"drop","","",153,[[["usize",15]]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_string","","",154,[[],["string",3]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"vzip","","",154,[[]]],[11,"init","","",154,[[],["usize",15]]],[11,"deref","","",154,[[["usize",15]]]],[11,"deref_mut","","",154,[[["usize",15]]]],[11,"drop","","",154,[[["usize",15]]]],[11,"try_from","pliantdb_local::core::schema","",173,[[["str",15]],[["result",4],["authority",3],["invalidnameerror",3]]]],[11,"try_from","","",173,[[["string",3]],[["result",4],["authority",3],["invalidnameerror",3]]]],[11,"try_from","","",174,[[["str",15]],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"try_from","","",76,[[["str",15]],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"try_from","","",78,[[["str",15]],[["invalidnameerror",3],["schemaname",3],["result",4]]]],[11,"try_from","","",174,[[["string",3]],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"fmt","pliantdb_local::core::networking","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::document","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::document","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema::view","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::kv","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",181,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::kv","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",185,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::kv","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::connection","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::document","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema::view::map","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::connection","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::kv","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",183,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema::view","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",78,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",174,[[]]],[11,"hash","","",173,[[]]],[11,"schema_name","pliantdb_local::core::test_util","",183,[[],[["invalidnameerror",3],["schemaname",3],["result",4]]]],[11,"define_collections","","",183,[[["schematic",3]],[["result",4],["error",4]]]],[11,"partial_cmp","pliantdb_local::core::kv","",91,[[["timestamp",3]],[["option",4],["ordering",4]]]],[11,"lt","","",91,[[["timestamp",3]],["bool",15]]],[11,"le","","",91,[[["timestamp",3]],["bool",15]]],[11,"gt","","",91,[[["timestamp",3]],["bool",15]]],[11,"ge","","",91,[[["timestamp",3]],["bool",15]]],[11,"from","pliantdb_local::core::schema::view","",70,[[["error",3]],["error",4]]],[11,"from","pliantdb_local::core","",102,[[["invalidnameerror",3]],["error",4]]],[11,"from","pliantdb_local::core::kv","",91,[[["systemtime",3]],["timestamp",3]]],[11,"from","pliantdb_local::core::schema::view","",72,[[],["serializablevalue",4]]],[11,"from","pliantdb_local::core","",102,[[["error",3]],["error",4]]],[11,"serialize","pliantdb_local::core::kv","",94,[[],["result",4]]],[11,"serialize","pliantdb_local::core","",102,[[],["result",4]]],[11,"serialize","pliantdb_local::core::test_util","",103,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",76,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",39,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","pliantdb_local::core::connection","",10,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",78,[[],["result",4]]],[11,"serialize","","",174,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",17,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",89,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema::view::map","",67,[[],["result",4]]],[11,"serialize","pliantdb_local::core::connection","",9,[[],["result",4]]],[11,"serialize","pliantdb_local::core::document","",12,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",77,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",86,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",79,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",82,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",68,[[],["result",4]]],[11,"serialize","pliantdb_local::core::document","",13,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",29,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","pliantdb_local::core::kv","",98,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",80,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",37,[[],["result",4]]],[11,"serialize","pliantdb_local::core::kv","",93,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",14,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",81,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",19,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",173,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",15,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",90,[[],["result",4]]],[11,"serialize","pliantdb_local::core::kv","",99,[[],["result",4]]],[11,"serialize","","",91,[[],["result",4]]],[11,"serialize","","",95,[[],["result",4]]],[11,"serialize","pliantdb_local::core::document","",11,[[],["result",4]]],[11,"as_ref","pliantdb_local::core::schema::view","",72,[[]]],[11,"as_ref","pliantdb_local::core::test_util","",104,[[],["path",3]]],[11,"default","pliantdb_local::core::schema","",175,[[],["schematic",3]]],[11,"default","pliantdb_local::core::transaction","",80,[[],["transaction",3]]],[11,"default","pliantdb_local::core::test_util","",103,[[],["basic",3]]],[11,"poll","pliantdb_local::core::kv::set","",178,[[["context",3],["pin",3],["builder",3]],["poll",4]]],[11,"poll","pliantdb_local::core::kv::get","",176,[[["pin",3],["context",3],["builder",3]],["poll",4]]],[11,"clone","pliantdb_local::core::networking","",17,[[],["serverrequest",4]]],[11,"clone","pliantdb_local::core::kv","",99,[[],["keystatus",4]]],[11,"clone","pliantdb_local::core::transaction","",82,[[],["command",4]]],[11,"clone","pliantdb_local::core::schema","",77,[[],["invalidnameerror",3]]],[11,"clone","pliantdb_local::core::kv","",94,[[],["keyoperation",3]]],[11,"clone","pliantdb_local::core::schema::view::map","",67,[[],["serialized",3]]],[11,"clone","pliantdb_local::core::networking","",39,[[],["error",4]]],[11,"clone","","",14,[[],["payload",3]]],[11,"clone","pliantdb_local::core::schema","",78,[[],["schemaname",3]]],[11,"clone","pliantdb_local::core::transaction","",86,[[],["operationresult",4]]],[11,"clone","","",80,[[],["transaction",3]]],[11,"clone","pliantdb_local::core::kv","",93,[[],["keycheck",4]]],[11,"clone","","",95,[[],["command",4]]],[11,"clone","pliantdb_local::core::schema","",173,[[],["authority",3]]],[11,"clone","pliantdb_local::core::test_util","",105,[[],["harnesstest",4]]],[11,"clone","pliantdb_local::core::transaction","",89,[[],["executed",3]]],[11,"clone","pliantdb_local::core::networking","",30,[[],["serverresponse",4]]],[11,"clone","pliantdb_local::core::kv","",91,[[],["timestamp",3]]],[11,"clone","pliantdb_local::core::schema","",79,[[],["viewname",3]]],[11,"clone","pliantdb_local::core::connection","",10,[[],["accesspolicy",4]]],[11,"clone","pliantdb_local::core::networking","",33,[[],["databaseresponse",4]]],[11,"clone","","",37,[[],["database",3]]],[11,"clone","pliantdb_local::core::transaction","",81,[[],["operation",3]]],[11,"clone","pliantdb_local::core::networking","",19,[[],["databaserequest",4]]],[11,"clone","pliantdb_local::core::schema","",174,[[],["name",3]]],[11,"clone","pliantdb_local::core::document","",13,[[],["revision",3]]],[11,"clone","pliantdb_local::core","",102,[[],["error",4]]],[11,"clone","pliantdb_local::core::connection","",9,[[],["querykey",4]]],[11,"clone","pliantdb_local::core::schema","",68,[[],["mappedvalue",3]]],[11,"clone","pliantdb_local::core::kv","",98,[[],["output",4]]],[11,"clone","pliantdb_local::core::transaction","",90,[[],["changeddocument",3]]],[11,"clone","pliantdb_local::core::document","",11,[[],["header",3]]],[11,"clone","pliantdb_local::core::schema","",76,[[],["collectionname",3]]],[11,"clone","pliantdb_local::core::networking","",36,[[],["mappeddocument",3]]],[11,"clone","","",15,[[],["request",4]]],[11,"clone","pliantdb_local::core::document","",12,[[],["document",3]]],[11,"clone","pliantdb_local::core::networking","",29,[[],["response",4]]],[11,"cmp","pliantdb_local::core::kv","",91,[[["timestamp",3]],["ordering",4]]],[11,"subscribe_to","pliantdb_local::core::circulate","",189,[[],[["box",3],["pin",3]]]],[11,"unsubscribe_from","","",189,[[["str",15]],[["box",3],["pin",3]]]],[11,"receiver","","",189,[[],["receiver",3]]],[11,"as_big_endian_bytes","pliantdb_local::core::kv","",91,[[],[["result",4],["cow",4],["error",3]]]],[11,"from_big_endian_bytes","","",91,[[],[["timestamp",3],["error",3],["result",4]]]],[11,"collection_name","pliantdb_local::core::test_util","",103,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"define_views","","",103,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","","",186,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"define_views","","",186,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","","",184,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"define_views","","",184,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","","",185,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"define_views","","",185,[[["schematic",3]],[["result",4],["error",4]]]],[11,"source","pliantdb_local::core::schema::view","",70,[[],[["option",4],["error",8]]]],[11,"source","pliantdb_local::core","",102,[[],[["option",4],["error",8]]]],[11,"add","pliantdb_local::core::kv","",91,[[["duration",3]]]],[11,"sub","","",91,[[["timestamp",3]]]],[11,"version","pliantdb_local::core::test_util","",179,[[],["u64",15]]],[11,"name","","",179,[[],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"map","","",179,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",179,[[["bool",15]],[["error",4],["result",4]]]],[11,"version","","",182,[[],["u64",15]]],[11,"name","","",182,[[],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"map","","",182,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"version","","",181,[[],["u64",15]]],[11,"name","","",181,[[],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"map","","",181,[[["document",3]],[["option",4],["result",4],["error",4]]]],[11,"reduce","","",181,[[["bool",15]],[["error",4],["result",4]]]],[11,"version","","",180,[[],["u64",15]]],[11,"name","","",180,[[],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"map","","",180,[[["document",3]],[["error",4],["option",4],["result",4]]]],[11,"reduce","","",180,[[["bool",15]],[["result",4],["error",4]]]],[11,"into","pliantdb_local::core::schema","",174,[[],["string",3]]],[11,"drop","pliantdb_local::core::test_util","",104,[[]]],[11,"create_subscriber","pliantdb_local::core::circulate","",188,[[],[["pin",3],["box",3]]]],[11,"publish","","",188,[[],[["box",3],["pin",3]]]],[11,"eq","pliantdb_local::core::kv","",99,[[["keystatus",4]],["bool",15]]],[11,"eq","pliantdb_local::core::schema","",173,[[["authority",3]],["bool",15]]],[11,"ne","","",173,[[["authority",3]],["bool",15]]],[11,"eq","pliantdb_local::core::document","",11,[[["header",3]],["bool",15]]],[11,"ne","","",11,[[["header",3]],["bool",15]]],[11,"eq","pliantdb_local::core::schema","",68,[[["mappedvalue",3]],["bool",15]]],[11,"ne","","",68,[[["mappedvalue",3]],["bool",15]]],[11,"eq","","",76,[[["collectionname",3]],["bool",15]]],[11,"ne","","",76,[[["collectionname",3]],["bool",15]]],[11,"eq","","",174,[[["name",3]],["bool",15]]],[11,"ne","","",174,[[["name",3]],["bool",15]]],[11,"eq","","",79,[[["viewname",3]],["bool",15]]],[11,"ne","","",79,[[["viewname",3]],["bool",15]]],[11,"eq","pliantdb_local::core::test_util","",103,[[["basic",3]],["bool",15]]],[11,"ne","","",103,[[["basic",3]],["bool",15]]],[11,"eq","pliantdb_local::core::networking","",37,[[["database",3]],["bool",15]]],[11,"ne","","",37,[[["database",3]],["bool",15]]],[11,"eq","pliantdb_local::core::schema","",78,[[["schemaname",3]],["bool",15]]],[11,"ne","","",78,[[["schemaname",3]],["bool",15]]],[11,"eq","pliantdb_local::core::kv","",91,[[["timestamp",3]],["bool",15]]],[11,"ne","","",91,[[["timestamp",3]],["bool",15]]],[11,"eq","pliantdb_local::core::schema","",65,[[["map",3]],["bool",15]]],[11,"ne","","",65,[[["map",3]],["bool",15]]],[11,"eq","pliantdb_local::core::document","",13,[[["revision",3]],["bool",15]]],[11,"ne","","",13,[[["revision",3]],["bool",15]]],[11,"execute_key_operation","pliantdb_local::core::kv::namespaced","",177,[[["keyoperation",3]],[["box",3],["pin",3]]]],[11,"key_namespace","","",177,[[],[["str",15],["option",4]]]],[11,"with_key_namespace","","",177,[[["str",15]],[["namespaced",3],["namespaced",3]]]],[11,"deserialize","pliantdb_local::core::kv","",94,[[],[["keyoperation",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::networking","",36,[[],[["result",4],["mappeddocument",3]]]],[11,"deserialize","pliantdb_local::core::document","",12,[[],[["document",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::test_util","",103,[[],[["result",4],["basic",3]]]],[11,"deserialize","pliantdb_local::core::kv","",98,[[],[["result",4],["output",4]]]],[11,"deserialize","pliantdb_local::core::schema","",173,[[],[["authority",3],["result",4]]]],[11,"deserialize","","",78,[[],[["result",4],["schemaname",3]]]],[11,"deserialize","pliantdb_local::core::kv","",95,[[],[["result",4],["command",4]]]],[11,"deserialize","pliantdb_local::core::connection","",10,[[],[["accesspolicy",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::document","",13,[[],[["result",4],["revision",3]]]],[11,"deserialize","pliantdb_local::core::schema","",68,[[],[["result",4],["mappedvalue",3]]]],[11,"deserialize","pliantdb_local::core::networking","",29,[[],[["response",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::document","",11,[[],[["result",4],["header",3]]]],[11,"deserialize","pliantdb_local::core::networking","",39,[[],[["error",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::schema","",77,[[],[["result",4],["invalidnameerror",3]]]],[11,"deserialize","pliantdb_local::core::kv","",93,[[],[["keycheck",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::transaction","",80,[[],[["result",4],["transaction",3]]]],[11,"deserialize","pliantdb_local::core::schema","",174,[[],[["name",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::networking","",15,[[],[["request",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::schema","",76,[[],[["result",4],["collectionname",3]]]],[11,"deserialize","","",79,[[],[["viewname",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::transaction","",81,[[],[["operation",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::kv","",99,[[],[["result",4],["keystatus",4]]]],[11,"deserialize","pliantdb_local::core::transaction","",82,[[],[["result",4],["command",4]]]],[11,"deserialize","pliantdb_local::core::connection","",9,[[],[["result",4],["querykey",4]]]],[11,"deserialize","pliantdb_local::core::networking","",37,[[],[["result",4],["database",3]]]],[11,"deserialize","","",33,[[],[["result",4],["databaseresponse",4]]]],[11,"deserialize","pliantdb_local::core","",102,[[],[["error",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::kv","",91,[[],[["timestamp",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::transaction","",89,[[],[["executed",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::networking","",19,[[],[["databaserequest",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::transaction","",90,[[],[["result",4],["changeddocument",3]]]],[11,"deserialize","pliantdb_local::core::schema::view::map","",67,[[],[["result",4],["serialized",3]]]],[11,"deserialize","pliantdb_local::core::networking","",14,[[],[["result",4],["payload",3]]]],[11,"deserialize","","",17,[[],[["result",4],["serverrequest",4]]]],[11,"deserialize","pliantdb_local::core::transaction","",86,[[],[["result",4],["operationresult",4]]]],[11,"deserialize","pliantdb_local::core::networking","",30,[[],[["result",4],["serverresponse",4]]]],[11,"fmt","pliantdb_local::core::circulate","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","","",106,[[],[["message",3],["result",4]]]],[11,"default","","",188,[[],["relay",3]]],[11,"serialize","","",106,[[],["result",4]]],[11,"clone","","",189,[[],["subscriber",3]]],[11,"clone","","",106,[[],["message",3]]],[11,"clone","","",188,[[],["relay",3]]],[11,"fmt","pliantdb_local::core::circulate::flume","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::circulate::flume::select","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::circulate::flume","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"len","","",199,[[],["usize",15]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::circulate::flume::select","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::circulate::flume","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"is_terminated","pliantdb_local::core::circulate::flume::async","",193,[[],["bool",15]]],[11,"is_terminated","","",191,[[],["bool",15]]],[11,"into_iter","pliantdb_local::core::circulate::flume","",196,[[]]],[11,"next","","",199,[[],["option",4]]],[11,"next","","",198,[[],["option",4]]],[11,"next","","",200,[[],["option",4]]],[11,"next","","",197,[[],["option",4]]],[11,"poll_next","pliantdb_local::core::circulate::flume::async","",194,[[["pin",3],["recvstream",3],["context",3]],[["poll",4],["option",4]]]],[11,"default","pliantdb_local::core::circulate::flume","",190,[[],["selector",3]]],[11,"poll","pliantdb_local::core::circulate::flume::async","",193,[[["context",3],["pin",3],["recvfut",3]],["poll",4]]],[11,"poll","","",191,[[["pin",3],["sendfut",3],["context",3]],["poll",4]]],[11,"clone","","",192,[[],["sendsink",3]]],[11,"clone","pliantdb_local::core::circulate::flume::select","",107,[[],["selecterror",4]]],[11,"clone","pliantdb_local::core::circulate::flume","Clone this receiver. [<code>Receiver</code>] acts as a handle to the …",196,[[],["receiver",3]]],[11,"clone","","",112,[[],["tryrecverror",4]]],[11,"clone","","",108,[[],["senderror",3]]],[11,"clone","pliantdb_local::core::circulate::flume::async","",194,[[],["recvstream",3]]],[11,"clone","pliantdb_local::core::circulate::flume","",110,[[],["sendtimeouterror",4]]],[11,"clone","","",111,[[],["recverror",4]]],[11,"clone","","Clone this sender. [<code>Sender</code>] acts as a handle to the …",195,[[],["sender",3]]],[11,"clone","","",109,[[],["trysenderror",4]]],[11,"clone","","",113,[[],["recvtimeouterror",4]]],[11,"drop","pliantdb_local::core::circulate::flume::async","",191,[[]]],[11,"drop","pliantdb_local::core::circulate::flume","",195,[[]]],[11,"drop","","",196,[[]]],[11,"drop","pliantdb_local::core::circulate::flume::async","",193,[[]]],[11,"is_terminated","","",194,[[],["bool",15]]],[11,"eq","pliantdb_local::core::circulate::flume","",110,[[["sendtimeouterror",4]],["bool",15]]],[11,"ne","","",110,[[["sendtimeouterror",4]],["bool",15]]],[11,"eq","","",108,[[["senderror",3]],["bool",15]]],[11,"ne","","",108,[[["senderror",3]],["bool",15]]],[11,"eq","pliantdb_local::core::circulate::flume::select","",107,[[["selecterror",4]],["bool",15]]],[11,"eq","pliantdb_local::core::circulate::flume","",109,[[["trysenderror",4]],["bool",15]]],[11,"ne","","",109,[[["trysenderror",4]],["bool",15]]],[11,"eq","","",111,[[["recverror",4]],["bool",15]]],[11,"eq","","",113,[[["recvtimeouterror",4]],["bool",15]]],[11,"eq","","",112,[[["tryrecverror",4]],["bool",15]]],[11,"poll_ready","pliantdb_local::core::circulate::flume::async","",192,[[["sendsink",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",192,[[["sendsink",3],["pin",3]],["result",4]]],[11,"poll_flush","","",192,[[["sendsink",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",192,[[["sendsink",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"try_from","pliantdb_local::core::networking::fabruic","",171,[[],[["keypair",3],["result",4]]]],[11,"try_from","","",170,[[["vec",3],["global",3],["certificate",3]],[["certificatechain",3],["result",4]]]],[11,"try_from","","",169,[[["vec",3],["global",3],["u8",15]],[["result",4],["certificate",3]]]],[11,"try_from","","",172,[[["vec",3],["global",3],["u8",15]],[["privatekey",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",164,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",163,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"serialize","pliantdb_local::core::networking::fabruic","",171,[[["keypair",3]],["result",4]]],[11,"hash","","",64,[[]]],[11,"hash","","",169,[[]]],[11,"hash","pliantdb_local::core::networking::fabruic::error","",160,[[]]],[11,"hash","pliantdb_local::core::networking::fabruic","",170,[[]]],[11,"hash","pliantdb_local::core::networking::fabruic::error","",158,[[]]],[11,"hash","","",159,[[]]],[11,"hash","pliantdb_local::core::networking::fabruic","",172,[[]]],[11,"hash","","",171,[[]]],[11,"hash","pliantdb_local::core::networking::fabruic::error","",46,[[]]],[11,"index","pliantdb_local::core::networking::fabruic","",170,[[["usize",15]]]],[11,"partial_cmp","","",64,[[["store",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",171,[[["keypair",3]],[["option",4],["ordering",4]]]],[11,"lt","","",171,[[["keypair",3]],["bool",15]]],[11,"le","","",171,[[["keypair",3]],["bool",15]]],[11,"gt","","",171,[[["keypair",3]],["bool",15]]],[11,"ge","","",171,[[["keypair",3]],["bool",15]]],[11,"partial_cmp","pliantdb_local::core::networking::fabruic::error","",158,[[["keypair",3]],[["option",4],["ordering",4]]]],[11,"lt","","",158,[[["keypair",3]],["bool",15]]],[11,"le","","",158,[[["keypair",3]],["bool",15]]],[11,"gt","","",158,[[["keypair",3]],["bool",15]]],[11,"ge","","",158,[[["keypair",3]],["bool",15]]],[11,"partial_cmp","pliantdb_local::core::networking::fabruic","",169,[[["certificate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",169,[[["certificate",3]],["bool",15]]],[11,"le","","",169,[[["certificate",3]],["bool",15]]],[11,"gt","","",169,[[["certificate",3]],["bool",15]]],[11,"ge","","",169,[[["certificate",3]],["bool",15]]],[11,"partial_cmp","pliantdb_local::core::networking::fabruic::error","",46,[[["privatekey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",46,[[["privatekey",3]],["bool",15]]],[11,"le","","",46,[[["privatekey",3]],["bool",15]]],[11,"gt","","",46,[[["privatekey",3]],["bool",15]]],[11,"ge","","",46,[[["privatekey",3]],["bool",15]]],[11,"partial_cmp","","",159,[[["certificatechain",3]],[["option",4],["ordering",4]]]],[11,"lt","","",159,[[["certificatechain",3]],["bool",15]]],[11,"le","","",159,[[["certificatechain",3]],["bool",15]]],[11,"gt","","",159,[[["certificatechain",3]],["bool",15]]],[11,"ge","","",159,[[["certificatechain",3]],["bool",15]]],[11,"partial_cmp","pliantdb_local::core::networking::fabruic","",170,[[["certificatechain",3]],[["option",4],["ordering",4]]]],[11,"lt","","",170,[[["certificatechain",3]],["bool",15]]],[11,"le","","",170,[[["certificatechain",3]],["bool",15]]],[11,"gt","","",170,[[["certificatechain",3]],["bool",15]]],[11,"ge","","",170,[[["certificatechain",3]],["bool",15]]],[11,"partial_cmp","pliantdb_local::core::networking::fabruic::error","",160,[[["alreadyclosed",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","pliantdb_local::core::networking::fabruic","",172,[[["privatekey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",172,[[["privatekey",3]],["bool",15]]],[11,"le","","",172,[[["privatekey",3]],["bool",15]]],[11,"gt","","",172,[[["privatekey",3]],["bool",15]]],[11,"ge","","",172,[[["privatekey",3]],["bool",15]]],[11,"from","pliantdb_local::core::networking::fabruic::error","",54,[[["errorkind",4],["box",3],["global",3]],["sender",4]]],[11,"from","","",54,[[["alreadyclosed",3]],["sender",4]]],[11,"from","","",53,[[["readerror",4]],["receiver",4]]],[11,"from","","",51,[[["sender",4]],["stream",4]]],[11,"from","","",48,[[["box",3],["resolveerror",3],["global",3]],["connect",4]]],[11,"from","","",53,[[["errorkind",4]],["receiver",4]]],[11,"from","","",51,[[["connectionerror",4]],["stream",4]]],[11,"from","","",48,[[["connecterror",4]],["connect",4]]],[11,"from","","",48,[[["error",3]],["connect",4]]],[11,"from","","",54,[[["writeerror",4]],["sender",4]]],[11,"as_ref","pliantdb_local::core::networking::fabruic","",169,[[]]],[11,"into_iter","","",170,[[]]],[11,"default","","",162,[[],["builder",3]]],[11,"clone","","",168,[[],["sender",3]]],[11,"clone","","",64,[[],["store",4]]],[11,"clone","pliantdb_local::core::networking::fabruic::error","",46,[[],["privatekey",3]]],[11,"clone","","",49,[[],["connection",3]]],[11,"clone","","",159,[[],["certificatechain",3]]],[11,"clone","","",158,[[],["keypair",3]]],[11,"clone","","",160,[[],["alreadyclosed",3]]],[11,"clone","pliantdb_local::core::networking::fabruic","",167,[[],["receiver",3]]],[11,"clone","","",165,[[],["endpoint",3]]],[11,"clone","","",171,[[],["keypair",3]]],[11,"clone","","",169,[[],["certificate",3]]],[11,"clone","","",172,[[],["privatekey",3]]],[11,"clone","","",170,[[],["certificatechain",3]]],[11,"clone","pliantdb_local::core::networking::fabruic::error","",50,[[],["connecting",3]]],[11,"clone","pliantdb_local::core::networking::fabruic","",164,[[],["connection",3]]],[11,"cmp","","",170,[[["certificatechain",3]],["ordering",4]]],[11,"cmp","","",64,[[["store",4]],["ordering",4]]],[11,"cmp","pliantdb_local::core::networking::fabruic::error","",160,[[["alreadyclosed",3]],["ordering",4]]],[11,"cmp","","",159,[[["certificatechain",3]],["ordering",4]]],[11,"cmp","pliantdb_local::core::networking::fabruic","",171,[[["keypair",3]],["ordering",4]]],[11,"cmp","","",169,[[["certificate",3]],["ordering",4]]],[11,"cmp","pliantdb_local::core::networking::fabruic::error","",46,[[["privatekey",3]],["ordering",4]]],[11,"cmp","pliantdb_local::core::networking::fabruic","",172,[[["privatekey",3]],["ordering",4]]],[11,"cmp","pliantdb_local::core::networking::fabruic::error","",158,[[["keypair",3]],["ordering",4]]],[11,"zeroize","","",46,[[]]],[11,"zeroize","pliantdb_local::core::networking::fabruic","",172,[[]]],[11,"poll_next","","",167,[[["receiver",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",164,[[["pin",3],["connection",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",165,[[["context",3],["pin",3],["endpoint",3]],[["option",4],["poll",4]]]],[11,"serialize","","",169,[[],["result",4]]],[11,"serialize","","",64,[[],["result",4]]],[11,"serialize","","",170,[[],["result",4]]],[11,"is_terminated","","",164,[[],["bool",15]]],[11,"is_terminated","","",165,[[],["bool",15]]],[11,"source","pliantdb_local::core::networking::fabruic::error","",51,[[],[["option",4],["error",8]]]],[11,"source","","",45,[[],[["option",4],["error",8]]]],[11,"source","","",44,[[],[["option",4],["error",8]]]],[11,"source","","",48,[[],[["option",4],["error",8]]]],[11,"source","","",54,[[],[["option",4],["error",8]]]],[11,"source","","",47,[[],[["option",4],["error",8]]]],[11,"source","","",53,[[],[["option",4],["error",8]]]],[11,"deserialize","pliantdb_local::core::networking::fabruic","",170,[[],[["result",4],["certificatechain",3]]]],[11,"deserialize","","",169,[[],[["result",4],["certificate",3]]]],[11,"deserialize","","",64,[[],[["result",4],["store",4]]]],[11,"deserialize","","",172,[[],[["privatekey",3],["result",4]]]],[11,"deserialize","","",171,[[],[["keypair",3],["result",4]]]],[11,"as_ref","","",172,[[["privatekey",3]]]],[11,"into","","",172,[[["privatekey",3]],[["u8",15],["global",3],["vec",3]]]],[11,"serialize","","",172,[[["privatekey",3]],["result",4]]],[11,"drop","","",172,[[]]],[11,"drop","pliantdb_local::core::networking::fabruic::error","",46,[[]]],[11,"eq","","",50,[[["connecting",3]],["bool",15]]],[11,"ne","","",50,[[["connecting",3]],["bool",15]]],[11,"eq","pliantdb_local::core::networking::fabruic","",64,[[["store",4]],["bool",15]]],[11,"eq","","",171,[[["keypair",3]],["bool",15]]],[11,"ne","","",171,[[["keypair",3]],["bool",15]]],[11,"eq","pliantdb_local::core::networking::fabruic::error","",158,[[["keypair",3]],["bool",15]]],[11,"ne","","",158,[[["keypair",3]],["bool",15]]],[11,"eq","","",159,[[["certificatechain",3]],["bool",15]]],[11,"ne","","",159,[[["certificatechain",3]],["bool",15]]],[11,"eq","pliantdb_local::core::networking::fabruic","",172,[[["privatekey",3]],["bool",15]]],[11,"ne","","",172,[[["privatekey",3]],["bool",15]]],[11,"eq","","",169,[[["certificate",3]],["bool",15]]],[11,"ne","","",169,[[["certificate",3]],["bool",15]]],[11,"eq","","",170,[[["certificatechain",3]],["bool",15]]],[11,"ne","","",170,[[["certificatechain",3]],["bool",15]]],[11,"eq","pliantdb_local::core::networking::fabruic::error","",49,[[["connection",3]],["bool",15]]],[11,"ne","","",49,[[["connection",3]],["bool",15]]],[11,"eq","","",46,[[["privatekey",3]],["bool",15]]],[11,"ne","","",46,[[["privatekey",3]],["bool",15]]],[11,"eq","","",160,[[["alreadyclosed",3]],["bool",15]]],[11,"set_root_certificates","pliantdb_local::core::networking::fabruic","",162,[[["builder",3]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",60,[[],["error",4]]],[11,"eq","","",60,[[["error",4]],["bool",15]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",62,[[["errorkind",4]],["x509error",4]]],[11,"from","","",63,[[["x509error",4]],[["err",4],["x509error",4]]]],[11,"from","","",62,[[["bererror",4]],["x509error",4]]],[11,"source","","",62,[[],[["option",4],["error",8]]]],[11,"from_error_kind","","",62,[[["errorkind",4]],["x509error",4]]],[11,"append","","",62,[[["errorkind",4],["x509error",4]],["x509error",4]]],[11,"eq","","",62,[[["x509error",4]],["bool",15]]],[11,"ne","","",62,[[["x509error",4]],["bool",15]]],[11,"from","","",63,[[["bererror",4]],[["bererror",4],["err",4]]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",63,[[],["err",4]]],[11,"source","","",63,[[],[["option",4],["error",8]]]],[11,"eq","","",63,[[["err",4]],["bool",15]]],[11,"ne","","",63,[[["err",4]],["bool",15]]],[11,"fmt","pliantdb_local::core::num_traits","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"description","","",55,[[],["str",15]]],[11,"cause","","",55,[[],[["option",4],["error",8]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",58,[[["readableerror",4]],["readerror",4]]],[11,"source","","",59,[[],[["option",4],["error",8]]]],[11,"clone","","",59,[[],["writeerror",4]]],[11,"clone","","",58,[[],["readerror",4]]],[11,"eq","","",58,[[["readerror",4]],["bool",15]]],[11,"ne","","",58,[[["readerror",4]],["bool",15]]],[11,"eq","","",59,[[["writeerror",4]],["bool",15]]],[11,"ne","","",59,[[["writeerror",4]],["bool",15]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",57,[[["close",4]],["connectionerror",4]]],[11,"from","","",57,[[["error",3]],["connectionerror",4]]],[11,"clone","","",56,[[],["connecterror",4]]],[11,"clone","","",57,[[],["connectionerror",4]]],[11,"source","","",57,[[],[["option",4],["error",8]]]],[11,"source","","",56,[[],[["option",4],["error",8]]]],[11,"eq","","",56,[[["connecterror",4]],["bool",15]]],[11,"ne","","",56,[[["connecterror",4]],["bool",15]]],[11,"eq","","",57,[[["connectionerror",4]],["bool",15]]],[11,"ne","","",57,[[["connectionerror",4]],["bool",15]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",161,[[["poisonerror",3]],["resolveerror",3]]],[11,"from","","",161,[[["error",3]],["resolveerror",3]]],[11,"from","","",161,[[["protoerror",3]],["resolveerror",3]]],[11,"from","","",161,[[["str",15]],["resolveerror",3]]],[11,"from","","",161,[[["resolveerrorkind",4]],["resolveerror",3]]],[11,"from","","",161,[[["string",3]],["resolveerror",3]]],[11,"should_retry","","",161,[[],["bool",15]]],[11,"attempted","","",161,[[],["bool",15]]],[11,"clone","","",161,[[],["resolveerror",3]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",61,[[["errors",3]],["parseerror",4]]],[11,"clone","","",61,[[],["parseerror",4]]],[11,"eq","","",61,[[["parseerror",4]],["bool",15]]],[11,"from","pliantdb_local","",155,[[["error",4]]]],[11,"from","","",155,[[["error",6]]]],[11,"from","","",155,[[["error",3]]]],[11,"from","","",155,[[["recverror",4]]]],[11,"from","","",155,[[["error",4]]]],[11,"from","","",155,[[["error",4]]]],[11,"from","","",155,[[["arc",3],["error",3]]]],[11,"from","pliantdb_local::core","",102,[[["error",4]]]],[11,"from","pliantdb_local","",155,[[["invalidnameerror",3]]]],[11,"clone","pliantdb_local::config","",0,[[],["configuration",3]]],[11,"clone","","",1,[[],["tasks",3]]],[11,"clone","","",2,[[],["views",3]]],[11,"clone","pliantdb_local","",156,[[]]],[11,"default","pliantdb_local::config","",0,[[],["configuration",3]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_local","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_local::backup","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_local","",155,[[["formatter",3]],["result",6]]],[11,"source","","",155,[[],[["option",4],["error",8]]]],[11,"apply_transaction","","",156,[[["transaction",3]],[["box",3],["pin",3]]]],[11,"get","","",156,[[["u64",15]],[["pin",3],["box",3]]]],[11,"get_multiple","","",156,[[],[["pin",3],["box",3]]]],[11,"list_executed_transactions","","",156,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[11,"query","","",156,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[11,"query_with_docs","","",156,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"reduce","","",156,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"reduce_grouped","","",156,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"last_transaction_id","","",156,[[],[["pin",3],["box",3]]]],[11,"execute_key_operation","","",156,[[["keyoperation",3]],[["box",3],["pin",3]]]],[11,"create_subscriber","","",156,[[],[["pin",3],["box",3]]]],[11,"publish","","",156,[[["into",8],["string",3],["send",8]],[["pin",3],["box",3]]]],[11,"clap","pliantdb_local::backup","",3,[[],["app",3]]],[11,"from_clap","","",3,[[["argmatches",3]]]],[11,"clap","","",4,[[],["app",3]]],[11,"from_clap","","",4,[[["argmatches",3]]]],[11,"augment_clap","","",3,[[["app",3]],["app",3]]],[11,"is_subcommand","","",3,[[],["bool",15]]],[11,"augment_clap","","",4,[[["app",3]],["app",3]]],[11,"from_subcommand","","",4,[[],["option",4]]],[11,"is_subcommand","","",4,[[],["bool",15]]],[11,"open_local","pliantdb_local","Opens a local file as a pliantdb.",156,[[["asref",8],["path",3],["configuration",3],["send",8]]]],[11,"schematic","","Returns the [<code>Schematic</code>] for <code>DB</code>.",156,[[],["schematic",3]]],[11,"new","pliantdb_local::core::connection","Creates a new instance using <code>connection</code>.",157,[[],["collection",3]]],[11,"push","","Adds a new <code>Document<Cl></code> with the contents <code>item</code>.",157,[[]]],[11,"get","","Retrieves a <code>Document<Cl></code> with <code>id</code> from the connection.",157,[[["u64",15]]]],[11,"with_key","","Filters for entries in the view with <code>key</code>.",8,[[],["view",3]]],[11,"with_keys","","Filters for entries in the view with <code>keys</code>.",8,[[["global",3],["vec",3]],["view",3]]],[11,"with_key_range","","Filters for entries in the view with the range <code>keys</code>.",8,[[["range",3]],["view",3]]],[11,"with_access_policy","","Sets the access policy for queries.",8,[[["accesspolicy",4]],["view",3]]],[11,"query","","Executes the query and retrieves the results.",8,[[]]],[11,"query_with_docs","","Executes the query and retrieves the results with the …",8,[[]]],[11,"reduce","","Executes a reduce over the results of the query",8,[[]]],[11,"reduce_grouped","","Executes a reduce over the results of the query",8,[[]]],[11,"serialized","","Converts this key to a serialized format using the [<code>Key</code>] …",9,[[],[["error",4],["querykey",4],["result",4]]]],[11,"deserialized","","Deserializes the bytes into <code>K</code> via the [<code>Key</code>] trait.",9,[[],[["querykey",4],["error",4],["result",4]]]],[11,"new","pliantdb_local::core::document","Creates a new document with <code>contents</code>.",12,[[["cow",4],["collectionname",3],["u64",15]],["document",3]]],[11,"with_contents","","Creates a new document with serialized bytes from <code>contents</code>…",12,[[["collectionname",3],["u64",15]],[["document",3],["result",4],["error",3]]]],[11,"contents","","Retrieves <code>contents</code> through deserialization into the type <code>D</code>…",12,[[],[["result",4],["error",3]]]],[11,"set_contents","","Serializes and stores <code>contents</code> into this document.",12,[[],[["result",4],["error",3]]]],[11,"create_new_revision","","Creates a new revision.",12,[[["cow",4]],[["document",3],["option",4]]]],[11,"emit","","Creates a <code>Map</code> result with an empty key and value.",12,[[],["map",3]]],[11,"emit_key","","Creates a <code>Map</code> result with a <code>key</code> and an empty value.",12,[[],["map",3]]],[11,"emit_value","","Creates a <code>Map</code> result with <code>value</code> and an empty key.",12,[[],["map",3]]],[11,"emit_key_and_value","","Creates a <code>Map</code> result with a <code>key</code> and <code>value</code>.",12,[[],["map",3]]],[11,"to_owned","","Clone the document\'s data so that it\'s no longer borrowed …",12,[[],["document",3]]],[11,"new","","Creates the first revision for a document with the SHA256 …",13,[[],["revision",3]]],[11,"with_id","","Creates a revision with <code>id</code> for a document with the SHA256 …",13,[[["u32",15]],["revision",3]]],[11,"next_revision","","Creates the next revision in sequence with an updated …",13,[[],[["option",4],["revision",3]]]],[11,"deserialized","pliantdb_local::core::networking","Deserialize into a <code>MappedDocument</code>.",36,[[],[["result",4],["mappeddocument",3],["error",4]]]],[11,"kind","pliantdb_local::core::networking::fabruic::error","Get the kind of the error",161,[[],["resolveerrorkind",4]]],[11,"from_response","","A conversion to determine if the response is an error",161,[[["bool",15],["dnsresponse",3]],[["dnsresponse",3],["result",4],["resolveerror",3]]]],[11,"is_incomplete","","Tests if the result is Incomplete",63,[[],["bool",15]]],[11,"map","","Applies the given function to the inner error",63,[[],["err",4]]],[11,"convert","","Automatically converts between errors if the underlying …",63,[[["err",4]],["err",4]]],[11,"map_input","","Maps <code>Err<(T, ErrorKind)></code> to <code>Err<(U, ErrorKind)></code> with the …",63,[[],["err",4]]],[11,"to_owned","","Obtaining ownership",63,[[],["err",4]]],[11,"to_owned","","Automatically converts between errors if the underlying …",63,[[],["err",4]]],[11,"new","pliantdb_local::core::networking::fabruic","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …",162,[[],["builder",3]]],[11,"set_address","","Set\'s the [<code>SocketAddr</code>] to bind to.",162,[[["socketaddr",4]]]],[11,"address","","Returns the [<code>SocketAddr</code>] to bind to.",162,[[],["socketaddr",4]]],[11,"set_server_key_pair","","Set a server certificate [<code>KeyPair</code>], use [<code>None</code>] to remove …",162,[[["keypair",3],["option",4]]]],[11,"server_key_pair","","Returns the server certificate [<code>KeyPair</code>].",162,[[],["option",4]]],[11,"set_client_key_pair","","Set a client certificate [<code>KeyPair</code>], use [<code>None</code>] to remove …",162,[[["keypair",3],["option",4]]]],[11,"client_key_pair","","Returns the client certificate [<code>KeyPair</code>].",162,[[],["option",4]]],[11,"set_protocols","","Set the protocols to accept, in order of descending …",162,[[]]],[11,"protocols","","Returns the set protocols.",162,[[]]],[11,"set_trust_dns","","Controls the use of <code>trust-dns</code> for [<code>Endpoint::connect</code>].",162,[[["bool",15]]]],[11,"disable_trust_dns","","Disables the use of <code>trust-dns</code> for [<code>Endpoint::connect</code>] …",162,[[]]],[11,"trust_dns","","Returns if <code>trust-dns</code> is enabled.",162,[[],["bool",15]]],[11,"set_dnssec","","Controls DNSSEC validation for <code>trust-dns</code> in […",162,[[["bool",15]]]],[11,"dnssec","","Returns if DNSSEC is enabled for <code>trust-dns</code>.",162,[[],["bool",15]]],[11,"set_hosts_file","","Controls <code>/etc/hosts</code> file support for <code>trust-dns</code> in […",162,[[["bool",15]]]],[11,"hosts_file","","Returns if <code>/etc/hosts</code> file support is enabled for …",162,[[],["bool",15]]],[11,"set_store","","Set\'s the default root certificate store.",162,[[["store",4]]]],[11,"store","","Returns the set [<code>Store</code>].",162,[[],["store",4]]],[11,"build","","Consumes [<code>Builder</code>] to build [<code>Endpoint</code>]. Must be called …",162,[[],[["endpoint",3],["builder",3],["result",4]]]],[11,"protocol","","The negotiated application protocol. See …",163,[[]]],[11,"accept","","Accept the [<code>Connection</code>] with the given <code>T</code> as the type …",163,[[]]],[11,"open_stream","","Open a stream on this [<code>Connection</code>], allowing to send data …",164,[[]]],[11,"protocol","","The negotiated application protocol. See …",164,[[],[["option",4],["vec",3]]]],[11,"peer_identity","","Get the peer’s identity, if available.",164,[[],[["option",4],["certificatechain",3]]]],[11,"remote_address","","The peer\'s address. Clients may change addresses at will, …",164,[[],["socketaddr",4]]],[11,"close_incoming","","Prevents any new incoming streams. Already incoming …",164,[[]]],[11,"close","","Close the [<code>Connection</code>] immediately.",164,[[]]],[11,"builder","","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …",165,[[],["builder",3]]],[11,"new_client","","Simplified version of creating a client. See [<code>Builder</code>] …",165,[[],[["endpoint",3],["error",3],["result",4]]]],[11,"new_server","","Simplified version of creating a server. See [<code>Builder</code>] …",165,[[["keypair",3],["u16",15]],[["endpoint",3],["error",3],["result",4]]]],[11,"connect","","Establishes a new <code>Connection</code> to a server. The servers […",165,[[]]],[11,"connect_pinned","","Establishes a new <code>Connection</code> to a server.",165,[[["keypair",3],["option",4],["certificate",3]]]],[11,"local_address","","Get the local [<code>SocketAddr</code>] the underlying socket is bound …",165,[[],[["result",4],["error",3],["socketaddr",4]]]],[11,"close","","Close all of this [<code>Endpoint</code>]\'s <code>Connection</code>s immediately …",165,[[]]],[11,"close_incoming","","Prevents any new incoming connections. Already incoming …",165,[[]]],[11,"wait_idle","","Wait for all <code>Connection</code>s to the [<code>Endpoint</code>] to be cleanly …",165,[[]]],[11,"type","","Returns the type information for that stream.",166,[[]]],[11,"accept","","Accept the incoming stream with the given types.",166,[[]]],[11,"finish","","Wait for the [<code>Receiver</code>] part of the stream to finish …",167,[[]]],[11,"close","","Close the [<code>Receiver</code>] immediately. To close a [<code>Receiver</code>] …",167,[[]]],[11,"send","","Send <code>data</code> into the stream.",168,[[],[["result",4],["sender",4]]]],[11,"finish","","Shut down the [<code>Send</code>] part of the stream gracefully.",168,[[]]],[11,"close","","Close the [<code>Sender</code>] immediately.",168,[[]]],[11,"from_der","","Build [<code>Certificate</code>] from DER-format. This is not meant as …",169,[[],[["certificate",3],["certificate",3],["result",4]]]],[11,"unchecked_from_der","","Build [<code>Certificate</code>] from DER-format. This skips the …",169,[[],["certificate",3]]],[11,"domains","","PanicsPanics if [<code>Certificate</code>] couldn\'t be parsed or …",169,[[],[["string",3],["global",3],["vec",3]]]],[11,"from_certificates","","Builds a new [<code>CertificateChain</code>] from the given […",170,[[],[["certificatechain",3],["result",4],["certificatechain",3]]]],[11,"unchecked_from_certificates","","Builds [<code>CertificateChain</code>] from the given [<code>Certificate</code>]s. …",170,[[],["certificatechain",3]]],[11,"into_end_entity_certificate","","Returns the end-entity [<code>Certificate</code>].",170,[[],["certificate",3]]],[11,"end_entity_certificate","","Returns a reference to the end-entity [<code>Certificate</code>].",170,[[],["certificate",3]]],[11,"iter","","Returns an iterator over the [<code>CertificateChain</code>].",170,[[],[["certificate",3],["iter",3]]]],[11,"get","","Provides a reference to the [<code>Certificate</code>] at the given …",170,[[["usize",15]],[["certificate",3],["option",4]]]],[11,"new_self_signed","","Generate a self signed certificate.",171,[[],["keypair",3]]],[11,"from_parts","","Builds a new [<code>KeyPair</code>] from the given [<code>CertificateChain</code>] …",171,[[["certificatechain",3],["privatekey",3]],[["keypair",3],["result",4],["keypair",3]]]],[11,"unchecked_from_parts","","Build [<code>KeyPair</code>] from the given [<code>CertificateChain</code>] and […",171,[[["certificatechain",3],["privatekey",3]],["keypair",3]]],[11,"certificate_chain","","Return the [<code>CertificateChain</code>] of this [<code>KeyPair</code>].",171,[[],["certificatechain",3]]],[11,"end_entity_certificate","","Returns the end-entity [<code>Certificate</code>].",171,[[],["certificate",3]]],[11,"private_key","","Return the secret [<code>PrivateKey</code>] of this [<code>KeyPair</code>].",171,[[],["privatekey",3]]],[11,"into_parts","","Destructure [<code>KeyPair</code>] into it\'s owned parts.",171,[[]]],[11,"parts","","Destructure [<code>KeyPair</code>] into it\'s borrowed parts.",171,[[]]],[11,"from_der","","Build [<code>PrivateKey</code>] from DER-format. This is not meant as …",172,[[],[["privatekey",3],["result",4],["privatekey",3]]]],[11,"unchecked_from_der","","Build [<code>PrivateKey</code>] from DER-format. This skips the …",172,[[],["privatekey",3]]],[11,"serialized","pliantdb_local::core::schema","Serializes this map.",65,[[],[["result",4],["serialized",3],["error",4]]]],[11,"new","","Creates a new Map entry for the document with id <code>source</code>.",65,[[["u64",15]],["map",3]]],[11,"deserialized","pliantdb_local::core::schema::view::map","Deserializes this map.",67,[[],[["error",4],["result",4],["map",3]]]],[11,"new","pliantdb_local::core::schema","Creates a new collection name.",76,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"new","","Creates a new name after validating it.",174,[[],[["result",4],["invalidnameerror",3],["name",3]]]],[11,"new","","Creates a new schema name.",78,[[],[["invalidnameerror",3],["schemaname",3],["result",4]]]],[11,"new","","Creates a new view name.",79,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[11,"define_collection","","Adds the collection <code>C</code> and its views.",175,[[],[["result",4],["error",4]]]],[11,"define_view","","Adds the view <code>V</code>.",175,[[],[["result",4],["error",4]]]],[11,"contains","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",175,[[],["bool",15]]],[11,"contains_collection_id","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",175,[[["collectionname",3]],["bool",15]]],[11,"view_by_name","","Looks up a [<code>view::Serialized</code>] by name.",175,[[["viewname",3]],[["option",4],["serialized",8]]]],[11,"view","","Looks up a [<code>view::Serialized</code>] through the the type <code>V</code>.",175,[[],[["option",4],["serialized",8]]]],[11,"views","","Iterates over all registered views.",175,[[]]],[11,"views_in_collection","","Iterates over all views that belong to <code>collection</code>.",175,[[["collectionname",3]],[["vec",3],["option",4]]]],[11,"push","pliantdb_local::core::transaction","Adds an operation to the transaction.",80,[[["operation",3]]]],[11,"to_owned","","Convert this structure to be free of borrows.",89,[[],["executed",3]]],[11,"and_delete","pliantdb_local::core::kv::get","Delete the key after retrieving the value.",176,[[],["builder",3]]],[11,"expire_in","pliantdb_local::core::kv::set","Set this key to expire after <code>duration</code> from now.",178,[[["duration",3]],["builder",3]]],[11,"expire_at","","Set this key to expire at the provided <code>time</code>.",178,[[["systemtime",3]],["builder",3]]],[11,"keep_existing_expiration","","If the key already exists, do not update the currently …",178,[[],["builder",3]]],[11,"only_if_exists","","Only set the value if this key already exists.",178,[[],["builder",3]]],[11,"only_if_vacant","","Only set the value if this key isn\'t present.",178,[[],["builder",3]]],[11,"returning_previous","","Executes the Set operation, requesting the previous value …",178,[[]]],[11,"now","pliantdb_local::core::kv","Returns the current timestamp according to the OS. Uses […",91,[[],["timestamp",3]]],[11,"new","pliantdb_local::core::test_util","",103,[[],["basic",3]]],[11,"with_category","","",103,[[],["basic",3]]],[11,"with_parent_id","","",103,[[["u64",15]],["basic",3]]],[11,"new","","",104,[[],["testdirectory",3]]],[11,"port","","",105,[[["u16",15]],["u16",15]]],[11,"new","","",187,[[["duration",3]],["timingtest",3]]],[11,"wait_until","","",187,[[["duration",3]]]],[11,"elapsed","","",187,[[],["duration",3]]],[11,"new","pliantdb_local::core::circulate","Creates a new message.",106,[[],[["message",3],["result",4],["error",3]]]],[11,"payload","","Deserialize the payload as <code>P</code> using CBOR.",106,[[],[["error",3],["result",4]]]],[11,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",188,[[]]],[11,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",188,[[]]],[11,"publish_message","","Publishes a message to all subscribers of its topic.",188,[[["message",3]]]],[11,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",189,[[]]],[11,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",189,[[["str",15]]]],[11,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",189,[[],["receiver",3]]],[11,"id","","Returns the unique ID of the subscriber.",189,[[],["u64",15]]],[11,"new","pliantdb_local::core::circulate::flume","Create a new selector.",190,[[],["selector",3]]],[11,"send","","Add a send operation to the selector that sends the …",190,[[["sender",3]],["selector",3]]],[11,"recv","","Add a receive operation to the selector.",190,[[["receiver",3]],["selector",3]]],[11,"wait","","Wait until one of the events associated with this […",190,[[]]],[11,"wait_timeout","","Wait until one of the events associated with this […",190,[[["duration",3]],[["result",4],["selecterror",4]]]],[11,"wait_deadline","","Wait until one of the events associated with this […",190,[[["instant",3]],[["result",4],["selecterror",4]]]],[11,"is_disconnected","pliantdb_local::core::circulate::flume::async","",192,[[],["bool",15]]],[11,"send_async","pliantdb_local::core::circulate::flume","Asynchronously send a value into the channel, returning …",195,[[],["sendfut",3]]],[11,"into_send_async","","Convert this sender into a future that asynchronously …",195,[[],["sendfut",3]]],[11,"sink","","Create an asynchronous sink that uses this sender to …",195,[[],["sendsink",3]]],[11,"into_sink","","Convert this sender into a sink that allows …",195,[[],["sendsink",3]]],[11,"try_send","","Attempt to send a value into the channel. If the channel …",195,[[],[["result",4],["trysenderror",4]]]],[11,"send","","Send a value into the channel, returning an error if all …",195,[[],[["senderror",3],["result",4]]]],[11,"send_deadline","","Send a value into the channel, returning an error if all …",195,[[["instant",3]],[["result",4],["sendtimeouterror",4]]]],[11,"send_timeout","","Send a value into the channel, returning an error if all …",195,[[["duration",3]],[["result",4],["sendtimeouterror",4]]]],[11,"is_disconnected","","Returns true if all receivers for this channel have been …",195,[[],["bool",15]]],[11,"is_empty","","Returns true if the channel is empty. Note: Zero-capacity …",195,[[],["bool",15]]],[11,"is_full","","Returns true if the channel is full. Note: Zero-capacity …",195,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel",195,[[],["usize",15]]],[11,"capacity","","If the channel is bounded, returns its capacity.",195,[[],[["usize",15],["option",4]]]],[11,"recv_async","","Asynchronously receive a value from the channel, …",196,[[],["recvfut",3]]],[11,"into_recv_async","","Convert this receiver into a future that asynchronously …",196,[[],["recvfut",3]]],[11,"stream","","Create an asynchronous stream that uses this receiver to …",196,[[],["recvstream",3]]],[11,"into_stream","","Convert this receiver into a stream that allows …",196,[[],["recvstream",3]]],[11,"try_recv","","Attempt to fetch an incoming value from the channel …",196,[[],[["tryrecverror",4],["result",4]]]],[11,"recv","","Wait for an incoming value from the channel associated …",196,[[],[["result",4],["recverror",4]]]],[11,"recv_deadline","","Wait for an incoming value from the channel associated …",196,[[["instant",3]],[["result",4],["recvtimeouterror",4]]]],[11,"recv_timeout","","Wait for an incoming value from the channel associated …",196,[[["duration",3]],[["result",4],["recvtimeouterror",4]]]],[11,"iter","","Create a blocking iterator over the values received on …",196,[[],["iter",3]]],[11,"try_iter","","A non-blocking iterator over the values received on the …",196,[[],["tryiter",3]]],[11,"drain","","Take all msgs currently sitting in the channel and …",196,[[],["drain",3]]],[11,"is_disconnected","","Returns true if all senders for this channel have been …",196,[[],["bool",15]]],[11,"is_empty","","Returns true if the channel is empty. Note: Zero-capacity …",196,[[],["bool",15]]],[11,"is_full","","Returns true if the channel is full. Note: Zero-capacity …",196,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel.",196,[[],["usize",15]]],[11,"capacity","","If the channel is bounded, returns its capacity.",196,[[],[["usize",15],["option",4]]]]],"p":[[3,"Configuration"],[3,"Tasks"],[3,"Views"],[3,"Cli"],[4,"Command"],[13,"Save"],[13,"Load"],[8,"Connection"],[3,"View"],[4,"QueryKey"],[4,"AccessPolicy"],[3,"Header"],[3,"Document"],[3,"Revision"],[3,"Payload"],[4,"Request"],[13,"Database"],[4,"ServerRequest"],[13,"DeleteDatabase"],[4,"DatabaseRequest"],[13,"Get"],[13,"GetMultiple"],[13,"Query"],[13,"Reduce"],[13,"ApplyTransaction"],[13,"ListExecutedTransactions"],[13,"SubscribeTo"],[13,"UnsubscribeFrom"],[13,"UnregisterSubscriber"],[4,"Response"],[4,"ServerResponse"],[13,"DatabaseCreated"],[13,"DatabaseDeleted"],[4,"DatabaseResponse"],[13,"SubscriberCreated"],[13,"MessageReceived"],[3,"MappedDocument"],[3,"Database"],[8,"ServerConnection"],[4,"Error"],[13,"SchemaMismatch"],[8,"Builder"],[8,"PrivateKey"],[8,"KeyPair"],[3,"Certificate"],[4,"CertificateError"],[3,"PrivateKey"],[3,"Builder"],[4,"Connect"],[3,"Connection"],[3,"Connecting"],[4,"Stream"],[4,"Incoming"],[4,"Receiver"],[4,"Sender"],[4,"ErrorKind"],[4,"ConnectError"],[4,"ConnectionError"],[4,"ReadError"],[4,"WriteError"],[4,"Error"],[4,"ParseError"],[4,"X509Error"],[4,"Err"],[4,"Store"],[3,"Map"],[3,"MappedDocument"],[3,"Serialized"],[3,"MappedValue"],[8,"Key"],[4,"Error"],[8,"View"],[4,"SerializableValue"],[8,"Serialized"],[8,"Schema"],[8,"Collection"],[3,"CollectionName"],[3,"InvalidNameError"],[3,"SchemaName"],[3,"ViewName"],[3,"Transaction"],[3,"Operation"],[4,"Command"],[13,"Insert"],[13,"Update"],[13,"Delete"],[4,"OperationResult"],[13,"DocumentUpdated"],[13,"DocumentDeleted"],[3,"Executed"],[3,"ChangedDocument"],[3,"Timestamp"],[8,"Kv"],[4,"KeyCheck"],[3,"KeyOperation"],[4,"Command"],[13,"Set"],[13,"Get"],[4,"Output"],[4,"KeyStatus"],[8,"PubSub"],[8,"Subscriber"],[4,"Error"],[3,"Basic"],[3,"TestDirectory"],[4,"HarnessTest"],[3,"Message"],[4,"SelectError"],[3,"SendError"],[4,"TrySendError"],[4,"SendTimeoutError"],[4,"RecvError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[4,"Error"],[3,"Storage"],[3,"Collection"],[3,"KeyPair"],[3,"CertificateChain"],[3,"AlreadyClosed"],[3,"ResolveError"],[3,"Builder"],[3,"Connecting"],[3,"Connection"],[3,"Endpoint"],[3,"Incoming"],[3,"Receiver"],[3,"Sender"],[3,"Certificate"],[3,"CertificateChain"],[3,"KeyPair"],[3,"PrivateKey"],[3,"Authority"],[3,"Name"],[3,"Schematic"],[3,"Builder"],[3,"Namespaced"],[3,"Builder"],[3,"BasicCount"],[3,"BasicByParentId"],[3,"BasicByCategory"],[3,"BasicByBrokenParentId"],[3,"BasicSchema"],[3,"BasicCollectionWithNoViews"],[3,"BasicCollectionWithOnlyBrokenParentId"],[3,"UnassociatedCollection"],[3,"TimingTest"],[3,"Relay"],[3,"Subscriber"],[3,"Selector"],[3,"SendFut"],[3,"SendSink"],[3,"RecvFut"],[3,"RecvStream"],[3,"Sender"],[3,"Receiver"],[3,"Iter"],[3,"TryIter"],[3,"Drain"],[3,"IntoIter"]]},\
"pliantdb_server":{"doc":"The <code>PliantDB</code> Server.","i":[[0,"cli","pliantdb_server","Command-line interface for the server.",null,null],[0,"certificate","pliantdb_server::cli","Command-line interface for managing the root certificate.",null,null],[4,"Command","pliantdb_server::cli::certificate","Command to manage the server\'s certificates.",null,null],[13,"InstallSelfSigned","","Installs a self-signed certificate into the server. The …",0,null],[12,"server_name","pliantdb_server::cli::certificate::Command","The name of the server. If this server has a DNS name, …",1,null],[12,"overwrite","","If an existing certificate exists, an error will be …",1,null],[13,"Install","pliantdb_server::cli::certificate","Installs a X.509 certificate and associated private key …",0,null],[12,"private_key","pliantdb_server::cli::certificate::Command","A private key used to generate <code>certificate</code> in binary DER …",2,null],[12,"certificate","","The X.509 certificate in binary DER format.",2,null],[11,"execute","pliantdb_server::cli::certificate","Executes the command.",0,[[["server",3]]]],[0,"serve","pliantdb_server::cli","Command-line interface for hosting a server.",null,null],[3,"Serve","pliantdb_server::cli::serve","Execute the server",null,null],[12,"listen_on","","The bind address and port. Defaults to 5645",3,null],[11,"execute","","Starts the server.",3,[[["server",3]]]],[3,"Cli","pliantdb_server::cli","Command-line interface for <code>pliantdb server</code>.",null,null],[12,"server_data_directory","","The path to the directory where the server should store …",4,null],[12,"subcommand","","The command to execute.",4,null],[4,"Command","","Available commands for <code>pliantdb server</code>.",null,null],[13,"Certificate","","Manage the server\'s root certificate.",5,null],[13,"Serve","","Execute the server.",5,null],[11,"execute","","Executes the command.",5,[[["path",3],["fn",8],["send",8]]]],[0,"test_util","pliantdb_server","",null,null],[17,"BASIC_SERVER_NAME","pliantdb_server::test_util","",null,null],[5,"initialize_basic_server","","",null,[[["path",3]]]],[5,"basic_server_connection_tests","","",null,[[["serverconnection",8]]]],[3,"Configuration","pliantdb_server","Configuration options for <code>Server</code>",null,null],[12,"request_workers","","Number of simultaneous requests to be processed. Default …",6,null],[12,"storage","","Configuration options for individual databases.",6,null],[4,"Error","","An error occurred while interacting with a <code>Server</code>.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See …",7,null],[13,"DatabaseNotFound","","The database name given was not found.",7,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",7,null],[13,"Transport","","An error occurred from the QUIC transport layer.",7,null],[13,"Websocket","","An error occurred from the Websocket transport layer.",7,null],[13,"Io","","An error occurred from IO",7,null],[13,"Request","","An error occurred while processing a request",7,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",7,null],[12,"database_name","pliantdb_server::Error","The name of the database being accessed.",8,null],[12,"schema","","The schema provided for the database.",8,null],[12,"stored_schema","","The schema stored for the database.",8,null],[13,"SchemaAlreadyRegistered","pliantdb_server","The [<code>SchemaName</code>] returned has already been registered …",7,null],[13,"Core","","An error occurred from within the schema.",7,null],[13,"Storage","","An error occurred while interacting with a local database.",7,null],[3,"Database","","A database hosted on a server.",null,null],[3,"Server","","A <code>PliantDB</code> server.",null,null],[11,"from","pliantdb_server::cli::certificate","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","pliantdb_server::cli::serve","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","pliantdb_server::cli","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","pliantdb_server","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["error",3]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["invalidnameerror",3]]]],[11,"from","","",7,[[["error",6]]]],[11,"from","","",7,[[["certificatechain",3]]]],[11,"from","","",7,[[["receiver",4]]]],[11,"from","","",7,[[["connecting",3]]]],[11,"from","","",7,[[["privatekey",3]]]],[11,"from","","",7,[[["keypair",3]]]],[11,"from","","",7,[[["connection",3]]]],[11,"from","","",7,[[["incoming",4]]]],[11,"from","","",7,[[["alreadyclosed",3]]]],[11,"clone","","",10,[[],["server",3]]],[11,"default","","",6,[[]]],[11,"fmt","pliantdb_server::cli::certificate","",0,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_server::cli::serve","",3,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_server::cli","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_server","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"get","","",9,[[["u64",15]],[["box",3],["pin",3]]]],[11,"get_multiple","","",9,[[],[["pin",3],["box",3]]]],[11,"query","","",9,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[11,"query_with_docs","","",9,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"reduce","","",9,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"reduce_grouped","","",9,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[11,"apply_transaction","","",9,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"list_executed_transactions","","",9,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[11,"last_transaction_id","","",9,[[],[["pin",3],["box",3]]]],[11,"create_database","","",10,[[["schemaname",3],["str",15]],[["box",3],["pin",3]]]],[11,"delete_database","","",10,[[["str",15]],[["box",3],["pin",3]]]],[11,"list_databases","","",10,[[],[["pin",3],["box",3]]]],[11,"list_available_schemas","","",10,[[],[["pin",3],["box",3]]]],[11,"execute_key_operation","","",9,[[["keyoperation",3]],[["pin",3],["box",3]]]],[11,"create_subscriber","","",9,[[],[["pin",3],["box",3]]]],[11,"publish","","",9,[[["into",8],["string",3],["send",8]],[["pin",3],["box",3]]]],[11,"clap","pliantdb_server::cli::certificate","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"clap","pliantdb_server::cli::serve","",3,[[],["app",3]]],[11,"from_clap","","",3,[[["argmatches",3]]]],[11,"clap","pliantdb_server::cli","",4,[[],["app",3]]],[11,"from_clap","","",4,[[["argmatches",3]]]],[11,"clap","","",5,[[],["app",3]]],[11,"from_clap","","",5,[[["argmatches",3]]]],[11,"augment_clap","pliantdb_server::cli::certificate","",0,[[["app",3]],["app",3]]],[11,"from_subcommand","","",0,[[],["option",4]]],[11,"is_subcommand","","",0,[[],["bool",15]]],[11,"augment_clap","pliantdb_server::cli::serve","",3,[[["app",3]],["app",3]]],[11,"is_subcommand","","",3,[[],["bool",15]]],[11,"augment_clap","pliantdb_server::cli","",4,[[["app",3]],["app",3]]],[11,"is_subcommand","","",4,[[],["bool",15]]],[11,"augment_clap","","",5,[[["app",3]],["app",3]]],[11,"from_subcommand","","",5,[[],["option",4]]],[11,"is_subcommand","","",5,[[],["bool",15]]],[11,"open","pliantdb_server","Creates or opens a [<code>Server</code>] with its data stored in …",10,[[["path",3],["configuration",3]]]],[11,"register_schema","","Registers a schema for use within the server.",10,[[]]],[11,"database","","Retrieves a database. This function only verifies that …",10,[[["str",15]]]],[11,"install_self_signed_certificate","","Installs an X.509 certificate used for general purpose …",10,[[["bool",15],["str",15]]]],[11,"install_certificate","","Installs an X.509 certificate used for general purpose …",10,[[["certificate",3],["privatekey",3]]]],[11,"certificate","","Returns the current certificate.",10,[[]]],[11,"listen_on","","Listens for incoming client connections. Does not return …",10,[[["u16",15]]]],[11,"listen_for_websockets_on","","Listens for <code>WebSocket</code> traffic on <code>port</code>.",10,[[["sync",8],["tosocketaddrs",8],["send",8]]]],[11,"shutdown","","Shuts the server down. If a <code>timeout</code> is provided, the …",10,[[["option",4],["duration",3]]]]],"p":[[4,"Command"],[13,"InstallSelfSigned"],[13,"Install"],[3,"Serve"],[3,"Cli"],[4,"Command"],[3,"Configuration"],[4,"Error"],[13,"SchemaMismatch"],[3,"Database"],[3,"Server"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);
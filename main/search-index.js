var searchIndex = JSON.parse('{\
"circulate":{"doc":"Lightweight async <code>PubSub</code> framework.","i":[[3,"Message","circulate","A <code>PubSub</code> message.",null,null],[12,"topic","","The topic of the message.",0,null],[12,"payload","","The payload of the message.",0,null],[11,"new","","Creates a new message.",0,[[["string",3],["into",8]],[["error",3],["result",4]]]],[11,"payload","","Deserialize the payload as <code>P</code> using CBOR.",0,[[],[["deserialize",8],["error",3],["result",4]]]],[3,"Relay","","Manages subscriptions and notifications for <code>PubSub</code>.",null,null],[11,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",1,[[]]],[11,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",1,[[["string",3],["into",8],["send",8]]]],[11,"publish_to_all","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",1,[[["string",3],["vec",3]]]],[11,"publish_serialized_to_all","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",1,[[["vec",3],["vec",3],["string",3],["u8",15]]]],[11,"publish_message","","Publishes a message to all subscribers of its topic.",1,[[["message",3]]]],[3,"Subscriber","","A subscriber for [<code>Message</code>]s published to subscribed …",null,null],[11,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",2,[[["string",3],["into",8],["send",8]]]],[11,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",2,[[["str",15]]]],[11,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",2,[[],["receiver",3]]],[11,"id","","Returns the unique ID of the subscriber.",2,[[],["u64",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",0,[[],["message",3]]],[11,"clone","","",1,[[],["relay",3]]],[11,"clone","","",2,[[],["subscriber",3]]],[11,"default","","",1,[[],["relay",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"Message"],[3,"Relay"],[3,"Subscriber"]]},\
"pliantdb":{"doc":"A programmable document database inspired by <code>CouchDB</code> …","i":[[0,"cli","pliantdb","<code>PliantDb</code> command line tools.",null,null],[4,"Command","pliantdb::cli","The command line interface for <code>pliantdb</code>.",null,null],[13,"LocalBackup","","Back up or restore a local database",0,null],[13,"Server","","Execute a <code>PliantDb</code> server command.",0,null],[11,"execute","","Executes the command.",0,[[["fn",8],["send",8]]]],[3,"Url","pliantdb::client::url","A parsed URL record.",null,null],[3,"ParseOptions","","Full configuration for the URL parser.",null,null],[3,"UrlQuery","","Implementation detail of <code>Url::query_pairs_mut</code>. Typically …",null,null],[5,"parse","pliantdb::client::url::form_urlencoded","Convert a byte string in the …",null,[[],["parse",3]]],[3,"Parse","","The return type of <code>parse()</code>.",null,null],[3,"ParseIntoOwned","","Like <code>Parse</code>, but yields pairs of <code>String</code> instead of pairs …",null,null],[5,"byte_serialize","","The <code>application/x-www-form-urlencoded</code> byte serializer.",null,[[],["byteserialize",3]]],[3,"ByteSerialize","","Return value of <code>byte_serialize()</code>.",null,null],[3,"Serializer","","The <code>application/x-www-form-urlencoded</code> serializer.",null,null],[8,"Target","","",null,null],[10,"as_mut_string","","",1,[[],["string",3]]],[10,"finish","","",1,[[]]],[16,"Finished","","",1,null],[6,"EncodingOverride","","",null,null],[4,"Host","pliantdb::client::url","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as \'.\' dot-separated labels. Non-ASCII …",2,null],[13,"Ipv4","","An IPv4 address. <code>Url::host_str</code> returns the serialization …",2,null],[13,"Ipv6","","An IPv6 address. <code>Url::host_str</code> returns the serialization …",2,null],[3,"OpaqueOrigin","","Opaque identifier for URLs that have file or other schemes",null,null],[4,"Origin","","The origin of an URL",null,null],[13,"Opaque","","A globally unique identifier",3,null],[13,"Tuple","","Consists of the URL\'s scheme, host and port",3,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",4,null],[13,"IdnaError","","",4,null],[13,"InvalidPort","","",4,null],[13,"InvalidIpv4Address","","",4,null],[13,"InvalidIpv6Address","","",4,null],[13,"InvalidDomainCharacter","","",4,null],[13,"RelativeUrlWithoutBase","","",4,null],[13,"RelativeUrlWithCannotBeABaseBase","","",4,null],[13,"SetHostOnCannotBeABaseUrl","","",4,null],[13,"Overflow","","",4,null],[4,"SyntaxViolation","","Non-fatal syntax violations that can occur during parsing.",null,null],[13,"Backslash","","",5,null],[13,"C0SpaceIgnored","","",5,null],[13,"EmbeddedCredentials","","",5,null],[13,"ExpectedDoubleSlash","","",5,null],[13,"ExpectedFileDoubleSlash","","",5,null],[13,"FileWithHostAndWindowsDrive","","",5,null],[13,"NonUrlCodePoint","","",5,null],[13,"NullInFragment","","",5,null],[13,"PercentDecode","","",5,null],[13,"TabOrNewlineIgnored","","",5,null],[13,"UnencodedAtSign","","",5,null],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is …",null,null],[4,"Position","","Indicates a position within a URL based on its components.",null,null],[13,"BeforeScheme","","",6,null],[13,"AfterScheme","","",6,null],[13,"BeforeUsername","","",6,null],[13,"AfterUsername","","",6,null],[13,"BeforePassword","","",6,null],[13,"AfterPassword","","",6,null],[13,"BeforeHost","","",6,null],[13,"AfterHost","","",6,null],[13,"BeforePort","","",6,null],[13,"AfterPort","","",6,null],[13,"BeforePath","","",6,null],[13,"AfterPath","","",6,null],[13,"BeforeQuery","","",6,null],[13,"AfterQuery","","",6,null],[13,"BeforeFragment","","",6,null],[13,"AfterFragment","","",6,null],[6,"EncodingOverride","","",null,null],[3,"Client","pliantdb::client","Client for connecting to a <code>PliantDb</code> server.",null,null],[3,"RemoteDatabase","","A database on a remote server.",null,null],[4,"Error","","Errors related to working with <code>Client</code>",null,null],[13,"WebSocket","","An error occurred from the WebSocket transport layer.",7,null],[13,"Network","","An error occurred from networking.",7,null],[13,"InvalidUrl","","An invalid Url was provided.",7,null],[13,"Disconnected","","The connection was interrupted.",7,null],[13,"Core","","The connection was interrupted.",7,null],[0,"permissions","pliantdb::core","Types for creating and validating permissions.",null,null],[0,"group","pliantdb::core::permissions","Schema types for permission groups.",null,null],[3,"PermissionGroup","pliantdb::core::permissions::group","A named group of permissions statements.",null,null],[12,"name","","The name of the group. Must be unique.",8,null],[12,"statements","","The permission statements.",8,null],[3,"ByName","","A unique view of permission groups by name.",null,null],[0,"pliant","pliantdb::core::permissions","Types used for granting permissions within <code>PliantDb</code>.",null,null],[5,"pliantdb_resource_name","pliantdb::core::permissions::pliant","Creates a resource name with the database <code>name</code>.",null,[[],["resourcename",3]]],[5,"database_resource_name","","Creates a resource name with the database <code>name</code>.",null,[[["str",15]],["resourcename",3]]],[5,"collection_resource_name","","Creates a resource name for a <code>collection</code> within a <code>database</code>…",null,[[["str",15],["collectionname",3]],["resourcename",3]]],[5,"document_resource_name","","Creates a resource name for a document <code>id</code> within …",null,[[["str",15],["u64",15],["collectionname",3]],["resourcename",3]]],[5,"view_resource_name","","Creaets a resource name for a <code>view</code> within <code>database</code>.",null,[[["str",15],["viewname",3]],["resourcename",3]]],[5,"pubsub_topic_resource_name","","Creates a resource name for <code>PubSub</code> <code>topic</code> within <code>database</code>.",null,[[["str",15]],["resourcename",3]]],[5,"kv_key_resource_name","","Creates a resource name for <code>key</code> within <code>namespace</code> within …",null,[[["str",15],["option",4]],["resourcename",3]]],[4,"PliantAction","","Actions that can be permitted within <code>PliantDb</code>.",null,null],[13,"Server","","Actions that operate on a server",9,null],[13,"Database","","Actions that operate on a specific database.",9,null],[4,"ServerAction","","Actions that operate on a server.",null,null],[13,"Connect","","Permits connecting to the server. Upon negotiating …",10,null],[13,"ListAvailableSchemas","","Permits <code>ServerConnection::list_available_schemas</code>.",10,null],[13,"ListDatabases","","Permits <code>ServerConnection::list_databases</code>.",10,null],[13,"CreateDatabase","","Permits <code>ServerConnection::create_database</code>.",10,null],[13,"DeleteDatabase","","Permits <code>ServerConnection::delete_database</code>.",10,null],[4,"DatabaseAction","","Actions that operate on a specific database.",null,null],[13,"Document","","Actions that operate on a document.",11,null],[13,"View","","Actions that operate on a view.",11,null],[13,"Transaction","","Actions that operate on transactions.",11,null],[13,"PubSub","","Actions that operate on the <code>PubSub</code> system.",11,null],[13,"Kv","","Actions that operate on the key-value store.",11,null],[4,"DocumentAction","","Actions that operate on a document.",null,null],[13,"Get","","Allows document retrieval through <code>Connection::get()</code> and …",12,null],[13,"Insert","","Allows inserting a document through …",12,null],[13,"Update","","Allows updating a document through …",12,null],[13,"Delete","","Allows deleting a document through …",12,null],[4,"ViewAction","","Actions that operate on a view.",null,null],[13,"Query","","Allows querying a view with <code>Connection::query()</code>. See […",13,null],[13,"Reduce","","Allows reducing a view with <code>Connection::reduce()</code>. See […",13,null],[4,"TransactionAction","","Actions that operate on transactions.",null,null],[13,"ListExecuted","","Allows listing executed transactions with …",14,null],[13,"GetLastId","","Allows retrieving the last executed transaction id with …",14,null],[4,"PubSubAction","","Actions that operate on the <code>PubSub</code> system.",null,null],[13,"CreateSuscriber","","Allows creating a subscriber with …",15,null],[13,"Publish","","Allows publishing a payload to a <code>PubSub</code> topic with …",15,null],[13,"SubscribeTo","","Allows subscribing to a <code>PubSub</code> topic with …",15,null],[13,"UnsubscribeFrom","","Allows unsubscribing from a <code>PubSub</code> topic with …",15,null],[4,"KvAction","","Actions that operate on the key-value store.",null,null],[13,"ExecuteOperation","","Allows executing a key-value store operation with …",16,null],[0,"role","pliantdb::core::permissions","Schema types for roles.",null,null],[3,"Role","pliantdb::core::permissions::role","An assignable role, which grants permissions based on the …",null,null],[12,"name","","The name of the role. Must be unique.",17,null],[12,"groups","","The IDs of the permission groups this role belongs to.",17,null],[3,"ByName","","A unique view of roles by name.",null,null],[8,"Action","pliantdb::core::permissions","An action that can be allowed or disallowed.",null,null],[10,"name","","The full name of this action.",18,[[],["actionname",3]]],[24,"Action","","Derives the <code>actionable::Action</code> trait.",null,null],[3,"ActionName","","A unique name of an action.",null,null],[12,"0","","",19,null],[4,"ActionNameList","","A list of [<code>ActionName</code>]s.",null,null],[13,"List","","A specific list of names.",20,null],[13,"All","","All actions.",20,null],[24,"Actionable","","Derives a set of traits that can be used to implement a …",null,null],[8,"Dispatcher","","Dispatches <code>T</code> to an appropriate handler. This trait is …",null,null],[16,"Result","","The type of the result.",21,null],[10,"dispatch","","Dispatches <code>request</code> to the appropriate handler while also …",21,[[["permissions",3]],[["box",3],["pin",3]]]],[24,"Dispatcher","","Derives the <code>Dispatcher</code> trait.",null,null],[4,"Identifier","","A single element of a [<code>ResourceName</code>]",null,null],[13,"Any","","When checking for allowed permissions, allow any match …",22,null],[13,"Integer","","An integer identifier.",22,null],[13,"String","","A string identifier.",22,null],[3,"PermissionDenied","","An <code>action</code> was denied.",null,null],[12,"resource","","The resource that <code>action</code> was attempted upon.",23,null],[12,"action","","The <code>action</code> attempted upon <code>resource</code>.",23,null],[3,"Permissions","","A collection of allowed permissions. This is constructed …",null,null],[3,"ResourceName","","A unique name/identifier of a resource.",null,null],[3,"Statement","","A statement of permissions. A statement describes whether …",null,null],[12,"resources","","The list of resources this statement applies to.",24,null],[12,"actions","","The list of actions this statement applies to.",24,null],[12,"allowed","","Whether the <code>actions</code> should be allowed or disallowed.",24,null],[3,"PermissionGroup","","A named group of permissions statements.",null,null],[12,"name","","The name of the group. Must be unique.",8,null],[12,"statements","","The permission statements.",8,null],[3,"Role","","An assignable role, which grants permissions based on the …",null,null],[12,"name","","The name of the role. Must be unique.",17,null],[12,"groups","","The IDs of the permission groups this role belongs to.",17,null],[0,"connection","pliantdb::core","Types for interacting with <code>PliantDb</code>.",null,null],[8,"Connection","pliantdb::core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",25,[[],["collection",3]]],[11,"insert","","Inserts a newly created document into the connected […",25,[[["u8",15],["global",3],["vec",3]],[["pin",3],["box",3]]]],[11,"update","","Updates an existing document in the connected […",25,[[["document",3]],[["box",3],["pin",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",25,[[["u64",15]],[["box",3],["pin",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",25,[[],[["pin",3],["box",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",25,[[["document",3]],[["box",3],["pin",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",25,[[],["view",3]]],[10,"query","","Queries for view entries matching [<code>View</code>].",25,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",25,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",25,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",25,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",25,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",25,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",25,[[],[["box",3],["pin",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",26,null],[12,"access_policy","","The view\'s data access policy. The default value is […",26,null],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",27,null],[13,"Range","","Matches all entires with keys in the range provided.",27,null],[13,"Multiple","","Matches all entries that have keys that are included in …",27,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",28,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",28,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",28,null],[8,"ServerConnection","","Functions for interacting with a multi-database <code>PliantDb</code> …",null,null],[11,"create_database","","Creates a database named <code>name</code> with the <code>Schema</code> provided.",29,[[["str",15]],[["box",3],["pin",3]]]],[10,"create_database_with_schema","","Creates a database named <code>name</code> using the [<code>SchemaName</code>] …",29,[[["schemaname",3],["str",15]],[["box",3],["pin",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",29,[[["str",15]],[["box",3],["pin",3]]]],[10,"list_databases","","Lists the databases on this server.",29,[[],[["pin",3],["box",3]]]],[10,"list_available_schemas","","Lists the [<code>SchemaName</code>]s on this server.",29,[[],[["box",3],["pin",3]]]],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",30,null],[12,"schema","","The schema defining the database.",30,null],[0,"document","pliantdb::core","Types for interacting with <code>Document</code>s.",null,null],[3,"Header","pliantdb::core::document","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",31,null],[12,"revision","","The revision of the stored document.",31,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",32,null],[12,"header","","The header of the document, which contains the id and …",32,null],[12,"contents","","The serialized bytes of the stored item.",32,null],[3,"Revision","","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",33,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",33,null],[0,"limits","pliantdb::core","Limits used within <code>PliantDb</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb::core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"schema","pliantdb::core","Types for defining database schema.",null,null],[0,"view","pliantdb::core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb::core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb::core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",34,null],[12,"key","","The key used to index the View.",34,null],[12,"value","","An associated value stored in the view.",34,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",35,null],[12,"key","","The key used to index the View.",35,null],[12,"value","","An associated value stored in the view.",35,null],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",36,null],[12,"key","","The key used to index the View.",36,null],[12,"value","","An associated value stored in the view.",36,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",37,null],[12,"value","","The value generated by the <code>View</code>",37,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",38,[[],[["result",4],["cow",4],["error",3]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",38,[[],[["error",3],["result",4]]]],[8,"EnumKey","","Adds <code>Key</code> support to an enum. Requires implementing …",null,null],[4,"Error","pliantdb::core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",39,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",39,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",39,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",40,null],[16,"Key","","The key for this view.",40,null],[16,"Value","","An associated type that can be stored with each entry in …",40,null],[11,"unique","","If true, no two documents may emit the same key. Unique …",40,[[],["bool",15]]],[10,"version","","The version of the view. Changing this value will cause …",40,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",40,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"view_name","","The namespaced name of the view.",40,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[10,"map","","The map function for this view. This function is …",40,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",40,[[["bool",15]],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",41,null],[13,"Borrowed","","a borrowed value",41,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",42,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[10,"unique","","Wraps [<code>View::unique</code>]",42,[[],["bool",15]]],[10,"version","","Wraps [<code>View::version</code>]",42,[[],["u64",15]]],[10,"view_name","","Wraps [<code>View::view_name</code>]",42,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[10,"map","","Wraps [<code>View::map</code>]",42,[[["document",3]],[["error",4],["result",4],["option",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",42,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[8,"Schema","pliantdb::core::schema","Defines a group of collections that are stored into a …",null,null],[10,"schema_name","","Returns the unique [<code>SchemaName</code>] for this schema.",43,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",43,[[["schematic",3]],[["result",4],["error",4]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",43,[[],[["schematic",3],["error",4],["result",4]]]],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_name","","The <code>Id</code> of this collection.",44,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",44,[[["schematic",3]],[["result",4],["error",4]]]],[3,"Authority","","The owner of a schema item. This should represent the …",null,null],[3,"CollectionName","","The name of a <code>Collection</code>.",null,null],[12,"authority","","The authority of this collection.",45,null],[12,"name","","The name of this collection.",45,null],[3,"InvalidNameError","","An invalid name was used in a schema definition.",null,null],[12,"0","","",46,null],[3,"Name","","A valid schema name. Must be alphanumeric (<code>a-zA-Z9-0</code>) or …",null,null],[3,"SchemaName","","The name of a <code>Schema</code>.",null,null],[12,"authority","","The authority of this schema.",47,null],[12,"name","","The name of this schema.",47,null],[3,"ViewName","","The name of a <code>View</code>.",null,null],[12,"collection","","The name of the collection that contains this view.",48,null],[12,"name","","The name of this view.",48,null],[3,"Schematic","","A collection of defined collections and views.",null,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",38,[[],[["result",4],["cow",4],["error",3]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",38,[[],[["error",3],["result",4]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",34,null],[12,"key","","The key used to index the View.",34,null],[12,"value","","An associated value stored in the view.",34,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",35,null],[12,"key","","The key used to index the View.",35,null],[12,"value","","An associated value stored in the view.",35,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",37,null],[12,"value","","The value generated by the <code>View</code>",37,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",40,null],[16,"Key","","The key for this view.",40,null],[16,"Value","","An associated type that can be stored with each entry in …",40,null],[11,"unique","","If true, no two documents may emit the same key. Unique …",40,[[],["bool",15]]],[10,"version","","The version of the view. Changing this value will cause …",40,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",40,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"view_name","","The namespaced name of the view.",40,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[10,"map","","The map function for this view. This function is …",40,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",40,[[["bool",15]],[["result",4],["error",4]]]],[0,"transaction","pliantdb::core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb::core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",49,null],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",50,null],[12,"command","","The command being performed.",50,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",51,null],[12,"contents","pliantdb::core::transaction::Command","The initial contents of the document.",52,null],[13,"Update","pliantdb::core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",51,null],[12,"header","pliantdb::core::transaction::Command","The current header of the <code>Document</code>.",53,null],[12,"contents","","The new contents to store within the <code>Document</code>.",53,null],[13,"Delete","pliantdb::core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",51,null],[12,"header","pliantdb::core::transaction::Command","The current header of the <code>Document</code>.",54,null],[4,"OperationResult","pliantdb::core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",55,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",55,null],[12,"collection","pliantdb::core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",56,null],[12,"header","","The header of the updated <code>Document</code>.",56,null],[13,"DocumentDeleted","pliantdb::core::transaction","A <code>Document</code> was deleted.",55,null],[12,"collection","pliantdb::core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",57,null],[12,"id","","The id of the deleted <code>Document</code>.",57,null],[3,"Executed","pliantdb::core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",58,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",58,null],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",59,null],[12,"id","","The id of the changed <code>Document</code>.",59,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",59,null],[0,"kv","pliantdb::core","Types for utilizing a lightweight atomic Key-Value store.",null,null],[4,"KeyCheck","pliantdb::core::kv","Checks for existing keys.",null,null],[13,"OnlyIfPresent","","Only allow the operation if an existing key is present.",60,null],[13,"OnlyIfVacant","","Only allow the opeartion if the key isn\'t present.",60,null],[3,"KeyOperation","","An operation performed on a key.",null,null],[12,"namespace","","The namespace for the key.",61,null],[12,"key","","The key to operate on.",61,null],[12,"command","","The command to execute.",61,null],[4,"Command","","Commands for a key-value store.",null,null],[13,"Set","","Set a key/value pair.",62,null],[12,"value","pliantdb::core::kv::Command","The value.",63,null],[12,"expiration","","If set, the key will be set to expire automatically.",63,null],[12,"keep_existing_expiration","","If true and the key already exists, the expiration will …",63,null],[12,"check","","Conditional checks for whether the key is already present …",63,null],[12,"return_previous_value","","If true and the key already exists, the existing key will …",63,null],[13,"Get","pliantdb::core::kv","Get the value from a key.",62,null],[12,"delete","pliantdb::core::kv::Command","Remove the key after retrieving the value.",64,null],[13,"Delete","pliantdb::core::kv","Delete a key.",62,null],[4,"Output","","The result of a [<code>KeyOperation</code>].",null,null],[13,"Status","","A status was returned.",65,null],[13,"Value","","A value was returned.",65,null],[4,"KeyStatus","","The status of an operation on a Key.",null,null],[13,"Inserted","","A new key was inserted.",66,null],[13,"Updated","","An existing key was updated with a new value.",66,null],[13,"Deleted","","A key was deleted.",66,null],[13,"NotChanged","","No changes were made.",66,null],[3,"Timestamp","","A timestamp relative to [<code>UNIX_EPOCH</code>].",null,null],[12,"seconds","","The number of whole seconds since [<code>UNIX_EPOCH</code>].",67,null],[12,"nanos","","The number of nanoseconds in the timestamp.",67,null],[0,"get","","Types for executing get operations.",null,null],[3,"Builder","pliantdb::core::kv::get","Executes [<code>Command::Get</code>] when awaited. Also offers methods …",null,null],[0,"namespaced","pliantdb::core::kv","Types for handling key namespaces.",null,null],[3,"Namespaced","pliantdb::core::kv::namespaced","A namespaced key-value store. All operations performed …",null,null],[0,"set","pliantdb::core::kv","Types for executing set operations.",null,null],[3,"Builder","pliantdb::core::kv::set","Executes [<code>Command::Set</code>] when awaited. Also offers methods …",null,null],[8,"Kv","pliantdb::core::kv","Key-Value store methods. The Key-Value store is designed …",null,null],[10,"execute_key_operation","","Executes a single [<code>KeyOperation</code>].",68,[[["keyoperation",3]],[["pin",3],["box",3]]]],[11,"set_key","","Sets <code>key</code> to <code>value</code>. This function returns a builder that …",68,[[],["builder",3]]],[11,"get_key","","Gets the value stored at <code>key</code>. This function returns a …",68,[[],["builder",3]]],[11,"delete_key","","Deletes the value stored at <code>key</code>.",68,[[],[["box",3],["pin",3]]]],[11,"key_namespace","","The current namespace.",68,[[],[["str",15],["option",4]]]],[11,"with_key_namespace","","Access this Key-Value store within a namespace. When …",68,[[["str",15]],["namespaced",3]]],[0,"networking","pliantdb::core","Types for implementing the <code>PliantDb</code> network protocol.",null,null],[3,"Payload","pliantdb::core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",69,null],[12,"wrapped","","The wrapped payload.",69,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",70,null],[13,"Database","","A database-related request.",70,null],[12,"database","pliantdb::core::networking::Request","The name of the database.",71,null],[12,"request","","The request made to the database.",71,null],[4,"ServerRequest","pliantdb::core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",72,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",72,null],[12,"name","pliantdb::core::networking::ServerRequest","The name of the database to delete.",73,null],[13,"ListDatabases","pliantdb::core::networking","Lists all databases.",72,null],[13,"ListAvailableSchemas","","Lists available schemas.",72,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",74,null],[12,"collection","pliantdb::core::networking::DatabaseRequest","The collection of the document.",75,null],[12,"id","","The id of the document.",75,null],[13,"GetMultiple","pliantdb::core::networking","Retrieve multiple documents.",74,null],[12,"collection","pliantdb::core::networking::DatabaseRequest","The collection of the documents.",76,null],[12,"ids","","The ids of the documents.",76,null],[13,"Query","pliantdb::core::networking","Queries a view.",74,null],[12,"view","pliantdb::core::networking::DatabaseRequest","The name of the view.",77,null],[12,"key","","The filter for the view.",77,null],[12,"access_policy","","The access policy for the query.",77,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",77,null],[13,"Reduce","pliantdb::core::networking","Reduces a view.",74,null],[12,"view","pliantdb::core::networking::DatabaseRequest","The name of the view.",78,null],[12,"key","","The filter for the view.",78,null],[12,"access_policy","","The access policy for the query.",78,null],[12,"grouped","","Whether to return a single value or values grouped by …",78,null],[13,"ApplyTransaction","pliantdb::core::networking","Applies a transaction.",74,null],[12,"transaction","pliantdb::core::networking::DatabaseRequest","The trasnaction to apply.",79,null],[13,"ListExecutedTransactions","pliantdb::core::networking","Lists executed transactions.",74,null],[12,"starting_id","pliantdb::core::networking::DatabaseRequest","The starting transaction id.",80,null],[12,"result_limit","","The maximum number of results.",80,null],[13,"LastTransactionId","pliantdb::core::networking","Queries the last transaction id.",74,null],[13,"CreateSubscriber","","Creates a <code>PubSub</code> <code>Subscriber</code>",74,null],[13,"Publish","","Publishes <code>payload</code> to all subscribers of <code>topic</code>.",74,null],[12,"topic","pliantdb::core::networking::DatabaseRequest","The topics to publish to.",81,null],[12,"payload","","The payload to publish.",81,null],[13,"PublishToAll","pliantdb::core::networking","Publishes <code>payload</code> to all subscribers of all <code>topics</code>.",74,null],[12,"topics","pliantdb::core::networking::DatabaseRequest","The topics to publish to.",82,null],[12,"payload","","The payload to publish.",82,null],[13,"SubscribeTo","pliantdb::core::networking","Subscribes <code>subscriber_id</code> to messages for <code>topic</code>.",74,null],[12,"subscriber_id","pliantdb::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",83,null],[12,"topic","","The topic to subscribe to.",83,null],[13,"UnsubscribeFrom","pliantdb::core::networking","Unsubscribes <code>subscriber_id</code> from messages for <code>topic</code>.",74,null],[12,"subscriber_id","pliantdb::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",84,null],[12,"topic","","The topic to unsubscribe from.",84,null],[13,"UnregisterSubscriber","pliantdb::core::networking","Unregisters the subscriber.",74,null],[12,"subscriber_id","pliantdb::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",85,null],[13,"ExecuteKeyOperation","pliantdb::core::networking","Excutes a key-value store operation.",74,null],[4,"Response","","A response from a server.",null,null],[13,"Ok","","A request succeded but provided no output.",86,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",86,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",86,null],[13,"Error","","An error occurred processing a request.",86,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",87,null],[12,"name","pliantdb::core::networking::ServerResponse","The name of the database to create.",88,null],[13,"DatabaseDeleted","pliantdb::core::networking","A database with <code>name</code> was successfully removed.",87,null],[12,"name","pliantdb::core::networking::ServerResponse","The name of the database to remove.",89,null],[13,"Databases","pliantdb::core::networking","A list of available databases.",87,null],[13,"AvailableSchemas","","A list of availble schemas.",87,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",90,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",90,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",90,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",90,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",90,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",90,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",90,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",90,null],[13,"SubscriberCreated","","A new <code>PubSub</code> subscriber was created.",90,null],[12,"subscriber_id","pliantdb::core::networking::DatabaseResponse","The unique ID of the subscriber.",91,null],[13,"MessageReceived","pliantdb::core::networking","A PubSub message was received.",90,null],[12,"subscriber_id","pliantdb::core::networking::DatabaseResponse","The ID of the subscriber receiving the message.",92,null],[12,"topic","","The topic the payload was received on.",92,null],[12,"payload","","The message payload.",92,null],[13,"KvOutput","pliantdb::core::networking","Output from a [<code>KeyOperation</code>] being executed.",90,null],[3,"MappedDocument","","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",93,null],[12,"value","","The serialized value.",93,null],[12,"source","","The source document.",93,null],[4,"Error","","A networking error.",null,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",94,null],[13,"Disconnected","","The connection was interrupted.",94,null],[0,"dangerous","pliantdb::core::networking::fabruic","Security-sensitive settings are hidden behind these …",null,null],[8,"Builder","pliantdb::core::networking::fabruic::dangerous","Security-sensitive configuration for [<code>Builder</code>].",null,null],[10,"set_root_certificates","","Set [<code>Certificate</code>]s to be added into the root certificate …",95,[[]]],[8,"PrivateKey","","Gives read access to the [<code>PrivateKey</code>].",null,null],[10,"as_ref","","Returns a <code>&[u8]</code> to the [<code>PrivateKey</code>].",96,[[]]],[10,"into","","Returns a [<code>Vec<u8></code>] to the [<code>PrivateKey</code>].",96,[[],[["global",3],["vec",3],["u8",15]]]],[10,"serialize","","Serialize with [<code>serde</code>].",96,[[],["result",4]]],[8,"KeyPair","","Gives serialization access to [<code>KeyPair</code>].",null,null],[10,"serialize","","Serialize with [<code>serde</code>].",97,[[],["result",4]]],[0,"error","pliantdb::core::networking::fabruic","<code>Error</code> for this [<code>crate</code>].",null,null],[3,"Certificate","pliantdb::core::networking::fabruic::error","Error constructing <code>Certificate</code> with <code>Certificate::from_der</code>.",null,null],[12,"error","","The error.",98,null],[12,"certificate","","The bytes used to build the <code>Certificate</code>.",98,null],[4,"CertificateError","","Error constructing <code>Certificate</code> with <code>Certificate::from_der</code>.",null,null],[13,"WebPki","","<code>Error</code> returned by [<code>webpki</code>].",99,null],[13,"X509","","<code>Error</code> returned by [<code>x509_parser</code>].",99,null],[13,"Dangling","","Bytes passed contain uncorrelated bytes.",99,null],[13,"Expired","","<code>Certificate</code> has expired.",99,null],[13,"Domain","","<code>Certificate</code> is missing a domain name.",99,null],[3,"PrivateKey","","Failed to parse the given private key with …",null,null],[12,"0","","",100,null],[3,"KeyPair","","Failed to pair given <code>CertificateChain</code> and <code>PrivateKey</code> with …",null,null],[3,"CertificateChain","","Failed to verify the certificate chain with …",null,null],[3,"AlreadyClosed","","Attempting to close something that is already closed.",null,null],[3,"Builder","","Error binding socket during construction of <code>Endpoint</code> with …",null,null],[12,"error","","The error binding <code>Endpoint</code>.",101,null],[12,"builder","","Recovered <code>Builder</code> for re-use.",101,null],[4,"Connect","","Error connecting to a server with <code>Endpoint::connect</code>.",null,null],[13,"MultipleDomains","","The passed <code>Certificate</code> has multiple domains, this is not …",102,null],[13,"ParseUrl","","Failed to parse URL.",102,null],[13,"Domain","","URL didn\'t contain a domain.",102,null],[13,"Port","","URL didn\'t contain a port.",102,null],[13,"ParseDomain","","Failed to parse domain.",102,null],[13,"TrustDns","","Failed to resolve domain with <code>trust-dns</code>.",102,null],[13,"StdDns","","Failed to resolve domain with <code>ToSocketAddrs</code>.",102,null],[13,"NoIp","","Found no IP address for that domain.",102,null],[13,"Config","","Configuration needed to connect to a server is faulty.",102,null],[3,"Connection","","Error receiving connection from peer with <code>Stream</code> on from …",null,null],[12,"0","","",103,null],[3,"Connecting","","Error completing connection with peer with <code>Incoming::type</code> …",null,null],[12,"0","","",104,null],[4,"Stream","","Error opening a new stream to peer with …",null,null],[13,"Open","","Opening a new stream with <code>Connection::open_stream</code> failed.",105,null],[13,"Sender","","Sending the type information to peer failed.",105,null],[4,"Incoming","","Error receiving type information from <code>Incoming</code> stream.",null,null],[13,"Receiver","","Failed receiving type information from <code>Incoming</code> stream.",106,null],[13,"Closed","","<code>Incoming</code> was closed before type information could be …",106,null],[4,"Receiver","","Error receiving a message from a <code>Receiver</code>.",null,null],[13,"Read","","Failed to read from a <code>Receiver</code>.",107,null],[13,"Deserialize","","Failed to <code>Deserialize</code> a message from a <code>Receiver</code>.",107,null],[4,"Sender","","Error sending a message to a <code>Sender</code>.",null,null],[13,"Serialize","","Failed to <code>Serialize</code> a message for a <code>Sender</code>.",108,null],[13,"Write","","Failed to write to a <code>Sender</code>.",108,null],[13,"Closed","","[<code>Sender</code>] is closed.",108,null],[4,"ErrorKind","","The kind of error that can be produced during a …",null,null],[13,"Io","","If the error stems from the reader/writer that is being …",109,null],[13,"InvalidUtf8Encoding","","Returned if the deserializer attempts to deserialize a …",109,null],[13,"InvalidBoolEncoding","","Returned if the deserializer attempts to deserialize a …",109,null],[13,"InvalidCharEncoding","","Returned if the deserializer attempts to deserialize a …",109,null],[13,"InvalidTagEncoding","","Returned if the deserializer attempts to deserialize the …",109,null],[13,"DeserializeAnyNotSupported","","Serde has a deserialize_any method that lets the format …",109,null],[13,"SizeLimit","","If (de)serializing a message takes more than the provided …",109,null],[13,"SequenceMustHaveLength","","Bincode can not encode sequences of unknown length (like …",109,null],[13,"Custom","","A custom error message from Serde.",109,null],[4,"ConnectError","","Errors in the parameters being used to create a new …",null,null],[13,"EndpointStopping","","The endpoint can no longer create new connections",110,null],[13,"TooManyConnections","","The number of active connections on the local endpoint is …",110,null],[13,"InvalidDnsName","","The domain name supplied was malformed",110,null],[13,"Config","","The transport configuration was invalid",110,null],[13,"InvalidRemoteAddress","","The remote [<code>SocketAddr</code>] supplied was malformed",110,null],[4,"ConnectionError","","Reasons why a connection might be lost",null,null],[13,"VersionMismatch","","The peer doesn\'t implement any supported version",111,null],[13,"TransportError","","The peer violated the QUIC specification as understood by …",111,null],[13,"ConnectionClosed","","The peer\'s QUIC stack aborted the connection automatically",111,null],[13,"ApplicationClosed","","The peer closed the connection",111,null],[13,"Reset","","The peer is unable to continue processing this …",111,null],[13,"TimedOut","","Communication with the peer has lapsed for longer than …",111,null],[13,"LocallyClosed","","The local application closed the connection",111,null],[4,"ReadError","","Errors that arise from reading from a stream.",null,null],[13,"Reset","","The peer abandoned transmitting data on this stream.",112,null],[13,"ConnectionClosed","","The connection was closed.",112,null],[13,"UnknownStream","","The stream has already been stopped, finished, or reset",112,null],[13,"IllegalOrderedRead","","Attempted an ordered read following an unordered read",112,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",112,null],[4,"WriteError","","Errors that arise from writing to a stream",null,null],[13,"Stopped","","The peer is no longer accepting data on this stream.",113,null],[13,"ConnectionClosed","","The connection was closed.",113,null],[13,"UnknownStream","","The stream has already been finished or reset",113,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",113,null],[4,"Error","","An error that occurs during certificate validation or …",null,null],[13,"BadDER","","The encoding of some ASN.1 DER-encoded item is invalid.",114,null],[13,"BadDERTime","","The encoding of an ASN.1 DER-encoded time is invalid.",114,null],[13,"CAUsedAsEndEntity","","A CA certificate is veing used as an end-entity …",114,null],[13,"CertExpired","","The certificate is expired; i.e. the time it is being …",114,null],[13,"CertNotValidForName","","The certificate is not valid for the name it is being …",114,null],[13,"CertNotValidYet","","The certificate is not valid yet; i.e. the time it is …",114,null],[13,"EndEntityUsedAsCA","","An end-entity certificate is being used as a CA …",114,null],[13,"ExtensionValueInvalid","","An X.509 extension is invalid.",114,null],[13,"InvalidCertValidity","","The certificate validity period (notBefore, notAfter) is …",114,null],[13,"InvalidSignatureForPublicKey","","The signature is invalid for the given public key.",114,null],[13,"NameConstraintViolation","","The certificate violates one or more name constraints.",114,null],[13,"PathLenConstraintViolated","","The certificate violates one or more path length …",114,null],[13,"SignatureAlgorithmMismatch","","The algorithm in the TBSCertificate \\\"signature\\\" field of …",114,null],[13,"RequiredEKUNotFound","","The certificate is not valid for the Extended Key Usage …",114,null],[13,"UnknownIssuer","","A valid issuer for the certificate could not be found.",114,null],[13,"UnsupportedCertVersion","","The certificate is not a v3 X.509 certificate.",114,null],[13,"UnsupportedCriticalExtension","","The certificate contains an unsupported critical …",114,null],[13,"UnsupportedSignatureAlgorithmForPublicKey","","The signature\'s algorithm does not match the algorithm of …",114,null],[13,"UnsupportedSignatureAlgorithm","","The signature algorithm for a signature is not in the set …",114,null],[3,"ResolveError","","The error type for errors that get returned in the crate",null,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",4,null],[13,"IdnaError","","",4,null],[13,"InvalidPort","","",4,null],[13,"InvalidIpv4Address","","",4,null],[13,"InvalidIpv6Address","","",4,null],[13,"InvalidDomainCharacter","","",4,null],[13,"RelativeUrlWithoutBase","","",4,null],[13,"RelativeUrlWithCannotBeABaseBase","","",4,null],[13,"SetHostOnCannotBeABaseUrl","","",4,null],[13,"Overflow","","",4,null],[4,"X509Error","","An error that can occur while parsing or validating a …",null,null],[13,"Generic","","",115,null],[13,"InvalidVersion","","",115,null],[13,"InvalidSerial","","",115,null],[13,"InvalidAlgorithmIdentifier","","",115,null],[13,"InvalidX509Name","","",115,null],[13,"InvalidDate","","",115,null],[13,"InvalidSPKI","","",115,null],[13,"InvalidSubjectUID","","",115,null],[13,"InvalidIssuerUID","","",115,null],[13,"InvalidExtensions","","",115,null],[13,"InvalidAttributes","","",115,null],[13,"DuplicateExtensions","","",115,null],[13,"DuplicateAttributes","","",115,null],[13,"InvalidSignatureValue","","",115,null],[13,"InvalidTbsCertificate","","",115,null],[13,"InvalidUserCertificate","","",115,null],[13,"InvalidCertificate","","Top-level certificate structure is invalid",115,null],[13,"SignatureVerificationError","","",115,null],[13,"SignatureUnsupportedAlgorithm","","",115,null],[13,"Der","","",115,null],[13,"NomError","","",115,null],[4,"Err","","The <code>Err</code> enum indicates the parser was not successful",null,null],[13,"Incomplete","","There was not enough data",116,null],[13,"Error","","The parser had an error (recoverable)",116,null],[13,"Failure","","The parser had an unrecoverable error: we got to the right…",116,null],[3,"Builder","pliantdb::core::networking::fabruic","Helper for constructing an [<code>Endpoint</code>].",null,null],[3,"Connecting","","Represent\'s an intermediate state to build a [<code>Connection</code>].",null,null],[3,"Connection","","Represents an open connection. Receives [<code>Incoming</code>] …",null,null],[3,"Endpoint","","Represents a socket using the QUIC protocol to …",null,null],[3,"Incoming","","An intermediate state to define which type to accept in …",null,null],[3,"Receiver","","Used to receive data from a stream. Will stop receiving …",null,null],[3,"Sender","","Used to send data to a stream.",null,null],[4,"Store","","Configuration option for [<code>Builder::set_store</code>].",null,null],[13,"Empty","","Empty root certificate store.",117,null],[13,"Os","","Uses the OS root certificate store, see …",117,null],[13,"Embedded","","Use an embedded root certificate store, see <code>webpki-roots</code>.",117,null],[3,"Certificate","","A public certificate. You can distribute it freely to …",null,null],[3,"CertificateChain","","A public [<code>Certificate</code>] chain, used to prese",null,null],[3,"KeyPair","","A key-pair, consisting of a [<code>CertificateChain</code>] and […",null,null],[3,"PrivateKey","","A private key.",null,null],[0,"pubsub","pliantdb::core","Types for Publish/Subscribe (<code>PubSub</code>) messaging.",null,null],[8,"PubSub","pliantdb::core::pubsub","Publishes and Subscribes to messages on topics.",null,null],[16,"Subscriber","","The Subscriber type for this <code>PubSub</code> connection.",118,null],[10,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",118,[[],[["pin",3],["box",3]]]],[10,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",118,[[],[["box",3],["pin",3]]]],[10,"publish_to_all","","Publishes a <code>payload</code> to all subscribers of all <code>topics</code>.",118,[[["vec",3],["global",3],["string",3]],[["box",3],["pin",3]]]],[8,"Subscriber","","A subscriber to one or more topics.",null,null],[10,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",119,[[],[["box",3],["pin",3]]]],[10,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",119,[[["str",15]],[["box",3],["pin",3]]]],[10,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",119,[[],["receiver",3]]],[4,"Error","pliantdb::core","an enumeration of errors that this crate can produce",null,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",120,null],[12,"database_name","pliantdb::core::Error","The name of the database being accessed.",121,null],[12,"schema","","The schema provided for the database.",121,null],[12,"stored_schema","","The schema stored for the database.",121,null],[13,"SchemaAlreadyRegistered","pliantdb::core","The [<code>SchemaName</code>] returned has already been registered …",120,null],[13,"SchemaNotRegistered","","The [<code>SchemaName</code>] requested was not registered with this …",120,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See …",120,null],[13,"DatabaseNotFound","","The database name given was not found.",120,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",120,null],[13,"Database","","An error from interacting with local storage.",120,null],[13,"Server","","An error from interacting with a server.",120,null],[13,"Transport","","An error occurred from the QUIC transport layer.",120,null],[13,"Websocket","","An error occurred from the websocket transport layer.",120,null],[13,"Networking","","An error occurred from networking.",120,null],[13,"Io","","An error occurred from IO.",120,null],[13,"Configuration","","An error occurred with the provided configuration options.",120,null],[13,"Client","","An error occurred inside of the client.",120,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",120,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",120,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",120,null],[13,"UniqueKeyViolation","","When saving a document in a collection with unique views, …",120,null],[12,"view","pliantdb::core::Error","The name of the view that the unique key violation …",122,null],[12,"conflicting_document_id","","The document that caused the violation.",122,null],[12,"existing_document_id","","The document that already uses the same key.",122,null],[13,"InvalidName","pliantdb::core","An invalid name was specified during schema creation.",120,null],[13,"PermissionDenied","","Permission was denied.",120,null],[0,"test_util","","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb::core::test_util","",null,null],[12,"value","","",123,null],[12,"category","","",123,null],[12,"parent_id","","",123,null],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"Unique","","",null,null],[12,"value","","",124,null],[3,"UniqueValue","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",125,null],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"HarnessTest","","",null,null],[13,"ServerConnectionTests","","",126,null],[13,"StoreRetrieveUpdate","","",126,null],[13,"NotFound","","",126,null],[13,"Conflict","","",126,null],[13,"BadUpdate","","",126,null],[13,"NoUpdate","","",126,null],[13,"GetMultiple","","",126,null],[13,"ListTransactions","","",126,null],[13,"ViewQuery","","",126,null],[13,"UnassociatedCollection","","",126,null],[13,"ViewUpdate","","",126,null],[13,"ViewAccessPolicies","","",126,null],[13,"UniqueViews","","",126,null],[13,"PubSubSimple","","",126,null],[13,"PubSubMultipleSubscribers","","",126,null],[13,"PubSubDropAndSend","","",126,null],[13,"PubSubUnsubscribe","","",126,null],[13,"PubSubDropCleanup","","",126,null],[13,"PubSubPublishAll","","",126,null],[13,"KvBasic","","",126,null],[13,"KvSet","","",126,null],[13,"KvExpiration","","",126,null],[13,"KvDeleteExpire","","",126,null],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[5,"unique_view_tests","","",null,[[]]],[3,"TimingTest","","",null,null],[5,"basic_server_connection_tests","","",null,[[["str",15]]]],[0,"bounds","pliantdb::core::num_traits","",null,null],[8,"Bounded","pliantdb::core::num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",127,[[]]],[10,"max_value","","returns the largest finite number this type can represent",127,[[]]],[0,"cast","pliantdb::core::num_traits","",null,null],[8,"ToPrimitive","pliantdb::core::num_traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",128,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",128,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",128,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",128,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",128,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",128,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",128,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",128,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",128,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",128,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",128,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",128,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",128,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",128,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",129,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",129,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",129,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",129,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",129,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",129,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",129,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",129,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",129,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",129,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",129,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",129,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",129,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",129,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",130,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",131,[[]]],[0,"float","pliantdb::core::num_traits","",null,null],[8,"FloatCore","pliantdb::core::num_traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",132,[[]]],[10,"neg_infinity","","Returns negative infinity.",132,[[]]],[10,"nan","","Returns NaN.",132,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",132,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",132,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",132,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",132,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",132,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",132,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",132,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",132,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",132,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",132,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",132,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",132,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",132,[[]]],[11,"trunc","","Return the integer part of a number.",132,[[]]],[11,"fract","","Returns the fractional part of a number.",132,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",132,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",132,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",132,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",132,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",132,[[]]],[11,"max","","Returns the maximum of the two numbers.",132,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",132,[[]]],[11,"powi","","Raise a number to an integer power.",132,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",132,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",132,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",132,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",133,[[]]],[10,"infinity","","Returns the infinite value.",133,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",133,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",133,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",133,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",133,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",133,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",133,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",133,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",133,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",133,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",133,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",133,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",133,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",133,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",133,[[]]],[10,"trunc","","Return the integer part of a number.",133,[[]]],[10,"fract","","Returns the fractional part of a number.",133,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",133,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",133,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",133,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",133,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",133,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",133,[[]]],[10,"powi","","Raise a number to an integer power.",133,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",133,[[]]],[10,"sqrt","","Take the square root of a number.",133,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",133,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",133,[[]]],[10,"ln","","Returns the natural logarithm of the number.",133,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",133,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",133,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",133,[[]]],[11,"to_degrees","","Converts radians to degrees.",133,[[]]],[11,"to_radians","","Converts degrees to radians.",133,[[]]],[10,"max","","Returns the maximum of the two numbers.",133,[[]]],[10,"min","","Returns the minimum of the two numbers.",133,[[]]],[10,"abs_sub","","The positive difference of two numbers.",133,[[]]],[10,"cbrt","","Take the cubic root of a number.",133,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",133,[[]]],[10,"sin","","Computes the sine of a number (in radians).",133,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",133,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",133,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",133,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",133,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",133,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",133,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",133,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",133,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",133,[[]]],[10,"sinh","","Hyperbolic sine function.",133,[[]]],[10,"cosh","","Hyperbolic cosine function.",133,[[]]],[10,"tanh","","Hyperbolic tangent function.",133,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",133,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",133,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",133,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",133,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",134,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",134,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",134,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",134,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",134,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",134,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",134,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",134,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",134,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",134,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",134,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",134,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",134,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",134,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",134,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",134,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",134,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",134,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",134,[[]]],[0,"identities","pliantdb::core::num_traits","",null,null],[8,"Zero","pliantdb::core::num_traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",135,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",135,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",135,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",136,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",136,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",136,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[0,"int","pliantdb::core::num_traits","",null,null],[8,"PrimInt","pliantdb::core::num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",137,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",137,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",137,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",137,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",137,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",137,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",137,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",137,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",137,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",137,[[["u32",15]]]],[0,"ops","pliantdb::core::num_traits","",null,null],[0,"checked","pliantdb::core::num_traits::ops","",null,null],[8,"CheckedAdd","pliantdb::core::num_traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",138,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",139,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",140,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",141,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",142,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",143,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",144,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",145,[[["u32",15]],["option",4]]],[0,"inv","pliantdb::core::num_traits::ops","",null,null],[8,"Inv","pliantdb::core::num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",146,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",146,[[]]],[0,"mul_add","pliantdb::core::num_traits::ops","",null,null],[8,"MulAdd","pliantdb::core::num_traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",147,null],[10,"mul_add","","Performs the fused multiply-add operation.",147,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",148,[[]]],[0,"overflowing","pliantdb::core::num_traits::ops","",null,null],[8,"OverflowingAdd","pliantdb::core::num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean …",149,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean …",150,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean …",151,[[]]],[0,"saturating","pliantdb::core::num_traits::ops","",null,null],[8,"Saturating","pliantdb::core::num_traits::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",152,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",152,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",153,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",154,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",155,[[]]],[0,"wrapping","pliantdb::core::num_traits::ops","",null,null],[8,"WrappingAdd","pliantdb::core::num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",156,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",157,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",158,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",159,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",160,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",161,[[["u32",15]]]],[0,"pow","pliantdb::core::num_traits","",null,null],[8,"Pow","pliantdb::core::num_traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",162,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",162,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[0,"real","pliantdb::core::num_traits","",null,null],[8,"Real","pliantdb::core::num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can …",163,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",163,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",163,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",163,[[]]],[10,"floor","","Returns the largest integer less than or equal to a …",163,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",163,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",163,[[]]],[10,"trunc","","Return the integer part of a number.",163,[[]]],[10,"fract","","Returns the fractional part of a number.",163,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",163,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",163,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",163,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",163,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",163,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",163,[[]]],[10,"powi","","Raise a number to an integer power.",163,[[["i32",15]]]],[10,"powf","","Raise a number to a real number power.",163,[[]]],[10,"sqrt","","Take the square root of a number.",163,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",163,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",163,[[]]],[10,"ln","","Returns the natural logarithm of the number.",163,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",163,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",163,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",163,[[]]],[10,"to_degrees","","Converts radians to degrees.",163,[[]]],[10,"to_radians","","Converts degrees to radians.",163,[[]]],[10,"max","","Returns the maximum of the two numbers.",163,[[]]],[10,"min","","Returns the minimum of the two numbers.",163,[[]]],[10,"abs_sub","","The positive difference of two numbers.",163,[[]]],[10,"cbrt","","Take the cubic root of a number.",163,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",163,[[]]],[10,"sin","","Computes the sine of a number (in radians).",163,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",163,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",163,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",163,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",163,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",163,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",163,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",163,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",163,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",163,[[]]],[10,"sinh","","Hyperbolic sine function.",163,[[]]],[10,"cosh","","Hyperbolic cosine function.",163,[[]]],[10,"tanh","","Hyperbolic tangent function.",163,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",163,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",163,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",163,[[]]],[0,"sign","pliantdb::core::num_traits","",null,null],[8,"Signed","pliantdb::core::num_traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",164,[[]]],[10,"abs_sub","","The positive difference of two numbers.",164,[[]]],[10,"signum","","Returns the sign of the number.",164,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",164,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",164,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","pliantdb::core::num_traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",165,null],[10,"from_str_radix","","Convert from a string and radix (typically <code>2..=36</code>).",165,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",166,null],[13,"Invalid","","",166,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",167,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",127,[[]]],[10,"max_value","","returns the largest finite number this type can represent",127,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",133,[[]]],[10,"infinity","","Returns the infinite value.",133,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",133,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",133,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",133,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",133,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",133,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",133,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",133,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",133,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",133,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",133,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",133,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",133,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",133,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",133,[[]]],[10,"trunc","","Return the integer part of a number.",133,[[]]],[10,"fract","","Returns the fractional part of a number.",133,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",133,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",133,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",133,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",133,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",133,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",133,[[]]],[10,"powi","","Raise a number to an integer power.",133,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",133,[[]]],[10,"sqrt","","Take the square root of a number.",133,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",133,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",133,[[]]],[10,"ln","","Returns the natural logarithm of the number.",133,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",133,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",133,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",133,[[]]],[11,"to_degrees","","Converts radians to degrees.",133,[[]]],[11,"to_radians","","Converts degrees to radians.",133,[[]]],[10,"max","","Returns the maximum of the two numbers.",133,[[]]],[10,"min","","Returns the minimum of the two numbers.",133,[[]]],[10,"abs_sub","","The positive difference of two numbers.",133,[[]]],[10,"cbrt","","Take the cubic root of a number.",133,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",133,[[]]],[10,"sin","","Computes the sine of a number (in radians).",133,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",133,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",133,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",133,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",133,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",133,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",133,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",133,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",133,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",133,[[]]],[10,"sinh","","Hyperbolic sine function.",133,[[]]],[10,"cosh","","Hyperbolic cosine function.",133,[[]]],[10,"tanh","","Hyperbolic tangent function.",133,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",133,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",133,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",133,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",133,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",134,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",134,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",134,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",134,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",134,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",134,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",134,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",134,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",134,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",134,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",134,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",134,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",134,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",134,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",134,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",134,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",134,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",134,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",134,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",131,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",129,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",129,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",129,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",129,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",129,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",129,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",129,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",129,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",129,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",129,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",129,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",129,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",129,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",129,[[["f64",15]],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",130,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",128,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",128,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",128,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",128,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",128,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",128,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",128,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",128,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",128,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",128,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",128,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",128,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",128,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",128,[[],[["f64",15],["option",4]]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",136,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",136,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",136,[[],["bool",15]]],[8,"Zero","","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",135,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",135,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",135,[[],["bool",15]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",137,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",137,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",137,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",137,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",137,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",137,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",137,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",137,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",137,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",137,[[["u32",15]]]],[8,"CheckedAdd","","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",138,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",141,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",140,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",143,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",142,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",144,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",145,[[["u32",15]],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",139,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",146,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",146,[[]]],[8,"MulAdd","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",147,null],[10,"mul_add","","Performs the fused multiply-add operation.",147,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",148,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",152,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",152,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",153,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",155,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",154,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",156,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",158,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",159,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",160,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",161,[[["u32",15]]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",157,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",162,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",162,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",164,[[]]],[10,"abs_sub","","The positive difference of two numbers.",164,[[]]],[10,"signum","","Returns the sign of the number.",164,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",164,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",164,[[],["bool",15]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[14,"define_pubsub_test_suite","pliantdb::core","Expands into a suite of pubsub unit tests using the …",null,null],[3,"Message","pliantdb::core::circulate","A <code>PubSub</code> message.",null,null],[12,"topic","","The topic of the message.",168,null],[12,"payload","","The payload of the message.",168,null],[3,"Relay","","Manages subscriptions and notifications for <code>PubSub</code>.",null,null],[3,"Subscriber","","A subscriber for [<code>Message</code>]s published to subscribed …",null,null],[0,"select","pliantdb::core::circulate::flume","Types that permit waiting upon multiple blocking …",null,null],[4,"SelectError","pliantdb::core::circulate::flume::select","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",169,null],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[0,"async","pliantdb::core::circulate::flume","Futures and other types that allow asynchronous …",null,null],[3,"SendFut","pliantdb::core::circulate::flume::async","A future that sends a value into a channel.",null,null],[3,"SendSink","","A sink that allows sending values into a channel.",null,null],[3,"RecvFut","","A future which allows asynchronously receiving a message.",null,null],[3,"RecvStream","","A stream which allows asynchronously receiving messages.",null,null],[3,"SendError","pliantdb::core::circulate::flume","An error that may be emitted when attempting to send a …",null,null],[12,"0","","",170,null],[4,"TrySendError","","An error that may be emitted when attempting to send a …",null,null],[13,"Full","","",171,null],[13,"Disconnected","","",171,null],[4,"SendTimeoutError","","An error that may be emitted when sending a value into a …",null,null],[13,"Timeout","","",172,null],[13,"Disconnected","","",172,null],[4,"RecvError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Disconnected","","",173,null],[4,"TryRecvError","","An error that may be emitted when attempting to fetch a …",null,null],[13,"Empty","","",174,null],[13,"Disconnected","","",174,null],[4,"RecvTimeoutError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",175,null],[13,"Disconnected","","",175,null],[3,"Sender","","A transmitting end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel.",null,null],[3,"Iter","","An iterator over the msgs received from a channel.",null,null],[3,"TryIter","","An non-blocking iterator over the msgs received from a …",null,null],[3,"Drain","","An fixed-sized iterator over the msgs drained from a …",null,null],[3,"IntoIter","","An owned iterator over the msgs received from a channel.",null,null],[5,"unbounded","","Create a channel with no maximum capacity.",null,[[]]],[5,"bounded","","Create a channel with a maximum capacity.",null,[[["usize",15]]]],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[14,"define_connection_test_suite","pliantdb::core","Creates a test suite that tests methods available on […",null,null],[14,"define_kv_test_suite","","Defines the Kv test suite",null,null],[0,"config","pliantdb::local","Configuration options.",null,null],[3,"Configuration","pliantdb::local::config","Configuration options for <code>Storage</code>.",null,null],[12,"workers","","Configuration options related to background tasks.",176,null],[12,"views","","Configuration options related to views.",176,null],[3,"Tasks","","Configujration options for background tasks.",null,null],[12,"worker_count","","Defines how many workers should be spawned to process …",177,null],[3,"Views","","Configuration options for views.",null,null],[12,"check_integrity_on_open","","If true, the database will scan all views during the call …",178,null],[0,"backup","pliantdb::local","Local database tool to save and load databases into plain …",null,null],[3,"Cli","pliantdb::local::backup","The command line interface for <code>pliantdb local-backup</code>.",null,null],[12,"database_path","","The path to the database you wish to operate on.",179,null],[12,"subcommand","","The command to execute on the database.",179,null],[4,"Command","","The command to execute.",null,null],[13,"Save","","Exports all of the data into a straightforward file …",180,null],[12,"output_directory","pliantdb::local::backup::Command","The directory to export the data within. The process will …",181,null],[12,"output_name","","The name of the folder to export the data to. If not …",181,null],[13,"Load","pliantdb::local::backup","Loads all of the data from a previously saved backup. Any …",180,null],[12,"backup","pliantdb::local::backup::Command","The path to the previously saved backup.",182,null],[0,"permissions","pliantdb::local::core","Types for creating and validating permissions.",null,null],[0,"group","pliantdb::local::core::permissions","Schema types for permission groups.",null,null],[3,"PermissionGroup","pliantdb::local::core::permissions::group","A named group of permissions statements.",null,null],[12,"name","","The name of the group. Must be unique.",8,null],[12,"statements","","The permission statements.",8,null],[3,"ByName","","A unique view of permission groups by name.",null,null],[0,"pliant","pliantdb::local::core::permissions","Types used for granting permissions within <code>PliantDb</code>.",null,null],[5,"pliantdb_resource_name","pliantdb::local::core::permissions::pliant","Creates a resource name with the database <code>name</code>.",null,[[],["resourcename",3]]],[5,"database_resource_name","","Creates a resource name with the database <code>name</code>.",null,[[["str",15]],["resourcename",3]]],[5,"collection_resource_name","","Creates a resource name for a <code>collection</code> within a <code>database</code>…",null,[[["str",15],["collectionname",3]],["resourcename",3]]],[5,"document_resource_name","","Creates a resource name for a document <code>id</code> within …",null,[[["str",15],["u64",15],["collectionname",3]],["resourcename",3]]],[5,"view_resource_name","","Creaets a resource name for a <code>view</code> within <code>database</code>.",null,[[["str",15],["viewname",3]],["resourcename",3]]],[5,"pubsub_topic_resource_name","","Creates a resource name for <code>PubSub</code> <code>topic</code> within <code>database</code>.",null,[[["str",15]],["resourcename",3]]],[5,"kv_key_resource_name","","Creates a resource name for <code>key</code> within <code>namespace</code> within …",null,[[["str",15],["option",4]],["resourcename",3]]],[4,"PliantAction","","Actions that can be permitted within <code>PliantDb</code>.",null,null],[13,"Server","","Actions that operate on a server",9,null],[13,"Database","","Actions that operate on a specific database.",9,null],[4,"ServerAction","","Actions that operate on a server.",null,null],[13,"Connect","","Permits connecting to the server. Upon negotiating …",10,null],[13,"ListAvailableSchemas","","Permits <code>ServerConnection::list_available_schemas</code>.",10,null],[13,"ListDatabases","","Permits <code>ServerConnection::list_databases</code>.",10,null],[13,"CreateDatabase","","Permits <code>ServerConnection::create_database</code>.",10,null],[13,"DeleteDatabase","","Permits <code>ServerConnection::delete_database</code>.",10,null],[4,"DatabaseAction","","Actions that operate on a specific database.",null,null],[13,"Document","","Actions that operate on a document.",11,null],[13,"View","","Actions that operate on a view.",11,null],[13,"Transaction","","Actions that operate on transactions.",11,null],[13,"PubSub","","Actions that operate on the <code>PubSub</code> system.",11,null],[13,"Kv","","Actions that operate on the key-value store.",11,null],[4,"DocumentAction","","Actions that operate on a document.",null,null],[13,"Get","","Allows document retrieval through <code>Connection::get()</code> and …",12,null],[13,"Insert","","Allows inserting a document through …",12,null],[13,"Update","","Allows updating a document through …",12,null],[13,"Delete","","Allows deleting a document through …",12,null],[4,"ViewAction","","Actions that operate on a view.",null,null],[13,"Query","","Allows querying a view with <code>Connection::query()</code>. See […",13,null],[13,"Reduce","","Allows reducing a view with <code>Connection::reduce()</code>. See […",13,null],[4,"TransactionAction","","Actions that operate on transactions.",null,null],[13,"ListExecuted","","Allows listing executed transactions with …",14,null],[13,"GetLastId","","Allows retrieving the last executed transaction id with …",14,null],[4,"PubSubAction","","Actions that operate on the <code>PubSub</code> system.",null,null],[13,"CreateSuscriber","","Allows creating a subscriber with …",15,null],[13,"Publish","","Allows publishing a payload to a <code>PubSub</code> topic with …",15,null],[13,"SubscribeTo","","Allows subscribing to a <code>PubSub</code> topic with …",15,null],[13,"UnsubscribeFrom","","Allows unsubscribing from a <code>PubSub</code> topic with …",15,null],[4,"KvAction","","Actions that operate on the key-value store.",null,null],[13,"ExecuteOperation","","Allows executing a key-value store operation with …",16,null],[0,"role","pliantdb::local::core::permissions","Schema types for roles.",null,null],[3,"Role","pliantdb::local::core::permissions::role","An assignable role, which grants permissions based on the …",null,null],[12,"name","","The name of the role. Must be unique.",17,null],[12,"groups","","The IDs of the permission groups this role belongs to.",17,null],[3,"ByName","","A unique view of roles by name.",null,null],[8,"Action","pliantdb::local::core::permissions","An action that can be allowed or disallowed.",null,null],[10,"name","","The full name of this action.",18,[[],["actionname",3]]],[24,"Action","","Derives the <code>actionable::Action</code> trait.",null,null],[3,"ActionName","","A unique name of an action.",null,null],[12,"0","","",19,null],[4,"ActionNameList","","A list of [<code>ActionName</code>]s.",null,null],[13,"List","","A specific list of names.",20,null],[13,"All","","All actions.",20,null],[24,"Actionable","","Derives a set of traits that can be used to implement a …",null,null],[8,"Dispatcher","","Dispatches <code>T</code> to an appropriate handler. This trait is …",null,null],[16,"Result","","The type of the result.",21,null],[10,"dispatch","","Dispatches <code>request</code> to the appropriate handler while also …",21,[[["permissions",3]],[["box",3],["pin",3]]]],[24,"Dispatcher","","Derives the <code>Dispatcher</code> trait.",null,null],[4,"Identifier","","A single element of a [<code>ResourceName</code>]",null,null],[13,"Any","","When checking for allowed permissions, allow any match …",22,null],[13,"Integer","","An integer identifier.",22,null],[13,"String","","A string identifier.",22,null],[3,"PermissionDenied","","An <code>action</code> was denied.",null,null],[12,"resource","","The resource that <code>action</code> was attempted upon.",23,null],[12,"action","","The <code>action</code> attempted upon <code>resource</code>.",23,null],[3,"Permissions","","A collection of allowed permissions. This is constructed …",null,null],[3,"ResourceName","","A unique name/identifier of a resource.",null,null],[3,"Statement","","A statement of permissions. A statement describes whether …",null,null],[12,"resources","","The list of resources this statement applies to.",24,null],[12,"actions","","The list of actions this statement applies to.",24,null],[12,"allowed","","Whether the <code>actions</code> should be allowed or disallowed.",24,null],[3,"PermissionGroup","","A named group of permissions statements.",null,null],[12,"name","","The name of the group. Must be unique.",8,null],[12,"statements","","The permission statements.",8,null],[3,"Role","","An assignable role, which grants permissions based on the …",null,null],[12,"name","","The name of the role. Must be unique.",17,null],[12,"groups","","The IDs of the permission groups this role belongs to.",17,null],[0,"connection","pliantdb::local::core","Types for interacting with <code>PliantDb</code>.",null,null],[8,"Connection","pliantdb::local::core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",25,[[],["collection",3]]],[11,"insert","","Inserts a newly created document into the connected […",25,[[["u8",15],["global",3],["vec",3]],[["pin",3],["box",3]]]],[11,"update","","Updates an existing document in the connected […",25,[[["document",3]],[["box",3],["pin",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",25,[[["u64",15]],[["box",3],["pin",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",25,[[],[["pin",3],["box",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",25,[[["document",3]],[["box",3],["pin",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",25,[[],["view",3]]],[10,"query","","Queries for view entries matching [<code>View</code>].",25,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",25,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",25,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",25,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",25,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",25,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",25,[[],[["box",3],["pin",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",26,null],[12,"access_policy","","The view\'s data access policy. The default value is […",26,null],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",27,null],[13,"Range","","Matches all entires with keys in the range provided.",27,null],[13,"Multiple","","Matches all entries that have keys that are included in …",27,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",28,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",28,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",28,null],[8,"ServerConnection","","Functions for interacting with a multi-database <code>PliantDb</code> …",null,null],[11,"create_database","","Creates a database named <code>name</code> with the <code>Schema</code> provided.",29,[[["str",15]],[["box",3],["pin",3]]]],[10,"create_database_with_schema","","Creates a database named <code>name</code> using the [<code>SchemaName</code>] …",29,[[["schemaname",3],["str",15]],[["box",3],["pin",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",29,[[["str",15]],[["box",3],["pin",3]]]],[10,"list_databases","","Lists the databases on this server.",29,[[],[["pin",3],["box",3]]]],[10,"list_available_schemas","","Lists the [<code>SchemaName</code>]s on this server.",29,[[],[["box",3],["pin",3]]]],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",30,null],[12,"schema","","The schema defining the database.",30,null],[0,"document","pliantdb::local::core","Types for interacting with <code>Document</code>s.",null,null],[3,"Header","pliantdb::local::core::document","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",31,null],[12,"revision","","The revision of the stored document.",31,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",32,null],[12,"header","","The header of the document, which contains the id and …",32,null],[12,"contents","","The serialized bytes of the stored item.",32,null],[3,"Revision","","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",33,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",33,null],[0,"limits","pliantdb::local::core","Limits used within <code>PliantDb</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb::local::core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"schema","pliantdb::local::core","Types for defining database schema.",null,null],[0,"view","pliantdb::local::core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb::local::core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb::local::core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",34,null],[12,"key","","The key used to index the View.",34,null],[12,"value","","An associated value stored in the view.",34,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",35,null],[12,"key","","The key used to index the View.",35,null],[12,"value","","An associated value stored in the view.",35,null],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",36,null],[12,"key","","The key used to index the View.",36,null],[12,"value","","An associated value stored in the view.",36,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",37,null],[12,"value","","The value generated by the <code>View</code>",37,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",38,[[],[["result",4],["cow",4],["error",3]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",38,[[],[["error",3],["result",4]]]],[8,"EnumKey","","Adds <code>Key</code> support to an enum. Requires implementing …",null,null],[4,"Error","pliantdb::local::core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",39,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",39,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",39,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",40,null],[16,"Key","","The key for this view.",40,null],[16,"Value","","An associated type that can be stored with each entry in …",40,null],[11,"unique","","If true, no two documents may emit the same key. Unique …",40,[[],["bool",15]]],[10,"version","","The version of the view. Changing this value will cause …",40,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",40,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"view_name","","The namespaced name of the view.",40,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[10,"map","","The map function for this view. This function is …",40,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",40,[[["bool",15]],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",41,null],[13,"Borrowed","","a borrowed value",41,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",42,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[10,"unique","","Wraps [<code>View::unique</code>]",42,[[],["bool",15]]],[10,"version","","Wraps [<code>View::version</code>]",42,[[],["u64",15]]],[10,"view_name","","Wraps [<code>View::view_name</code>]",42,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[10,"map","","Wraps [<code>View::map</code>]",42,[[["document",3]],[["error",4],["result",4],["option",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",42,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[8,"Schema","pliantdb::local::core::schema","Defines a group of collections that are stored into a …",null,null],[10,"schema_name","","Returns the unique [<code>SchemaName</code>] for this schema.",43,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",43,[[["schematic",3]],[["result",4],["error",4]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",43,[[],[["schematic",3],["error",4],["result",4]]]],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_name","","The <code>Id</code> of this collection.",44,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",44,[[["schematic",3]],[["result",4],["error",4]]]],[3,"Authority","","The owner of a schema item. This should represent the …",null,null],[3,"CollectionName","","The name of a <code>Collection</code>.",null,null],[12,"authority","","The authority of this collection.",45,null],[12,"name","","The name of this collection.",45,null],[3,"InvalidNameError","","An invalid name was used in a schema definition.",null,null],[12,"0","","",46,null],[3,"Name","","A valid schema name. Must be alphanumeric (<code>a-zA-Z9-0</code>) or …",null,null],[3,"SchemaName","","The name of a <code>Schema</code>.",null,null],[12,"authority","","The authority of this schema.",47,null],[12,"name","","The name of this schema.",47,null],[3,"ViewName","","The name of a <code>View</code>.",null,null],[12,"collection","","The name of the collection that contains this view.",48,null],[12,"name","","The name of this view.",48,null],[3,"Schematic","","A collection of defined collections and views.",null,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",38,[[],[["result",4],["cow",4],["error",3]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",38,[[],[["error",3],["result",4]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",34,null],[12,"key","","The key used to index the View.",34,null],[12,"value","","An associated value stored in the view.",34,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",35,null],[12,"key","","The key used to index the View.",35,null],[12,"value","","An associated value stored in the view.",35,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",37,null],[12,"value","","The value generated by the <code>View</code>",37,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",40,null],[16,"Key","","The key for this view.",40,null],[16,"Value","","An associated type that can be stored with each entry in …",40,null],[11,"unique","","If true, no two documents may emit the same key. Unique …",40,[[],["bool",15]]],[10,"version","","The version of the view. Changing this value will cause …",40,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",40,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"view_name","","The namespaced name of the view.",40,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[10,"map","","The map function for this view. This function is …",40,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",40,[[["bool",15]],[["result",4],["error",4]]]],[0,"transaction","pliantdb::local::core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb::local::core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",49,null],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",50,null],[12,"command","","The command being performed.",50,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",51,null],[12,"contents","pliantdb::local::core::transaction::Command","The initial contents of the document.",52,null],[13,"Update","pliantdb::local::core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",51,null],[12,"header","pliantdb::local::core::transaction::Command","The current header of the <code>Document</code>.",53,null],[12,"contents","","The new contents to store within the <code>Document</code>.",53,null],[13,"Delete","pliantdb::local::core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",51,null],[12,"header","pliantdb::local::core::transaction::Command","The current header of the <code>Document</code>.",54,null],[4,"OperationResult","pliantdb::local::core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",55,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",55,null],[12,"collection","pliantdb::local::core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",56,null],[12,"header","","The header of the updated <code>Document</code>.",56,null],[13,"DocumentDeleted","pliantdb::local::core::transaction","A <code>Document</code> was deleted.",55,null],[12,"collection","pliantdb::local::core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",57,null],[12,"id","","The id of the deleted <code>Document</code>.",57,null],[3,"Executed","pliantdb::local::core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",58,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",58,null],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",59,null],[12,"id","","The id of the changed <code>Document</code>.",59,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",59,null],[0,"kv","pliantdb::local::core","Types for utilizing a lightweight atomic Key-Value store.",null,null],[4,"KeyCheck","pliantdb::local::core::kv","Checks for existing keys.",null,null],[13,"OnlyIfPresent","","Only allow the operation if an existing key is present.",60,null],[13,"OnlyIfVacant","","Only allow the opeartion if the key isn\'t present.",60,null],[3,"KeyOperation","","An operation performed on a key.",null,null],[12,"namespace","","The namespace for the key.",61,null],[12,"key","","The key to operate on.",61,null],[12,"command","","The command to execute.",61,null],[4,"Command","","Commands for a key-value store.",null,null],[13,"Set","","Set a key/value pair.",62,null],[12,"value","pliantdb::local::core::kv::Command","The value.",63,null],[12,"expiration","","If set, the key will be set to expire automatically.",63,null],[12,"keep_existing_expiration","","If true and the key already exists, the expiration will …",63,null],[12,"check","","Conditional checks for whether the key is already present …",63,null],[12,"return_previous_value","","If true and the key already exists, the existing key will …",63,null],[13,"Get","pliantdb::local::core::kv","Get the value from a key.",62,null],[12,"delete","pliantdb::local::core::kv::Command","Remove the key after retrieving the value.",64,null],[13,"Delete","pliantdb::local::core::kv","Delete a key.",62,null],[4,"Output","","The result of a [<code>KeyOperation</code>].",null,null],[13,"Status","","A status was returned.",65,null],[13,"Value","","A value was returned.",65,null],[4,"KeyStatus","","The status of an operation on a Key.",null,null],[13,"Inserted","","A new key was inserted.",66,null],[13,"Updated","","An existing key was updated with a new value.",66,null],[13,"Deleted","","A key was deleted.",66,null],[13,"NotChanged","","No changes were made.",66,null],[3,"Timestamp","","A timestamp relative to [<code>UNIX_EPOCH</code>].",null,null],[12,"seconds","","The number of whole seconds since [<code>UNIX_EPOCH</code>].",67,null],[12,"nanos","","The number of nanoseconds in the timestamp.",67,null],[0,"get","","Types for executing get operations.",null,null],[3,"Builder","pliantdb::local::core::kv::get","Executes [<code>Command::Get</code>] when awaited. Also offers methods …",null,null],[0,"namespaced","pliantdb::local::core::kv","Types for handling key namespaces.",null,null],[3,"Namespaced","pliantdb::local::core::kv::namespaced","A namespaced key-value store. All operations performed …",null,null],[0,"set","pliantdb::local::core::kv","Types for executing set operations.",null,null],[3,"Builder","pliantdb::local::core::kv::set","Executes [<code>Command::Set</code>] when awaited. Also offers methods …",null,null],[8,"Kv","pliantdb::local::core::kv","Key-Value store methods. The Key-Value store is designed …",null,null],[10,"execute_key_operation","","Executes a single [<code>KeyOperation</code>].",68,[[["keyoperation",3]],[["pin",3],["box",3]]]],[11,"set_key","","Sets <code>key</code> to <code>value</code>. This function returns a builder that …",68,[[],["builder",3]]],[11,"get_key","","Gets the value stored at <code>key</code>. This function returns a …",68,[[],["builder",3]]],[11,"delete_key","","Deletes the value stored at <code>key</code>.",68,[[],[["box",3],["pin",3]]]],[11,"key_namespace","","The current namespace.",68,[[],[["str",15],["option",4]]]],[11,"with_key_namespace","","Access this Key-Value store within a namespace. When …",68,[[["str",15]],["namespaced",3]]],[0,"networking","pliantdb::local::core","Types for implementing the <code>PliantDb</code> network protocol.",null,null],[3,"Payload","pliantdb::local::core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",69,null],[12,"wrapped","","The wrapped payload.",69,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",70,null],[13,"Database","","A database-related request.",70,null],[12,"database","pliantdb::local::core::networking::Request","The name of the database.",71,null],[12,"request","","The request made to the database.",71,null],[4,"ServerRequest","pliantdb::local::core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",72,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",72,null],[12,"name","pliantdb::local::core::networking::ServerRequest","The name of the database to delete.",73,null],[13,"ListDatabases","pliantdb::local::core::networking","Lists all databases.",72,null],[13,"ListAvailableSchemas","","Lists available schemas.",72,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",74,null],[12,"collection","pliantdb::local::core::networking::DatabaseRequest","The collection of the document.",75,null],[12,"id","","The id of the document.",75,null],[13,"GetMultiple","pliantdb::local::core::networking","Retrieve multiple documents.",74,null],[12,"collection","pliantdb::local::core::networking::DatabaseRequest","The collection of the documents.",76,null],[12,"ids","","The ids of the documents.",76,null],[13,"Query","pliantdb::local::core::networking","Queries a view.",74,null],[12,"view","pliantdb::local::core::networking::DatabaseRequest","The name of the view.",77,null],[12,"key","","The filter for the view.",77,null],[12,"access_policy","","The access policy for the query.",77,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",77,null],[13,"Reduce","pliantdb::local::core::networking","Reduces a view.",74,null],[12,"view","pliantdb::local::core::networking::DatabaseRequest","The name of the view.",78,null],[12,"key","","The filter for the view.",78,null],[12,"access_policy","","The access policy for the query.",78,null],[12,"grouped","","Whether to return a single value or values grouped by …",78,null],[13,"ApplyTransaction","pliantdb::local::core::networking","Applies a transaction.",74,null],[12,"transaction","pliantdb::local::core::networking::DatabaseRequest","The trasnaction to apply.",79,null],[13,"ListExecutedTransactions","pliantdb::local::core::networking","Lists executed transactions.",74,null],[12,"starting_id","pliantdb::local::core::networking::DatabaseRequest","The starting transaction id.",80,null],[12,"result_limit","","The maximum number of results.",80,null],[13,"LastTransactionId","pliantdb::local::core::networking","Queries the last transaction id.",74,null],[13,"CreateSubscriber","","Creates a <code>PubSub</code> <code>Subscriber</code>",74,null],[13,"Publish","","Publishes <code>payload</code> to all subscribers of <code>topic</code>.",74,null],[12,"topic","pliantdb::local::core::networking::DatabaseRequest","The topics to publish to.",81,null],[12,"payload","","The payload to publish.",81,null],[13,"PublishToAll","pliantdb::local::core::networking","Publishes <code>payload</code> to all subscribers of all <code>topics</code>.",74,null],[12,"topics","pliantdb::local::core::networking::DatabaseRequest","The topics to publish to.",82,null],[12,"payload","","The payload to publish.",82,null],[13,"SubscribeTo","pliantdb::local::core::networking","Subscribes <code>subscriber_id</code> to messages for <code>topic</code>.",74,null],[12,"subscriber_id","pliantdb::local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",83,null],[12,"topic","","The topic to subscribe to.",83,null],[13,"UnsubscribeFrom","pliantdb::local::core::networking","Unsubscribes <code>subscriber_id</code> from messages for <code>topic</code>.",74,null],[12,"subscriber_id","pliantdb::local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",84,null],[12,"topic","","The topic to unsubscribe from.",84,null],[13,"UnregisterSubscriber","pliantdb::local::core::networking","Unregisters the subscriber.",74,null],[12,"subscriber_id","pliantdb::local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",85,null],[13,"ExecuteKeyOperation","pliantdb::local::core::networking","Excutes a key-value store operation.",74,null],[4,"Response","","A response from a server.",null,null],[13,"Ok","","A request succeded but provided no output.",86,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",86,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",86,null],[13,"Error","","An error occurred processing a request.",86,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",87,null],[12,"name","pliantdb::local::core::networking::ServerResponse","The name of the database to create.",88,null],[13,"DatabaseDeleted","pliantdb::local::core::networking","A database with <code>name</code> was successfully removed.",87,null],[12,"name","pliantdb::local::core::networking::ServerResponse","The name of the database to remove.",89,null],[13,"Databases","pliantdb::local::core::networking","A list of available databases.",87,null],[13,"AvailableSchemas","","A list of availble schemas.",87,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",90,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",90,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",90,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",90,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",90,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",90,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",90,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",90,null],[13,"SubscriberCreated","","A new <code>PubSub</code> subscriber was created.",90,null],[12,"subscriber_id","pliantdb::local::core::networking::DatabaseResponse","The unique ID of the subscriber.",91,null],[13,"MessageReceived","pliantdb::local::core::networking","A PubSub message was received.",90,null],[12,"subscriber_id","pliantdb::local::core::networking::DatabaseResponse","The ID of the subscriber receiving the message.",92,null],[12,"topic","","The topic the payload was received on.",92,null],[12,"payload","","The message payload.",92,null],[13,"KvOutput","pliantdb::local::core::networking","Output from a [<code>KeyOperation</code>] being executed.",90,null],[3,"MappedDocument","","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",93,null],[12,"value","","The serialized value.",93,null],[12,"source","","The source document.",93,null],[4,"Error","","A networking error.",null,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",94,null],[13,"Disconnected","","The connection was interrupted.",94,null],[0,"dangerous","pliantdb::local::core::networking::fabruic","Security-sensitive settings are hidden behind these …",null,null],[8,"Builder","pliantdb::local::core::networking::fabruic::dangerous","Security-sensitive configuration for [<code>Builder</code>].",null,null],[10,"set_root_certificates","","Set [<code>Certificate</code>]s to be added into the root certificate …",95,[[]]],[8,"PrivateKey","","Gives read access to the [<code>PrivateKey</code>].",null,null],[10,"as_ref","","Returns a <code>&[u8]</code> to the [<code>PrivateKey</code>].",96,[[]]],[10,"into","","Returns a [<code>Vec<u8></code>] to the [<code>PrivateKey</code>].",96,[[],[["global",3],["vec",3],["u8",15]]]],[10,"serialize","","Serialize with [<code>serde</code>].",96,[[],["result",4]]],[8,"KeyPair","","Gives serialization access to [<code>KeyPair</code>].",null,null],[10,"serialize","","Serialize with [<code>serde</code>].",97,[[],["result",4]]],[0,"error","pliantdb::local::core::networking::fabruic","<code>Error</code> for this [<code>crate</code>].",null,null],[3,"Certificate","pliantdb::local::core::networking::fabruic::error","Error constructing <code>Certificate</code> with <code>Certificate::from_der</code>.",null,null],[12,"error","","The error.",98,null],[12,"certificate","","The bytes used to build the <code>Certificate</code>.",98,null],[4,"CertificateError","","Error constructing <code>Certificate</code> with <code>Certificate::from_der</code>.",null,null],[13,"WebPki","","<code>Error</code> returned by [<code>webpki</code>].",99,null],[13,"X509","","<code>Error</code> returned by [<code>x509_parser</code>].",99,null],[13,"Dangling","","Bytes passed contain uncorrelated bytes.",99,null],[13,"Expired","","<code>Certificate</code> has expired.",99,null],[13,"Domain","","<code>Certificate</code> is missing a domain name.",99,null],[3,"PrivateKey","","Failed to parse the given private key with …",null,null],[12,"0","","",100,null],[3,"KeyPair","","Failed to pair given <code>CertificateChain</code> and <code>PrivateKey</code> with …",null,null],[3,"CertificateChain","","Failed to verify the certificate chain with …",null,null],[3,"AlreadyClosed","","Attempting to close something that is already closed.",null,null],[3,"Builder","","Error binding socket during construction of <code>Endpoint</code> with …",null,null],[12,"error","","The error binding <code>Endpoint</code>.",101,null],[12,"builder","","Recovered <code>Builder</code> for re-use.",101,null],[4,"Connect","","Error connecting to a server with <code>Endpoint::connect</code>.",null,null],[13,"MultipleDomains","","The passed <code>Certificate</code> has multiple domains, this is not …",102,null],[13,"ParseUrl","","Failed to parse URL.",102,null],[13,"Domain","","URL didn\'t contain a domain.",102,null],[13,"Port","","URL didn\'t contain a port.",102,null],[13,"ParseDomain","","Failed to parse domain.",102,null],[13,"TrustDns","","Failed to resolve domain with <code>trust-dns</code>.",102,null],[13,"StdDns","","Failed to resolve domain with <code>ToSocketAddrs</code>.",102,null],[13,"NoIp","","Found no IP address for that domain.",102,null],[13,"Config","","Configuration needed to connect to a server is faulty.",102,null],[3,"Connection","","Error receiving connection from peer with <code>Stream</code> on from …",null,null],[12,"0","","",103,null],[3,"Connecting","","Error completing connection with peer with <code>Incoming::type</code> …",null,null],[12,"0","","",104,null],[4,"Stream","","Error opening a new stream to peer with …",null,null],[13,"Open","","Opening a new stream with <code>Connection::open_stream</code> failed.",105,null],[13,"Sender","","Sending the type information to peer failed.",105,null],[4,"Incoming","","Error receiving type information from <code>Incoming</code> stream.",null,null],[13,"Receiver","","Failed receiving type information from <code>Incoming</code> stream.",106,null],[13,"Closed","","<code>Incoming</code> was closed before type information could be …",106,null],[4,"Receiver","","Error receiving a message from a <code>Receiver</code>.",null,null],[13,"Read","","Failed to read from a <code>Receiver</code>.",107,null],[13,"Deserialize","","Failed to <code>Deserialize</code> a message from a <code>Receiver</code>.",107,null],[4,"Sender","","Error sending a message to a <code>Sender</code>.",null,null],[13,"Serialize","","Failed to <code>Serialize</code> a message for a <code>Sender</code>.",108,null],[13,"Write","","Failed to write to a <code>Sender</code>.",108,null],[13,"Closed","","[<code>Sender</code>] is closed.",108,null],[4,"ErrorKind","","The kind of error that can be produced during a …",null,null],[13,"Io","","If the error stems from the reader/writer that is being …",109,null],[13,"InvalidUtf8Encoding","","Returned if the deserializer attempts to deserialize a …",109,null],[13,"InvalidBoolEncoding","","Returned if the deserializer attempts to deserialize a …",109,null],[13,"InvalidCharEncoding","","Returned if the deserializer attempts to deserialize a …",109,null],[13,"InvalidTagEncoding","","Returned if the deserializer attempts to deserialize the …",109,null],[13,"DeserializeAnyNotSupported","","Serde has a deserialize_any method that lets the format …",109,null],[13,"SizeLimit","","If (de)serializing a message takes more than the provided …",109,null],[13,"SequenceMustHaveLength","","Bincode can not encode sequences of unknown length (like …",109,null],[13,"Custom","","A custom error message from Serde.",109,null],[4,"ConnectError","","Errors in the parameters being used to create a new …",null,null],[13,"EndpointStopping","","The endpoint can no longer create new connections",110,null],[13,"TooManyConnections","","The number of active connections on the local endpoint is …",110,null],[13,"InvalidDnsName","","The domain name supplied was malformed",110,null],[13,"Config","","The transport configuration was invalid",110,null],[13,"InvalidRemoteAddress","","The remote [<code>SocketAddr</code>] supplied was malformed",110,null],[4,"ConnectionError","","Reasons why a connection might be lost",null,null],[13,"VersionMismatch","","The peer doesn\'t implement any supported version",111,null],[13,"TransportError","","The peer violated the QUIC specification as understood by …",111,null],[13,"ConnectionClosed","","The peer\'s QUIC stack aborted the connection automatically",111,null],[13,"ApplicationClosed","","The peer closed the connection",111,null],[13,"Reset","","The peer is unable to continue processing this …",111,null],[13,"TimedOut","","Communication with the peer has lapsed for longer than …",111,null],[13,"LocallyClosed","","The local application closed the connection",111,null],[4,"ReadError","","Errors that arise from reading from a stream.",null,null],[13,"Reset","","The peer abandoned transmitting data on this stream.",112,null],[13,"ConnectionClosed","","The connection was closed.",112,null],[13,"UnknownStream","","The stream has already been stopped, finished, or reset",112,null],[13,"IllegalOrderedRead","","Attempted an ordered read following an unordered read",112,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",112,null],[4,"WriteError","","Errors that arise from writing to a stream",null,null],[13,"Stopped","","The peer is no longer accepting data on this stream.",113,null],[13,"ConnectionClosed","","The connection was closed.",113,null],[13,"UnknownStream","","The stream has already been finished or reset",113,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",113,null],[4,"Error","","An error that occurs during certificate validation or …",null,null],[13,"BadDER","","The encoding of some ASN.1 DER-encoded item is invalid.",114,null],[13,"BadDERTime","","The encoding of an ASN.1 DER-encoded time is invalid.",114,null],[13,"CAUsedAsEndEntity","","A CA certificate is veing used as an end-entity …",114,null],[13,"CertExpired","","The certificate is expired; i.e. the time it is being …",114,null],[13,"CertNotValidForName","","The certificate is not valid for the name it is being …",114,null],[13,"CertNotValidYet","","The certificate is not valid yet; i.e. the time it is …",114,null],[13,"EndEntityUsedAsCA","","An end-entity certificate is being used as a CA …",114,null],[13,"ExtensionValueInvalid","","An X.509 extension is invalid.",114,null],[13,"InvalidCertValidity","","The certificate validity period (notBefore, notAfter) is …",114,null],[13,"InvalidSignatureForPublicKey","","The signature is invalid for the given public key.",114,null],[13,"NameConstraintViolation","","The certificate violates one or more name constraints.",114,null],[13,"PathLenConstraintViolated","","The certificate violates one or more path length …",114,null],[13,"SignatureAlgorithmMismatch","","The algorithm in the TBSCertificate \\\"signature\\\" field of …",114,null],[13,"RequiredEKUNotFound","","The certificate is not valid for the Extended Key Usage …",114,null],[13,"UnknownIssuer","","A valid issuer for the certificate could not be found.",114,null],[13,"UnsupportedCertVersion","","The certificate is not a v3 X.509 certificate.",114,null],[13,"UnsupportedCriticalExtension","","The certificate contains an unsupported critical …",114,null],[13,"UnsupportedSignatureAlgorithmForPublicKey","","The signature\'s algorithm does not match the algorithm of …",114,null],[13,"UnsupportedSignatureAlgorithm","","The signature algorithm for a signature is not in the set …",114,null],[3,"ResolveError","","The error type for errors that get returned in the crate",null,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",4,null],[13,"IdnaError","","",4,null],[13,"InvalidPort","","",4,null],[13,"InvalidIpv4Address","","",4,null],[13,"InvalidIpv6Address","","",4,null],[13,"InvalidDomainCharacter","","",4,null],[13,"RelativeUrlWithoutBase","","",4,null],[13,"RelativeUrlWithCannotBeABaseBase","","",4,null],[13,"SetHostOnCannotBeABaseUrl","","",4,null],[13,"Overflow","","",4,null],[4,"X509Error","","An error that can occur while parsing or validating a …",null,null],[13,"Generic","","",115,null],[13,"InvalidVersion","","",115,null],[13,"InvalidSerial","","",115,null],[13,"InvalidAlgorithmIdentifier","","",115,null],[13,"InvalidX509Name","","",115,null],[13,"InvalidDate","","",115,null],[13,"InvalidSPKI","","",115,null],[13,"InvalidSubjectUID","","",115,null],[13,"InvalidIssuerUID","","",115,null],[13,"InvalidExtensions","","",115,null],[13,"InvalidAttributes","","",115,null],[13,"DuplicateExtensions","","",115,null],[13,"DuplicateAttributes","","",115,null],[13,"InvalidSignatureValue","","",115,null],[13,"InvalidTbsCertificate","","",115,null],[13,"InvalidUserCertificate","","",115,null],[13,"InvalidCertificate","","Top-level certificate structure is invalid",115,null],[13,"SignatureVerificationError","","",115,null],[13,"SignatureUnsupportedAlgorithm","","",115,null],[13,"Der","","",115,null],[13,"NomError","","",115,null],[4,"Err","","The <code>Err</code> enum indicates the parser was not successful",null,null],[13,"Incomplete","","There was not enough data",116,null],[13,"Error","","The parser had an error (recoverable)",116,null],[13,"Failure","","The parser had an unrecoverable error: we got to the right…",116,null],[3,"Builder","pliantdb::local::core::networking::fabruic","Helper for constructing an [<code>Endpoint</code>].",null,null],[3,"Connecting","","Represent\'s an intermediate state to build a [<code>Connection</code>].",null,null],[3,"Connection","","Represents an open connection. Receives [<code>Incoming</code>] …",null,null],[3,"Endpoint","","Represents a socket using the QUIC protocol to …",null,null],[3,"Incoming","","An intermediate state to define which type to accept in …",null,null],[3,"Receiver","","Used to receive data from a stream. Will stop receiving …",null,null],[3,"Sender","","Used to send data to a stream.",null,null],[4,"Store","","Configuration option for [<code>Builder::set_store</code>].",null,null],[13,"Empty","","Empty root certificate store.",117,null],[13,"Os","","Uses the OS root certificate store, see …",117,null],[13,"Embedded","","Use an embedded root certificate store, see <code>webpki-roots</code>.",117,null],[3,"Certificate","","A public certificate. You can distribute it freely to …",null,null],[3,"CertificateChain","","A public [<code>Certificate</code>] chain, used to prese",null,null],[3,"KeyPair","","A key-pair, consisting of a [<code>CertificateChain</code>] and […",null,null],[3,"PrivateKey","","A private key.",null,null],[0,"pubsub","pliantdb::local::core","Types for Publish/Subscribe (<code>PubSub</code>) messaging.",null,null],[8,"PubSub","pliantdb::local::core::pubsub","Publishes and Subscribes to messages on topics.",null,null],[16,"Subscriber","","The Subscriber type for this <code>PubSub</code> connection.",118,null],[10,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",118,[[],[["pin",3],["box",3]]]],[10,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",118,[[],[["box",3],["pin",3]]]],[10,"publish_to_all","","Publishes a <code>payload</code> to all subscribers of all <code>topics</code>.",118,[[["vec",3],["global",3],["string",3]],[["box",3],["pin",3]]]],[8,"Subscriber","","A subscriber to one or more topics.",null,null],[10,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",119,[[],[["box",3],["pin",3]]]],[10,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",119,[[["str",15]],[["box",3],["pin",3]]]],[10,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",119,[[],["receiver",3]]],[4,"Error","pliantdb::local::core","an enumeration of errors that this crate can produce",null,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",120,null],[12,"database_name","pliantdb::local::core::Error","The name of the database being accessed.",121,null],[12,"schema","","The schema provided for the database.",121,null],[12,"stored_schema","","The schema stored for the database.",121,null],[13,"SchemaAlreadyRegistered","pliantdb::local::core","The [<code>SchemaName</code>] returned has already been registered …",120,null],[13,"SchemaNotRegistered","","The [<code>SchemaName</code>] requested was not registered with this …",120,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See …",120,null],[13,"DatabaseNotFound","","The database name given was not found.",120,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",120,null],[13,"Database","","An error from interacting with local storage.",120,null],[13,"Server","","An error from interacting with a server.",120,null],[13,"Transport","","An error occurred from the QUIC transport layer.",120,null],[13,"Websocket","","An error occurred from the websocket transport layer.",120,null],[13,"Networking","","An error occurred from networking.",120,null],[13,"Io","","An error occurred from IO.",120,null],[13,"Configuration","","An error occurred with the provided configuration options.",120,null],[13,"Client","","An error occurred inside of the client.",120,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",120,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",120,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",120,null],[13,"UniqueKeyViolation","","When saving a document in a collection with unique views, …",120,null],[12,"view","pliantdb::local::core::Error","The name of the view that the unique key violation …",122,null],[12,"conflicting_document_id","","The document that caused the violation.",122,null],[12,"existing_document_id","","The document that already uses the same key.",122,null],[13,"InvalidName","pliantdb::local::core","An invalid name was specified during schema creation.",120,null],[13,"PermissionDenied","","Permission was denied.",120,null],[0,"test_util","","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb::local::core::test_util","",null,null],[12,"value","","",123,null],[12,"category","","",123,null],[12,"parent_id","","",123,null],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"Unique","","",null,null],[12,"value","","",124,null],[3,"UniqueValue","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",125,null],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"HarnessTest","","",null,null],[13,"ServerConnectionTests","","",126,null],[13,"StoreRetrieveUpdate","","",126,null],[13,"NotFound","","",126,null],[13,"Conflict","","",126,null],[13,"BadUpdate","","",126,null],[13,"NoUpdate","","",126,null],[13,"GetMultiple","","",126,null],[13,"ListTransactions","","",126,null],[13,"ViewQuery","","",126,null],[13,"UnassociatedCollection","","",126,null],[13,"ViewUpdate","","",126,null],[13,"ViewAccessPolicies","","",126,null],[13,"UniqueViews","","",126,null],[13,"PubSubSimple","","",126,null],[13,"PubSubMultipleSubscribers","","",126,null],[13,"PubSubDropAndSend","","",126,null],[13,"PubSubUnsubscribe","","",126,null],[13,"PubSubDropCleanup","","",126,null],[13,"PubSubPublishAll","","",126,null],[13,"KvBasic","","",126,null],[13,"KvSet","","",126,null],[13,"KvExpiration","","",126,null],[13,"KvDeleteExpire","","",126,null],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[5,"unique_view_tests","","",null,[[]]],[3,"TimingTest","","",null,null],[5,"basic_server_connection_tests","","",null,[[["str",15]]]],[0,"bounds","pliantdb::local::core::num_traits","",null,null],[8,"Bounded","pliantdb::local::core::num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",127,[[]]],[10,"max_value","","returns the largest finite number this type can represent",127,[[]]],[0,"cast","pliantdb::local::core::num_traits","",null,null],[8,"ToPrimitive","pliantdb::local::core::num_traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",128,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",128,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",128,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",128,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",128,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",128,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",128,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",128,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",128,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",128,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",128,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",128,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",128,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",128,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",129,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",129,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",129,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",129,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",129,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",129,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",129,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",129,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",129,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",129,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",129,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",129,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",129,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",129,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",130,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",131,[[]]],[0,"float","pliantdb::local::core::num_traits","",null,null],[8,"FloatCore","pliantdb::local::core::num_traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",132,[[]]],[10,"neg_infinity","","Returns negative infinity.",132,[[]]],[10,"nan","","Returns NaN.",132,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",132,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",132,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",132,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",132,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",132,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",132,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",132,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",132,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",132,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",132,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",132,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",132,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",132,[[]]],[11,"trunc","","Return the integer part of a number.",132,[[]]],[11,"fract","","Returns the fractional part of a number.",132,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",132,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",132,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",132,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",132,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",132,[[]]],[11,"max","","Returns the maximum of the two numbers.",132,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",132,[[]]],[11,"powi","","Raise a number to an integer power.",132,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",132,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",132,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",132,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",133,[[]]],[10,"infinity","","Returns the infinite value.",133,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",133,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",133,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",133,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",133,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",133,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",133,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",133,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",133,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",133,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",133,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",133,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",133,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",133,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",133,[[]]],[10,"trunc","","Return the integer part of a number.",133,[[]]],[10,"fract","","Returns the fractional part of a number.",133,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",133,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",133,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",133,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",133,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",133,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",133,[[]]],[10,"powi","","Raise a number to an integer power.",133,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",133,[[]]],[10,"sqrt","","Take the square root of a number.",133,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",133,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",133,[[]]],[10,"ln","","Returns the natural logarithm of the number.",133,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",133,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",133,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",133,[[]]],[11,"to_degrees","","Converts radians to degrees.",133,[[]]],[11,"to_radians","","Converts degrees to radians.",133,[[]]],[10,"max","","Returns the maximum of the two numbers.",133,[[]]],[10,"min","","Returns the minimum of the two numbers.",133,[[]]],[10,"abs_sub","","The positive difference of two numbers.",133,[[]]],[10,"cbrt","","Take the cubic root of a number.",133,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",133,[[]]],[10,"sin","","Computes the sine of a number (in radians).",133,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",133,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",133,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",133,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",133,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",133,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",133,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",133,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",133,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",133,[[]]],[10,"sinh","","Hyperbolic sine function.",133,[[]]],[10,"cosh","","Hyperbolic cosine function.",133,[[]]],[10,"tanh","","Hyperbolic tangent function.",133,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",133,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",133,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",133,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",133,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",134,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",134,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",134,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",134,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",134,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",134,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",134,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",134,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",134,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",134,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",134,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",134,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",134,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",134,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",134,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",134,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",134,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",134,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",134,[[]]],[0,"identities","pliantdb::local::core::num_traits","",null,null],[8,"Zero","pliantdb::local::core::num_traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",135,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",135,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",135,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",136,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",136,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",136,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[0,"int","pliantdb::local::core::num_traits","",null,null],[8,"PrimInt","pliantdb::local::core::num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",137,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",137,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",137,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",137,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",137,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",137,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",137,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",137,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",137,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",137,[[["u32",15]]]],[0,"ops","pliantdb::local::core::num_traits","",null,null],[0,"checked","pliantdb::local::core::num_traits::ops","",null,null],[8,"CheckedAdd","pliantdb::local::core::num_traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",138,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",139,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",140,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",141,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",142,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",143,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",144,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",145,[[["u32",15]],["option",4]]],[0,"inv","pliantdb::local::core::num_traits::ops","",null,null],[8,"Inv","pliantdb::local::core::num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",146,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",146,[[]]],[0,"mul_add","pliantdb::local::core::num_traits::ops","",null,null],[8,"MulAdd","pliantdb::local::core::num_traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",147,null],[10,"mul_add","","Performs the fused multiply-add operation.",147,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",148,[[]]],[0,"overflowing","pliantdb::local::core::num_traits::ops","",null,null],[8,"OverflowingAdd","pliantdb::local::core::num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean …",149,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean …",150,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean …",151,[[]]],[0,"saturating","pliantdb::local::core::num_traits::ops","",null,null],[8,"Saturating","pliantdb::local::core::num_traits::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",152,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",152,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",153,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",154,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",155,[[]]],[0,"wrapping","pliantdb::local::core::num_traits::ops","",null,null],[8,"WrappingAdd","pliantdb::local::core::num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",156,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",157,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",158,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",159,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",160,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",161,[[["u32",15]]]],[0,"pow","pliantdb::local::core::num_traits","",null,null],[8,"Pow","pliantdb::local::core::num_traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",162,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",162,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[0,"real","pliantdb::local::core::num_traits","",null,null],[8,"Real","pliantdb::local::core::num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can …",163,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",163,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",163,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",163,[[]]],[10,"floor","","Returns the largest integer less than or equal to a …",163,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",163,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",163,[[]]],[10,"trunc","","Return the integer part of a number.",163,[[]]],[10,"fract","","Returns the fractional part of a number.",163,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",163,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",163,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",163,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",163,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",163,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",163,[[]]],[10,"powi","","Raise a number to an integer power.",163,[[["i32",15]]]],[10,"powf","","Raise a number to a real number power.",163,[[]]],[10,"sqrt","","Take the square root of a number.",163,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",163,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",163,[[]]],[10,"ln","","Returns the natural logarithm of the number.",163,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",163,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",163,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",163,[[]]],[10,"to_degrees","","Converts radians to degrees.",163,[[]]],[10,"to_radians","","Converts degrees to radians.",163,[[]]],[10,"max","","Returns the maximum of the two numbers.",163,[[]]],[10,"min","","Returns the minimum of the two numbers.",163,[[]]],[10,"abs_sub","","The positive difference of two numbers.",163,[[]]],[10,"cbrt","","Take the cubic root of a number.",163,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",163,[[]]],[10,"sin","","Computes the sine of a number (in radians).",163,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",163,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",163,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",163,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",163,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",163,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",163,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",163,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",163,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",163,[[]]],[10,"sinh","","Hyperbolic sine function.",163,[[]]],[10,"cosh","","Hyperbolic cosine function.",163,[[]]],[10,"tanh","","Hyperbolic tangent function.",163,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",163,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",163,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",163,[[]]],[0,"sign","pliantdb::local::core::num_traits","",null,null],[8,"Signed","pliantdb::local::core::num_traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",164,[[]]],[10,"abs_sub","","The positive difference of two numbers.",164,[[]]],[10,"signum","","Returns the sign of the number.",164,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",164,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",164,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","pliantdb::local::core::num_traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",165,null],[10,"from_str_radix","","Convert from a string and radix (typically <code>2..=36</code>).",165,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",166,null],[13,"Invalid","","",166,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",167,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",127,[[]]],[10,"max_value","","returns the largest finite number this type can represent",127,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",133,[[]]],[10,"infinity","","Returns the infinite value.",133,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",133,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",133,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",133,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",133,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",133,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",133,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",133,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",133,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",133,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",133,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",133,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",133,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",133,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",133,[[]]],[10,"trunc","","Return the integer part of a number.",133,[[]]],[10,"fract","","Returns the fractional part of a number.",133,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",133,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",133,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",133,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",133,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",133,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",133,[[]]],[10,"powi","","Raise a number to an integer power.",133,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",133,[[]]],[10,"sqrt","","Take the square root of a number.",133,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",133,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",133,[[]]],[10,"ln","","Returns the natural logarithm of the number.",133,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",133,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",133,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",133,[[]]],[11,"to_degrees","","Converts radians to degrees.",133,[[]]],[11,"to_radians","","Converts degrees to radians.",133,[[]]],[10,"max","","Returns the maximum of the two numbers.",133,[[]]],[10,"min","","Returns the minimum of the two numbers.",133,[[]]],[10,"abs_sub","","The positive difference of two numbers.",133,[[]]],[10,"cbrt","","Take the cubic root of a number.",133,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",133,[[]]],[10,"sin","","Computes the sine of a number (in radians).",133,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",133,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",133,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",133,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",133,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",133,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",133,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",133,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",133,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",133,[[]]],[10,"sinh","","Hyperbolic sine function.",133,[[]]],[10,"cosh","","Hyperbolic cosine function.",133,[[]]],[10,"tanh","","Hyperbolic tangent function.",133,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",133,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",133,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",133,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",133,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",134,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",134,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",134,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",134,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",134,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",134,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",134,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",134,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",134,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",134,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",134,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",134,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",134,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",134,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",134,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",134,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",134,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",134,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",134,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",131,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",129,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",129,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",129,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",129,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",129,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",129,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",129,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",129,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",129,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",129,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",129,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",129,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",129,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",129,[[["f64",15]],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",130,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",128,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",128,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",128,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",128,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",128,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",128,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",128,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",128,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",128,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",128,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",128,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",128,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",128,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",128,[[],[["f64",15],["option",4]]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",136,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",136,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",136,[[],["bool",15]]],[8,"Zero","","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",135,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",135,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",135,[[],["bool",15]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",137,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",137,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",137,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",137,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",137,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",137,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",137,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",137,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",137,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",137,[[["u32",15]]]],[8,"CheckedAdd","","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",138,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",141,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",140,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",143,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",142,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",144,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",145,[[["u32",15]],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",139,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",146,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",146,[[]]],[8,"MulAdd","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",147,null],[10,"mul_add","","Performs the fused multiply-add operation.",147,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",148,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",152,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",152,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",153,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",155,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",154,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",156,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",158,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",159,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",160,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",161,[[["u32",15]]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",157,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",162,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",162,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",164,[[]]],[10,"abs_sub","","The positive difference of two numbers.",164,[[]]],[10,"signum","","Returns the sign of the number.",164,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",164,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",164,[[],["bool",15]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[14,"define_pubsub_test_suite","pliantdb::local::core","Expands into a suite of pubsub unit tests using the …",null,null],[3,"Message","pliantdb::local::core::circulate","A <code>PubSub</code> message.",null,null],[12,"topic","","The topic of the message.",168,null],[12,"payload","","The payload of the message.",168,null],[3,"Relay","","Manages subscriptions and notifications for <code>PubSub</code>.",null,null],[3,"Subscriber","","A subscriber for [<code>Message</code>]s published to subscribed …",null,null],[0,"select","pliantdb::local::core::circulate::flume","Types that permit waiting upon multiple blocking …",null,null],[4,"SelectError","pliantdb::local::core::circulate::flume::select","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",169,null],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[0,"async","pliantdb::local::core::circulate::flume","Futures and other types that allow asynchronous …",null,null],[3,"SendFut","pliantdb::local::core::circulate::flume::async","A future that sends a value into a channel.",null,null],[3,"SendSink","","A sink that allows sending values into a channel.",null,null],[3,"RecvFut","","A future which allows asynchronously receiving a message.",null,null],[3,"RecvStream","","A stream which allows asynchronously receiving messages.",null,null],[3,"SendError","pliantdb::local::core::circulate::flume","An error that may be emitted when attempting to send a …",null,null],[12,"0","","",170,null],[4,"TrySendError","","An error that may be emitted when attempting to send a …",null,null],[13,"Full","","",171,null],[13,"Disconnected","","",171,null],[4,"SendTimeoutError","","An error that may be emitted when sending a value into a …",null,null],[13,"Timeout","","",172,null],[13,"Disconnected","","",172,null],[4,"RecvError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Disconnected","","",173,null],[4,"TryRecvError","","An error that may be emitted when attempting to fetch a …",null,null],[13,"Empty","","",174,null],[13,"Disconnected","","",174,null],[4,"RecvTimeoutError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",175,null],[13,"Disconnected","","",175,null],[3,"Sender","","A transmitting end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel.",null,null],[3,"Iter","","An iterator over the msgs received from a channel.",null,null],[3,"TryIter","","An non-blocking iterator over the msgs received from a …",null,null],[3,"Drain","","An fixed-sized iterator over the msgs drained from a …",null,null],[3,"IntoIter","","An owned iterator over the msgs received from a channel.",null,null],[5,"unbounded","","Create a channel with no maximum capacity.",null,[[]]],[5,"bounded","","Create a channel with a maximum capacity.",null,[[["usize",15]]]],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[14,"define_connection_test_suite","pliantdb::local::core","Creates a test suite that tests methods available on […",null,null],[14,"define_kv_test_suite","","Defines the Kv test suite",null,null],[3,"Subscriber","pliantdb::local","A subscriber for <code>PubSub</code> messages.",null,null],[3,"Database","","A local, file-based database.",null,null],[4,"Error","","Errors that can occur from interacting with storage.",null,null],[13,"Sled","","An error occurred interacting with <code>sled</code>.",183,null],[13,"InternalSerialization","","An error occurred serializing the underlying database …",183,null],[13,"Serialization","","An error occurred serializing the contents of a <code>Document</code> …",183,null],[13,"InternalCommunication","","An internal error occurred while waiting for a message.",183,null],[13,"View","","An error occurred while executing a view",183,null],[13,"Core","","An core error occurred.",183,null],[13,"Other","","An unexpected error occurred.",183,null],[3,"Storage","","A file-based, multi-database, multi-user database engine.",null,null],[0,"cli","pliantdb::server","Command-line interface for the server.",null,null],[0,"certificate","pliantdb::server::cli","Command-line interface for managing the root certificate.",null,null],[4,"Command","pliantdb::server::cli::certificate","Command to manage the server\'s certificates.",null,null],[13,"InstallSelfSigned","","Installs a self-signed certificate into the server. The …",184,null],[12,"server_name","pliantdb::server::cli::certificate::Command","The name of the server. If this server has a DNS name, …",185,null],[12,"overwrite","","If an existing certificate exists, an error will be …",185,null],[13,"Install","pliantdb::server::cli::certificate","Installs a X.509 certificate and associated private key …",184,null],[12,"private_key","pliantdb::server::cli::certificate::Command","A private key used to generate <code>certificate</code> in binary DER …",186,null],[12,"certificate","","The X.509 certificate in binary DER format.",186,null],[0,"serve","pliantdb::server::cli","Command-line interface for hosting a server.",null,null],[3,"Serve","pliantdb::server::cli::serve","Execute the server",null,null],[12,"listen_on","","The bind address and port. Defaults to 5645",187,null],[3,"Cli","pliantdb::server::cli","Command-line interface for <code>pliantdb server</code>.",null,null],[12,"server_data_directory","","The path to the directory where the server should store …",188,null],[12,"subcommand","","The command to execute.",188,null],[4,"Command","","Available commands for <code>pliantdb server</code>.",null,null],[13,"Certificate","","Manage the server\'s root certificate.",189,null],[13,"Serve","","Execute the server.",189,null],[0,"test_util","pliantdb::server","",null,null],[17,"BASIC_SERVER_NAME","pliantdb::server::test_util","",null,null],[5,"initialize_basic_server","","",null,[[["path",3]]]],[3,"Configuration","pliantdb::server","Configuration options for <code>Server</code>",null,null],[12,"request_workers","","Number of simultaneous requests to be processed. Default …",190,null],[12,"storage","","Configuration options for individual databases.",190,null],[12,"default_permissions","","The permissions granted to all connections to this server.",190,null],[4,"Error","","An error occurred while interacting with a <code>Server</code>.",null,null],[13,"Transport","","An error occurred from the QUIC transport layer.",191,null],[13,"Websocket","","An error occurred from the Websocket transport layer.",191,null],[13,"Io","","An error occurred from IO",191,null],[13,"Request","","An error occurred while processing a request",191,null],[13,"Core","","An error occurred from within the schema.",191,null],[13,"Database","","An error occurred while interacting with a local database.",191,null],[3,"Server","","A <code>PliantDb</code> server.",null,null],[0,"config","pliantdb::server::local","Configuration options.",null,null],[3,"Configuration","pliantdb::server::local::config","Configuration options for <code>Storage</code>.",null,null],[12,"workers","","Configuration options related to background tasks.",176,null],[12,"views","","Configuration options related to views.",176,null],[3,"Tasks","","Configujration options for background tasks.",null,null],[12,"worker_count","","Defines how many workers should be spawned to process …",177,null],[3,"Views","","Configuration options for views.",null,null],[12,"check_integrity_on_open","","If true, the database will scan all views during the call …",178,null],[0,"backup","pliantdb::server::local","Local database tool to save and load databases into plain …",null,null],[3,"Cli","pliantdb::server::local::backup","The command line interface for <code>pliantdb local-backup</code>.",null,null],[12,"database_path","","The path to the database you wish to operate on.",179,null],[12,"subcommand","","The command to execute on the database.",179,null],[4,"Command","","The command to execute.",null,null],[13,"Save","","Exports all of the data into a straightforward file …",180,null],[12,"output_directory","pliantdb::server::local::backup::Command","The directory to export the data within. The process will …",181,null],[12,"output_name","","The name of the folder to export the data to. If not …",181,null],[13,"Load","pliantdb::server::local::backup","Loads all of the data from a previously saved backup. Any …",180,null],[12,"backup","pliantdb::server::local::backup::Command","The path to the previously saved backup.",182,null],[0,"permissions","pliantdb::server::local::core","Types for creating and validating permissions.",null,null],[0,"group","pliantdb::server::local::core::permissions","Schema types for permission groups.",null,null],[3,"PermissionGroup","pliantdb::server::local::core::permissions::group","A named group of permissions statements.",null,null],[12,"name","","The name of the group. Must be unique.",8,null],[12,"statements","","The permission statements.",8,null],[3,"ByName","","A unique view of permission groups by name.",null,null],[0,"pliant","pliantdb::server::local::core::permissions","Types used for granting permissions within <code>PliantDb</code>.",null,null],[5,"pliantdb_resource_name","pliantdb::server::local::core::permissions::pliant","Creates a resource name with the database <code>name</code>.",null,[[],["resourcename",3]]],[5,"database_resource_name","","Creates a resource name with the database <code>name</code>.",null,[[["str",15]],["resourcename",3]]],[5,"collection_resource_name","","Creates a resource name for a <code>collection</code> within a <code>database</code>…",null,[[["str",15],["collectionname",3]],["resourcename",3]]],[5,"document_resource_name","","Creates a resource name for a document <code>id</code> within …",null,[[["str",15],["u64",15],["collectionname",3]],["resourcename",3]]],[5,"view_resource_name","","Creaets a resource name for a <code>view</code> within <code>database</code>.",null,[[["str",15],["viewname",3]],["resourcename",3]]],[5,"pubsub_topic_resource_name","","Creates a resource name for <code>PubSub</code> <code>topic</code> within <code>database</code>.",null,[[["str",15]],["resourcename",3]]],[5,"kv_key_resource_name","","Creates a resource name for <code>key</code> within <code>namespace</code> within …",null,[[["str",15],["option",4]],["resourcename",3]]],[4,"PliantAction","","Actions that can be permitted within <code>PliantDb</code>.",null,null],[13,"Server","","Actions that operate on a server",9,null],[13,"Database","","Actions that operate on a specific database.",9,null],[4,"ServerAction","","Actions that operate on a server.",null,null],[13,"Connect","","Permits connecting to the server. Upon negotiating …",10,null],[13,"ListAvailableSchemas","","Permits <code>ServerConnection::list_available_schemas</code>.",10,null],[13,"ListDatabases","","Permits <code>ServerConnection::list_databases</code>.",10,null],[13,"CreateDatabase","","Permits <code>ServerConnection::create_database</code>.",10,null],[13,"DeleteDatabase","","Permits <code>ServerConnection::delete_database</code>.",10,null],[4,"DatabaseAction","","Actions that operate on a specific database.",null,null],[13,"Document","","Actions that operate on a document.",11,null],[13,"View","","Actions that operate on a view.",11,null],[13,"Transaction","","Actions that operate on transactions.",11,null],[13,"PubSub","","Actions that operate on the <code>PubSub</code> system.",11,null],[13,"Kv","","Actions that operate on the key-value store.",11,null],[4,"DocumentAction","","Actions that operate on a document.",null,null],[13,"Get","","Allows document retrieval through <code>Connection::get()</code> and …",12,null],[13,"Insert","","Allows inserting a document through …",12,null],[13,"Update","","Allows updating a document through …",12,null],[13,"Delete","","Allows deleting a document through …",12,null],[4,"ViewAction","","Actions that operate on a view.",null,null],[13,"Query","","Allows querying a view with <code>Connection::query()</code>. See […",13,null],[13,"Reduce","","Allows reducing a view with <code>Connection::reduce()</code>. See […",13,null],[4,"TransactionAction","","Actions that operate on transactions.",null,null],[13,"ListExecuted","","Allows listing executed transactions with …",14,null],[13,"GetLastId","","Allows retrieving the last executed transaction id with …",14,null],[4,"PubSubAction","","Actions that operate on the <code>PubSub</code> system.",null,null],[13,"CreateSuscriber","","Allows creating a subscriber with …",15,null],[13,"Publish","","Allows publishing a payload to a <code>PubSub</code> topic with …",15,null],[13,"SubscribeTo","","Allows subscribing to a <code>PubSub</code> topic with …",15,null],[13,"UnsubscribeFrom","","Allows unsubscribing from a <code>PubSub</code> topic with …",15,null],[4,"KvAction","","Actions that operate on the key-value store.",null,null],[13,"ExecuteOperation","","Allows executing a key-value store operation with …",16,null],[0,"role","pliantdb::server::local::core::permissions","Schema types for roles.",null,null],[3,"Role","pliantdb::server::local::core::permissions::role","An assignable role, which grants permissions based on the …",null,null],[12,"name","","The name of the role. Must be unique.",17,null],[12,"groups","","The IDs of the permission groups this role belongs to.",17,null],[3,"ByName","","A unique view of roles by name.",null,null],[8,"Action","pliantdb::server::local::core::permissions","An action that can be allowed or disallowed.",null,null],[10,"name","","The full name of this action.",18,[[],["actionname",3]]],[24,"Action","","Derives the <code>actionable::Action</code> trait.",null,null],[3,"ActionName","","A unique name of an action.",null,null],[12,"0","","",19,null],[4,"ActionNameList","","A list of [<code>ActionName</code>]s.",null,null],[13,"List","","A specific list of names.",20,null],[13,"All","","All actions.",20,null],[24,"Actionable","","Derives a set of traits that can be used to implement a …",null,null],[8,"Dispatcher","","Dispatches <code>T</code> to an appropriate handler. This trait is …",null,null],[16,"Result","","The type of the result.",21,null],[10,"dispatch","","Dispatches <code>request</code> to the appropriate handler while also …",21,[[["permissions",3]],[["box",3],["pin",3]]]],[24,"Dispatcher","","Derives the <code>Dispatcher</code> trait.",null,null],[4,"Identifier","","A single element of a [<code>ResourceName</code>]",null,null],[13,"Any","","When checking for allowed permissions, allow any match …",22,null],[13,"Integer","","An integer identifier.",22,null],[13,"String","","A string identifier.",22,null],[3,"PermissionDenied","","An <code>action</code> was denied.",null,null],[12,"resource","","The resource that <code>action</code> was attempted upon.",23,null],[12,"action","","The <code>action</code> attempted upon <code>resource</code>.",23,null],[3,"Permissions","","A collection of allowed permissions. This is constructed …",null,null],[3,"ResourceName","","A unique name/identifier of a resource.",null,null],[3,"Statement","","A statement of permissions. A statement describes whether …",null,null],[12,"resources","","The list of resources this statement applies to.",24,null],[12,"actions","","The list of actions this statement applies to.",24,null],[12,"allowed","","Whether the <code>actions</code> should be allowed or disallowed.",24,null],[3,"PermissionGroup","","A named group of permissions statements.",null,null],[12,"name","","The name of the group. Must be unique.",8,null],[12,"statements","","The permission statements.",8,null],[3,"Role","","An assignable role, which grants permissions based on the …",null,null],[12,"name","","The name of the role. Must be unique.",17,null],[12,"groups","","The IDs of the permission groups this role belongs to.",17,null],[0,"connection","pliantdb::server::local::core","Types for interacting with <code>PliantDb</code>.",null,null],[8,"Connection","pliantdb::server::local::core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",25,[[],["collection",3]]],[11,"insert","","Inserts a newly created document into the connected […",25,[[["u8",15],["global",3],["vec",3]],[["pin",3],["box",3]]]],[11,"update","","Updates an existing document in the connected […",25,[[["document",3]],[["box",3],["pin",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",25,[[["u64",15]],[["box",3],["pin",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",25,[[],[["pin",3],["box",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",25,[[["document",3]],[["box",3],["pin",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",25,[[],["view",3]]],[10,"query","","Queries for view entries matching [<code>View</code>].",25,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",25,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",25,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",25,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",25,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",25,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",25,[[],[["box",3],["pin",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",26,null],[12,"access_policy","","The view\'s data access policy. The default value is […",26,null],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",27,null],[13,"Range","","Matches all entires with keys in the range provided.",27,null],[13,"Multiple","","Matches all entries that have keys that are included in …",27,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",28,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",28,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",28,null],[8,"ServerConnection","","Functions for interacting with a multi-database <code>PliantDb</code> …",null,null],[11,"create_database","","Creates a database named <code>name</code> with the <code>Schema</code> provided.",29,[[["str",15]],[["box",3],["pin",3]]]],[10,"create_database_with_schema","","Creates a database named <code>name</code> using the [<code>SchemaName</code>] …",29,[[["schemaname",3],["str",15]],[["box",3],["pin",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",29,[[["str",15]],[["box",3],["pin",3]]]],[10,"list_databases","","Lists the databases on this server.",29,[[],[["pin",3],["box",3]]]],[10,"list_available_schemas","","Lists the [<code>SchemaName</code>]s on this server.",29,[[],[["box",3],["pin",3]]]],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",30,null],[12,"schema","","The schema defining the database.",30,null],[0,"document","pliantdb::server::local::core","Types for interacting with <code>Document</code>s.",null,null],[3,"Header","pliantdb::server::local::core::document","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",31,null],[12,"revision","","The revision of the stored document.",31,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",32,null],[12,"header","","The header of the document, which contains the id and …",32,null],[12,"contents","","The serialized bytes of the stored item.",32,null],[3,"Revision","","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",33,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",33,null],[0,"limits","pliantdb::server::local::core","Limits used within <code>PliantDb</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb::server::local::core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"schema","pliantdb::server::local::core","Types for defining database schema.",null,null],[0,"view","pliantdb::server::local::core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb::server::local::core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb::server::local::core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",34,null],[12,"key","","The key used to index the View.",34,null],[12,"value","","An associated value stored in the view.",34,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",35,null],[12,"key","","The key used to index the View.",35,null],[12,"value","","An associated value stored in the view.",35,null],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",36,null],[12,"key","","The key used to index the View.",36,null],[12,"value","","An associated value stored in the view.",36,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",37,null],[12,"value","","The value generated by the <code>View</code>",37,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",38,[[],[["result",4],["cow",4],["error",3]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",38,[[],[["error",3],["result",4]]]],[8,"EnumKey","","Adds <code>Key</code> support to an enum. Requires implementing …",null,null],[4,"Error","pliantdb::server::local::core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",39,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",39,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",39,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",40,null],[16,"Key","","The key for this view.",40,null],[16,"Value","","An associated type that can be stored with each entry in …",40,null],[11,"unique","","If true, no two documents may emit the same key. Unique …",40,[[],["bool",15]]],[10,"version","","The version of the view. Changing this value will cause …",40,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",40,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"view_name","","The namespaced name of the view.",40,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[10,"map","","The map function for this view. This function is …",40,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",40,[[["bool",15]],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",41,null],[13,"Borrowed","","a borrowed value",41,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",42,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[10,"unique","","Wraps [<code>View::unique</code>]",42,[[],["bool",15]]],[10,"version","","Wraps [<code>View::version</code>]",42,[[],["u64",15]]],[10,"view_name","","Wraps [<code>View::view_name</code>]",42,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[10,"map","","Wraps [<code>View::map</code>]",42,[[["document",3]],[["error",4],["result",4],["option",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",42,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[8,"Schema","pliantdb::server::local::core::schema","Defines a group of collections that are stored into a …",null,null],[10,"schema_name","","Returns the unique [<code>SchemaName</code>] for this schema.",43,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",43,[[["schematic",3]],[["result",4],["error",4]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",43,[[],[["schematic",3],["error",4],["result",4]]]],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_name","","The <code>Id</code> of this collection.",44,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",44,[[["schematic",3]],[["result",4],["error",4]]]],[3,"Authority","","The owner of a schema item. This should represent the …",null,null],[3,"CollectionName","","The name of a <code>Collection</code>.",null,null],[12,"authority","","The authority of this collection.",45,null],[12,"name","","The name of this collection.",45,null],[3,"InvalidNameError","","An invalid name was used in a schema definition.",null,null],[12,"0","","",46,null],[3,"Name","","A valid schema name. Must be alphanumeric (<code>a-zA-Z9-0</code>) or …",null,null],[3,"SchemaName","","The name of a <code>Schema</code>.",null,null],[12,"authority","","The authority of this schema.",47,null],[12,"name","","The name of this schema.",47,null],[3,"ViewName","","The name of a <code>View</code>.",null,null],[12,"collection","","The name of the collection that contains this view.",48,null],[12,"name","","The name of this view.",48,null],[3,"Schematic","","A collection of defined collections and views.",null,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",38,[[],[["result",4],["cow",4],["error",3]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",38,[[],[["error",3],["result",4]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",34,null],[12,"key","","The key used to index the View.",34,null],[12,"value","","An associated value stored in the view.",34,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",35,null],[12,"key","","The key used to index the View.",35,null],[12,"value","","An associated value stored in the view.",35,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",37,null],[12,"value","","The value generated by the <code>View</code>",37,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",40,null],[16,"Key","","The key for this view.",40,null],[16,"Value","","An associated type that can be stored with each entry in …",40,null],[11,"unique","","If true, no two documents may emit the same key. Unique …",40,[[],["bool",15]]],[10,"version","","The version of the view. Changing this value will cause …",40,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",40,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"view_name","","The namespaced name of the view.",40,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[10,"map","","The map function for this view. This function is …",40,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",40,[[["bool",15]],[["result",4],["error",4]]]],[0,"transaction","pliantdb::server::local::core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb::server::local::core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",49,null],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",50,null],[12,"command","","The command being performed.",50,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",51,null],[12,"contents","pliantdb::server::local::core::transaction::Command","The initial contents of the document.",52,null],[13,"Update","pliantdb::server::local::core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",51,null],[12,"header","pliantdb::server::local::core::transaction::Command","The current header of the <code>Document</code>.",53,null],[12,"contents","","The new contents to store within the <code>Document</code>.",53,null],[13,"Delete","pliantdb::server::local::core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",51,null],[12,"header","pliantdb::server::local::core::transaction::Command","The current header of the <code>Document</code>.",54,null],[4,"OperationResult","pliantdb::server::local::core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",55,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",55,null],[12,"collection","pliantdb::server::local::core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",56,null],[12,"header","","The header of the updated <code>Document</code>.",56,null],[13,"DocumentDeleted","pliantdb::server::local::core::transaction","A <code>Document</code> was deleted.",55,null],[12,"collection","pliantdb::server::local::core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",57,null],[12,"id","","The id of the deleted <code>Document</code>.",57,null],[3,"Executed","pliantdb::server::local::core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",58,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",58,null],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",59,null],[12,"id","","The id of the changed <code>Document</code>.",59,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",59,null],[0,"kv","pliantdb::server::local::core","Types for utilizing a lightweight atomic Key-Value store.",null,null],[4,"KeyCheck","pliantdb::server::local::core::kv","Checks for existing keys.",null,null],[13,"OnlyIfPresent","","Only allow the operation if an existing key is present.",60,null],[13,"OnlyIfVacant","","Only allow the opeartion if the key isn\'t present.",60,null],[3,"KeyOperation","","An operation performed on a key.",null,null],[12,"namespace","","The namespace for the key.",61,null],[12,"key","","The key to operate on.",61,null],[12,"command","","The command to execute.",61,null],[4,"Command","","Commands for a key-value store.",null,null],[13,"Set","","Set a key/value pair.",62,null],[12,"value","pliantdb::server::local::core::kv::Command","The value.",63,null],[12,"expiration","","If set, the key will be set to expire automatically.",63,null],[12,"keep_existing_expiration","","If true and the key already exists, the expiration will …",63,null],[12,"check","","Conditional checks for whether the key is already present …",63,null],[12,"return_previous_value","","If true and the key already exists, the existing key will …",63,null],[13,"Get","pliantdb::server::local::core::kv","Get the value from a key.",62,null],[12,"delete","pliantdb::server::local::core::kv::Command","Remove the key after retrieving the value.",64,null],[13,"Delete","pliantdb::server::local::core::kv","Delete a key.",62,null],[4,"Output","","The result of a [<code>KeyOperation</code>].",null,null],[13,"Status","","A status was returned.",65,null],[13,"Value","","A value was returned.",65,null],[4,"KeyStatus","","The status of an operation on a Key.",null,null],[13,"Inserted","","A new key was inserted.",66,null],[13,"Updated","","An existing key was updated with a new value.",66,null],[13,"Deleted","","A key was deleted.",66,null],[13,"NotChanged","","No changes were made.",66,null],[3,"Timestamp","","A timestamp relative to [<code>UNIX_EPOCH</code>].",null,null],[12,"seconds","","The number of whole seconds since [<code>UNIX_EPOCH</code>].",67,null],[12,"nanos","","The number of nanoseconds in the timestamp.",67,null],[0,"get","","Types for executing get operations.",null,null],[3,"Builder","pliantdb::server::local::core::kv::get","Executes [<code>Command::Get</code>] when awaited. Also offers methods …",null,null],[0,"namespaced","pliantdb::server::local::core::kv","Types for handling key namespaces.",null,null],[3,"Namespaced","pliantdb::server::local::core::kv::namespaced","A namespaced key-value store. All operations performed …",null,null],[0,"set","pliantdb::server::local::core::kv","Types for executing set operations.",null,null],[3,"Builder","pliantdb::server::local::core::kv::set","Executes [<code>Command::Set</code>] when awaited. Also offers methods …",null,null],[8,"Kv","pliantdb::server::local::core::kv","Key-Value store methods. The Key-Value store is designed …",null,null],[10,"execute_key_operation","","Executes a single [<code>KeyOperation</code>].",68,[[["keyoperation",3]],[["pin",3],["box",3]]]],[11,"set_key","","Sets <code>key</code> to <code>value</code>. This function returns a builder that …",68,[[],["builder",3]]],[11,"get_key","","Gets the value stored at <code>key</code>. This function returns a …",68,[[],["builder",3]]],[11,"delete_key","","Deletes the value stored at <code>key</code>.",68,[[],[["box",3],["pin",3]]]],[11,"key_namespace","","The current namespace.",68,[[],[["str",15],["option",4]]]],[11,"with_key_namespace","","Access this Key-Value store within a namespace. When …",68,[[["str",15]],["namespaced",3]]],[0,"networking","pliantdb::server::local::core","Types for implementing the <code>PliantDb</code> network protocol.",null,null],[3,"Payload","pliantdb::server::local::core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",69,null],[12,"wrapped","","The wrapped payload.",69,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",70,null],[13,"Database","","A database-related request.",70,null],[12,"database","pliantdb::server::local::core::networking::Request","The name of the database.",71,null],[12,"request","","The request made to the database.",71,null],[4,"ServerRequest","pliantdb::server::local::core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",72,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",72,null],[12,"name","pliantdb::server::local::core::networking::ServerRequest","The name of the database to delete.",73,null],[13,"ListDatabases","pliantdb::server::local::core::networking","Lists all databases.",72,null],[13,"ListAvailableSchemas","","Lists available schemas.",72,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",74,null],[12,"collection","pliantdb::server::local::core::networking::DatabaseRequest","The collection of the document.",75,null],[12,"id","","The id of the document.",75,null],[13,"GetMultiple","pliantdb::server::local::core::networking","Retrieve multiple documents.",74,null],[12,"collection","pliantdb::server::local::core::networking::DatabaseRequest","The collection of the documents.",76,null],[12,"ids","","The ids of the documents.",76,null],[13,"Query","pliantdb::server::local::core::networking","Queries a view.",74,null],[12,"view","pliantdb::server::local::core::networking::DatabaseRequest","The name of the view.",77,null],[12,"key","","The filter for the view.",77,null],[12,"access_policy","","The access policy for the query.",77,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",77,null],[13,"Reduce","pliantdb::server::local::core::networking","Reduces a view.",74,null],[12,"view","pliantdb::server::local::core::networking::DatabaseRequest","The name of the view.",78,null],[12,"key","","The filter for the view.",78,null],[12,"access_policy","","The access policy for the query.",78,null],[12,"grouped","","Whether to return a single value or values grouped by …",78,null],[13,"ApplyTransaction","pliantdb::server::local::core::networking","Applies a transaction.",74,null],[12,"transaction","pliantdb::server::local::core::networking::DatabaseRequest","The trasnaction to apply.",79,null],[13,"ListExecutedTransactions","pliantdb::server::local::core::networking","Lists executed transactions.",74,null],[12,"starting_id","pliantdb::server::local::core::networking::DatabaseRequest","The starting transaction id.",80,null],[12,"result_limit","","The maximum number of results.",80,null],[13,"LastTransactionId","pliantdb::server::local::core::networking","Queries the last transaction id.",74,null],[13,"CreateSubscriber","","Creates a <code>PubSub</code> <code>Subscriber</code>",74,null],[13,"Publish","","Publishes <code>payload</code> to all subscribers of <code>topic</code>.",74,null],[12,"topic","pliantdb::server::local::core::networking::DatabaseRequest","The topics to publish to.",81,null],[12,"payload","","The payload to publish.",81,null],[13,"PublishToAll","pliantdb::server::local::core::networking","Publishes <code>payload</code> to all subscribers of all <code>topics</code>.",74,null],[12,"topics","pliantdb::server::local::core::networking::DatabaseRequest","The topics to publish to.",82,null],[12,"payload","","The payload to publish.",82,null],[13,"SubscribeTo","pliantdb::server::local::core::networking","Subscribes <code>subscriber_id</code> to messages for <code>topic</code>.",74,null],[12,"subscriber_id","pliantdb::server::local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",83,null],[12,"topic","","The topic to subscribe to.",83,null],[13,"UnsubscribeFrom","pliantdb::server::local::core::networking","Unsubscribes <code>subscriber_id</code> from messages for <code>topic</code>.",74,null],[12,"subscriber_id","pliantdb::server::local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",84,null],[12,"topic","","The topic to unsubscribe from.",84,null],[13,"UnregisterSubscriber","pliantdb::server::local::core::networking","Unregisters the subscriber.",74,null],[12,"subscriber_id","pliantdb::server::local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",85,null],[13,"ExecuteKeyOperation","pliantdb::server::local::core::networking","Excutes a key-value store operation.",74,null],[4,"Response","","A response from a server.",null,null],[13,"Ok","","A request succeded but provided no output.",86,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",86,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",86,null],[13,"Error","","An error occurred processing a request.",86,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",87,null],[12,"name","pliantdb::server::local::core::networking::ServerResponse","The name of the database to create.",88,null],[13,"DatabaseDeleted","pliantdb::server::local::core::networking","A database with <code>name</code> was successfully removed.",87,null],[12,"name","pliantdb::server::local::core::networking::ServerResponse","The name of the database to remove.",89,null],[13,"Databases","pliantdb::server::local::core::networking","A list of available databases.",87,null],[13,"AvailableSchemas","","A list of availble schemas.",87,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",90,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",90,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",90,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",90,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",90,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",90,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",90,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",90,null],[13,"SubscriberCreated","","A new <code>PubSub</code> subscriber was created.",90,null],[12,"subscriber_id","pliantdb::server::local::core::networking::DatabaseResponse","The unique ID of the subscriber.",91,null],[13,"MessageReceived","pliantdb::server::local::core::networking","A PubSub message was received.",90,null],[12,"subscriber_id","pliantdb::server::local::core::networking::DatabaseResponse","The ID of the subscriber receiving the message.",92,null],[12,"topic","","The topic the payload was received on.",92,null],[12,"payload","","The message payload.",92,null],[13,"KvOutput","pliantdb::server::local::core::networking","Output from a [<code>KeyOperation</code>] being executed.",90,null],[3,"MappedDocument","","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",93,null],[12,"value","","The serialized value.",93,null],[12,"source","","The source document.",93,null],[4,"Error","","A networking error.",null,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",94,null],[13,"Disconnected","","The connection was interrupted.",94,null],[0,"dangerous","pliantdb::server::local::core::networking::fabruic","Security-sensitive settings are hidden behind these …",null,null],[8,"Builder","pliantdb::server::local::core::networking::fabruic::dangerous","Security-sensitive configuration for [<code>Builder</code>].",null,null],[10,"set_root_certificates","","Set [<code>Certificate</code>]s to be added into the root certificate …",95,[[]]],[8,"PrivateKey","","Gives read access to the [<code>PrivateKey</code>].",null,null],[10,"as_ref","","Returns a <code>&[u8]</code> to the [<code>PrivateKey</code>].",96,[[]]],[10,"into","","Returns a [<code>Vec<u8></code>] to the [<code>PrivateKey</code>].",96,[[],[["global",3],["vec",3],["u8",15]]]],[10,"serialize","","Serialize with [<code>serde</code>].",96,[[],["result",4]]],[8,"KeyPair","","Gives serialization access to [<code>KeyPair</code>].",null,null],[10,"serialize","","Serialize with [<code>serde</code>].",97,[[],["result",4]]],[0,"error","pliantdb::server::local::core::networking::fabruic","<code>Error</code> for this [<code>crate</code>].",null,null],[3,"Certificate","pliantdb::server::local::core::networking::fabruic::error","Error constructing <code>Certificate</code> with <code>Certificate::from_der</code>.",null,null],[12,"error","","The error.",98,null],[12,"certificate","","The bytes used to build the <code>Certificate</code>.",98,null],[4,"CertificateError","","Error constructing <code>Certificate</code> with <code>Certificate::from_der</code>.",null,null],[13,"WebPki","","<code>Error</code> returned by [<code>webpki</code>].",99,null],[13,"X509","","<code>Error</code> returned by [<code>x509_parser</code>].",99,null],[13,"Dangling","","Bytes passed contain uncorrelated bytes.",99,null],[13,"Expired","","<code>Certificate</code> has expired.",99,null],[13,"Domain","","<code>Certificate</code> is missing a domain name.",99,null],[3,"PrivateKey","","Failed to parse the given private key with …",null,null],[12,"0","","",100,null],[3,"KeyPair","","Failed to pair given <code>CertificateChain</code> and <code>PrivateKey</code> with …",null,null],[3,"CertificateChain","","Failed to verify the certificate chain with …",null,null],[3,"AlreadyClosed","","Attempting to close something that is already closed.",null,null],[3,"Builder","","Error binding socket during construction of <code>Endpoint</code> with …",null,null],[12,"error","","The error binding <code>Endpoint</code>.",101,null],[12,"builder","","Recovered <code>Builder</code> for re-use.",101,null],[4,"Connect","","Error connecting to a server with <code>Endpoint::connect</code>.",null,null],[13,"MultipleDomains","","The passed <code>Certificate</code> has multiple domains, this is not …",102,null],[13,"ParseUrl","","Failed to parse URL.",102,null],[13,"Domain","","URL didn\'t contain a domain.",102,null],[13,"Port","","URL didn\'t contain a port.",102,null],[13,"ParseDomain","","Failed to parse domain.",102,null],[13,"TrustDns","","Failed to resolve domain with <code>trust-dns</code>.",102,null],[13,"StdDns","","Failed to resolve domain with <code>ToSocketAddrs</code>.",102,null],[13,"NoIp","","Found no IP address for that domain.",102,null],[13,"Config","","Configuration needed to connect to a server is faulty.",102,null],[3,"Connection","","Error receiving connection from peer with <code>Stream</code> on from …",null,null],[12,"0","","",103,null],[3,"Connecting","","Error completing connection with peer with <code>Incoming::type</code> …",null,null],[12,"0","","",104,null],[4,"Stream","","Error opening a new stream to peer with …",null,null],[13,"Open","","Opening a new stream with <code>Connection::open_stream</code> failed.",105,null],[13,"Sender","","Sending the type information to peer failed.",105,null],[4,"Incoming","","Error receiving type information from <code>Incoming</code> stream.",null,null],[13,"Receiver","","Failed receiving type information from <code>Incoming</code> stream.",106,null],[13,"Closed","","<code>Incoming</code> was closed before type information could be …",106,null],[4,"Receiver","","Error receiving a message from a <code>Receiver</code>.",null,null],[13,"Read","","Failed to read from a <code>Receiver</code>.",107,null],[13,"Deserialize","","Failed to <code>Deserialize</code> a message from a <code>Receiver</code>.",107,null],[4,"Sender","","Error sending a message to a <code>Sender</code>.",null,null],[13,"Serialize","","Failed to <code>Serialize</code> a message for a <code>Sender</code>.",108,null],[13,"Write","","Failed to write to a <code>Sender</code>.",108,null],[13,"Closed","","[<code>Sender</code>] is closed.",108,null],[4,"ErrorKind","","The kind of error that can be produced during a …",null,null],[13,"Io","","If the error stems from the reader/writer that is being …",109,null],[13,"InvalidUtf8Encoding","","Returned if the deserializer attempts to deserialize a …",109,null],[13,"InvalidBoolEncoding","","Returned if the deserializer attempts to deserialize a …",109,null],[13,"InvalidCharEncoding","","Returned if the deserializer attempts to deserialize a …",109,null],[13,"InvalidTagEncoding","","Returned if the deserializer attempts to deserialize the …",109,null],[13,"DeserializeAnyNotSupported","","Serde has a deserialize_any method that lets the format …",109,null],[13,"SizeLimit","","If (de)serializing a message takes more than the provided …",109,null],[13,"SequenceMustHaveLength","","Bincode can not encode sequences of unknown length (like …",109,null],[13,"Custom","","A custom error message from Serde.",109,null],[4,"ConnectError","","Errors in the parameters being used to create a new …",null,null],[13,"EndpointStopping","","The endpoint can no longer create new connections",110,null],[13,"TooManyConnections","","The number of active connections on the local endpoint is …",110,null],[13,"InvalidDnsName","","The domain name supplied was malformed",110,null],[13,"Config","","The transport configuration was invalid",110,null],[13,"InvalidRemoteAddress","","The remote [<code>SocketAddr</code>] supplied was malformed",110,null],[4,"ConnectionError","","Reasons why a connection might be lost",null,null],[13,"VersionMismatch","","The peer doesn\'t implement any supported version",111,null],[13,"TransportError","","The peer violated the QUIC specification as understood by …",111,null],[13,"ConnectionClosed","","The peer\'s QUIC stack aborted the connection automatically",111,null],[13,"ApplicationClosed","","The peer closed the connection",111,null],[13,"Reset","","The peer is unable to continue processing this …",111,null],[13,"TimedOut","","Communication with the peer has lapsed for longer than …",111,null],[13,"LocallyClosed","","The local application closed the connection",111,null],[4,"ReadError","","Errors that arise from reading from a stream.",null,null],[13,"Reset","","The peer abandoned transmitting data on this stream.",112,null],[13,"ConnectionClosed","","The connection was closed.",112,null],[13,"UnknownStream","","The stream has already been stopped, finished, or reset",112,null],[13,"IllegalOrderedRead","","Attempted an ordered read following an unordered read",112,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",112,null],[4,"WriteError","","Errors that arise from writing to a stream",null,null],[13,"Stopped","","The peer is no longer accepting data on this stream.",113,null],[13,"ConnectionClosed","","The connection was closed.",113,null],[13,"UnknownStream","","The stream has already been finished or reset",113,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",113,null],[4,"Error","","An error that occurs during certificate validation or …",null,null],[13,"BadDER","","The encoding of some ASN.1 DER-encoded item is invalid.",114,null],[13,"BadDERTime","","The encoding of an ASN.1 DER-encoded time is invalid.",114,null],[13,"CAUsedAsEndEntity","","A CA certificate is veing used as an end-entity …",114,null],[13,"CertExpired","","The certificate is expired; i.e. the time it is being …",114,null],[13,"CertNotValidForName","","The certificate is not valid for the name it is being …",114,null],[13,"CertNotValidYet","","The certificate is not valid yet; i.e. the time it is …",114,null],[13,"EndEntityUsedAsCA","","An end-entity certificate is being used as a CA …",114,null],[13,"ExtensionValueInvalid","","An X.509 extension is invalid.",114,null],[13,"InvalidCertValidity","","The certificate validity period (notBefore, notAfter) is …",114,null],[13,"InvalidSignatureForPublicKey","","The signature is invalid for the given public key.",114,null],[13,"NameConstraintViolation","","The certificate violates one or more name constraints.",114,null],[13,"PathLenConstraintViolated","","The certificate violates one or more path length …",114,null],[13,"SignatureAlgorithmMismatch","","The algorithm in the TBSCertificate \\\"signature\\\" field of …",114,null],[13,"RequiredEKUNotFound","","The certificate is not valid for the Extended Key Usage …",114,null],[13,"UnknownIssuer","","A valid issuer for the certificate could not be found.",114,null],[13,"UnsupportedCertVersion","","The certificate is not a v3 X.509 certificate.",114,null],[13,"UnsupportedCriticalExtension","","The certificate contains an unsupported critical …",114,null],[13,"UnsupportedSignatureAlgorithmForPublicKey","","The signature\'s algorithm does not match the algorithm of …",114,null],[13,"UnsupportedSignatureAlgorithm","","The signature algorithm for a signature is not in the set …",114,null],[3,"ResolveError","","The error type for errors that get returned in the crate",null,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",4,null],[13,"IdnaError","","",4,null],[13,"InvalidPort","","",4,null],[13,"InvalidIpv4Address","","",4,null],[13,"InvalidIpv6Address","","",4,null],[13,"InvalidDomainCharacter","","",4,null],[13,"RelativeUrlWithoutBase","","",4,null],[13,"RelativeUrlWithCannotBeABaseBase","","",4,null],[13,"SetHostOnCannotBeABaseUrl","","",4,null],[13,"Overflow","","",4,null],[4,"X509Error","","An error that can occur while parsing or validating a …",null,null],[13,"Generic","","",115,null],[13,"InvalidVersion","","",115,null],[13,"InvalidSerial","","",115,null],[13,"InvalidAlgorithmIdentifier","","",115,null],[13,"InvalidX509Name","","",115,null],[13,"InvalidDate","","",115,null],[13,"InvalidSPKI","","",115,null],[13,"InvalidSubjectUID","","",115,null],[13,"InvalidIssuerUID","","",115,null],[13,"InvalidExtensions","","",115,null],[13,"InvalidAttributes","","",115,null],[13,"DuplicateExtensions","","",115,null],[13,"DuplicateAttributes","","",115,null],[13,"InvalidSignatureValue","","",115,null],[13,"InvalidTbsCertificate","","",115,null],[13,"InvalidUserCertificate","","",115,null],[13,"InvalidCertificate","","Top-level certificate structure is invalid",115,null],[13,"SignatureVerificationError","","",115,null],[13,"SignatureUnsupportedAlgorithm","","",115,null],[13,"Der","","",115,null],[13,"NomError","","",115,null],[4,"Err","","The <code>Err</code> enum indicates the parser was not successful",null,null],[13,"Incomplete","","There was not enough data",116,null],[13,"Error","","The parser had an error (recoverable)",116,null],[13,"Failure","","The parser had an unrecoverable error: we got to the right…",116,null],[3,"Builder","pliantdb::server::local::core::networking::fabruic","Helper for constructing an [<code>Endpoint</code>].",null,null],[3,"Connecting","","Represent\'s an intermediate state to build a [<code>Connection</code>].",null,null],[3,"Connection","","Represents an open connection. Receives [<code>Incoming</code>] …",null,null],[3,"Endpoint","","Represents a socket using the QUIC protocol to …",null,null],[3,"Incoming","","An intermediate state to define which type to accept in …",null,null],[3,"Receiver","","Used to receive data from a stream. Will stop receiving …",null,null],[3,"Sender","","Used to send data to a stream.",null,null],[4,"Store","","Configuration option for [<code>Builder::set_store</code>].",null,null],[13,"Empty","","Empty root certificate store.",117,null],[13,"Os","","Uses the OS root certificate store, see …",117,null],[13,"Embedded","","Use an embedded root certificate store, see <code>webpki-roots</code>.",117,null],[3,"Certificate","","A public certificate. You can distribute it freely to …",null,null],[3,"CertificateChain","","A public [<code>Certificate</code>] chain, used to prese",null,null],[3,"KeyPair","","A key-pair, consisting of a [<code>CertificateChain</code>] and […",null,null],[3,"PrivateKey","","A private key.",null,null],[0,"pubsub","pliantdb::server::local::core","Types for Publish/Subscribe (<code>PubSub</code>) messaging.",null,null],[8,"PubSub","pliantdb::server::local::core::pubsub","Publishes and Subscribes to messages on topics.",null,null],[16,"Subscriber","","The Subscriber type for this <code>PubSub</code> connection.",118,null],[10,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",118,[[],[["pin",3],["box",3]]]],[10,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",118,[[],[["box",3],["pin",3]]]],[10,"publish_to_all","","Publishes a <code>payload</code> to all subscribers of all <code>topics</code>.",118,[[["vec",3],["global",3],["string",3]],[["box",3],["pin",3]]]],[8,"Subscriber","","A subscriber to one or more topics.",null,null],[10,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",119,[[],[["box",3],["pin",3]]]],[10,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",119,[[["str",15]],[["box",3],["pin",3]]]],[10,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",119,[[],["receiver",3]]],[4,"Error","pliantdb::server::local::core","an enumeration of errors that this crate can produce",null,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",120,null],[12,"database_name","pliantdb::server::local::core::Error","The name of the database being accessed.",121,null],[12,"schema","","The schema provided for the database.",121,null],[12,"stored_schema","","The schema stored for the database.",121,null],[13,"SchemaAlreadyRegistered","pliantdb::server::local::core","The [<code>SchemaName</code>] returned has already been registered …",120,null],[13,"SchemaNotRegistered","","The [<code>SchemaName</code>] requested was not registered with this …",120,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See …",120,null],[13,"DatabaseNotFound","","The database name given was not found.",120,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",120,null],[13,"Database","","An error from interacting with local storage.",120,null],[13,"Server","","An error from interacting with a server.",120,null],[13,"Transport","","An error occurred from the QUIC transport layer.",120,null],[13,"Websocket","","An error occurred from the websocket transport layer.",120,null],[13,"Networking","","An error occurred from networking.",120,null],[13,"Io","","An error occurred from IO.",120,null],[13,"Configuration","","An error occurred with the provided configuration options.",120,null],[13,"Client","","An error occurred inside of the client.",120,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",120,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",120,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",120,null],[13,"UniqueKeyViolation","","When saving a document in a collection with unique views, …",120,null],[12,"view","pliantdb::server::local::core::Error","The name of the view that the unique key violation …",122,null],[12,"conflicting_document_id","","The document that caused the violation.",122,null],[12,"existing_document_id","","The document that already uses the same key.",122,null],[13,"InvalidName","pliantdb::server::local::core","An invalid name was specified during schema creation.",120,null],[13,"PermissionDenied","","Permission was denied.",120,null],[0,"test_util","","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb::server::local::core::test_util","",null,null],[12,"value","","",123,null],[12,"category","","",123,null],[12,"parent_id","","",123,null],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"Unique","","",null,null],[12,"value","","",124,null],[3,"UniqueValue","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",125,null],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"HarnessTest","","",null,null],[13,"ServerConnectionTests","","",126,null],[13,"StoreRetrieveUpdate","","",126,null],[13,"NotFound","","",126,null],[13,"Conflict","","",126,null],[13,"BadUpdate","","",126,null],[13,"NoUpdate","","",126,null],[13,"GetMultiple","","",126,null],[13,"ListTransactions","","",126,null],[13,"ViewQuery","","",126,null],[13,"UnassociatedCollection","","",126,null],[13,"ViewUpdate","","",126,null],[13,"ViewAccessPolicies","","",126,null],[13,"UniqueViews","","",126,null],[13,"PubSubSimple","","",126,null],[13,"PubSubMultipleSubscribers","","",126,null],[13,"PubSubDropAndSend","","",126,null],[13,"PubSubUnsubscribe","","",126,null],[13,"PubSubDropCleanup","","",126,null],[13,"PubSubPublishAll","","",126,null],[13,"KvBasic","","",126,null],[13,"KvSet","","",126,null],[13,"KvExpiration","","",126,null],[13,"KvDeleteExpire","","",126,null],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[5,"unique_view_tests","","",null,[[]]],[3,"TimingTest","","",null,null],[5,"basic_server_connection_tests","","",null,[[["str",15]]]],[0,"bounds","pliantdb::server::local::core::num_traits","",null,null],[8,"Bounded","pliantdb::server::local::core::num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",127,[[]]],[10,"max_value","","returns the largest finite number this type can represent",127,[[]]],[0,"cast","pliantdb::server::local::core::num_traits","",null,null],[8,"ToPrimitive","pliantdb::server::local::core::num_traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",128,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",128,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",128,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",128,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",128,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",128,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",128,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",128,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",128,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",128,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",128,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",128,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",128,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",128,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",129,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",129,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",129,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",129,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",129,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",129,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",129,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",129,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",129,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",129,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",129,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",129,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",129,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",129,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",130,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",131,[[]]],[0,"float","pliantdb::server::local::core::num_traits","",null,null],[8,"FloatCore","pliantdb::server::local::core::num_traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",132,[[]]],[10,"neg_infinity","","Returns negative infinity.",132,[[]]],[10,"nan","","Returns NaN.",132,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",132,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",132,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",132,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",132,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",132,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",132,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",132,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",132,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",132,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",132,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",132,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",132,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",132,[[]]],[11,"trunc","","Return the integer part of a number.",132,[[]]],[11,"fract","","Returns the fractional part of a number.",132,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",132,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",132,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",132,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",132,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",132,[[]]],[11,"max","","Returns the maximum of the two numbers.",132,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",132,[[]]],[11,"powi","","Raise a number to an integer power.",132,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",132,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",132,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",132,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",133,[[]]],[10,"infinity","","Returns the infinite value.",133,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",133,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",133,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",133,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",133,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",133,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",133,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",133,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",133,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",133,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",133,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",133,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",133,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",133,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",133,[[]]],[10,"trunc","","Return the integer part of a number.",133,[[]]],[10,"fract","","Returns the fractional part of a number.",133,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",133,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",133,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",133,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",133,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",133,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",133,[[]]],[10,"powi","","Raise a number to an integer power.",133,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",133,[[]]],[10,"sqrt","","Take the square root of a number.",133,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",133,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",133,[[]]],[10,"ln","","Returns the natural logarithm of the number.",133,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",133,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",133,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",133,[[]]],[11,"to_degrees","","Converts radians to degrees.",133,[[]]],[11,"to_radians","","Converts degrees to radians.",133,[[]]],[10,"max","","Returns the maximum of the two numbers.",133,[[]]],[10,"min","","Returns the minimum of the two numbers.",133,[[]]],[10,"abs_sub","","The positive difference of two numbers.",133,[[]]],[10,"cbrt","","Take the cubic root of a number.",133,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",133,[[]]],[10,"sin","","Computes the sine of a number (in radians).",133,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",133,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",133,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",133,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",133,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",133,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",133,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",133,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",133,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",133,[[]]],[10,"sinh","","Hyperbolic sine function.",133,[[]]],[10,"cosh","","Hyperbolic cosine function.",133,[[]]],[10,"tanh","","Hyperbolic tangent function.",133,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",133,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",133,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",133,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",133,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",134,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",134,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",134,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",134,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",134,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",134,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",134,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",134,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",134,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",134,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",134,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",134,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",134,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",134,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",134,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",134,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",134,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",134,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",134,[[]]],[0,"identities","pliantdb::server::local::core::num_traits","",null,null],[8,"Zero","pliantdb::server::local::core::num_traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",135,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",135,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",135,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",136,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",136,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",136,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[0,"int","pliantdb::server::local::core::num_traits","",null,null],[8,"PrimInt","pliantdb::server::local::core::num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",137,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",137,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",137,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",137,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",137,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",137,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",137,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",137,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",137,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",137,[[["u32",15]]]],[0,"ops","pliantdb::server::local::core::num_traits","",null,null],[0,"checked","pliantdb::server::local::core::num_traits::ops","",null,null],[8,"CheckedAdd","pliantdb::server::local::core::num_traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",138,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",139,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",140,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",141,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",142,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",143,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",144,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",145,[[["u32",15]],["option",4]]],[0,"inv","pliantdb::server::local::core::num_traits::ops","",null,null],[8,"Inv","pliantdb::server::local::core::num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",146,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",146,[[]]],[0,"mul_add","pliantdb::server::local::core::num_traits::ops","",null,null],[8,"MulAdd","pliantdb::server::local::core::num_traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",147,null],[10,"mul_add","","Performs the fused multiply-add operation.",147,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",148,[[]]],[0,"overflowing","pliantdb::server::local::core::num_traits::ops","",null,null],[8,"OverflowingAdd","pliantdb::server::local::core::num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean …",149,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean …",150,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean …",151,[[]]],[0,"saturating","pliantdb::server::local::core::num_traits::ops","",null,null],[8,"Saturating","pliantdb::server::local::core::num_traits::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",152,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",152,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",153,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",154,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",155,[[]]],[0,"wrapping","pliantdb::server::local::core::num_traits::ops","",null,null],[8,"WrappingAdd","pliantdb::server::local::core::num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",156,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",157,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",158,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",159,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",160,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",161,[[["u32",15]]]],[0,"pow","pliantdb::server::local::core::num_traits","",null,null],[8,"Pow","pliantdb::server::local::core::num_traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",162,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",162,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[0,"real","pliantdb::server::local::core::num_traits","",null,null],[8,"Real","pliantdb::server::local::core::num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can …",163,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",163,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",163,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",163,[[]]],[10,"floor","","Returns the largest integer less than or equal to a …",163,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",163,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",163,[[]]],[10,"trunc","","Return the integer part of a number.",163,[[]]],[10,"fract","","Returns the fractional part of a number.",163,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",163,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",163,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",163,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",163,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",163,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",163,[[]]],[10,"powi","","Raise a number to an integer power.",163,[[["i32",15]]]],[10,"powf","","Raise a number to a real number power.",163,[[]]],[10,"sqrt","","Take the square root of a number.",163,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",163,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",163,[[]]],[10,"ln","","Returns the natural logarithm of the number.",163,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",163,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",163,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",163,[[]]],[10,"to_degrees","","Converts radians to degrees.",163,[[]]],[10,"to_radians","","Converts degrees to radians.",163,[[]]],[10,"max","","Returns the maximum of the two numbers.",163,[[]]],[10,"min","","Returns the minimum of the two numbers.",163,[[]]],[10,"abs_sub","","The positive difference of two numbers.",163,[[]]],[10,"cbrt","","Take the cubic root of a number.",163,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",163,[[]]],[10,"sin","","Computes the sine of a number (in radians).",163,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",163,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",163,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",163,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",163,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",163,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",163,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",163,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",163,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",163,[[]]],[10,"sinh","","Hyperbolic sine function.",163,[[]]],[10,"cosh","","Hyperbolic cosine function.",163,[[]]],[10,"tanh","","Hyperbolic tangent function.",163,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",163,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",163,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",163,[[]]],[0,"sign","pliantdb::server::local::core::num_traits","",null,null],[8,"Signed","pliantdb::server::local::core::num_traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",164,[[]]],[10,"abs_sub","","The positive difference of two numbers.",164,[[]]],[10,"signum","","Returns the sign of the number.",164,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",164,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",164,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","pliantdb::server::local::core::num_traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",165,null],[10,"from_str_radix","","Convert from a string and radix (typically <code>2..=36</code>).",165,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",166,null],[13,"Invalid","","",166,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",167,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",127,[[]]],[10,"max_value","","returns the largest finite number this type can represent",127,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",133,[[]]],[10,"infinity","","Returns the infinite value.",133,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",133,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",133,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",133,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",133,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",133,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",133,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",133,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",133,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",133,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",133,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",133,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",133,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",133,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",133,[[]]],[10,"trunc","","Return the integer part of a number.",133,[[]]],[10,"fract","","Returns the fractional part of a number.",133,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",133,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",133,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",133,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",133,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",133,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",133,[[]]],[10,"powi","","Raise a number to an integer power.",133,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",133,[[]]],[10,"sqrt","","Take the square root of a number.",133,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",133,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",133,[[]]],[10,"ln","","Returns the natural logarithm of the number.",133,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",133,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",133,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",133,[[]]],[11,"to_degrees","","Converts radians to degrees.",133,[[]]],[11,"to_radians","","Converts degrees to radians.",133,[[]]],[10,"max","","Returns the maximum of the two numbers.",133,[[]]],[10,"min","","Returns the minimum of the two numbers.",133,[[]]],[10,"abs_sub","","The positive difference of two numbers.",133,[[]]],[10,"cbrt","","Take the cubic root of a number.",133,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",133,[[]]],[10,"sin","","Computes the sine of a number (in radians).",133,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",133,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",133,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",133,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",133,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",133,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",133,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",133,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",133,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",133,[[]]],[10,"sinh","","Hyperbolic sine function.",133,[[]]],[10,"cosh","","Hyperbolic cosine function.",133,[[]]],[10,"tanh","","Hyperbolic tangent function.",133,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",133,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",133,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",133,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",133,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",134,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",134,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",134,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",134,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",134,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",134,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",134,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",134,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",134,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",134,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",134,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",134,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",134,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",134,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",134,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",134,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",134,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",134,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",134,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",131,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",129,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",129,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",129,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",129,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",129,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",129,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",129,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",129,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",129,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",129,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",129,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",129,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",129,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",129,[[["f64",15]],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",130,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",128,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",128,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",128,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",128,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",128,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",128,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",128,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",128,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",128,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",128,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",128,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",128,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",128,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",128,[[],[["f64",15],["option",4]]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",136,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",136,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",136,[[],["bool",15]]],[8,"Zero","","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",135,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",135,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",135,[[],["bool",15]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",137,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",137,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",137,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",137,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",137,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",137,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",137,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",137,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",137,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",137,[[["u32",15]]]],[8,"CheckedAdd","","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",138,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",141,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",140,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",143,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",142,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",144,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",145,[[["u32",15]],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",139,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",146,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",146,[[]]],[8,"MulAdd","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",147,null],[10,"mul_add","","Performs the fused multiply-add operation.",147,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",148,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",152,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",152,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",153,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",155,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",154,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",156,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",158,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",159,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",160,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",161,[[["u32",15]]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",157,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",162,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",162,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",164,[[]]],[10,"abs_sub","","The positive difference of two numbers.",164,[[]]],[10,"signum","","Returns the sign of the number.",164,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",164,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",164,[[],["bool",15]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[14,"define_pubsub_test_suite","pliantdb::server::local::core","Expands into a suite of pubsub unit tests using the …",null,null],[3,"Message","pliantdb::server::local::core::circulate","A <code>PubSub</code> message.",null,null],[12,"topic","","The topic of the message.",168,null],[12,"payload","","The payload of the message.",168,null],[3,"Relay","","Manages subscriptions and notifications for <code>PubSub</code>.",null,null],[3,"Subscriber","","A subscriber for [<code>Message</code>]s published to subscribed …",null,null],[0,"select","pliantdb::server::local::core::circulate::flume","Types that permit waiting upon multiple blocking …",null,null],[4,"SelectError","pliantdb::server::local::core::circulate::flume::select","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",169,null],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[0,"async","pliantdb::server::local::core::circulate::flume","Futures and other types that allow asynchronous …",null,null],[3,"SendFut","pliantdb::server::local::core::circulate::flume::async","A future that sends a value into a channel.",null,null],[3,"SendSink","","A sink that allows sending values into a channel.",null,null],[3,"RecvFut","","A future which allows asynchronously receiving a message.",null,null],[3,"RecvStream","","A stream which allows asynchronously receiving messages.",null,null],[3,"SendError","pliantdb::server::local::core::circulate::flume","An error that may be emitted when attempting to send a …",null,null],[12,"0","","",170,null],[4,"TrySendError","","An error that may be emitted when attempting to send a …",null,null],[13,"Full","","",171,null],[13,"Disconnected","","",171,null],[4,"SendTimeoutError","","An error that may be emitted when sending a value into a …",null,null],[13,"Timeout","","",172,null],[13,"Disconnected","","",172,null],[4,"RecvError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Disconnected","","",173,null],[4,"TryRecvError","","An error that may be emitted when attempting to fetch a …",null,null],[13,"Empty","","",174,null],[13,"Disconnected","","",174,null],[4,"RecvTimeoutError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",175,null],[13,"Disconnected","","",175,null],[3,"Sender","","A transmitting end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel.",null,null],[3,"Iter","","An iterator over the msgs received from a channel.",null,null],[3,"TryIter","","An non-blocking iterator over the msgs received from a …",null,null],[3,"Drain","","An fixed-sized iterator over the msgs drained from a …",null,null],[3,"IntoIter","","An owned iterator over the msgs received from a channel.",null,null],[5,"unbounded","","Create a channel with no maximum capacity.",null,[[]]],[5,"bounded","","Create a channel with a maximum capacity.",null,[[["usize",15]]]],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[14,"define_connection_test_suite","pliantdb::server::local::core","Creates a test suite that tests methods available on […",null,null],[14,"define_kv_test_suite","","Defines the Kv test suite",null,null],[3,"Subscriber","pliantdb::server::local","A subscriber for <code>PubSub</code> messages.",null,null],[3,"Database","","A local, file-based database.",null,null],[4,"Error","","Errors that can occur from interacting with storage.",null,null],[13,"Sled","","An error occurred interacting with <code>sled</code>.",183,null],[13,"InternalSerialization","","An error occurred serializing the underlying database …",183,null],[13,"Serialization","","An error occurred serializing the contents of a <code>Document</code> …",183,null],[13,"InternalCommunication","","An internal error occurred while waiting for a message.",183,null],[13,"View","","An error occurred while executing a view",183,null],[13,"Core","","An core error occurred.",183,null],[13,"Other","","An unexpected error occurred.",183,null],[3,"Storage","","A file-based, multi-database, multi-user database engine.",null,null],[11,"from","pliantdb::cli","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","pliantdb::client::url","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"to_string","","",192,[[],["string",3]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"vzip","","",192,[[]]],[11,"equivalent","","",192,[[],["bool",15]]],[11,"init","","",192,[[],["usize",15]]],[11,"deref","","",192,[[["usize",15]]]],[11,"deref_mut","","",192,[[["usize",15]]]],[11,"drop","","",192,[[["usize",15]]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"vzip","","",193,[[]]],[11,"init","","",193,[[],["usize",15]]],[11,"deref","","",193,[[["usize",15]]]],[11,"deref_mut","","",193,[[["usize",15]]]],[11,"drop","","",193,[[["usize",15]]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"vzip","","",194,[[]]],[11,"init","","",194,[[],["usize",15]]],[11,"deref","","",194,[[["usize",15]]]],[11,"deref_mut","","",194,[[["usize",15]]]],[11,"drop","","",194,[[["usize",15]]]],[11,"from","pliantdb::client::url::form_urlencoded","",195,[[]]],[11,"into","","",195,[[]]],[11,"into_iter","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"vzip","","",195,[[]]],[11,"init","","",195,[[],["usize",15]]],[11,"deref","","",195,[[["usize",15]]]],[11,"deref_mut","","",195,[[["usize",15]]]],[11,"drop","","",195,[[["usize",15]]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"into_iter","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"vzip","","",196,[[]]],[11,"init","","",196,[[],["usize",15]]],[11,"deref","","",196,[[["usize",15]]]],[11,"deref_mut","","",196,[[["usize",15]]]],[11,"drop","","",196,[[["usize",15]]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"into_iter","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"vzip","","",197,[[]]],[11,"init","","",197,[[],["usize",15]]],[11,"deref","","",197,[[["usize",15]]]],[11,"deref_mut","","",197,[[["usize",15]]]],[11,"drop","","",197,[[["usize",15]]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"vzip","","",198,[[]]],[11,"init","","",198,[[],["usize",15]]],[11,"deref","","",198,[[["usize",15]]]],[11,"deref_mut","","",198,[[["usize",15]]]],[11,"drop","","",198,[[["usize",15]]]],[11,"from","pliantdb::client::url","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"equivalent","","",2,[[],["bool",15]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"vzip","","",199,[[]]],[11,"equivalent","","",199,[[],["bool",15]]],[11,"init","","",199,[[],["usize",15]]],[11,"deref","","",199,[[["usize",15]]]],[11,"deref_mut","","",199,[[["usize",15]]]],[11,"drop","","",199,[[["usize",15]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"equivalent","","",3,[[],["bool",15]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::networking::fabruic::error","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"equivalent","","",4,[[],["bool",15]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","pliantdb::client::url","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"equivalent","","",5,[[],["bool",15]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"vzip","","",200,[[]]],[11,"init","","",200,[[],["usize",15]]],[11,"deref","","",200,[[["usize",15]]]],[11,"deref_mut","","",200,[[["usize",15]]]],[11,"drop","","",200,[[["usize",15]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","pliantdb::client","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"vzip","","",201,[[]]],[11,"init","","",201,[[],["usize",15]]],[11,"deref","","",201,[[["usize",15]]]],[11,"deref_mut","","",201,[[["usize",15]]]],[11,"drop","","",201,[[["usize",15]]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"vzip","","",202,[[]]],[11,"init","","",202,[[],["usize",15]]],[11,"deref","","",202,[[["usize",15]]]],[11,"deref_mut","","",202,[[["usize",15]]]],[11,"drop","","",202,[[["usize",15]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::permissions","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"schema_name","","",8,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"define_collections","","",8,[[["schematic",3]],[["result",4],["error",4]]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::permissions::group","",203,[[]]],[11,"into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"collection","","",203,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[11,"unique","","",203,[[],["bool",15]]],[11,"version","","",203,[[],["u64",15]]],[11,"view_name","","",203,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",203,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",203,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[11,"vzip","","",203,[[]]],[11,"init","","",203,[[],["usize",15]]],[11,"deref","","",203,[[["usize",15]]]],[11,"deref_mut","","",203,[[["usize",15]]]],[11,"drop","","",203,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::permissions::pliant","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::permissions","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"schema_name","","",17,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"define_collections","","",17,[[["schematic",3]],[["result",4],["error",4]]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[],["usize",15]]],[11,"deref","","",17,[[["usize",15]]]],[11,"deref_mut","","",17,[[["usize",15]]]],[11,"drop","","",17,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::permissions::role","",204,[[]]],[11,"into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"collection","","",204,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[11,"unique","","",204,[[],["bool",15]]],[11,"version","","",204,[[],["u64",15]]],[11,"view_name","","",204,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",204,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",204,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[11,"vzip","","",204,[[]]],[11,"init","","",204,[[],["usize",15]]],[11,"deref","","",204,[[["usize",15]]]],[11,"deref_mut","","",204,[[["usize",15]]]],[11,"drop","","",204,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::permissions","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[],["usize",15]]],[11,"deref","","",19,[[["usize",15]]]],[11,"deref_mut","","",19,[[["usize",15]]]],[11,"drop","","",19,[[["usize",15]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[],["usize",15]]],[11,"deref","","",20,[[["usize",15]]]],[11,"deref_mut","","",20,[[["usize",15]]]],[11,"drop","","",20,[[["usize",15]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"equivalent","","",22,[[],["bool",15]]],[11,"init","","",22,[[],["usize",15]]],[11,"deref","","",22,[[["usize",15]]]],[11,"deref_mut","","",22,[[["usize",15]]]],[11,"drop","","",22,[[["usize",15]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[],["usize",15]]],[11,"deref","","",23,[[["usize",15]]]],[11,"deref_mut","","",23,[[["usize",15]]]],[11,"drop","","",23,[[["usize",15]]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"vzip","","",205,[[]]],[11,"init","","",205,[[],["usize",15]]],[11,"deref","","",205,[[["usize",15]]]],[11,"deref_mut","","",205,[[["usize",15]]]],[11,"drop","","",205,[[["usize",15]]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"to_string","","",206,[[],["string",3]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"as_bits","","",206,[[],["bitslice",3]]],[11,"vzip","","",206,[[]]],[11,"init","","",206,[[],["usize",15]]],[11,"deref","","",206,[[["usize",15]]]],[11,"deref_mut","","",206,[[["usize",15]]]],[11,"drop","","",206,[[["usize",15]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[],["usize",15]]],[11,"deref","","",24,[[["usize",15]]]],[11,"deref_mut","","",24,[[["usize",15]]]],[11,"drop","","",24,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::connection","",207,[[]]],[11,"into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"vzip","","",207,[[]]],[11,"init","","",207,[[],["usize",15]]],[11,"deref","","",207,[[["usize",15]]]],[11,"deref_mut","","",207,[[["usize",15]]]],[11,"drop","","",207,[[["usize",15]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[],["usize",15]]],[11,"deref","","",26,[[["usize",15]]]],[11,"deref_mut","","",26,[[["usize",15]]]],[11,"drop","","",26,[[["usize",15]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[],["usize",15]]],[11,"deref","","",27,[[["usize",15]]]],[11,"deref_mut","","",27,[[["usize",15]]]],[11,"drop","","",27,[[["usize",15]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[],["usize",15]]],[11,"deref","","",28,[[["usize",15]]]],[11,"deref_mut","","",28,[[["usize",15]]]],[11,"drop","","",28,[[["usize",15]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::document","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"equivalent","","",31,[[],["bool",15]]],[11,"init","","",31,[[],["usize",15]]],[11,"deref","","",31,[[["usize",15]]]],[11,"deref_mut","","",31,[[["usize",15]]]],[11,"drop","","",31,[[["usize",15]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[],["usize",15]]],[11,"deref","","",32,[[["usize",15]]]],[11,"deref_mut","","",32,[[["usize",15]]]],[11,"drop","","",32,[[["usize",15]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"equivalent","","",33,[[],["bool",15]]],[11,"init","","",33,[[],["usize",15]]],[11,"deref","","",33,[[["usize",15]]]],[11,"deref_mut","","",33,[[["usize",15]]]],[11,"drop","","",33,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::schema","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[],["usize",15]]],[11,"deref","","",34,[[["usize",15]]]],[11,"deref_mut","","",34,[[["usize",15]]]],[11,"drop","","",34,[[["usize",15]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[],["usize",15]]],[11,"deref","","",35,[[["usize",15]]]],[11,"deref_mut","","",35,[[["usize",15]]]],[11,"drop","","",35,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::schema::view::map","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[],["usize",15]]],[11,"deref","","",36,[[["usize",15]]]],[11,"deref_mut","","",36,[[["usize",15]]]],[11,"drop","","",36,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::schema","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[],["usize",15]]],[11,"deref","","",37,[[["usize",15]]]],[11,"deref_mut","","",37,[[["usize",15]]]],[11,"drop","","",37,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::schema::view","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[],["usize",15]]],[11,"deref","","",39,[[["usize",15]]]],[11,"deref_mut","","",39,[[["usize",15]]]],[11,"drop","","",39,[[["usize",15]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"as_bits","","",41,[[],["bitslice",3]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[],["usize",15]]],[11,"deref","","",41,[[["usize",15]]]],[11,"deref_mut","","",41,[[["usize",15]]]],[11,"drop","","",41,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::schema","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"to_string","","",208,[[],["string",3]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"vzip","","",208,[[]]],[11,"equivalent","","",208,[[],["bool",15]]],[11,"init","","",208,[[],["usize",15]]],[11,"deref","","",208,[[["usize",15]]]],[11,"deref_mut","","",208,[[["usize",15]]]],[11,"drop","","",208,[[["usize",15]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"equivalent","","",45,[[],["bool",15]]],[11,"init","","",45,[[],["usize",15]]],[11,"deref","","",45,[[["usize",15]]]],[11,"deref_mut","","",45,[[["usize",15]]]],[11,"drop","","",45,[[["usize",15]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[],["usize",15]]],[11,"deref","","",46,[[["usize",15]]]],[11,"deref_mut","","",46,[[["usize",15]]]],[11,"drop","","",46,[[["usize",15]]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"to_string","","",209,[[],["string",3]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"vzip","","",209,[[]]],[11,"equivalent","","",209,[[],["bool",15]]],[11,"init","","",209,[[],["usize",15]]],[11,"deref","","",209,[[["usize",15]]]],[11,"deref_mut","","",209,[[["usize",15]]]],[11,"drop","","",209,[[["usize",15]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"equivalent","","",47,[[],["bool",15]]],[11,"init","","",47,[[],["usize",15]]],[11,"deref","","",47,[[["usize",15]]]],[11,"deref_mut","","",47,[[["usize",15]]]],[11,"drop","","",47,[[["usize",15]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"equivalent","","",48,[[],["bool",15]]],[11,"init","","",48,[[],["usize",15]]],[11,"deref","","",48,[[["usize",15]]]],[11,"deref_mut","","",48,[[["usize",15]]]],[11,"drop","","",48,[[["usize",15]]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"vzip","","",210,[[]]],[11,"init","","",210,[[],["usize",15]]],[11,"deref","","",210,[[["usize",15]]]],[11,"deref_mut","","",210,[[["usize",15]]]],[11,"drop","","",210,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::transaction","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[],["usize",15]]],[11,"deref","","",49,[[["usize",15]]]],[11,"deref_mut","","",49,[[["usize",15]]]],[11,"drop","","",49,[[["usize",15]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[],["usize",15]]],[11,"deref","","",50,[[["usize",15]]]],[11,"deref_mut","","",50,[[["usize",15]]]],[11,"drop","","",50,[[["usize",15]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[],["usize",15]]],[11,"deref","","",51,[[["usize",15]]]],[11,"deref_mut","","",51,[[["usize",15]]]],[11,"drop","","",51,[[["usize",15]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[],["usize",15]]],[11,"deref","","",55,[[["usize",15]]]],[11,"deref_mut","","",55,[[["usize",15]]]],[11,"drop","","",55,[[["usize",15]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[],["usize",15]]],[11,"deref","","",58,[[["usize",15]]]],[11,"deref_mut","","",58,[[["usize",15]]]],[11,"drop","","",58,[[["usize",15]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[],["usize",15]]],[11,"deref","","",59,[[["usize",15]]]],[11,"deref_mut","","",59,[[["usize",15]]]],[11,"drop","","",59,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::kv","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[],["usize",15]]],[11,"deref","","",60,[[["usize",15]]]],[11,"deref_mut","","",60,[[["usize",15]]]],[11,"drop","","",60,[[["usize",15]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[],["usize",15]]],[11,"deref","","",61,[[["usize",15]]]],[11,"deref_mut","","",61,[[["usize",15]]]],[11,"drop","","",61,[[["usize",15]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[],["usize",15]]],[11,"deref","","",62,[[["usize",15]]]],[11,"deref_mut","","",62,[[["usize",15]]]],[11,"drop","","",62,[[["usize",15]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[],["usize",15]]],[11,"deref","","",65,[[["usize",15]]]],[11,"deref_mut","","",65,[[["usize",15]]]],[11,"drop","","",65,[[["usize",15]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"init","","",66,[[],["usize",15]]],[11,"deref","","",66,[[["usize",15]]]],[11,"deref_mut","","",66,[[["usize",15]]]],[11,"drop","","",66,[[["usize",15]]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"equivalent","","",67,[[],["bool",15]]],[11,"init","","",67,[[],["usize",15]]],[11,"deref","","",67,[[["usize",15]]]],[11,"deref_mut","","",67,[[["usize",15]]]],[11,"drop","","",67,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::kv::get","",211,[[]]],[11,"into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"into_future","","",211,[[]]],[11,"try_poll","","",211,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",211,[[]]],[11,"init","","",211,[[],["usize",15]]],[11,"deref","","",211,[[["usize",15]]]],[11,"deref_mut","","",211,[[["usize",15]]]],[11,"drop","","",211,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::kv::namespaced","",212,[[]]],[11,"into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"vzip","","",212,[[]]],[11,"init","","",212,[[],["usize",15]]],[11,"deref","","",212,[[["usize",15]]]],[11,"deref_mut","","",212,[[["usize",15]]]],[11,"drop","","",212,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::kv::set","",213,[[]]],[11,"into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"into_future","","",213,[[]]],[11,"try_poll","","",213,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",213,[[]]],[11,"init","","",213,[[],["usize",15]]],[11,"deref","","",213,[[["usize",15]]]],[11,"deref_mut","","",213,[[["usize",15]]]],[11,"drop","","",213,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::networking","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"init","","",69,[[],["usize",15]]],[11,"deref","","",69,[[["usize",15]]]],[11,"deref_mut","","",69,[[["usize",15]]]],[11,"drop","","",69,[[["usize",15]]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"init","","",70,[[],["usize",15]]],[11,"deref","","",70,[[["usize",15]]]],[11,"deref_mut","","",70,[[["usize",15]]]],[11,"drop","","",70,[[["usize",15]]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"init","","",72,[[],["usize",15]]],[11,"deref","","",72,[[["usize",15]]]],[11,"deref_mut","","",72,[[["usize",15]]]],[11,"drop","","",72,[[["usize",15]]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"init","","",74,[[],["usize",15]]],[11,"deref","","",74,[[["usize",15]]]],[11,"deref_mut","","",74,[[["usize",15]]]],[11,"drop","","",74,[[["usize",15]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"init","","",86,[[],["usize",15]]],[11,"deref","","",86,[[["usize",15]]]],[11,"deref_mut","","",86,[[["usize",15]]]],[11,"drop","","",86,[[["usize",15]]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"init","","",87,[[],["usize",15]]],[11,"deref","","",87,[[["usize",15]]]],[11,"deref_mut","","",87,[[["usize",15]]]],[11,"drop","","",87,[[["usize",15]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"init","","",90,[[],["usize",15]]],[11,"deref","","",90,[[["usize",15]]]],[11,"deref_mut","","",90,[[["usize",15]]]],[11,"drop","","",90,[[["usize",15]]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"init","","",93,[[],["usize",15]]],[11,"deref","","",93,[[["usize",15]]]],[11,"deref_mut","","",93,[[["usize",15]]]],[11,"drop","","",93,[[["usize",15]]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"to_string","","",94,[[],["string",3]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"init","","",94,[[],["usize",15]]],[11,"deref","","",94,[[["usize",15]]]],[11,"deref_mut","","",94,[[["usize",15]]]],[11,"drop","","",94,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::networking::fabruic::error","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_string","","",98,[[],["string",3]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"init","","",98,[[],["usize",15]]],[11,"deref","","",98,[[["usize",15]]]],[11,"deref_mut","","",98,[[["usize",15]]]],[11,"drop","","",98,[[["usize",15]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_string","","",99,[[],["string",3]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"init","","",99,[[],["usize",15]]],[11,"deref","","",99,[[["usize",15]]]],[11,"deref_mut","","",99,[[["usize",15]]]],[11,"drop","","",99,[[["usize",15]]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"to_string","","",100,[[],["string",3]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"equivalent","","",100,[[],["bool",15]]],[11,"init","","",100,[[],["usize",15]]],[11,"deref","","",100,[[["usize",15]]]],[11,"deref_mut","","",100,[[["usize",15]]]],[11,"drop","","",100,[[["usize",15]]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"to_string","","",214,[[],["string",3]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"vzip","","",214,[[]]],[11,"equivalent","","",214,[[],["bool",15]]],[11,"init","","",214,[[],["usize",15]]],[11,"deref","","",214,[[["usize",15]]]],[11,"deref_mut","","",214,[[["usize",15]]]],[11,"drop","","",214,[[["usize",15]]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"to_string","","",215,[[],["string",3]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"vzip","","",215,[[]]],[11,"equivalent","","",215,[[],["bool",15]]],[11,"init","","",215,[[],["usize",15]]],[11,"deref","","",215,[[["usize",15]]]],[11,"deref_mut","","",215,[[["usize",15]]]],[11,"drop","","",215,[[["usize",15]]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"to_string","","",216,[[],["string",3]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"vzip","","",216,[[]]],[11,"equivalent","","",216,[[],["bool",15]]],[11,"init","","",216,[[],["usize",15]]],[11,"deref","","",216,[[["usize",15]]]],[11,"deref_mut","","",216,[[["usize",15]]]],[11,"drop","","",216,[[["usize",15]]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_string","","",101,[[],["string",3]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"init","","",101,[[],["usize",15]]],[11,"deref","","",101,[[["usize",15]]]],[11,"deref_mut","","",101,[[["usize",15]]]],[11,"drop","","",101,[[["usize",15]]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_string","","",102,[[],["string",3]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"init","","",102,[[],["usize",15]]],[11,"deref","","",102,[[["usize",15]]]],[11,"deref_mut","","",102,[[["usize",15]]]],[11,"drop","","",102,[[["usize",15]]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"to_string","","",103,[[],["string",3]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"equivalent","","",103,[[],["bool",15]]],[11,"init","","",103,[[],["usize",15]]],[11,"deref","","",103,[[["usize",15]]]],[11,"deref_mut","","",103,[[["usize",15]]]],[11,"drop","","",103,[[["usize",15]]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"to_string","","",104,[[],["string",3]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"equivalent","","",104,[[],["bool",15]]],[11,"init","","",104,[[],["usize",15]]],[11,"deref","","",104,[[["usize",15]]]],[11,"deref_mut","","",104,[[["usize",15]]]],[11,"drop","","",104,[[["usize",15]]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_string","","",105,[[],["string",3]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"init","","",105,[[],["usize",15]]],[11,"deref","","",105,[[["usize",15]]]],[11,"deref_mut","","",105,[[["usize",15]]]],[11,"drop","","",105,[[["usize",15]]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_string","","",106,[[],["string",3]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"init","","",106,[[],["usize",15]]],[11,"deref","","",106,[[["usize",15]]]],[11,"deref_mut","","",106,[[["usize",15]]]],[11,"drop","","",106,[[["usize",15]]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_string","","",107,[[],["string",3]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"init","","",107,[[],["usize",15]]],[11,"deref","","",107,[[["usize",15]]]],[11,"deref_mut","","",107,[[["usize",15]]]],[11,"drop","","",107,[[["usize",15]]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_string","","",108,[[],["string",3]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"init","","",108,[[],["usize",15]]],[11,"deref","","",108,[[["usize",15]]]],[11,"deref_mut","","",108,[[["usize",15]]]],[11,"drop","","",108,[[["usize",15]]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_string","","",109,[[],["string",3]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"init","","",109,[[],["usize",15]]],[11,"deref","","",109,[[["usize",15]]]],[11,"deref_mut","","",109,[[["usize",15]]]],[11,"drop","","",109,[[["usize",15]]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"to_string","","",110,[[],["string",3]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"equivalent","","",110,[[],["bool",15]]],[11,"init","","",110,[[],["usize",15]]],[11,"deref","","",110,[[["usize",15]]]],[11,"deref_mut","","",110,[[["usize",15]]]],[11,"drop","","",110,[[["usize",15]]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"to_string","","",111,[[],["string",3]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"equivalent","","",111,[[],["bool",15]]],[11,"init","","",111,[[],["usize",15]]],[11,"deref","","",111,[[["usize",15]]]],[11,"deref_mut","","",111,[[["usize",15]]]],[11,"drop","","",111,[[["usize",15]]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"to_string","","",112,[[],["string",3]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"equivalent","","",112,[[],["bool",15]]],[11,"init","","",112,[[],["usize",15]]],[11,"deref","","",112,[[["usize",15]]]],[11,"deref_mut","","",112,[[["usize",15]]]],[11,"drop","","",112,[[["usize",15]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"equivalent","","",113,[[],["bool",15]]],[11,"init","","",113,[[],["usize",15]]],[11,"deref","","",113,[[["usize",15]]]],[11,"deref_mut","","",113,[[["usize",15]]]],[11,"drop","","",113,[[["usize",15]]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"to_string","","",114,[[],["string",3]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"vzip","","",114,[[]]],[11,"init","","",114,[[],["usize",15]]],[11,"deref","","",114,[[["usize",15]]]],[11,"deref_mut","","",114,[[["usize",15]]]],[11,"drop","","",114,[[["usize",15]]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"to_string","","",217,[[],["string",3]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"vzip","","",217,[[]]],[11,"init","","",217,[[],["usize",15]]],[11,"deref","","",217,[[["usize",15]]]],[11,"deref_mut","","",217,[[["usize",15]]]],[11,"drop","","",217,[[["usize",15]]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_string","","",115,[[],["string",3]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"init","","",115,[[],["usize",15]]],[11,"deref","","",115,[[["usize",15]]]],[11,"deref_mut","","",115,[[["usize",15]]]],[11,"drop","","",115,[[["usize",15]]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"to_string","","",116,[[],["string",3]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"vzip","","",116,[[]]],[11,"equivalent","","",116,[[],["bool",15]]],[11,"init","","",116,[[],["usize",15]]],[11,"deref","","",116,[[["usize",15]]]],[11,"deref_mut","","",116,[[["usize",15]]]],[11,"drop","","",116,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::networking::fabruic","",218,[[]]],[11,"into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"vzip","","",218,[[]]],[11,"init","","",218,[[],["usize",15]]],[11,"deref","","",218,[[["usize",15]]]],[11,"deref_mut","","",218,[[["usize",15]]]],[11,"drop","","",218,[[["usize",15]]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"vzip","","",219,[[]]],[11,"init","","",219,[[],["usize",15]]],[11,"deref","","",219,[[["usize",15]]]],[11,"deref_mut","","",219,[[["usize",15]]]],[11,"drop","","",219,[[["usize",15]]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"try_poll_next","","",220,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"vzip","","",220,[[]]],[11,"init","","",220,[[],["usize",15]]],[11,"deref","","",220,[[["usize",15]]]],[11,"deref_mut","","",220,[[["usize",15]]]],[11,"drop","","",220,[[["usize",15]]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"vzip","","",221,[[]]],[11,"init","","",221,[[],["usize",15]]],[11,"deref","","",221,[[["usize",15]]]],[11,"deref_mut","","",221,[[["usize",15]]]],[11,"drop","","",221,[[["usize",15]]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"vzip","","",222,[[]]],[11,"init","","",222,[[],["usize",15]]],[11,"deref","","",222,[[["usize",15]]]],[11,"deref_mut","","",222,[[["usize",15]]]],[11,"drop","","",222,[[["usize",15]]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"try_poll_next","","",223,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"vzip","","",223,[[]]],[11,"init","","",223,[[],["usize",15]]],[11,"deref","","",223,[[["usize",15]]]],[11,"deref_mut","","",223,[[["usize",15]]]],[11,"drop","","",223,[[["usize",15]]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"vzip","","",224,[[]]],[11,"init","","",224,[[],["usize",15]]],[11,"deref","","",224,[[["usize",15]]]],[11,"deref_mut","","",224,[[["usize",15]]]],[11,"drop","","",224,[[["usize",15]]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"vzip","","",117,[[]]],[11,"equivalent","","",117,[[],["bool",15]]],[11,"init","","",117,[[],["usize",15]]],[11,"deref","","",117,[[["usize",15]]]],[11,"deref_mut","","",117,[[["usize",15]]]],[11,"drop","","",117,[[["usize",15]]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"as_bits","","",225,[[],["bitslice",3]]],[11,"vzip","","",225,[[]]],[11,"equivalent","","",225,[[],["bool",15]]],[11,"init","","",225,[[],["usize",15]]],[11,"deref","","",225,[[["usize",15]]]],[11,"deref_mut","","",225,[[["usize",15]]]],[11,"drop","","",225,[[["usize",15]]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"vzip","","",226,[[]]],[11,"equivalent","","",226,[[],["bool",15]]],[11,"init","","",226,[[],["usize",15]]],[11,"deref","","",226,[[["usize",15]]]],[11,"deref_mut","","",226,[[["usize",15]]]],[11,"drop","","",226,[[["usize",15]]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"vzip","","",227,[[]]],[11,"equivalent","","",227,[[],["bool",15]]],[11,"init","","",227,[[],["usize",15]]],[11,"deref","","",227,[[["usize",15]]]],[11,"deref_mut","","",227,[[["usize",15]]]],[11,"drop","","",227,[[["usize",15]]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"vzip","","",228,[[]]],[11,"equivalent","","",228,[[],["bool",15]]],[11,"init","","",228,[[],["usize",15]]],[11,"deref","","",228,[[["usize",15]]]],[11,"deref_mut","","",228,[[["usize",15]]]],[11,"drop","","",228,[[["usize",15]]]],[11,"from","pliantdb::server::local::core","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"to_string","","",120,[[],["string",3]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"vzip","","",120,[[]]],[11,"init","","",120,[[],["usize",15]]],[11,"deref","","",120,[[["usize",15]]]],[11,"deref_mut","","",120,[[["usize",15]]]],[11,"drop","","",120,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::test_util","",123,[[]]],[11,"into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"schema_name","","",123,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"define_collections","","",123,[[["schematic",3]],[["result",4],["error",4]]]],[11,"vzip","","",123,[[]]],[11,"init","","",123,[[],["usize",15]]],[11,"deref","","",123,[[["usize",15]]]],[11,"deref_mut","","",123,[[["usize",15]]]],[11,"drop","","",123,[[["usize",15]]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"collection","","",229,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[11,"unique","","",229,[[],["bool",15]]],[11,"version","","",229,[[],["u64",15]]],[11,"view_name","","",229,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",229,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",229,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[11,"vzip","","",229,[[]]],[11,"init","","",229,[[],["usize",15]]],[11,"deref","","",229,[[["usize",15]]]],[11,"deref_mut","","",229,[[["usize",15]]]],[11,"drop","","",229,[[["usize",15]]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"collection","","",230,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[11,"unique","","",230,[[],["bool",15]]],[11,"version","","",230,[[],["u64",15]]],[11,"view_name","","",230,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",230,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",230,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[11,"vzip","","",230,[[]]],[11,"init","","",230,[[],["usize",15]]],[11,"deref","","",230,[[["usize",15]]]],[11,"deref_mut","","",230,[[["usize",15]]]],[11,"drop","","",230,[[["usize",15]]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"collection","","",231,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[11,"unique","","",231,[[],["bool",15]]],[11,"version","","",231,[[],["u64",15]]],[11,"view_name","","",231,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",231,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",231,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[11,"vzip","","",231,[[]]],[11,"init","","",231,[[],["usize",15]]],[11,"deref","","",231,[[["usize",15]]]],[11,"deref_mut","","",231,[[["usize",15]]]],[11,"drop","","",231,[[["usize",15]]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"collection","","",232,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[11,"unique","","",232,[[],["bool",15]]],[11,"version","","",232,[[],["u64",15]]],[11,"view_name","","",232,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",232,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",232,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[11,"vzip","","",232,[[]]],[11,"init","","",232,[[],["usize",15]]],[11,"deref","","",232,[[["usize",15]]]],[11,"deref_mut","","",232,[[["usize",15]]]],[11,"drop","","",232,[[["usize",15]]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"vzip","","",233,[[]]],[11,"init","","",233,[[],["usize",15]]],[11,"deref","","",233,[[["usize",15]]]],[11,"deref_mut","","",233,[[["usize",15]]]],[11,"drop","","",233,[[["usize",15]]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"schema_name","","",124,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"define_collections","","",124,[[["schematic",3]],[["result",4],["error",4]]]],[11,"vzip","","",124,[[]]],[11,"init","","",124,[[],["usize",15]]],[11,"deref","","",124,[[["usize",15]]]],[11,"deref_mut","","",124,[[["usize",15]]]],[11,"drop","","",124,[[["usize",15]]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"collection","","",234,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[11,"unique","","",234,[[],["bool",15]]],[11,"version","","",234,[[],["u64",15]]],[11,"view_name","","",234,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",234,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",234,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[11,"vzip","","",234,[[]]],[11,"init","","",234,[[],["usize",15]]],[11,"deref","","",234,[[["usize",15]]]],[11,"deref_mut","","",234,[[["usize",15]]]],[11,"drop","","",234,[[["usize",15]]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"vzip","","",125,[[]]],[11,"init","","",125,[[],["usize",15]]],[11,"deref","","",125,[[["usize",15]]]],[11,"deref_mut","","",125,[[["usize",15]]]],[11,"drop","","",125,[[["usize",15]]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"schema_name","","",235,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"define_collections","","",235,[[["schematic",3]],[["result",4],["error",4]]]],[11,"vzip","","",235,[[]]],[11,"init","","",235,[[],["usize",15]]],[11,"deref","","",235,[[["usize",15]]]],[11,"deref_mut","","",235,[[["usize",15]]]],[11,"drop","","",235,[[["usize",15]]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"schema_name","","",236,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"define_collections","","",236,[[["schematic",3]],[["result",4],["error",4]]]],[11,"vzip","","",236,[[]]],[11,"init","","",236,[[],["usize",15]]],[11,"deref","","",236,[[["usize",15]]]],[11,"deref_mut","","",236,[[["usize",15]]]],[11,"drop","","",236,[[["usize",15]]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"schema_name","","",237,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"define_collections","","",237,[[["schematic",3]],[["result",4],["error",4]]]],[11,"vzip","","",237,[[]]],[11,"init","","",237,[[],["usize",15]]],[11,"deref","","",237,[[["usize",15]]]],[11,"deref_mut","","",237,[[["usize",15]]]],[11,"drop","","",237,[[["usize",15]]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"to_string","","",126,[[],["string",3]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"vzip","","",126,[[]]],[11,"init","","",126,[[],["usize",15]]],[11,"deref","","",126,[[["usize",15]]]],[11,"deref_mut","","",126,[[["usize",15]]]],[11,"drop","","",126,[[["usize",15]]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"vzip","","",238,[[]]],[11,"init","","",238,[[],["usize",15]]],[11,"deref","","",238,[[["usize",15]]]],[11,"deref_mut","","",238,[[["usize",15]]]],[11,"drop","","",238,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::num_traits","",166,[[]]],[11,"into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"vzip","","",166,[[]]],[11,"init","","",166,[[],["usize",15]]],[11,"deref","","",166,[[["usize",15]]]],[11,"deref_mut","","",166,[[["usize",15]]]],[11,"drop","","",166,[[["usize",15]]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_string","","",167,[[],["string",3]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"vzip","","",167,[[]]],[11,"init","","",167,[[],["usize",15]]],[11,"deref","","",167,[[["usize",15]]]],[11,"deref_mut","","",167,[[["usize",15]]]],[11,"drop","","",167,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::circulate","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"vzip","","",168,[[]]],[11,"init","","",168,[[],["usize",15]]],[11,"deref","","",168,[[["usize",15]]]],[11,"deref_mut","","",168,[[["usize",15]]]],[11,"drop","","",168,[[["usize",15]]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"vzip","","",239,[[]]],[11,"init","","",239,[[],["usize",15]]],[11,"deref","","",239,[[["usize",15]]]],[11,"deref_mut","","",239,[[["usize",15]]]],[11,"drop","","",239,[[["usize",15]]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"vzip","","",240,[[]]],[11,"init","","",240,[[],["usize",15]]],[11,"deref","","",240,[[["usize",15]]]],[11,"deref_mut","","",240,[[["usize",15]]]],[11,"drop","","",240,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::circulate::flume::select","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"to_string","","",169,[[],["string",3]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"vzip","","",169,[[]]],[11,"equivalent","","",169,[[],["bool",15]]],[11,"init","","",169,[[],["usize",15]]],[11,"deref","","",169,[[["usize",15]]]],[11,"deref_mut","","",169,[[["usize",15]]]],[11,"drop","","",169,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::circulate::flume","",241,[[]]],[11,"into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"vzip","","",241,[[]]],[11,"init","","",241,[[],["usize",15]]],[11,"deref","","",241,[[["usize",15]]]],[11,"deref_mut","","",241,[[["usize",15]]]],[11,"drop","","",241,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::circulate::flume::async","",242,[[]]],[11,"into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"into_future","","",242,[[]]],[11,"try_poll","","",242,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",242,[[]]],[11,"init","","",242,[[],["usize",15]]],[11,"deref","","",242,[[["usize",15]]]],[11,"deref_mut","","",242,[[["usize",15]]]],[11,"drop","","",242,[[["usize",15]]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"vzip","","",243,[[]]],[11,"init","","",243,[[],["usize",15]]],[11,"deref","","",243,[[["usize",15]]]],[11,"deref_mut","","",243,[[["usize",15]]]],[11,"drop","","",243,[[["usize",15]]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"into_future","","",244,[[]]],[11,"try_poll","","",244,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",244,[[]]],[11,"init","","",244,[[],["usize",15]]],[11,"deref","","",244,[[["usize",15]]]],[11,"deref_mut","","",244,[[["usize",15]]]],[11,"drop","","",244,[[["usize",15]]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"try_poll_next","","",245,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"vzip","","",245,[[]]],[11,"init","","",245,[[],["usize",15]]],[11,"deref","","",245,[[["usize",15]]]],[11,"deref_mut","","",245,[[["usize",15]]]],[11,"drop","","",245,[[["usize",15]]]],[11,"from","pliantdb::server::local::core::circulate::flume","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"to_string","","",170,[[],["string",3]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"vzip","","",170,[[]]],[11,"equivalent","","",170,[[],["bool",15]]],[11,"init","","",170,[[],["usize",15]]],[11,"deref","","",170,[[["usize",15]]]],[11,"deref_mut","","",170,[[["usize",15]]]],[11,"drop","","",170,[[["usize",15]]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"to_string","","",171,[[],["string",3]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"vzip","","",171,[[]]],[11,"equivalent","","",171,[[],["bool",15]]],[11,"init","","",171,[[],["usize",15]]],[11,"deref","","",171,[[["usize",15]]]],[11,"deref_mut","","",171,[[["usize",15]]]],[11,"drop","","",171,[[["usize",15]]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"to_string","","",172,[[],["string",3]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"vzip","","",172,[[]]],[11,"equivalent","","",172,[[],["bool",15]]],[11,"init","","",172,[[],["usize",15]]],[11,"deref","","",172,[[["usize",15]]]],[11,"deref_mut","","",172,[[["usize",15]]]],[11,"drop","","",172,[[["usize",15]]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"to_string","","",173,[[],["string",3]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"vzip","","",173,[[]]],[11,"equivalent","","",173,[[],["bool",15]]],[11,"init","","",173,[[],["usize",15]]],[11,"deref","","",173,[[["usize",15]]]],[11,"deref_mut","","",173,[[["usize",15]]]],[11,"drop","","",173,[[["usize",15]]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"to_string","","",174,[[],["string",3]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"vzip","","",174,[[]]],[11,"equivalent","","",174,[[],["bool",15]]],[11,"init","","",174,[[],["usize",15]]],[11,"deref","","",174,[[["usize",15]]]],[11,"deref_mut","","",174,[[["usize",15]]]],[11,"drop","","",174,[[["usize",15]]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"to_string","","",175,[[],["string",3]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"vzip","","",175,[[]]],[11,"equivalent","","",175,[[],["bool",15]]],[11,"init","","",175,[[],["usize",15]]],[11,"deref","","",175,[[["usize",15]]]],[11,"deref_mut","","",175,[[["usize",15]]]],[11,"drop","","",175,[[["usize",15]]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"vzip","","",246,[[]]],[11,"init","","",246,[[],["usize",15]]],[11,"deref","","",246,[[["usize",15]]]],[11,"deref_mut","","",246,[[["usize",15]]]],[11,"drop","","",246,[[["usize",15]]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"vzip","","",247,[[]]],[11,"init","","",247,[[],["usize",15]]],[11,"deref","","",247,[[["usize",15]]]],[11,"deref_mut","","",247,[[["usize",15]]]],[11,"drop","","",247,[[["usize",15]]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"into_iter","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"nfd","","",248,[[],["decompositions",3]]],[11,"nfkd","","",248,[[],["decompositions",3]]],[11,"nfc","","",248,[[],["recompositions",3]]],[11,"nfkc","","",248,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",248,[[],["replacements",3]]],[11,"stream_safe","","",248,[[],["streamsafe",3]]],[11,"vzip","","",248,[[]]],[11,"emit","","",248,[[["binencoder",3]],[["usize",15],["result",4],["protoerror",3]]]],[11,"init","","",248,[[],["usize",15]]],[11,"deref","","",248,[[["usize",15]]]],[11,"deref_mut","","",248,[[["usize",15]]]],[11,"drop","","",248,[[["usize",15]]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"into_iter","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"nfd","","",249,[[],["decompositions",3]]],[11,"nfkd","","",249,[[],["decompositions",3]]],[11,"nfc","","",249,[[],["recompositions",3]]],[11,"nfkc","","",249,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",249,[[],["replacements",3]]],[11,"stream_safe","","",249,[[],["streamsafe",3]]],[11,"vzip","","",249,[[]]],[11,"emit","","",249,[[["binencoder",3]],[["usize",15],["result",4],["protoerror",3]]]],[11,"init","","",249,[[],["usize",15]]],[11,"deref","","",249,[[["usize",15]]]],[11,"deref_mut","","",249,[[["usize",15]]]],[11,"drop","","",249,[[["usize",15]]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"into_iter","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"nfd","","",250,[[],["decompositions",3]]],[11,"nfkd","","",250,[[],["decompositions",3]]],[11,"nfc","","",250,[[],["recompositions",3]]],[11,"nfkc","","",250,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",250,[[],["replacements",3]]],[11,"stream_safe","","",250,[[],["streamsafe",3]]],[11,"vzip","","",250,[[]]],[11,"emit","","",250,[[["binencoder",3]],[["usize",15],["result",4],["protoerror",3]]]],[11,"init","","",250,[[],["usize",15]]],[11,"deref","","",250,[[["usize",15]]]],[11,"deref_mut","","",250,[[["usize",15]]]],[11,"drop","","",250,[[["usize",15]]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"into_iter","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"nfd","","",251,[[],["decompositions",3]]],[11,"nfkd","","",251,[[],["decompositions",3]]],[11,"nfc","","",251,[[],["recompositions",3]]],[11,"nfkc","","",251,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",251,[[],["replacements",3]]],[11,"stream_safe","","",251,[[],["streamsafe",3]]],[11,"vzip","","",251,[[]]],[11,"emit","","",251,[[["binencoder",3]],[["usize",15],["result",4],["protoerror",3]]]],[11,"init","","",251,[[],["usize",15]]],[11,"deref","","",251,[[["usize",15]]]],[11,"deref_mut","","",251,[[["usize",15]]]],[11,"drop","","",251,[[["usize",15]]]],[11,"from","pliantdb::server::local::config","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"vzip","","",176,[[]]],[11,"init","","",176,[[],["usize",15]]],[11,"deref","","",176,[[["usize",15]]]],[11,"deref_mut","","",176,[[["usize",15]]]],[11,"drop","","",176,[[["usize",15]]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"vzip","","",177,[[]]],[11,"init","","",177,[[],["usize",15]]],[11,"deref","","",177,[[["usize",15]]]],[11,"deref_mut","","",177,[[["usize",15]]]],[11,"drop","","",177,[[["usize",15]]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"vzip","","",178,[[]]],[11,"init","","",178,[[],["usize",15]]],[11,"deref","","",178,[[["usize",15]]]],[11,"deref_mut","","",178,[[["usize",15]]]],[11,"drop","","",178,[[["usize",15]]]],[11,"from","pliantdb::server::local::backup","",179,[[]]],[11,"into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"vzip","","",179,[[]]],[11,"init","","",179,[[],["usize",15]]],[11,"deref","","",179,[[["usize",15]]]],[11,"deref_mut","","",179,[[["usize",15]]]],[11,"drop","","",179,[[["usize",15]]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"vzip","","",180,[[]]],[11,"init","","",180,[[],["usize",15]]],[11,"deref","","",180,[[["usize",15]]]],[11,"deref_mut","","",180,[[["usize",15]]]],[11,"drop","","",180,[[["usize",15]]]],[11,"from","pliantdb::server::local","",252,[[]]],[11,"into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"vzip","","",252,[[]]],[11,"init","","",252,[[],["usize",15]]],[11,"deref","","",252,[[["usize",15]]]],[11,"deref_mut","","",252,[[["usize",15]]]],[11,"drop","","",252,[[["usize",15]]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"vzip","","",253,[[]]],[11,"init","","",253,[[],["usize",15]]],[11,"deref","","",253,[[["usize",15]]]],[11,"deref_mut","","",253,[[["usize",15]]]],[11,"drop","","",253,[[["usize",15]]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_string","","",183,[[],["string",3]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"vzip","","",183,[[]]],[11,"init","","",183,[[],["usize",15]]],[11,"deref","","",183,[[["usize",15]]]],[11,"deref_mut","","",183,[[["usize",15]]]],[11,"drop","","",183,[[["usize",15]]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"vzip","","",254,[[]]],[11,"init","","",254,[[],["usize",15]]],[11,"deref","","",254,[[["usize",15]]]],[11,"deref_mut","","",254,[[["usize",15]]]],[11,"drop","","",254,[[["usize",15]]]],[11,"from","pliantdb::server::cli::certificate","",184,[[]]],[11,"into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"vzip","","",184,[[]]],[11,"init","","",184,[[],["usize",15]]],[11,"deref","","",184,[[["usize",15]]]],[11,"deref_mut","","",184,[[["usize",15]]]],[11,"drop","","",184,[[["usize",15]]]],[11,"from","pliantdb::server::cli::serve","",187,[[]]],[11,"into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"vzip","","",187,[[]]],[11,"init","","",187,[[],["usize",15]]],[11,"deref","","",187,[[["usize",15]]]],[11,"deref_mut","","",187,[[["usize",15]]]],[11,"drop","","",187,[[["usize",15]]]],[11,"from","pliantdb::server::cli","",188,[[]]],[11,"into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"vzip","","",188,[[]]],[11,"init","","",188,[[],["usize",15]]],[11,"deref","","",188,[[["usize",15]]]],[11,"deref_mut","","",188,[[["usize",15]]]],[11,"drop","","",188,[[["usize",15]]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"vzip","","",189,[[]]],[11,"init","","",189,[[],["usize",15]]],[11,"deref","","",189,[[["usize",15]]]],[11,"deref_mut","","",189,[[["usize",15]]]],[11,"drop","","",189,[[["usize",15]]]],[11,"from","pliantdb::server","",190,[[]]],[11,"into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"vzip","","",190,[[]]],[11,"init","","",190,[[],["usize",15]]],[11,"deref","","",190,[[["usize",15]]]],[11,"deref_mut","","",190,[[["usize",15]]]],[11,"drop","","",190,[[["usize",15]]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_string","","",191,[[],["string",3]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"vzip","","",191,[[]]],[11,"init","","",191,[[],["usize",15]]],[11,"deref","","",191,[[["usize",15]]]],[11,"deref_mut","","",191,[[["usize",15]]]],[11,"drop","","",191,[[["usize",15]]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"vzip","","",255,[[]]],[11,"init","","",255,[[],["usize",15]]],[11,"deref","","",255,[[["usize",15]]]],[11,"deref_mut","","",255,[[["usize",15]]]],[11,"drop","","",255,[[["usize",15]]]],[11,"fmt","pliantdb::client","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"execute_key_operation","","",202,[[["keyoperation",3]],[["pin",3],["box",3]]]],[11,"clone","","",201,[[],["client",3]]],[11,"clone","","",202,[[],["remotedatabase",3]]],[11,"create_database_with_schema","","",201,[[["schemaname",3],["str",15]],[["box",3],["pin",3]]]],[11,"delete_database","","",201,[[["str",15]],[["box",3],["pin",3]]]],[11,"list_databases","","",201,[[],[["pin",3],["box",3]]]],[11,"list_available_schemas","","",201,[[],[["box",3],["pin",3]]]],[11,"create_subscriber","","",202,[[],[["box",3],["pin",3]]]],[11,"publish","","",202,[[],[["box",3],["pin",3]]]],[11,"publish_to_all","","",202,[[["vec",3],["global",3],["string",3]],[["box",3],["pin",3]]]],[11,"get","","",202,[[["u64",15]],[["box",3],["pin",3]]]],[11,"get_multiple","","",202,[[],[["pin",3],["box",3]]]],[11,"query","","",202,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[11,"query_with_docs","","",202,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[11,"reduce","","",202,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[11,"reduce_grouped","","",202,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"apply_transaction","","",202,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"list_executed_transactions","","",202,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[11,"last_transaction_id","","",202,[[],[["box",3],["pin",3]]]],[11,"from","","",7,[[["error",4]],["error",4]]],[11,"from","","",7,[[["error",4]],["error",4]]],[11,"from","","",7,[[["receiver",4]],["error",4]]],[11,"from","","",7,[[["connecting",3]],["error",4]]],[11,"from","","",7,[[["connect",4]],["error",4]]],[11,"from","","",7,[[["box",3],["global",3],["errorkind",4]],["error",4]]],[11,"from","","",7,[[["sender",4]],["error",4]]],[11,"from","","",7,[[["senderror",3]],["error",4]]],[11,"from","","",7,[[["error",4]],["error",4]]],[11,"from","","",7,[[["recverror",4]],["error",4]]],[11,"from","pliantdb::server::local::core","",120,[[["error",4]],["error",4]]],[11,"from","pliantdb::client","",7,[[["stream",4]],["error",4]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"try_from","pliantdb::client::url","",192,[[["str",15]],[["url",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic::error","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::client::url","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",200,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic::error","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::client::url","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",3,[[]]],[11,"hash","","",199,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",192,[[]]],[11,"index","","",192,[[["position",4],["rangeto",3]],["str",15]]],[11,"index","","",192,[[["rangefull",3]],["str",15]]],[11,"index","","",192,[[["position",4],["rangefrom",3]],["str",15]]],[11,"index","","",192,[[["range",3],["position",4]],["str",15]]],[11,"partial_cmp","","",192,[[["url",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["host",4]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["host",4]],["bool",15]]],[11,"le","","",2,[[["host",4]],["bool",15]]],[11,"gt","","",2,[[["host",4]],["bool",15]]],[11,"ge","","",2,[[["host",4]],["bool",15]]],[11,"from","pliantdb::server::local::core::networking::fabruic::error","",4,[[["errors",3]],["parseerror",4]]],[11,"as_ref","pliantdb::client::url","",192,[[],["str",15]]],[11,"clone","","",192,[[],["url",3]]],[11,"clone","","",5,[[],["syntaxviolation",4]]],[11,"clone","","",3,[[],["origin",4]]],[11,"clone","","",199,[[],["opaqueorigin",3]]],[11,"clone","","",2,[[],["host",4]]],[11,"clone","","",6,[[],["position",4]]],[11,"clone","","",193,[[],["parseoptions",3]]],[11,"clone","pliantdb::server::local::core::networking::fabruic::error","",4,[[],["parseerror",4]]],[11,"drop","pliantdb::client::url","",194,[[]]],[11,"drop","","",200,[[]]],[11,"cmp","","",192,[[["url",3]],["ordering",4]]],[11,"cmp","","",2,[[["host",4]],["ordering",4]]],[11,"as_mut_string","","",194,[[],["string",3]]],[11,"finish","","",194,[[],["url",3]]],[11,"eq","","",3,[[["origin",4]],["bool",15]]],[11,"ne","","",3,[[["origin",4]],["bool",15]]],[11,"eq","pliantdb::server::local::core::networking::fabruic::error","",4,[[["parseerror",4]],["bool",15]]],[11,"eq","pliantdb::client::url","",2,[[["host",4]],["bool",15]]],[11,"eq","","",192,[[["url",3]],["bool",15]]],[11,"eq","","",199,[[["opaqueorigin",3]],["bool",15]]],[11,"ne","","",199,[[["opaqueorigin",3]],["bool",15]]],[11,"eq","","",5,[[["syntaxviolation",4]],["bool",15]]],[11,"from_str","","",192,[[["str",15]],[["url",3],["result",4],["parseerror",4]]]],[11,"fmt","pliantdb::client::url::form_urlencoded","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next","","",195,[[],["option",4]]],[11,"next","","",196,[[],["option",4]]],[11,"next","","",197,[[],[["str",15],["option",4]]]],[11,"size_hint","","",197,[[]]],[11,"clone","","",195,[[],["parse",3]]],[11,"fmt","pliantdb::server::local::core::circulate::flume","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::circulate::flume::select","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::circulate::flume","",247,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",241,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",246,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",250,[[["formatter",3]],[["error",3],["result",4]]]],[11,"len","","",250,[[],["usize",15]]],[11,"fmt","","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::circulate::flume::select","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::circulate::flume","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"is_terminated","pliantdb::server::local::core::circulate::flume::async","",242,[[],["bool",15]]],[11,"is_terminated","","",244,[[],["bool",15]]],[11,"into_iter","pliantdb::server::local::core::circulate::flume","",247,[[]]],[11,"next","","",251,[[],["option",4]]],[11,"next","","",248,[[],["option",4]]],[11,"next","","",249,[[],["option",4]]],[11,"next","","",250,[[],["option",4]]],[11,"poll_next","pliantdb::server::local::core::circulate::flume::async","",245,[[["context",3],["pin",3],["recvstream",3]],[["option",4],["poll",4]]]],[11,"default","pliantdb::server::local::core::circulate::flume","",241,[[],["selector",3]]],[11,"poll","pliantdb::server::local::core::circulate::flume::async","",244,[[["context",3],["pin",3],["recvfut",3]],["poll",4]]],[11,"poll","","",242,[[["context",3],["sendfut",3],["pin",3]],["poll",4]]],[11,"drop","pliantdb::server::local::core::circulate::flume","",246,[[]]],[11,"drop","pliantdb::server::local::core::circulate::flume::async","",244,[[]]],[11,"drop","pliantdb::server::local::core::circulate::flume","",247,[[]]],[11,"drop","pliantdb::server::local::core::circulate::flume::async","",242,[[]]],[11,"is_terminated","","",245,[[],["bool",15]]],[11,"clone","pliantdb::server::local::core::circulate::flume","",172,[[],["sendtimeouterror",4]]],[11,"clone","pliantdb::server::local::core::circulate::flume::select","",169,[[],["selecterror",4]]],[11,"clone","pliantdb::server::local::core::circulate::flume::async","",245,[[],["recvstream",3]]],[11,"clone","pliantdb::server::local::core::circulate::flume","Clone this receiver. [<code>Receiver</code>] acts as a handle to the …",247,[[],["receiver",3]]],[11,"clone","","",171,[[],["trysenderror",4]]],[11,"clone","","",173,[[],["recverror",4]]],[11,"clone","","",175,[[],["recvtimeouterror",4]]],[11,"clone","pliantdb::server::local::core::circulate::flume::async","",243,[[],["sendsink",3]]],[11,"clone","pliantdb::server::local::core::circulate::flume","",174,[[],["tryrecverror",4]]],[11,"clone","","Clone this sender. [<code>Sender</code>] acts as a handle to the …",246,[[],["sender",3]]],[11,"clone","","",170,[[],["senderror",3]]],[11,"eq","","",173,[[["recverror",4]],["bool",15]]],[11,"eq","","",170,[[["senderror",3]],["bool",15]]],[11,"ne","","",170,[[["senderror",3]],["bool",15]]],[11,"eq","","",175,[[["recvtimeouterror",4]],["bool",15]]],[11,"eq","","",172,[[["sendtimeouterror",4]],["bool",15]]],[11,"ne","","",172,[[["sendtimeouterror",4]],["bool",15]]],[11,"eq","","",171,[[["trysenderror",4]],["bool",15]]],[11,"ne","","",171,[[["trysenderror",4]],["bool",15]]],[11,"eq","","",174,[[["tryrecverror",4]],["bool",15]]],[11,"eq","pliantdb::server::local::core::circulate::flume::select","",169,[[["selecterror",4]],["bool",15]]],[11,"poll_ready","pliantdb::server::local::core::circulate::flume::async","",243,[[["sendsink",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",243,[[["sendsink",3],["pin",3]],["result",4]]],[11,"poll_flush","","",243,[[["sendsink",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",243,[[["sendsink",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"try_from","pliantdb::server::local::core::schema","",209,[[["string",3]],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"try_from","","",208,[[["str",15]],[["invalidnameerror",3],["result",4],["authority",3]]]],[11,"try_from","","",208,[[["string",3]],[["invalidnameerror",3],["result",4],["authority",3]]]],[11,"try_from","","",47,[[["str",15]],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"try_from","","",209,[[["str",15]],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"try_from","","",45,[[["str",15]],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[11,"fmt","pliantdb::server::local::core::permissions","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::permissions::pliant","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::test_util","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::permissions","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::permissions::pliant","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::schema","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",208,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::permissions::group","",203,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::test_util","",232,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::transaction","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::kv","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::permissions::pliant","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::test_util","",237,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::connection","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::schema::view::map","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::schema","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",210,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::schema","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::kv","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::schema","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",209,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::test_util","",229,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",126,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::kv","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::test_util","",231,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::connection","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::schema","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::schema::view","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::transaction","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::test_util","",233,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::permissions::role","",204,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::test_util","",234,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::transaction","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::permissions::pliant","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::document","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::transaction","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::test_util","",235,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::permissions::pliant","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::document","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::permissions::pliant","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::test_util","",236,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::transaction","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::document","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::kv","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::test_util","",123,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::permissions::pliant","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::kv","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::connection","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::test_util","",230,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::schema","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",209,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",208,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::schema::view","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::schema","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::schema","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::test_util","",126,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::schema","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"as_big_endian_bytes","pliantdb::server::local::core::kv","",67,[[],[["result",4],["cow",4],["error",3]]]],[11,"from_big_endian_bytes","","",67,[[],[["error",3],["result",4],["timestamp",3]]]],[11,"hash","pliantdb::server::local::core::schema","",47,[[]]],[11,"hash","","",209,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",208,[[]]],[11,"subscribe_to","pliantdb::server::local::core::circulate","",240,[[],[["box",3],["pin",3]]]],[11,"unsubscribe_from","","",240,[[["str",15]],[["box",3],["pin",3]]]],[11,"receiver","","",240,[[],["receiver",3]]],[11,"unique","pliantdb::server::local::core::permissions::group","",203,[[],["bool",15]]],[11,"version","","",203,[[],["u64",15]]],[11,"name","","",203,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",203,[[["document",3]],[["result",4],["error",4],["option",4]]]],[11,"version","pliantdb::server::local::core::test_util","",232,[[],["u64",15]]],[11,"name","","",232,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",232,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"version","","",230,[[],["u64",15]]],[11,"name","","",230,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",230,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",230,[[["bool",15]],[["result",4],["error",4]]]],[11,"unique","","",234,[[],["bool",15]]],[11,"version","","",234,[[],["u64",15]]],[11,"name","","",234,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",234,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"unique","pliantdb::server::local::core::permissions::role","",204,[[],["bool",15]]],[11,"version","","",204,[[],["u64",15]]],[11,"name","","",204,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",204,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"version","pliantdb::server::local::core::test_util","",231,[[],["u64",15]]],[11,"name","","",231,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",231,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",231,[[["bool",15]],[["error",4],["result",4]]]],[11,"version","","",229,[[],["u64",15]]],[11,"name","","",229,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",229,[[["document",3]],[["option",4],["result",4],["error",4]]]],[11,"reduce","","",229,[[["bool",15]],[["error",4],["result",4]]]],[11,"partial_cmp","pliantdb::server::local::core::kv","",67,[[["timestamp",3]],[["option",4],["ordering",4]]]],[11,"lt","","",67,[[["timestamp",3]],["bool",15]]],[11,"le","","",67,[[["timestamp",3]],["bool",15]]],[11,"gt","","",67,[[["timestamp",3]],["bool",15]]],[11,"ge","","",67,[[["timestamp",3]],["bool",15]]],[11,"deserialize","pliantdb::server::local::core::connection","",30,[[],[["database",3],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::schema","",48,[[],[["viewname",3],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::kv","",60,[[],[["keycheck",4],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::permissions","",17,[[],[["result",4],["role",3]]]],[11,"deserialize","pliantdb::server::local::core::document","",31,[[],[["result",4],["header",3]]]],[11,"deserialize","pliantdb::server::local::core::networking","",74,[[],[["databaserequest",4],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::transaction","",58,[[],[["executed",3],["result",4]]]],[11,"deserialize","","",49,[[],[["result",4],["transaction",3]]]],[11,"deserialize","pliantdb::server::local::core::permissions","",8,[[],[["result",4],["permissiongroup",3]]]],[11,"deserialize","pliantdb::server::local::core::test_util","",124,[[],[["unique",3],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::networking","",69,[[],[["result",4],["payload",3]]]],[11,"deserialize","pliantdb::server::local::core::test_util","",123,[[],[["result",4],["basic",3]]]],[11,"deserialize","pliantdb::server::local::core::permissions::pliant","",15,[[],[["result",4],["pubsubaction",4]]]],[11,"deserialize","pliantdb::server::local::core::networking","",86,[[],[["response",4],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::schema","",209,[[],[["name",3],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::kv","",67,[[],[["result",4],["timestamp",3]]]],[11,"deserialize","pliantdb::server::local::core::connection","",27,[[],[["querykey",4],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::schema::view::map","",36,[[],[["result",4],["serialized",3]]]],[11,"deserialize","pliantdb::server::local::core::schema","",37,[[],[["mappedvalue",3],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::permissions::pliant","",16,[[],[["result",4],["kvaction",4]]]],[11,"deserialize","pliantdb::server::local::core::kv","",66,[[],[["result",4],["keystatus",4]]]],[11,"deserialize","pliantdb::server::local::core::networking","",93,[[],[["mappeddocument",3],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::schema","",47,[[],[["schemaname",3],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::networking","",72,[[],[["result",4],["serverrequest",4]]]],[11,"deserialize","pliantdb::server::local::core::kv","",62,[[],[["result",4],["command",4]]]],[11,"deserialize","pliantdb::server::local::core::transaction","",50,[[],[["result",4],["operation",3]]]],[11,"deserialize","pliantdb::server::local::core::networking","",90,[[],[["databaseresponse",4],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::schema","",45,[[],[["collectionname",3],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::transaction","",59,[[],[["result",4],["changeddocument",3]]]],[11,"deserialize","pliantdb::server::local::core::permissions::pliant","",11,[[],[["databaseaction",4],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::transaction","",55,[[],[["result",4],["operationresult",4]]]],[11,"deserialize","pliantdb::server::local::core::document","",33,[[],[["revision",3],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::schema","",46,[[],[["result",4],["invalidnameerror",3]]]],[11,"deserialize","pliantdb::server::local::core::permissions::pliant","",13,[[],[["viewaction",4],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::connection","",28,[[],[["result",4],["accesspolicy",4]]]],[11,"deserialize","pliantdb::server::local::core::networking","",70,[[],[["result",4],["request",4]]]],[11,"deserialize","pliantdb::server::local::core::kv","",65,[[],[["result",4],["output",4]]]],[11,"deserialize","pliantdb::server::local::core::schema","",208,[[],[["result",4],["authority",3]]]],[11,"deserialize","pliantdb::server::local::core::permissions::pliant","",9,[[],[["pliantaction",4],["result",4]]]],[11,"deserialize","pliantdb::server::local::core","",120,[[],[["error",4],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::transaction","",51,[[],[["result",4],["command",4]]]],[11,"deserialize","pliantdb::server::local::core::permissions::pliant","",14,[[],[["result",4],["transactionaction",4]]]],[11,"deserialize","pliantdb::server::local::core::networking","",87,[[],[["serverresponse",4],["result",4]]]],[11,"deserialize","","",94,[[],[["error",4],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::document","",32,[[],[["result",4],["document",3]]]],[11,"deserialize","pliantdb::server::local::core::permissions::pliant","",10,[[],[["serveraction",4],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::kv","",61,[[],[["keyoperation",3],["result",4]]]],[11,"deserialize","pliantdb::server::local::core::permissions::pliant","",12,[[],[["result",4],["documentaction",4]]]],[11,"from","pliantdb::server::local::core::kv","",67,[[["systemtime",3]],["timestamp",3]]],[11,"from","pliantdb::server::local::core","",120,[[["error",3]],["error",4]]],[11,"from","pliantdb::server::local::core::schema::view","",39,[[["error",3]],["error",4]]],[11,"from","pliantdb::server::local::core","",120,[[["permissiondenied",3]],["error",4]]],[11,"from","","",120,[[["invalidnameerror",3]],["error",4]]],[11,"from","pliantdb::server::local::core::schema::view","",41,[[],["serializablevalue",4]]],[11,"as_ref","pliantdb::server::local::core::schema","",209,[[],["str",15]]],[11,"as_ref","pliantdb::server::local::core::test_util","",125,[[],["path",3]]],[11,"as_ref","pliantdb::server::local::core::schema::view","",41,[[]]],[11,"default","pliantdb::server::local::core::transaction","",49,[[],["transaction",3]]],[11,"default","pliantdb::server::local::core::schema","",210,[[],["schematic",3]]],[11,"default","pliantdb::server::local::core::test_util","",124,[[],["unique",3]]],[11,"default","","",123,[[],["basic",3]]],[11,"poll","pliantdb::server::local::core::kv::set","",213,[[["pin",3],["context",3],["builder",3]],["poll",4]]],[11,"poll","pliantdb::server::local::core::kv::get","",211,[[["context",3],["pin",3],["builder",3]],["poll",4]]],[11,"clone","pliantdb::server::local::core::permissions::pliant","",16,[[],["kvaction",4]]],[11,"clone","","",10,[[],["serveraction",4]]],[11,"clone","pliantdb::server::local::core::kv","",67,[[],["timestamp",3]]],[11,"clone","pliantdb::server::local::core::permissions::pliant","",13,[[],["viewaction",4]]],[11,"clone","pliantdb::server::local::core::schema::view::map","",36,[[],["serialized",3]]],[11,"clone","pliantdb::server::local::core::transaction","",50,[[],["operation",3]]],[11,"clone","pliantdb::server::local::core::networking","",74,[[],["databaserequest",4]]],[11,"clone","pliantdb::server::local::core::kv","",60,[[],["keycheck",4]]],[11,"clone","pliantdb::server::local::core::test_util","",126,[[],["harnesstest",4]]],[11,"clone","pliantdb::server::local::core::kv","",65,[[],["output",4]]],[11,"clone","pliantdb::server::local::core::schema","",37,[[],["mappedvalue",3]]],[11,"clone","","",208,[[],["authority",3]]],[11,"clone","pliantdb::server::local::core","",120,[[],["error",4]]],[11,"clone","pliantdb::server::local::core::connection","",30,[[],["database",3]]],[11,"clone","pliantdb::server::local::core::permissions::pliant","",12,[[],["documentaction",4]]],[11,"clone","pliantdb::server::local::core::networking","",72,[[],["serverrequest",4]]],[11,"clone","pliantdb::server::local::core::kv","",61,[[],["keyoperation",3]]],[11,"clone","pliantdb::server::local::core::transaction","",51,[[],["command",4]]],[11,"clone","pliantdb::server::local::core::permissions::pliant","",11,[[],["databaseaction",4]]],[11,"clone","pliantdb::server::local::core::transaction","",49,[[],["transaction",3]]],[11,"clone","pliantdb::server::local::core::permissions::pliant","",14,[[],["transactionaction",4]]],[11,"clone","","",9,[[],["pliantaction",4]]],[11,"clone","pliantdb::server::local::core::connection","",27,[[],["querykey",4]]],[11,"clone","pliantdb::server::local::core::networking","",70,[[],["request",4]]],[11,"clone","pliantdb::server::local::core::transaction","",55,[[],["operationresult",4]]],[11,"clone","pliantdb::server::local::core::document","",33,[[],["revision",3]]],[11,"clone","pliantdb::server::local::core::networking","",69,[[],["payload",3]]],[11,"clone","","",94,[[],["error",4]]],[11,"clone","","",87,[[],["serverresponse",4]]],[11,"clone","","",90,[[],["databaseresponse",4]]],[11,"clone","pliantdb::server::local::core::schema","",47,[[],["schemaname",3]]],[11,"clone","pliantdb::server::local::core::kv","",66,[[],["keystatus",4]]],[11,"clone","pliantdb::server::local::core::schema","",46,[[],["invalidnameerror",3]]],[11,"clone","pliantdb::server::local::core::kv","",62,[[],["command",4]]],[11,"clone","pliantdb::server::local::core::connection","",28,[[],["accesspolicy",4]]],[11,"clone","pliantdb::server::local::core::networking","",93,[[],["mappeddocument",3]]],[11,"clone","pliantdb::server::local::core::schema","",45,[[],["collectionname",3]]],[11,"clone","pliantdb::server::local::core::document","",31,[[],["header",3]]],[11,"clone","pliantdb::server::local::core::schema","",48,[[],["viewname",3]]],[11,"clone","pliantdb::server::local::core::permissions::pliant","",15,[[],["pubsubaction",4]]],[11,"clone","pliantdb::server::local::core::document","",32,[[],["document",3]]],[11,"clone","pliantdb::server::local::core::networking","",86,[[],["response",4]]],[11,"clone","pliantdb::server::local::core::schema","",209,[[],["name",3]]],[11,"clone","pliantdb::server::local::core::transaction","",59,[[],["changeddocument",3]]],[11,"clone","","",58,[[],["executed",3]]],[11,"cmp","pliantdb::server::local::core::kv","",67,[[["timestamp",3]],["ordering",4]]],[11,"collection_name","pliantdb::server::local::core::test_util","",123,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[11,"define_views","","",123,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","pliantdb::server::local::core::permissions","",17,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[11,"define_views","","",17,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","pliantdb::server::local::core::test_util","",236,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[11,"define_views","","",236,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","pliantdb::server::local::core::permissions","",8,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[11,"define_views","","",8,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","pliantdb::server::local::core::test_util","",237,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[11,"define_views","","",237,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","","",235,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[11,"define_views","","",235,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","","",124,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[11,"define_views","","",124,[[["schematic",3]],[["result",4],["error",4]]]],[11,"schema_name","","",233,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"define_collections","","",233,[[["schematic",3]],[["result",4],["error",4]]]],[11,"execute_key_operation","pliantdb::server::local::core::kv::namespaced","",212,[[["keyoperation",3]],[["pin",3],["box",3]]]],[11,"key_namespace","","",212,[[],[["str",15],["option",4]]]],[11,"with_key_namespace","","",212,[[["str",15]],[["namespaced",3],["namespaced",3]]]],[11,"source","pliantdb::server::local::core::schema::view","",39,[[],[["option",4],["error",8]]]],[11,"source","pliantdb::server::local::core","",120,[[],[["option",4],["error",8]]]],[11,"name","pliantdb::server::local::core::permissions::pliant","",16,[[],["actionname",3]]],[11,"name","","",10,[[],["actionname",3]]],[11,"name","","",13,[[],["actionname",3]]],[11,"name","","",12,[[],["actionname",3]]],[11,"name","","",11,[[],["actionname",3]]],[11,"name","","",15,[[],["actionname",3]]],[11,"name","","",9,[[],["actionname",3]]],[11,"name","","",14,[[],["actionname",3]]],[11,"add","pliantdb::server::local::core::kv","",67,[[["duration",3]]]],[11,"sub","","",67,[[["timestamp",3]]]],[11,"into","pliantdb::server::local::core::schema","",209,[[],["string",3]]],[11,"create_subscriber","pliantdb::server::local::core::circulate","",239,[[],[["box",3],["pin",3]]]],[11,"publish","","",239,[[],[["box",3],["pin",3]]]],[11,"publish_to_all","","",239,[[["vec",3],["global",3],["string",3]],[["box",3],["pin",3]]]],[11,"drop","pliantdb::server::local::core::test_util","",125,[[]]],[11,"eq","","",124,[[["unique",3]],["bool",15]]],[11,"ne","","",124,[[["unique",3]],["bool",15]]],[11,"eq","pliantdb::server::local::core::kv","",67,[[["timestamp",3]],["bool",15]]],[11,"ne","","",67,[[["timestamp",3]],["bool",15]]],[11,"eq","pliantdb::server::local::core::schema","",209,[[["name",3]],["bool",15]]],[11,"ne","","",209,[[["name",3]],["bool",15]]],[11,"eq","pliantdb::server::local::core::test_util","",123,[[["basic",3]],["bool",15]]],[11,"ne","","",123,[[["basic",3]],["bool",15]]],[11,"eq","pliantdb::server::local::core::document","",33,[[["revision",3]],["bool",15]]],[11,"ne","","",33,[[["revision",3]],["bool",15]]],[11,"eq","pliantdb::server::local::core::schema","",47,[[["schemaname",3]],["bool",15]]],[11,"ne","","",47,[[["schemaname",3]],["bool",15]]],[11,"eq","pliantdb::server::local::core::document","",31,[[["header",3]],["bool",15]]],[11,"ne","","",31,[[["header",3]],["bool",15]]],[11,"eq","pliantdb::server::local::core::schema","",45,[[["collectionname",3]],["bool",15]]],[11,"ne","","",45,[[["collectionname",3]],["bool",15]]],[11,"eq","","",34,[[["map",3]],["bool",15]]],[11,"ne","","",34,[[["map",3]],["bool",15]]],[11,"eq","pliantdb::server::local::core::connection","",30,[[["database",3]],["bool",15]]],[11,"ne","","",30,[[["database",3]],["bool",15]]],[11,"eq","pliantdb::server::local::core::kv","",66,[[["keystatus",4]],["bool",15]]],[11,"eq","pliantdb::server::local::core::schema","",37,[[["mappedvalue",3]],["bool",15]]],[11,"ne","","",37,[[["mappedvalue",3]],["bool",15]]],[11,"eq","","",48,[[["viewname",3]],["bool",15]]],[11,"ne","","",48,[[["viewname",3]],["bool",15]]],[11,"eq","","",208,[[["authority",3]],["bool",15]]],[11,"ne","","",208,[[["authority",3]],["bool",15]]],[11,"serialize","pliantdb::server::local::core::test_util","",124,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::permissions::pliant","",15,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::connection","",27,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::schema","",46,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::kv","",61,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::schema::view::map","",36,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::document","",33,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::kv","",66,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::schema","",37,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::permissions::pliant","",9,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::test_util","",123,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::transaction","",58,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::connection","",30,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::kv","",62,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::connection","",28,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::schema","",48,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::networking","",69,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::permissions::pliant","",10,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::networking","",72,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::schema","",45,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::document","",31,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::networking","",74,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::transaction","",49,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::permissions::pliant","",14,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::transaction","",55,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::permissions::pliant","",11,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::transaction","",50,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::networking","",70,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core","",120,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::networking","",87,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::schema","",208,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::kv","",65,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::networking","",94,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::transaction","",51,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::document","",32,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::networking","",90,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::permissions::pliant","",12,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::kv","",67,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::networking","",93,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::permissions","",8,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::transaction","",59,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::kv","",60,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::schema","",47,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::networking","",86,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::permissions::pliant","",16,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::permissions","",17,[[],["result",4]]],[11,"serialize","pliantdb::server::local::core::schema","",209,[[],["result",4]]],[11,"fmt","pliantdb::server::local::core::num_traits","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::permissions","",205,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",206,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",206,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",22,[[]]],[11,"serialize","","",206,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"from","","",22,[[["str",15]],["identifier",4]]],[11,"from","","",22,[[["string",3]],["identifier",4]]],[11,"from","","",22,[[["u64",15]],["identifier",4]]],[11,"from","","",205,[[["vec",3],["statement",3],["global",3]],["permissions",3]]],[11,"from","","",20,[[["actionname",3]],["actionnamelist",4]]],[11,"from","","",22,[[["string",3]],["identifier",4]]],[11,"from","","",20,[[["vec",3],["global",3],["actionname",3]],["actionnamelist",4]]],[11,"from","","",20,[[],["actionnamelist",4]]],[11,"as_ref","","",206,[[]]],[11,"into_iter","","",206,[[]]],[11,"deserialize","","",24,[[],[["result",4],["statement",3]]]],[11,"deserialize","","",19,[[],[["actionname",3],["result",4]]]],[11,"deserialize","","",20,[[],[["actionnamelist",4],["result",4]]]],[11,"deserialize","","",23,[[],[["result",4],["permissiondenied",3]]]],[11,"deserialize","","",22,[[],[["result",4],["identifier",4]]]],[11,"deserialize","","",206,[[],[["result",4],["resourcename",3]]]],[11,"default","","",205,[[],["permissions",3]]],[11,"default","","",19,[[],["actionname",3]]],[11,"default","","",206,[[],["resourcename",3]]],[11,"clone","","",19,[[],["actionname",3]]],[11,"clone","","",206,[[],["resourcename",3]]],[11,"clone","","",22,[[],["identifier",4]]],[11,"clone","","",23,[[],["permissiondenied",3]]],[11,"eq","","",22,[[["identifier",4]],["bool",15]]],[11,"ne","","",22,[[["identifier",4]],["bool",15]]],[11,"try_from","pliantdb::server::local::core::networking::fabruic","",225,[[["u8",15],["global",3],["vec",3]],[["certificate",3],["result",4]]]],[11,"try_from","","",227,[[],[["keypair",3],["result",4]]]],[11,"try_from","","",226,[[["vec",3],["global",3],["certificate",3]],[["result",4],["certificatechain",3]]]],[11,"try_from","","",228,[[["u8",15],["global",3],["vec",3]],[["result",4],["privatekey",3]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic::error","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic","",225,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",223,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",220,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic::error","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic","",228,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",218,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic::error","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",215,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic","",219,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic::error","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic","",224,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",117,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic::error","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic","",222,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic::error","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic","",227,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic::error","",216,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic","",221,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic::error","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic","",226,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic::error","",214,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",216,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",215,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",214,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",216,[[]]],[11,"hash","pliantdb::server::local::core::networking::fabruic","",228,[[]]],[11,"hash","","",226,[[]]],[11,"hash","pliantdb::server::local::core::networking::fabruic::error","",215,[[]]],[11,"hash","","",214,[[]]],[11,"hash","","",100,[[]]],[11,"hash","pliantdb::server::local::core::networking::fabruic","",225,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",227,[[]]],[11,"index","","",226,[[["usize",15]]]],[11,"partial_cmp","","",225,[[["certificate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",225,[[["certificate",3]],["bool",15]]],[11,"le","","",225,[[["certificate",3]],["bool",15]]],[11,"gt","","",225,[[["certificate",3]],["bool",15]]],[11,"ge","","",225,[[["certificate",3]],["bool",15]]],[11,"partial_cmp","","",226,[[["certificatechain",3]],[["option",4],["ordering",4]]]],[11,"lt","","",226,[[["certificatechain",3]],["bool",15]]],[11,"le","","",226,[[["certificatechain",3]],["bool",15]]],[11,"gt","","",226,[[["certificatechain",3]],["bool",15]]],[11,"ge","","",226,[[["certificatechain",3]],["bool",15]]],[11,"partial_cmp","pliantdb::server::local::core::networking::fabruic::error","",100,[[["privatekey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",100,[[["privatekey",3]],["bool",15]]],[11,"le","","",100,[[["privatekey",3]],["bool",15]]],[11,"gt","","",100,[[["privatekey",3]],["bool",15]]],[11,"ge","","",100,[[["privatekey",3]],["bool",15]]],[11,"partial_cmp","","",216,[[["alreadyclosed",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","pliantdb::server::local::core::networking::fabruic","",227,[[["keypair",3]],[["option",4],["ordering",4]]]],[11,"lt","","",227,[[["keypair",3]],["bool",15]]],[11,"le","","",227,[[["keypair",3]],["bool",15]]],[11,"gt","","",227,[[["keypair",3]],["bool",15]]],[11,"ge","","",227,[[["keypair",3]],["bool",15]]],[11,"partial_cmp","pliantdb::server::local::core::networking::fabruic::error","",215,[[["certificatechain",3]],[["option",4],["ordering",4]]]],[11,"lt","","",215,[[["certificatechain",3]],["bool",15]]],[11,"le","","",215,[[["certificatechain",3]],["bool",15]]],[11,"gt","","",215,[[["certificatechain",3]],["bool",15]]],[11,"ge","","",215,[[["certificatechain",3]],["bool",15]]],[11,"partial_cmp","pliantdb::server::local::core::networking::fabruic","",117,[[["store",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","pliantdb::server::local::core::networking::fabruic::error","",214,[[["keypair",3]],[["option",4],["ordering",4]]]],[11,"lt","","",214,[[["keypair",3]],["bool",15]]],[11,"le","","",214,[[["keypair",3]],["bool",15]]],[11,"gt","","",214,[[["keypair",3]],["bool",15]]],[11,"ge","","",214,[[["keypair",3]],["bool",15]]],[11,"partial_cmp","pliantdb::server::local::core::networking::fabruic","",228,[[["privatekey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",228,[[["privatekey",3]],["bool",15]]],[11,"le","","",228,[[["privatekey",3]],["bool",15]]],[11,"gt","","",228,[[["privatekey",3]],["bool",15]]],[11,"ge","","",228,[[["privatekey",3]],["bool",15]]],[11,"from","pliantdb::server::local::core::networking::fabruic::error","",108,[[["box",3],["global",3],["errorkind",4]],["sender",4]]],[11,"from","","",107,[[["readerror",4]],["receiver",4]]],[11,"from","","",102,[[["connecterror",4]],["connect",4]]],[11,"from","","",108,[[["writeerror",4]],["sender",4]]],[11,"from","","",102,[[["resolveerror",3],["global",3],["box",3]],["connect",4]]],[11,"from","","",107,[[["errorkind",4]],["receiver",4]]],[11,"from","","",105,[[["sender",4]],["stream",4]]],[11,"from","","",105,[[["connectionerror",4]],["stream",4]]],[11,"from","","",102,[[["error",3]],["connect",4]]],[11,"from","","",108,[[["alreadyclosed",3]],["sender",4]]],[11,"as_ref","pliantdb::server::local::core::networking::fabruic","",225,[[]]],[11,"into_iter","","",226,[[]]],[11,"default","","",218,[[],["builder",3]]],[11,"clone","pliantdb::server::local::core::networking::fabruic::error","",214,[[],["keypair",3]]],[11,"clone","pliantdb::server::local::core::networking::fabruic","",226,[[],["certificatechain",3]]],[11,"clone","","",220,[[],["connection",3]]],[11,"clone","pliantdb::server::local::core::networking::fabruic::error","",104,[[],["connecting",3]]],[11,"clone","","",103,[[],["connection",3]]],[11,"clone","pliantdb::server::local::core::networking::fabruic","",223,[[],["receiver",3]]],[11,"clone","","",221,[[],["endpoint",3]]],[11,"clone","pliantdb::server::local::core::networking::fabruic::error","",100,[[],["privatekey",3]]],[11,"clone","","",216,[[],["alreadyclosed",3]]],[11,"clone","pliantdb::server::local::core::networking::fabruic","",228,[[],["privatekey",3]]],[11,"clone","","",225,[[],["certificate",3]]],[11,"clone","","",117,[[],["store",4]]],[11,"clone","pliantdb::server::local::core::networking::fabruic::error","",215,[[],["certificatechain",3]]],[11,"clone","pliantdb::server::local::core::networking::fabruic","",224,[[],["sender",3]]],[11,"clone","","",227,[[],["keypair",3]]],[11,"cmp","pliantdb::server::local::core::networking::fabruic::error","",214,[[["keypair",3]],["ordering",4]]],[11,"cmp","","",215,[[["certificatechain",3]],["ordering",4]]],[11,"cmp","","",100,[[["privatekey",3]],["ordering",4]]],[11,"cmp","pliantdb::server::local::core::networking::fabruic","",225,[[["certificate",3]],["ordering",4]]],[11,"cmp","","",227,[[["keypair",3]],["ordering",4]]],[11,"cmp","","",226,[[["certificatechain",3]],["ordering",4]]],[11,"cmp","","",228,[[["privatekey",3]],["ordering",4]]],[11,"cmp","","",117,[[["store",4]],["ordering",4]]],[11,"cmp","pliantdb::server::local::core::networking::fabruic::error","",216,[[["alreadyclosed",3]],["ordering",4]]],[11,"zeroize","","",100,[[]]],[11,"zeroize","pliantdb::server::local::core::networking::fabruic","",228,[[]]],[11,"poll_next","","",220,[[["pin",3],["connection",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",223,[[["context",3],["receiver",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",221,[[["context",3],["endpoint",3],["pin",3]],[["option",4],["poll",4]]]],[11,"serialize","","",225,[[],["result",4]]],[11,"serialize","","",117,[[],["result",4]]],[11,"serialize","","",226,[[],["result",4]]],[11,"is_terminated","","",220,[[],["bool",15]]],[11,"is_terminated","","",221,[[],["bool",15]]],[11,"source","pliantdb::server::local::core::networking::fabruic::error","",107,[[],[["option",4],["error",8]]]],[11,"source","","",108,[[],[["option",4],["error",8]]]],[11,"source","","",102,[[],[["option",4],["error",8]]]],[11,"source","","",99,[[],[["option",4],["error",8]]]],[11,"source","","",98,[[],[["option",4],["error",8]]]],[11,"source","","",101,[[],[["option",4],["error",8]]]],[11,"source","","",105,[[],[["option",4],["error",8]]]],[11,"deserialize","pliantdb::server::local::core::networking::fabruic","",117,[[],[["result",4],["store",4]]]],[11,"deserialize","","",225,[[],[["result",4],["certificate",3]]]],[11,"deserialize","","",227,[[],[["result",4],["keypair",3]]]],[11,"deserialize","","",226,[[],[["result",4],["certificatechain",3]]]],[11,"deserialize","","",228,[[],[["result",4],["privatekey",3]]]],[11,"as_ref","","",228,[[["privatekey",3]]]],[11,"into","","",228,[[["privatekey",3]],[["global",3],["vec",3],["u8",15]]]],[11,"serialize","","",228,[[["privatekey",3]],["result",4]]],[11,"drop","","",228,[[]]],[11,"drop","pliantdb::server::local::core::networking::fabruic::error","",100,[[]]],[11,"eq","pliantdb::server::local::core::networking::fabruic","",225,[[["certificate",3]],["bool",15]]],[11,"ne","","",225,[[["certificate",3]],["bool",15]]],[11,"eq","pliantdb::server::local::core::networking::fabruic::error","",214,[[["keypair",3]],["bool",15]]],[11,"ne","","",214,[[["keypair",3]],["bool",15]]],[11,"eq","pliantdb::server::local::core::networking::fabruic","",117,[[["store",4]],["bool",15]]],[11,"eq","pliantdb::server::local::core::networking::fabruic::error","",215,[[["certificatechain",3]],["bool",15]]],[11,"ne","","",215,[[["certificatechain",3]],["bool",15]]],[11,"eq","","",216,[[["alreadyclosed",3]],["bool",15]]],[11,"eq","","",104,[[["connecting",3]],["bool",15]]],[11,"ne","","",104,[[["connecting",3]],["bool",15]]],[11,"eq","pliantdb::server::local::core::networking::fabruic","",227,[[["keypair",3]],["bool",15]]],[11,"ne","","",227,[[["keypair",3]],["bool",15]]],[11,"eq","","",226,[[["certificatechain",3]],["bool",15]]],[11,"ne","","",226,[[["certificatechain",3]],["bool",15]]],[11,"eq","pliantdb::server::local::core::networking::fabruic::error","",100,[[["privatekey",3]],["bool",15]]],[11,"ne","","",100,[[["privatekey",3]],["bool",15]]],[11,"eq","pliantdb::server::local::core::networking::fabruic","",228,[[["privatekey",3]],["bool",15]]],[11,"ne","","",228,[[["privatekey",3]],["bool",15]]],[11,"eq","pliantdb::server::local::core::networking::fabruic::error","",103,[[["connection",3]],["bool",15]]],[11,"ne","","",103,[[["connection",3]],["bool",15]]],[11,"serialize","pliantdb::server::local::core::networking::fabruic","",227,[[["keypair",3]],["result",4]]],[11,"set_root_certificates","","",218,[[["builder",3]]]],[11,"fmt","pliantdb::server::local::core::networking::fabruic::error","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",114,[[],["error",4]]],[11,"eq","","",114,[[["error",4]],["bool",15]]],[11,"fmt","","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_error_kind","","",115,[[["errorkind",4]],["x509error",4]]],[11,"append","","",115,[[["x509error",4],["errorkind",4]],["x509error",4]]],[11,"from","","",116,[[["x509error",4]],[["err",4],["x509error",4]]]],[11,"from","","",115,[[["bererror",4]],["x509error",4]]],[11,"from","","",115,[[["errorkind",4]],["x509error",4]]],[11,"source","","",115,[[],[["option",4],["error",8]]]],[11,"eq","","",115,[[["x509error",4]],["bool",15]]],[11,"ne","","",115,[[["x509error",4]],["bool",15]]],[11,"from","","",116,[[["bererror",4]],[["bererror",4],["err",4]]]],[11,"fmt","","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",116,[[],["err",4]]],[11,"source","","",116,[[],[["option",4],["error",8]]]],[11,"eq","","",116,[[["err",4]],["bool",15]]],[11,"ne","","",116,[[["err",4]],["bool",15]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"description","","",109,[[],["str",15]]],[11,"cause","","",109,[[],[["option",4],["error",8]]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",112,[[["readableerror",4]],["readerror",4]]],[11,"source","","",113,[[],[["option",4],["error",8]]]],[11,"clone","","",113,[[],["writeerror",4]]],[11,"clone","","",112,[[],["readerror",4]]],[11,"eq","","",113,[[["writeerror",4]],["bool",15]]],[11,"ne","","",113,[[["writeerror",4]],["bool",15]]],[11,"eq","","",112,[[["readerror",4]],["bool",15]]],[11,"ne","","",112,[[["readerror",4]],["bool",15]]],[11,"fmt","","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",111,[[["error",3]],["connectionerror",4]]],[11,"from","","",111,[[["close",4]],["connectionerror",4]]],[11,"clone","","",111,[[],["connectionerror",4]]],[11,"clone","","",110,[[],["connecterror",4]]],[11,"source","","",110,[[],[["option",4],["error",8]]]],[11,"source","","",111,[[],[["option",4],["error",8]]]],[11,"eq","","",110,[[["connecterror",4]],["bool",15]]],[11,"ne","","",110,[[["connecterror",4]],["bool",15]]],[11,"eq","","",111,[[["connectionerror",4]],["bool",15]]],[11,"ne","","",111,[[["connectionerror",4]],["bool",15]]],[11,"fmt","","",217,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",217,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",217,[[["poisonerror",3]],["resolveerror",3]]],[11,"from","","",217,[[["resolveerrorkind",4]],["resolveerror",3]]],[11,"from","","",217,[[["string",3]],["resolveerror",3]]],[11,"from","","",217,[[["str",15]],["resolveerror",3]]],[11,"from","","",217,[[["protoerror",3]],["resolveerror",3]]],[11,"from","","",217,[[["error",3]],["resolveerror",3]]],[11,"should_retry","","",217,[[],["bool",15]]],[11,"attempted","","",217,[[],["bool",15]]],[11,"clone","","",217,[[],["resolveerror",3]]],[11,"fmt","pliantdb::server::local::core::circulate","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",240,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",239,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","","",168,[[],[["message",3],["result",4]]]],[11,"default","","",239,[[],["relay",3]]],[11,"serialize","","",168,[[],["result",4]]],[11,"clone","","",240,[[],["subscriber",3]]],[11,"clone","","",168,[[],["message",3]]],[11,"clone","","",239,[[],["relay",3]]],[11,"into_client_request","pliantdb::client::url","",192,[[],[["result",4],["request",3],["error",4]]]],[11,"fmt","pliantdb::server::local::config","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::backup","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local","",254,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::config","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local","",253,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local::config","",176,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::local","",183,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",183,[[["formatter",3]],[["error",3],["result",4]]]],[11,"execute_key_operation","","",253,[[["keyoperation",3]],[["pin",3],["box",3]]]],[11,"create_database_with_schema","","",254,[[["schemaname",3],["str",15]],[["box",3],["pin",3]]]],[11,"delete_database","","",254,[[["str",15]],[["box",3],["pin",3]]]],[11,"list_databases","","",254,[[],[["pin",3],["box",3]]]],[11,"list_available_schemas","","",254,[[],[["box",3],["pin",3]]]],[11,"apply_transaction","","",253,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"get","","",253,[[["u64",15]],[["box",3],["pin",3]]]],[11,"get_multiple","","",253,[[],[["pin",3],["box",3]]]],[11,"list_executed_transactions","","",253,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[11,"query","","",253,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[11,"query_with_docs","","",253,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[11,"reduce","","",253,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[11,"reduce_grouped","","",253,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[11,"last_transaction_id","","",253,[[],[["box",3],["pin",3]]]],[11,"from","","",183,[[["box",3],["global",3],["errorkind",4]],["error",4]]],[11,"from","","",183,[[["error",4]],["error",4]]],[11,"from","","",183,[[["error",3]],["error",4]]],[11,"from","pliantdb::server::local::core","",120,[[["error",4]],["error",4]]],[11,"from","pliantdb::server::local","",183,[[["error",4]],["error",4]]],[11,"from","","",183,[[["recverror",4]],["error",4]]],[11,"from","","",183,[[["invalidnameerror",3]],["error",4]]],[11,"from","","",183,[[["error",3],["arc",3]],["error",4]]],[11,"from","","",183,[[["error",4]],["error",4]]],[11,"default","pliantdb::server::local::config","",176,[[],["configuration",3]]],[11,"default","","",177,[[],["tasks",3]]],[11,"default","","",178,[[],["views",3]]],[11,"clone","","",176,[[],["configuration",3]]],[11,"clone","pliantdb::server::local","",254,[[],["storage",3]]],[11,"clone","","",253,[[],["database",3]]],[11,"clone","pliantdb::server::local::config","",177,[[],["tasks",3]]],[11,"clone","","",178,[[],["views",3]]],[11,"subscribe_to","pliantdb::server::local","",252,[[],[["box",3],["pin",3]]]],[11,"unsubscribe_from","","",252,[[["str",15]],[["box",3],["pin",3]]]],[11,"receiver","","",252,[[],["receiver",3]]],[11,"source","","",183,[[],[["option",4],["error",8]]]],[11,"clap","pliantdb::server::local::backup","",179,[[],["app",3]]],[11,"from_clap","","",179,[[["argmatches",3]],["cli",3]]],[11,"clap","","",180,[[],["app",3]]],[11,"from_clap","","",180,[[["argmatches",3]],["command",4]]],[11,"create_subscriber","pliantdb::server::local","",253,[[],[["box",3],["pin",3]]]],[11,"publish","","",253,[[],[["box",3],["pin",3]]]],[11,"publish_to_all","","",253,[[["vec",3],["global",3],["string",3]],[["box",3],["pin",3]]]],[11,"fmt","pliantdb::server::cli::serve","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",255,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::cli","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::cli::certificate","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::cli","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clap","pliantdb::server::cli","",189,[[],["app",3]]],[11,"from_clap","","",189,[[["argmatches",3]],["command",4]]],[11,"clap","pliantdb::server::cli::serve","",187,[[],["app",3]]],[11,"from_clap","","",187,[[["argmatches",3]],["serve",3]]],[11,"clap","pliantdb::server::cli::certificate","",184,[[],["app",3]]],[11,"from_clap","","",184,[[["argmatches",3]],["command",4]]],[11,"clap","pliantdb::server::cli","",188,[[],["app",3]]],[11,"from_clap","","",188,[[["argmatches",3]],["cli",3]]],[11,"deref","pliantdb::server","",255,[[]]],[11,"from","","",191,[[["box",3],["global",3],["errorkind",4]],["error",4]]],[11,"from","","",191,[[["privatekey",3]],["error",4]]],[11,"from","","",191,[[["error",3]],["error",4]]],[11,"from","","",191,[[["error",4]],["error",4]]],[11,"from","","",191,[[["error",4]],["error",4]]],[11,"from","","",191,[[["error",4]],["error",4]]],[11,"from","","",191,[[["connection",3]],["error",4]]],[11,"from","pliantdb::server::local::core","",120,[[["error",4]],["error",4]]],[11,"from","pliantdb::server","",191,[[["alreadyclosed",3]],["error",4]]],[11,"from","","",191,[[["incoming",4]],["error",4]]],[11,"from","","",191,[[["keypair",3]],["error",4]]],[11,"from","","",191,[[["connecting",3]],["error",4]]],[11,"from","","",191,[[["certificatechain",3]],["error",4]]],[11,"from","","",191,[[["invalidnameerror",3]],["error",4]]],[11,"from","","",191,[[["receiver",4]],["error",4]]],[11,"create_database_with_schema","","",255,[[["schemaname",3],["str",15]],[["box",3],["pin",3]]]],[11,"delete_database","","",255,[[["str",15]],[["box",3],["pin",3]]]],[11,"list_databases","","",255,[[],[["pin",3],["box",3]]]],[11,"list_available_schemas","","",255,[[],[["box",3],["pin",3]]]],[11,"default","","",190,[[],["configuration",3]]],[11,"clone","","",255,[[],["server",3]]],[11,"source","","",191,[[],[["option",4],["error",8]]]],[11,"fmt","pliantdb::cli","",0,[[["formatter",3]],["result",6]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_subcommand","","",0,[[],["option",4]]],[11,"is_subcommand","","",0,[[],["bool",15]]],[11,"parse","pliantdb::client::url","Parse an absolute URL from a string.",192,[[["str",15]],[["url",3],["result",4],["parseerror",4]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its …",192,[[["str",15]],[["url",3],["result",4],["parseerror",4]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",192,[[["str",15]],[["url",3],["result",4],["parseerror",4]]]],[11,"make_relative","","Creates a relative URL if possible, with this URL as the …",192,[[["url",3]],[["option",4],["string",3]]]],[11,"options","","Return a default <code>ParseOptions</code> that can fully configure …",192,[[],["parseoptions",3]]],[11,"as_str","","Return the serialization of this URL.",192,[[],["str",15]]],[11,"into_string","","Return the serialization of this URL.",192,[[],["string",3]]],[11,"origin","","Return the origin of this URL (…",192,[[],["origin",4]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII …",192,[[],["str",15]]],[11,"has_authority","","Return whether the URL has an \'authority\', which can …",192,[[],["bool",15]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, …",192,[[],["bool",15]]],[11,"username","","Return the username for this URL (typically the empty …",192,[[],["str",15]]],[11,"password","","Return the password for this URL, if any, as a …",192,[[],[["str",15],["option",4]]]],[11,"has_host","","Equivalent to <code>url.host().is_some()</code>.",192,[[],["bool",15]]],[11,"host_str","","Return the string representation of the host (domain or …",192,[[],[["str",15],["option",4]]]],[11,"host","","Return the parsed representation of the host for this URL.…",192,[[],[["option",4],["host",4]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP …",192,[[],[["str",15],["option",4]]]],[11,"port","","Return the port number for this URL, if any.",192,[[],[["option",4],["u16",15]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port …",192,[[],[["option",4],["u16",15]]]],[11,"socket_addrs","","Resolve a URL’s host and port number to <code>SocketAddr</code>.",192,[[],[["result",4],["error",3],["vec",3]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII …",192,[[],["str",15]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator …",192,[[],[["split",3],["option",4]]]],[11,"query","","Return this URL’s query string, if any, as a …",192,[[],[["str",15],["option",4]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as …",192,[[],["parse",3]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",192,[[],[["str",15],["option",4]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",192,[[["option",4],["str",15]]]],[11,"set_query","","Change this URL’s query string.",192,[[["option",4],["str",15]]]],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a …",192,[[],[["serializer",3],["urlquery",3]]]],[11,"set_path","","Change this URL’s path.",192,[[["str",15]]]],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s …",192,[[],[["result",4],["pathsegmentsmut",3]]]],[11,"set_port","","Change this URL’s port number.",192,[[["option",4],["u16",15]],["result",4]]],[11,"set_host","","Change this URL’s host.",192,[[["option",4],["str",15]],[["result",4],["parseerror",4]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",192,[[["ipaddr",4]],["result",4]]],[11,"set_password","","Change this URL’s password.",192,[[["option",4],["str",15]],["result",4]]],[11,"set_username","","Change this URL’s username.",192,[[["str",15]],["result",4]]],[11,"set_scheme","","Change this URL’s scheme.",192,[[["str",15]],["result",4]]],[11,"from_file_path","","Convert a file name as <code>std::path::Path</code> into an URL in the …",192,[[],[["url",3],["result",4]]]],[11,"from_directory_path","","Convert a directory name as <code>std::path::Path</code> into an URL …",192,[[],[["url",3],["result",4]]]],[11,"to_file_path","","Assuming the URL is in the <code>file</code> scheme or similar, …",192,[[],[["result",4],["pathbuf",3]]]],[11,"base_url","","Change the base URL",193,[[["url",3],["option",4]],["parseoptions",3]]],[11,"encoding_override","","Override the character encoding of query strings. This is …",193,[[["option",4],["fn",8]],["parseoptions",3]]],[11,"syntax_violation_callback","","Call the provided function or closure for a non-fatal …",193,[[["option",4],["fn",8]],["parseoptions",3]]],[11,"parse","","Parse an URL string with the configuration so far.",193,[[["str",15]],[["url",3],["result",4],["parseerror",4]]]],[11,"into_owned","pliantdb::client::url::form_urlencoded","Return a new iterator that yields pairs of <code>String</code> instead …",195,[[],["parseintoowned",3]]],[11,"new","","Create a new <code>application/x-www-form-urlencoded</code> serializer …",198,[[],["serializer",3]]],[11,"for_suffix","","Create a new <code>application/x-www-form-urlencoded</code> serializer …",198,[[["usize",15]],["serializer",3]]],[11,"clear","","Remove any existing name/value pair.",198,[[],["serializer",3]]],[11,"encoding_override","","Set the character encoding to be used for names and …",198,[[["option",4],["fn",8]],["serializer",3]]],[11,"append_pair","","Serialize and append a name/value pair.",198,[[["str",15]],["serializer",3]]],[11,"append_key_only","","Serialize and append a name of parameter without any …",198,[[["str",15]],["serializer",3]]],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",198,[[],["serializer",3]]],[11,"extend_keys_only","","Serialize and append a number of names without values.",198,[[],["serializer",3]]],[11,"finish","","If this serializer was constructed with a string, take …",198,[[]]],[11,"to_owned","pliantdb::client::url","Return a copy of <code>self</code> that owns an allocated <code>String</code> but …",2,[[],[["host",4],["string",3]]]],[11,"parse","","Parse a host: either an IPv6 address in [] square …",2,[[["str",15]],[["parseerror",4],["host",4],["result",4]]]],[11,"parse_opaque","","",2,[[["str",15]],[["parseerror",4],["host",4],["result",4]]]],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",3,[[],["origin",4]]],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple…",3,[[],["bool",15]]],[11,"ascii_serialization","","…",3,[[],["string",3]]],[11,"unicode_serialization","","…",3,[[],["string",3]]],[11,"description","","",5,[[],["str",15]]],[11,"clear","","Remove all segments in the path, leaving the minimal …",200,[[],["pathsegmentsmut",3]]],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is …",200,[[],["pathsegmentsmut",3]]],[11,"pop","","Remove the last segment of this URL’s path.",200,[[],["pathsegmentsmut",3]]],[11,"push","","Append the given segment at the end of this URL’s path.",200,[[["str",15]],["pathsegmentsmut",3]]],[11,"extend","","Append each segment from the given iterator at the end of …",200,[[],["pathsegmentsmut",3]]],[11,"new","pliantdb::client","Initialize a client connecting to <code>url</code> with <code>certificate</code> …",201,[[["url",3],["option",4],["certificate",3]]]],[11,"database","","Returns a structure representing a remote database. No …",201,[[["str",15]]]],[11,"to_owned","pliantdb::server::local::core::permissions","Convert this identifier to an un-borrowed identifier.",22,[[],["identifier",4]]],[11,"allowed_to","","Evaluate whether the <code>action</code> is allowed to be taken upon …",205,[[],["bool",15]]],[11,"to_owned","","Convert a borrowed name to an un-borrwed name.",206,[[],["resourcename",3]]],[11,"any","","Creates a <code>ResourceName</code> that matches any identifier.",206,[[],["resourcename",3]]],[11,"named","","Creates a <code>ResourceName</code> with <code>name</code>.",206,[[],["resourcename",3]]],[11,"and","","Adds another name segment.",206,[[],["resourcename",3]]],[11,"new","pliantdb::server::local::core::connection","Creates a new instance using <code>connection</code>.",207,[[],["collection",3]]],[11,"push","","Adds a new <code>Document<Cl></code> with the contents <code>item</code>.",207,[[]]],[11,"get","","Retrieves a <code>Document<Cl></code> with <code>id</code> from the connection.",207,[[["u64",15]]]],[11,"with_key","","Filters for entries in the view with <code>key</code>.",26,[[],["view",3]]],[11,"with_keys","","Filters for entries in the view with <code>keys</code>.",26,[[["global",3],["vec",3]],["view",3]]],[11,"with_key_range","","Filters for entries in the view with the range <code>keys</code>.",26,[[["range",3]],["view",3]]],[11,"with_access_policy","","Sets the access policy for queries.",26,[[["accesspolicy",4]],["view",3]]],[11,"query","","Executes the query and retrieves the results.",26,[[]]],[11,"query_with_docs","","Executes the query and retrieves the results with the …",26,[[]]],[11,"reduce","","Executes a reduce over the results of the query",26,[[]]],[11,"reduce_grouped","","Executes a reduce over the results of the query",26,[[]]],[11,"serialized","","Converts this key to a serialized format using the [<code>Key</code>] …",27,[[],[["error",4],["result",4],["querykey",4]]]],[11,"deserialized","","Deserializes the bytes into <code>K</code> via the [<code>Key</code>] trait.",27,[[],[["result",4],["querykey",4],["error",4]]]],[11,"new","pliantdb::server::local::core::document","Creates a new document with <code>contents</code>.",32,[[["collectionname",3],["cow",4],["u64",15]],["document",3]]],[11,"with_contents","","Creates a new document with serialized bytes from <code>contents</code>…",32,[[["collectionname",3],["u64",15]],[["result",4],["document",3],["error",3]]]],[11,"contents","","Retrieves <code>contents</code> through deserialization into the type <code>D</code>…",32,[[],[["result",4],["error",3]]]],[11,"set_contents","","Serializes and stores <code>contents</code> into this document.",32,[[],[["error",3],["result",4]]]],[11,"create_new_revision","","Creates a new revision.",32,[[["cow",4]],[["option",4],["document",3]]]],[11,"emit","","Creates a <code>Map</code> result with an empty key and value.",32,[[],["map",3]]],[11,"emit_key","","Creates a <code>Map</code> result with a <code>key</code> and an empty value.",32,[[],["map",3]]],[11,"emit_value","","Creates a <code>Map</code> result with <code>value</code> and an empty key.",32,[[],["map",3]]],[11,"emit_key_and_value","","Creates a <code>Map</code> result with a <code>key</code> and <code>value</code>.",32,[[],["map",3]]],[11,"to_owned","","Clone the document\'s data so that it\'s no longer borrowed …",32,[[],["document",3]]],[11,"new","","Creates the first revision for a document with the SHA256 …",33,[[],["revision",3]]],[11,"with_id","","Creates a revision with <code>id</code> for a document with the SHA256 …",33,[[["u32",15]],["revision",3]]],[11,"next_revision","","Creates the next revision in sequence with an updated …",33,[[],[["option",4],["revision",3]]]],[11,"serialized","pliantdb::server::local::core::schema","Serializes this map.",34,[[],[["serialized",3],["error",4],["result",4]]]],[11,"new","","Creates a new Map entry for the document with id <code>source</code>.",34,[[["u64",15]],["map",3]]],[11,"deserialized","pliantdb::server::local::core::schema::view::map","Deserializes this map.",36,[[],[["result",4],["error",4],["map",3]]]],[11,"new","pliantdb::server::local::core::schema","Creates a new collection name.",45,[[],[["result",4],["invalidnameerror",3],["collectionname",3]]]],[11,"new","","Creates a new name after validating it.",209,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"new","","Creates a new schema name.",47,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"new","","Creates a new view name.",48,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[11,"define_collection","","Adds the collection <code>C</code> and its views.",210,[[],[["result",4],["error",4]]]],[11,"define_view","","Adds the view <code>V</code>.",210,[[],[["result",4],["error",4]]]],[11,"contains","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",210,[[],["bool",15]]],[11,"contains_collection_id","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",210,[[["collectionname",3]],["bool",15]]],[11,"view_by_name","","Looks up a [<code>view::Serialized</code>] by name.",210,[[["viewname",3]],[["option",4],["serialized",8]]]],[11,"view","","Looks up a [<code>view::Serialized</code>] through the the type <code>V</code>.",210,[[],[["option",4],["serialized",8]]]],[11,"views","","Iterates over all registered views.",210,[[]]],[11,"views_in_collection","","Iterates over all views that belong to <code>collection</code>.",210,[[["collectionname",3]],[["option",4],["vec",3]]]],[11,"unique_views_in_collection","","Iterates over all views that are unique that belong to …",210,[[["collectionname",3]],[["option",4],["vec",3]]]],[11,"push","pliantdb::server::local::core::transaction","Adds an operation to the transaction.",49,[[["operation",3]]]],[11,"to_owned","","Convert this structure to be free of borrows.",58,[[],["executed",3]]],[11,"now","pliantdb::server::local::core::kv","Returns the current timestamp according to the OS. Uses […",67,[[],["timestamp",3]]],[11,"and_delete","pliantdb::server::local::core::kv::get","Delete the key after retrieving the value.",211,[[],["builder",3]]],[11,"expire_in","pliantdb::server::local::core::kv::set","Set this key to expire after <code>duration</code> from now.",213,[[["duration",3]],["builder",3]]],[11,"expire_at","","Set this key to expire at the provided <code>time</code>.",213,[[["systemtime",3]],["builder",3]]],[11,"keep_existing_expiration","","If the key already exists, do not update the currently …",213,[[],["builder",3]]],[11,"only_if_exists","","Only set the value if this key already exists.",213,[[],["builder",3]]],[11,"only_if_vacant","","Only set the value if this key isn\'t present.",213,[[],["builder",3]]],[11,"returning_previous","","Executes the Set operation, requesting the previous value …",213,[[]]],[11,"deserialized","pliantdb::server::local::core::networking","Deserialize into a <code>MappedDocument</code>.",93,[[],[["error",4],["result",4],["mappeddocument",3]]]],[11,"kind","pliantdb::server::local::core::networking::fabruic::error","Get the kind of the error",217,[[],["resolveerrorkind",4]]],[11,"from_response","","A conversion to determine if the response is an error",217,[[["bool",15],["dnsresponse",3]],[["dnsresponse",3],["resolveerror",3],["result",4]]]],[11,"is_incomplete","","Tests if the result is Incomplete",116,[[],["bool",15]]],[11,"map","","Applies the given function to the inner error",116,[[],["err",4]]],[11,"convert","","Automatically converts between errors if the underlying …",116,[[["err",4]],["err",4]]],[11,"map_input","","Maps <code>Err<(T, ErrorKind)></code> to <code>Err<(U, ErrorKind)></code> with the …",116,[[],["err",4]]],[11,"to_owned","","Obtaining ownership",116,[[],["err",4]]],[11,"to_owned","","Automatically converts between errors if the underlying …",116,[[],["err",4]]],[11,"new","pliantdb::server::local::core::networking::fabruic","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …",218,[[],["builder",3]]],[11,"set_address","","Set\'s the [<code>SocketAddr</code>] to bind to.",218,[[["socketaddr",4]]]],[11,"address","","Returns the [<code>SocketAddr</code>] to bind to.",218,[[],["socketaddr",4]]],[11,"set_server_key_pair","","Set a server certificate [<code>KeyPair</code>], use [<code>None</code>] to remove …",218,[[["option",4],["keypair",3]]]],[11,"server_key_pair","","Returns the server certificate [<code>KeyPair</code>].",218,[[],["option",4]]],[11,"set_client_key_pair","","Set a client certificate [<code>KeyPair</code>], use [<code>None</code>] to remove …",218,[[["option",4],["keypair",3]]]],[11,"client_key_pair","","Returns the client certificate [<code>KeyPair</code>].",218,[[],["option",4]]],[11,"set_protocols","","Set the protocols to accept, in order of descending …",218,[[]]],[11,"protocols","","Returns the set protocols.",218,[[]]],[11,"set_trust_dns","","Controls the use of <code>trust-dns</code> for [<code>Endpoint::connect</code>].",218,[[["bool",15]]]],[11,"disable_trust_dns","","Disables the use of <code>trust-dns</code> for [<code>Endpoint::connect</code>] …",218,[[]]],[11,"trust_dns","","Returns if <code>trust-dns</code> is enabled.",218,[[],["bool",15]]],[11,"set_dnssec","","Controls DNSSEC validation for <code>trust-dns</code> in […",218,[[["bool",15]]]],[11,"dnssec","","Returns if DNSSEC is enabled for <code>trust-dns</code>.",218,[[],["bool",15]]],[11,"set_hosts_file","","Controls <code>/etc/hosts</code> file support for <code>trust-dns</code> in […",218,[[["bool",15]]]],[11,"hosts_file","","Returns if <code>/etc/hosts</code> file support is enabled for …",218,[[],["bool",15]]],[11,"set_store","","Set\'s the default root certificate store.",218,[[["store",4]]]],[11,"store","","Returns the set [<code>Store</code>].",218,[[],["store",4]]],[11,"build","","Consumes [<code>Builder</code>] to build [<code>Endpoint</code>]. Must be called …",218,[[],[["endpoint",3],["builder",3],["result",4]]]],[11,"protocol","","The negotiated application protocol. See …",219,[[]]],[11,"accept","","Accept the [<code>Connection</code>] with the given <code>T</code> as the type …",219,[[]]],[11,"open_stream","","Open a stream on this [<code>Connection</code>], allowing to send data …",220,[[]]],[11,"protocol","","The negotiated application protocol. See …",220,[[],[["vec",3],["option",4]]]],[11,"peer_identity","","Get the peer’s identity, if available.",220,[[],[["certificatechain",3],["option",4]]]],[11,"remote_address","","The peer\'s address. Clients may change addresses at will, …",220,[[],["socketaddr",4]]],[11,"close_incoming","","Prevents any new incoming streams. Already incoming …",220,[[]]],[11,"close","","Close the [<code>Connection</code>] immediately.",220,[[]]],[11,"builder","","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …",221,[[],["builder",3]]],[11,"new_client","","Simplified version of creating a client. See [<code>Builder</code>] …",221,[[],[["endpoint",3],["result",4],["error",3]]]],[11,"new_server","","Simplified version of creating a server. See [<code>Builder</code>] …",221,[[["u16",15],["keypair",3]],[["endpoint",3],["result",4],["error",3]]]],[11,"connect","","Establishes a new <code>Connection</code> to a server. The servers […",221,[[]]],[11,"connect_pinned","","Establishes a new <code>Connection</code> to a server.",221,[[["certificate",3],["option",4],["keypair",3]]]],[11,"local_address","","Get the local [<code>SocketAddr</code>] the underlying socket is bound …",221,[[],[["socketaddr",4],["result",4],["error",3]]]],[11,"close","","Close all of this [<code>Endpoint</code>]\'s <code>Connection</code>s immediately …",221,[[]]],[11,"close_incoming","","Prevents any new incoming connections. Already incoming …",221,[[]]],[11,"wait_idle","","Wait for all <code>Connection</code>s to the [<code>Endpoint</code>] to be cleanly …",221,[[]]],[11,"type","","Returns the type information for that stream.",222,[[]]],[11,"accept","","Accept the incoming stream with the given types.",222,[[]]],[11,"finish","","Wait for the [<code>Receiver</code>] part of the stream to finish …",223,[[]]],[11,"close","","Close the [<code>Receiver</code>] immediately. To close a [<code>Receiver</code>] …",223,[[]]],[11,"send","","Send <code>data</code> into the stream.",224,[[],[["result",4],["sender",4]]]],[11,"finish","","Shut down the [<code>Send</code>] part of the stream gracefully.",224,[[]]],[11,"close","","Close the [<code>Sender</code>] immediately.",224,[[]]],[11,"from_der","","Build [<code>Certificate</code>] from DER-format. This is not meant as …",225,[[],[["result",4],["certificate",3],["certificate",3]]]],[11,"unchecked_from_der","","Build [<code>Certificate</code>] from DER-format. This skips the …",225,[[],["certificate",3]]],[11,"domains","","PanicsPanics if [<code>Certificate</code>] couldn\'t be parsed or …",225,[[],[["vec",3],["global",3],["string",3]]]],[11,"from_certificates","","Builds a new [<code>CertificateChain</code>] from the given […",226,[[],[["certificatechain",3],["result",4],["certificatechain",3]]]],[11,"unchecked_from_certificates","","Builds [<code>CertificateChain</code>] from the given [<code>Certificate</code>]s. …",226,[[],["certificatechain",3]]],[11,"into_end_entity_certificate","","Returns the end-entity [<code>Certificate</code>].",226,[[],["certificate",3]]],[11,"end_entity_certificate","","Returns a reference to the end-entity [<code>Certificate</code>].",226,[[],["certificate",3]]],[11,"iter","","Returns an iterator over the [<code>CertificateChain</code>].",226,[[],[["iter",3],["certificate",3]]]],[11,"get","","Provides a reference to the [<code>Certificate</code>] at the given …",226,[[["usize",15]],[["certificate",3],["option",4]]]],[11,"new_self_signed","","Generate a self signed certificate.",227,[[],["keypair",3]]],[11,"from_parts","","Builds a new [<code>KeyPair</code>] from the given [<code>CertificateChain</code>] …",227,[[["certificatechain",3],["privatekey",3]],[["keypair",3],["keypair",3],["result",4]]]],[11,"unchecked_from_parts","","Build [<code>KeyPair</code>] from the given [<code>CertificateChain</code>] and […",227,[[["certificatechain",3],["privatekey",3]],["keypair",3]]],[11,"certificate_chain","","Return the [<code>CertificateChain</code>] of this [<code>KeyPair</code>].",227,[[],["certificatechain",3]]],[11,"end_entity_certificate","","Returns the end-entity [<code>Certificate</code>].",227,[[],["certificate",3]]],[11,"private_key","","Return the secret [<code>PrivateKey</code>] of this [<code>KeyPair</code>].",227,[[],["privatekey",3]]],[11,"into_parts","","Destructure [<code>KeyPair</code>] into it\'s owned parts.",227,[[]]],[11,"parts","","Destructure [<code>KeyPair</code>] into it\'s borrowed parts.",227,[[]]],[11,"from_der","","Build [<code>PrivateKey</code>] from DER-format. This is not meant as …",228,[[],[["privatekey",3],["result",4],["privatekey",3]]]],[11,"unchecked_from_der","","Build [<code>PrivateKey</code>] from DER-format. This skips the …",228,[[],["privatekey",3]]],[11,"new","pliantdb::server::local::core::test_util","",123,[[],["basic",3]]],[11,"with_category","","",123,[[],["basic",3]]],[11,"with_parent_id","","",123,[[["u64",15]],["basic",3]]],[11,"new","","",125,[[],["testdirectory",3]]],[11,"port","","",126,[[["u16",15]],["u16",15]]],[11,"new","","",238,[[["duration",3]],["timingtest",3]]],[11,"wait_until","","",238,[[["duration",3]]]],[11,"elapsed","","",238,[[],["duration",3]]],[11,"new","pliantdb::server::local::core::circulate","Creates a new message.",168,[[],[["error",3],["result",4],["message",3]]]],[11,"payload","","Deserialize the payload as <code>P</code> using CBOR.",168,[[],[["result",4],["error",3]]]],[11,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",239,[[]]],[11,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",239,[[]]],[11,"publish_to_all","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",239,[[["vec",3],["global",3],["string",3]]]],[11,"publish_serialized_to_all","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",239,[[["vec",3],["global",3],["u8",15],["vec",3],["string",3]]]],[11,"publish_message","","Publishes a message to all subscribers of its topic.",239,[[["message",3]]]],[11,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",240,[[]]],[11,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",240,[[["str",15]]]],[11,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",240,[[],["receiver",3]]],[11,"id","","Returns the unique ID of the subscriber.",240,[[],["u64",15]]],[11,"new","pliantdb::server::local::core::circulate::flume","Create a new selector.",241,[[],["selector",3]]],[11,"send","","Add a send operation to the selector that sends the …",241,[[["sender",3]],["selector",3]]],[11,"recv","","Add a receive operation to the selector.",241,[[["receiver",3]],["selector",3]]],[11,"wait","","Wait until one of the events associated with this […",241,[[]]],[11,"wait_timeout","","Wait until one of the events associated with this […",241,[[["duration",3]],[["result",4],["selecterror",4]]]],[11,"wait_deadline","","Wait until one of the events associated with this […",241,[[["instant",3]],[["result",4],["selecterror",4]]]],[11,"is_disconnected","pliantdb::server::local::core::circulate::flume::async","See [<code>Sender::is_disconnected</code>].",242,[[],["bool",15]]],[11,"is_empty","","See [<code>Sender::is_empty</code>].",242,[[],["bool",15]]],[11,"is_full","","See [<code>Sender::is_full</code>].",242,[[],["bool",15]]],[11,"len","","See [<code>Sender::len</code>].",242,[[],["usize",15]]],[11,"capacity","","See [<code>Sender::capacity</code>].",242,[[],[["usize",15],["option",4]]]],[11,"is_disconnected","","See [<code>Sender::is_disconnected</code>].",243,[[],["bool",15]]],[11,"is_empty","","See [<code>Sender::is_empty</code>].",243,[[],["bool",15]]],[11,"is_full","","See [<code>Sender::is_full</code>].",243,[[],["bool",15]]],[11,"len","","See [<code>Sender::len</code>].",243,[[],["usize",15]]],[11,"capacity","","See [<code>Sender::capacity</code>].",243,[[],[["usize",15],["option",4]]]],[11,"is_disconnected","","See [<code>Receiver::is_disconnected</code>].",244,[[],["bool",15]]],[11,"is_empty","","See [<code>Receiver::is_empty</code>].",244,[[],["bool",15]]],[11,"is_full","","See [<code>Receiver::is_full</code>].",244,[[],["bool",15]]],[11,"len","","See [<code>Receiver::len</code>].",244,[[],["usize",15]]],[11,"capacity","","See [<code>Receiver::capacity</code>].",244,[[],[["usize",15],["option",4]]]],[11,"is_disconnected","","See [<code>Receiver::is_disconnected</code>].",245,[[],["bool",15]]],[11,"is_empty","","See [<code>Receiver::is_empty</code>].",245,[[],["bool",15]]],[11,"is_full","","See [<code>Receiver::is_full</code>].",245,[[],["bool",15]]],[11,"len","","See [<code>Receiver::len</code>].",245,[[],["usize",15]]],[11,"capacity","","See [<code>Receiver::capacity</code>].",245,[[],[["usize",15],["option",4]]]],[11,"send_async","pliantdb::server::local::core::circulate::flume","Asynchronously send a value into the channel, returning …",246,[[],["sendfut",3]]],[11,"into_send_async","","Convert this sender into a future that asynchronously …",246,[[],["sendfut",3]]],[11,"sink","","Create an asynchronous sink that uses this sender to …",246,[[],["sendsink",3]]],[11,"into_sink","","Convert this sender into a sink that allows …",246,[[],["sendsink",3]]],[11,"try_send","","Attempt to send a value into the channel. If the channel …",246,[[],[["trysenderror",4],["result",4]]]],[11,"send","","Send a value into the channel, returning an error if all …",246,[[],[["result",4],["senderror",3]]]],[11,"send_deadline","","Send a value into the channel, returning an error if all …",246,[[["instant",3]],[["result",4],["sendtimeouterror",4]]]],[11,"send_timeout","","Send a value into the channel, returning an error if all …",246,[[["duration",3]],[["result",4],["sendtimeouterror",4]]]],[11,"is_disconnected","","Returns true if all receivers for this channel have been …",246,[[],["bool",15]]],[11,"is_empty","","Returns true if the channel is empty. Note: Zero-capacity …",246,[[],["bool",15]]],[11,"is_full","","Returns true if the channel is full. Note: Zero-capacity …",246,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel",246,[[],["usize",15]]],[11,"capacity","","If the channel is bounded, returns its capacity.",246,[[],[["usize",15],["option",4]]]],[11,"recv_async","","Asynchronously receive a value from the channel, …",247,[[],["recvfut",3]]],[11,"into_recv_async","","Convert this receiver into a future that asynchronously …",247,[[],["recvfut",3]]],[11,"stream","","Create an asynchronous stream that uses this receiver to …",247,[[],["recvstream",3]]],[11,"into_stream","","Convert this receiver into a stream that allows …",247,[[],["recvstream",3]]],[11,"try_recv","","Attempt to fetch an incoming value from the channel …",247,[[],[["tryrecverror",4],["result",4]]]],[11,"recv","","Wait for an incoming value from the channel associated …",247,[[],[["result",4],["recverror",4]]]],[11,"recv_deadline","","Wait for an incoming value from the channel associated …",247,[[["instant",3]],[["result",4],["recvtimeouterror",4]]]],[11,"recv_timeout","","Wait for an incoming value from the channel associated …",247,[[["duration",3]],[["result",4],["recvtimeouterror",4]]]],[11,"iter","","Create a blocking iterator over the values received on …",247,[[],["iter",3]]],[11,"try_iter","","A non-blocking iterator over the values received on the …",247,[[],["tryiter",3]]],[11,"drain","","Take all msgs currently sitting in the channel and …",247,[[],["drain",3]]],[11,"is_disconnected","","Returns true if all senders for this channel have been …",247,[[],["bool",15]]],[11,"is_empty","","Returns true if the channel is empty. Note: Zero-capacity …",247,[[],["bool",15]]],[11,"is_full","","Returns true if the channel is full. Note: Zero-capacity …",247,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel.",247,[[],["usize",15]]],[11,"capacity","","If the channel is bounded, returns its capacity.",247,[[],[["usize",15],["option",4]]]],[11,"execute","pliantdb::server::local::backup","Executes the command.",180,[[["pathbuf",3]]]],[11,"open_local","pliantdb::server::local","Creates a <code>Storage</code> with a single-database named \\\"default\\\" …",253,[[["configuration",3]]]],[11,"storage","","Returns the [<code>Storage</code>] that this database belongs to.",253,[[],["storage",3]]],[11,"schematic","","Returns the [<code>Schematic</code>] for <code>DB</code>.",253,[[],["schematic",3]]],[11,"open_local","","Creates or opens a multi-database [<code>Storage</code>] with its data …",254,[[["configuration",3]]]],[11,"register_schema","","Registers a schema for use within the server.",254,[[]]],[11,"database","","Retrieves a database. This function only verifies that …",254,[[["str",15]]]],[11,"execute","pliantdb::server::cli::certificate","Executes the command.",184,[[["server",3]]]],[11,"execute","pliantdb::server::cli::serve","Starts the server.",187,[[["server",3]]]],[11,"execute","pliantdb::server::cli","Executes the command.",189,[[["path",3]]]],[11,"open","pliantdb::server","Opens a server using <code>directory</code> for storage.",255,[[["configuration",3],["path",3]]]],[11,"database","","Retrieves a database. This function only verifies that …",255,[[["str",15]]]],[11,"install_self_signed_certificate","","Installs an X.509 certificate used for general purpose …",255,[[["str",15],["bool",15]]]],[11,"install_certificate","","Installs an X.509 certificate used for general purpose …",255,[[["certificate",3],["privatekey",3]]]],[11,"certificate","","Returns the current certificate.",255,[[]]],[11,"listen_on","","Listens for incoming client connections. Does not return …",255,[[["u16",15]]]],[11,"listen_for_websockets_on","","Listens for <code>WebSocket</code> traffic on <code>port</code>.",255,[[]]],[11,"shutdown","","Shuts the server down. If a <code>timeout</code> is provided, the …",255,[[["duration",3],["option",4]]]]],"p":[[4,"Command"],[8,"Target"],[4,"Host"],[4,"Origin"],[4,"ParseError"],[4,"SyntaxViolation"],[4,"Position"],[4,"Error"],[3,"PermissionGroup"],[4,"PliantAction"],[4,"ServerAction"],[4,"DatabaseAction"],[4,"DocumentAction"],[4,"ViewAction"],[4,"TransactionAction"],[4,"PubSubAction"],[4,"KvAction"],[3,"Role"],[8,"Action"],[3,"ActionName"],[4,"ActionNameList"],[8,"Dispatcher"],[4,"Identifier"],[3,"PermissionDenied"],[3,"Statement"],[8,"Connection"],[3,"View"],[4,"QueryKey"],[4,"AccessPolicy"],[8,"ServerConnection"],[3,"Database"],[3,"Header"],[3,"Document"],[3,"Revision"],[3,"Map"],[3,"MappedDocument"],[3,"Serialized"],[3,"MappedValue"],[8,"Key"],[4,"Error"],[8,"View"],[4,"SerializableValue"],[8,"Serialized"],[8,"Schema"],[8,"Collection"],[3,"CollectionName"],[3,"InvalidNameError"],[3,"SchemaName"],[3,"ViewName"],[3,"Transaction"],[3,"Operation"],[4,"Command"],[13,"Insert"],[13,"Update"],[13,"Delete"],[4,"OperationResult"],[13,"DocumentUpdated"],[13,"DocumentDeleted"],[3,"Executed"],[3,"ChangedDocument"],[4,"KeyCheck"],[3,"KeyOperation"],[4,"Command"],[13,"Set"],[13,"Get"],[4,"Output"],[4,"KeyStatus"],[3,"Timestamp"],[8,"Kv"],[3,"Payload"],[4,"Request"],[13,"Database"],[4,"ServerRequest"],[13,"DeleteDatabase"],[4,"DatabaseRequest"],[13,"Get"],[13,"GetMultiple"],[13,"Query"],[13,"Reduce"],[13,"ApplyTransaction"],[13,"ListExecutedTransactions"],[13,"Publish"],[13,"PublishToAll"],[13,"SubscribeTo"],[13,"UnsubscribeFrom"],[13,"UnregisterSubscriber"],[4,"Response"],[4,"ServerResponse"],[13,"DatabaseCreated"],[13,"DatabaseDeleted"],[4,"DatabaseResponse"],[13,"SubscriberCreated"],[13,"MessageReceived"],[3,"MappedDocument"],[4,"Error"],[8,"Builder"],[8,"PrivateKey"],[8,"KeyPair"],[3,"Certificate"],[4,"CertificateError"],[3,"PrivateKey"],[3,"Builder"],[4,"Connect"],[3,"Connection"],[3,"Connecting"],[4,"Stream"],[4,"Incoming"],[4,"Receiver"],[4,"Sender"],[4,"ErrorKind"],[4,"ConnectError"],[4,"ConnectionError"],[4,"ReadError"],[4,"WriteError"],[4,"Error"],[4,"X509Error"],[4,"Err"],[4,"Store"],[8,"PubSub"],[8,"Subscriber"],[4,"Error"],[13,"SchemaMismatch"],[13,"UniqueKeyViolation"],[3,"Basic"],[3,"Unique"],[3,"TestDirectory"],[4,"HarnessTest"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"Message"],[4,"SelectError"],[3,"SendError"],[4,"TrySendError"],[4,"SendTimeoutError"],[4,"RecvError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[3,"Configuration"],[3,"Tasks"],[3,"Views"],[3,"Cli"],[4,"Command"],[13,"Save"],[13,"Load"],[4,"Error"],[4,"Command"],[13,"InstallSelfSigned"],[13,"Install"],[3,"Serve"],[3,"Cli"],[4,"Command"],[3,"Configuration"],[4,"Error"],[3,"Url"],[3,"ParseOptions"],[3,"UrlQuery"],[3,"Parse"],[3,"ParseIntoOwned"],[3,"ByteSerialize"],[3,"Serializer"],[3,"OpaqueOrigin"],[3,"PathSegmentsMut"],[3,"Client"],[3,"RemoteDatabase"],[3,"ByName"],[3,"ByName"],[3,"Permissions"],[3,"ResourceName"],[3,"Collection"],[3,"Authority"],[3,"Name"],[3,"Schematic"],[3,"Builder"],[3,"Namespaced"],[3,"Builder"],[3,"KeyPair"],[3,"CertificateChain"],[3,"AlreadyClosed"],[3,"ResolveError"],[3,"Builder"],[3,"Connecting"],[3,"Connection"],[3,"Endpoint"],[3,"Incoming"],[3,"Receiver"],[3,"Sender"],[3,"Certificate"],[3,"CertificateChain"],[3,"KeyPair"],[3,"PrivateKey"],[3,"BasicCount"],[3,"BasicByParentId"],[3,"BasicByCategory"],[3,"BasicByBrokenParentId"],[3,"BasicSchema"],[3,"UniqueValue"],[3,"BasicCollectionWithNoViews"],[3,"BasicCollectionWithOnlyBrokenParentId"],[3,"UnassociatedCollection"],[3,"TimingTest"],[3,"Relay"],[3,"Subscriber"],[3,"Selector"],[3,"SendFut"],[3,"SendSink"],[3,"RecvFut"],[3,"RecvStream"],[3,"Sender"],[3,"Receiver"],[3,"Iter"],[3,"TryIter"],[3,"Drain"],[3,"IntoIter"],[3,"Subscriber"],[3,"Database"],[3,"Storage"],[3,"Server"]]},\
"pliantdb_client":{"doc":"Client for <code>pliantdb-server</code>.","i":[[3,"Client","pliantdb_client","Client for connecting to a <code>PliantDb</code> server.",null,null],[3,"RemoteDatabase","","A database on a remote server.",null,null],[4,"Error","","Errors related to working with <code>Client</code>",null,null],[13,"WebSocket","","An error occurred from the WebSocket transport layer.",0,null],[13,"Network","","An error occurred from networking.",0,null],[13,"InvalidUrl","","An invalid Url was provided.",0,null],[13,"Disconnected","","The connection was interrupted.",0,null],[13,"Core","","The connection was interrupted.",0,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["senderror",3]]]],[11,"from","","",0,[[["recverror",4]]]],[11,"from","","",0,[[["error",6]]]],[11,"from","","",0,[[["sender",4]]]],[11,"from","","",0,[[["receiver",4]]]],[11,"from","","",0,[[["stream",4]]]],[11,"from","","",0,[[["connecting",3]]]],[11,"from","","",0,[[["connect",4]]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[],["client",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"get","","",1,[[["u64",15]],[["pin",3],["box",3]]]],[11,"get_multiple","","",1,[[],[["box",3],["pin",3]]]],[11,"query","","",1,[[["querykey",4],["option",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[11,"query_with_docs","","",1,[[["querykey",4],["option",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[11,"reduce","","",1,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"reduce_grouped","","",1,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"apply_transaction","","",1,[[["transaction",3]],[["box",3],["pin",3]]]],[11,"list_executed_transactions","","",1,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[11,"last_transaction_id","","",1,[[],[["pin",3],["box",3]]]],[11,"create_database_with_schema","","",2,[[["schemaname",3],["str",15]],[["box",3],["pin",3]]]],[11,"delete_database","","",2,[[["str",15]],[["box",3],["pin",3]]]],[11,"list_databases","","",2,[[],[["box",3],["pin",3]]]],[11,"list_available_schemas","","",2,[[],[["pin",3],["box",3]]]],[11,"execute_key_operation","","",1,[[["keyoperation",3]],[["box",3],["pin",3]]]],[11,"create_subscriber","","",1,[[],[["pin",3],["box",3]]]],[11,"publish","","",1,[[["into",8],["string",3],["send",8]],[["box",3],["pin",3]]]],[11,"publish_to_all","","",1,[[["vec",3],["string",3]],[["box",3],["pin",3]]]],[11,"new","","Initialize a client connecting to <code>url</code> with <code>certificate</code> …",2,[[["url",3],["certificate",3],["option",4]]]],[11,"database","","Returns a structure representing a remote database. No …",2,[[["str",15]]]]],"p":[[4,"Error"],[3,"RemoteDatabase"],[3,"Client"]]},\
"pliantdb_core":{"doc":"Core functionality and types for <code>PliantDb</code>.","i":[[0,"permissions","pliantdb_core","Types for creating and validating permissions.",null,null],[0,"group","pliantdb_core::permissions","Schema types for permission groups.",null,null],[3,"PermissionGroup","pliantdb_core::permissions::group","A named group of permissions statements.",null,null],[12,"name","","The name of the group. Must be unique.",0,null],[12,"statements","","The permission statements.",0,null],[3,"ByName","","A unique view of permission groups by name.",null,null],[0,"pliant","pliantdb_core::permissions","Types used for granting permissions within <code>PliantDb</code>.",null,null],[5,"pliantdb_resource_name","pliantdb_core::permissions::pliant","Creates a resource name with the database <code>name</code>.",null,[[],["resourcename",3]]],[5,"database_resource_name","","Creates a resource name with the database <code>name</code>.",null,[[["str",15]],["resourcename",3]]],[5,"collection_resource_name","","Creates a resource name for a <code>collection</code> within a <code>database</code>…",null,[[["str",15],["collectionname",3]],["resourcename",3]]],[5,"document_resource_name","","Creates a resource name for a document <code>id</code> within …",null,[[["str",15],["collectionname",3],["u64",15]],["resourcename",3]]],[5,"view_resource_name","","Creaets a resource name for a <code>view</code> within <code>database</code>.",null,[[["viewname",3],["str",15]],["resourcename",3]]],[5,"pubsub_topic_resource_name","","Creates a resource name for <code>PubSub</code> <code>topic</code> within <code>database</code>.",null,[[["str",15]],["resourcename",3]]],[5,"kv_key_resource_name","","Creates a resource name for <code>key</code> within <code>namespace</code> within …",null,[[["str",15],["option",4]],["resourcename",3]]],[4,"PliantAction","","Actions that can be permitted within <code>PliantDb</code>.",null,null],[13,"Server","","Actions that operate on a server",1,null],[13,"Database","","Actions that operate on a specific database.",1,null],[4,"ServerAction","","Actions that operate on a server.",null,null],[13,"Connect","","Permits connecting to the server. Upon negotiating …",2,null],[13,"ListAvailableSchemas","","Permits <code>ServerConnection::list_available_schemas</code>.",2,null],[13,"ListDatabases","","Permits <code>ServerConnection::list_databases</code>.",2,null],[13,"CreateDatabase","","Permits <code>ServerConnection::create_database</code>.",2,null],[13,"DeleteDatabase","","Permits <code>ServerConnection::delete_database</code>.",2,null],[4,"DatabaseAction","","Actions that operate on a specific database.",null,null],[13,"Document","","Actions that operate on a document.",3,null],[13,"View","","Actions that operate on a view.",3,null],[13,"Transaction","","Actions that operate on transactions.",3,null],[13,"PubSub","","Actions that operate on the <code>PubSub</code> system.",3,null],[13,"Kv","","Actions that operate on the key-value store.",3,null],[4,"DocumentAction","","Actions that operate on a document.",null,null],[13,"Get","","Allows document retrieval through <code>Connection::get()</code> and …",4,null],[13,"Insert","","Allows inserting a document through …",4,null],[13,"Update","","Allows updating a document through …",4,null],[13,"Delete","","Allows deleting a document through …",4,null],[4,"ViewAction","","Actions that operate on a view.",null,null],[13,"Query","","Allows querying a view with <code>Connection::query()</code>. See […",5,null],[13,"Reduce","","Allows reducing a view with <code>Connection::reduce()</code>. See […",5,null],[4,"TransactionAction","","Actions that operate on transactions.",null,null],[13,"ListExecuted","","Allows listing executed transactions with …",6,null],[13,"GetLastId","","Allows retrieving the last executed transaction id with …",6,null],[4,"PubSubAction","","Actions that operate on the <code>PubSub</code> system.",null,null],[13,"CreateSuscriber","","Allows creating a subscriber with …",7,null],[13,"Publish","","Allows publishing a payload to a <code>PubSub</code> topic with …",7,null],[13,"SubscribeTo","","Allows subscribing to a <code>PubSub</code> topic with …",7,null],[13,"UnsubscribeFrom","","Allows unsubscribing from a <code>PubSub</code> topic with …",7,null],[4,"KvAction","","Actions that operate on the key-value store.",null,null],[13,"ExecuteOperation","","Allows executing a key-value store operation with …",8,null],[0,"role","pliantdb_core::permissions","Schema types for roles.",null,null],[3,"Role","pliantdb_core::permissions::role","An assignable role, which grants permissions based on the …",null,null],[12,"name","","The name of the role. Must be unique.",9,null],[12,"groups","","The IDs of the permission groups this role belongs to.",9,null],[3,"ByName","","A unique view of roles by name.",null,null],[8,"Action","pliantdb_core::permissions","An action that can be allowed or disallowed.",null,null],[10,"name","","The full name of this action.",10,[[],["actionname",3]]],[24,"Action","","Derives the <code>actionable::Action</code> trait.",null,null],[3,"ActionName","","A unique name of an action.",null,null],[12,"0","","",11,null],[4,"ActionNameList","","A list of [<code>ActionName</code>]s.",null,null],[13,"List","","A specific list of names.",12,null],[13,"All","","All actions.",12,null],[24,"Actionable","","Derives a set of traits that can be used to implement a …",null,null],[8,"Dispatcher","","Dispatches <code>T</code> to an appropriate handler. This trait is …",null,null],[16,"Result","","The type of the result.",13,null],[10,"dispatch","","Dispatches <code>request</code> to the appropriate handler while also …",13,[[["permissions",3]],[["box",3],["pin",3]]]],[24,"Dispatcher","","Derives the <code>Dispatcher</code> trait.",null,null],[4,"Identifier","","A single element of a [<code>ResourceName</code>]",null,null],[13,"Any","","When checking for allowed permissions, allow any match …",14,null],[13,"Integer","","An integer identifier.",14,null],[13,"String","","A string identifier.",14,null],[3,"PermissionDenied","","An <code>action</code> was denied.",null,null],[12,"resource","","The resource that <code>action</code> was attempted upon.",15,null],[12,"action","","The <code>action</code> attempted upon <code>resource</code>.",15,null],[3,"Permissions","","A collection of allowed permissions. This is constructed …",null,null],[3,"ResourceName","","A unique name/identifier of a resource.",null,null],[3,"Statement","","A statement of permissions. A statement describes whether …",null,null],[12,"resources","","The list of resources this statement applies to.",16,null],[12,"actions","","The list of actions this statement applies to.",16,null],[12,"allowed","","Whether the <code>actions</code> should be allowed or disallowed.",16,null],[0,"connection","pliantdb_core","Types for interacting with <code>PliantDb</code>.",null,null],[8,"Connection","pliantdb_core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",17,[[],[["collection",3],["collection",8]]]],[11,"insert","","Inserts a newly created document into the connected […",17,[[["vec",3],["u8",15]],[["pin",3],["box",3]]]],[11,"update","","Updates an existing document in the connected […",17,[[["document",3]],[["box",3],["pin",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",17,[[["u64",15]],[["pin",3],["box",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",17,[[],[["box",3],["pin",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",17,[[["document",3]],[["box",3],["pin",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",17,[[],[["view",3],["view",8]]]],[10,"query","","Queries for view entries matching [<code>View</code>].",17,[[["querykey",4],["option",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",17,[[["querykey",4],["option",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",17,[[["querykey",4],["option",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",17,[[["querykey",4],["option",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",17,[[["transaction",3]],[["box",3],["pin",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",17,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",17,[[],[["pin",3],["box",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[11,"new","","Creates a new instance using <code>connection</code>.",18,[[]]],[11,"push","","Adds a new <code>Document<Cl></code> with the contents <code>item</code>.",18,[[]]],[11,"get","","Retrieves a <code>Document<Cl></code> with <code>id</code> from the connection.",18,[[["u64",15]]]],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",19,null],[12,"access_policy","","The view\'s data access policy. The default value is […",19,null],[11,"with_key","","Filters for entries in the view with <code>key</code>.",19,[[]]],[11,"with_keys","","Filters for entries in the view with <code>keys</code>.",19,[[["vec",3]]]],[11,"with_key_range","","Filters for entries in the view with the range <code>keys</code>.",19,[[["range",3]]]],[11,"with_access_policy","","Sets the access policy for queries.",19,[[["accesspolicy",4]]]],[11,"query","","Executes the query and retrieves the results.",19,[[]]],[11,"query_with_docs","","Executes the query and retrieves the results with the …",19,[[]]],[11,"reduce","","Executes a reduce over the results of the query",19,[[]]],[11,"reduce_grouped","","Executes a reduce over the results of the query",19,[[]]],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",20,null],[13,"Range","","Matches all entires with keys in the range provided.",20,null],[13,"Multiple","","Matches all entries that have keys that are included in …",20,null],[11,"serialized","","Converts this key to a serialized format using the [<code>Key</code>] …",20,[[],[["result",4],["error",4],["querykey",4]]]],[11,"deserialized","","Deserializes the bytes into <code>K</code> via the [<code>Key</code>] trait.",20,[[],[["querykey",4],["error",4],["result",4]]]],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",21,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",21,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",21,null],[8,"ServerConnection","","Functions for interacting with a multi-database <code>PliantDb</code> …",null,null],[11,"create_database","","Creates a database named <code>name</code> with the <code>Schema</code> provided.",22,[[["str",15]],[["box",3],["pin",3]]]],[10,"create_database_with_schema","","Creates a database named <code>name</code> using the [<code>SchemaName</code>] …",22,[[["schemaname",3],["str",15]],[["box",3],["pin",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",22,[[["str",15]],[["box",3],["pin",3]]]],[10,"list_databases","","Lists the databases on this server.",22,[[],[["pin",3],["box",3]]]],[10,"list_available_schemas","","Lists the [<code>SchemaName</code>]s on this server.",22,[[],[["box",3],["pin",3]]]],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",23,null],[12,"schema","","The schema defining the database.",23,null],[0,"document","pliantdb_core","Types for interacting with <code>Document</code>s.",null,null],[3,"Revision","pliantdb_core::document","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",24,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",24,null],[3,"Header","","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",25,null],[12,"revision","","The revision of the stored document.",25,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",26,null],[12,"header","","The header of the document, which contains the id and …",26,null],[12,"contents","","The serialized bytes of the stored item.",26,null],[11,"new","","Creates a new document with <code>contents</code>.",26,[[["collectionname",3],["cow",4],["u64",15]]]],[11,"with_contents","","Creates a new document with serialized bytes from <code>contents</code>…",26,[[["collectionname",3],["u64",15]],[["error",3],["result",4]]]],[11,"contents","","Retrieves <code>contents</code> through deserialization into the type <code>D</code>…",26,[[],[["deserialize",8],["error",3],["result",4]]]],[11,"set_contents","","Serializes and stores <code>contents</code> into this document.",26,[[],[["error",3],["result",4]]]],[11,"create_new_revision","","Creates a new revision.",26,[[["cow",4]],["option",4]]],[11,"emit","","Creates a <code>Map</code> result with an empty key and value.",26,[[],["map",3]]],[11,"emit_key","","Creates a <code>Map</code> result with a <code>key</code> and an empty value.",26,[[["key",8]],[["map",3],["key",8]]]],[11,"emit_value","","Creates a <code>Map</code> result with <code>value</code> and an empty key.",26,[[["serialize",8]],[["map",3],["serialize",8]]]],[11,"emit_key_and_value","","Creates a <code>Map</code> result with a <code>key</code> and <code>value</code>.",26,[[["serialize",8],["key",8]],[["serialize",8],["map",3],["key",8]]]],[11,"to_owned","","Clone the document\'s data so that it\'s no longer borrowed …",26,[[],["document",3]]],[0,"limits","pliantdb_core","Limits used within <code>PliantDb</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb_core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"schema","pliantdb_core","Types for defining database schema.",null,null],[0,"view","pliantdb_core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb_core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb_core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",27,null],[12,"key","","The key used to index the View.",27,null],[12,"value","","An associated value stored in the view.",27,null],[11,"serialized","","Serializes this map.",27,[[],[["error",4],["serialized",3],["result",4]]]],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",28,null],[12,"key","","The key used to index the View.",28,null],[12,"value","","An associated value stored in the view.",28,null],[11,"new","","Creates a new Map entry for the document with id <code>source</code>.",27,[[["u64",15]]]],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",29,null],[12,"key","","The key used to index the View.",29,null],[12,"value","","An associated value stored in the view.",29,null],[11,"deserialized","","Deserializes this map.",29,[[],[["error",4],["result",4],["map",3]]]],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",30,null],[12,"value","","The value generated by the <code>View</code>",30,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",31,[[],[["result",6],["cow",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",31,[[],["result",6]]],[8,"EnumKey","","Adds <code>Key</code> support to an enum. Requires implementing …",null,null],[4,"Error","pliantdb_core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",32,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",32,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",32,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",33,null],[16,"Key","","The key for this view.",33,null],[16,"Value","","An associated type that can be stored with each entry in …",33,null],[11,"unique","","If true, no two documents may emit the same key. Unique …",33,[[],["bool",15]]],[10,"version","","The version of the view. Changing this value will cause …",33,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",33,[[],[["name",3],["result",4],["invalidnameerror",3]]]],[11,"view_name","","The namespaced name of the view.",33,[[],[["viewname",3],["invalidnameerror",3],["result",4]]]],[10,"map","","The map function for this view. This function is …",33,[[["document",3]],["mapresult",6]]],[11,"reduce","","The reduce function for this view. If …",33,[[["bool",15]],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",34,null],[13,"Borrowed","","a borrowed value",34,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",35,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[10,"unique","","Wraps [<code>View::unique</code>]",35,[[],["bool",15]]],[10,"version","","Wraps [<code>View::version</code>]",35,[[],["u64",15]]],[10,"view_name","","Wraps [<code>View::view_name</code>]",35,[[],[["viewname",3],["invalidnameerror",3],["result",4]]]],[10,"map","","Wraps [<code>View::map</code>]",35,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",35,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[8,"Collection","pliantdb_core::schema","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_name","","The <code>Id</code> of this collection.",36,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",36,[[["schematic",3]],[["result",4],["error",4]]]],[3,"Authority","","The owner of a schema item. This should represent the …",null,null],[3,"CollectionName","","The name of a <code>Collection</code>.",null,null],[12,"authority","","The authority of this collection.",37,null],[12,"name","","The name of this collection.",37,null],[3,"InvalidNameError","","An invalid name was used in a schema definition.",null,null],[12,"0","","",38,null],[3,"Name","","A valid schema name. Must be alphanumeric (<code>a-zA-Z9-0</code>) or …",null,null],[3,"SchemaName","","The name of a <code>Schema</code>.",null,null],[12,"authority","","The authority of this schema.",39,null],[12,"name","","The name of this schema.",39,null],[3,"ViewName","","The name of a <code>View</code>.",null,null],[12,"collection","","The name of the collection that contains this view.",40,null],[12,"name","","The name of this view.",40,null],[3,"Schematic","","A collection of defined collections and views.",null,null],[8,"Schema","","Defines a group of collections that are stored into a …",null,null],[10,"schema_name","","Returns the unique [<code>SchemaName</code>] for this schema.",41,[[],[["result",4],["schemaname",3],["invalidnameerror",3]]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",41,[[["schematic",3]],[["result",4],["error",4]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",41,[[],[["error",4],["result",4],["schematic",3]]]],[0,"transaction","pliantdb_core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb_core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",42,null],[11,"push","","Adds an operation to the transaction.",42,[[["operation",3]]]],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",43,null],[12,"command","","The command being performed.",43,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",44,null],[12,"contents","pliantdb_core::transaction::Command","The initial contents of the document.",45,null],[13,"Update","pliantdb_core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",44,null],[12,"header","pliantdb_core::transaction::Command","The current header of the <code>Document</code>.",46,null],[12,"contents","","The new contents to store within the <code>Document</code>.",46,null],[13,"Delete","pliantdb_core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",44,null],[12,"header","pliantdb_core::transaction::Command","The current header of the <code>Document</code>.",47,null],[4,"OperationResult","pliantdb_core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",48,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",48,null],[12,"collection","pliantdb_core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",49,null],[12,"header","","The header of the updated <code>Document</code>.",49,null],[13,"DocumentDeleted","pliantdb_core::transaction","A <code>Document</code> was deleted.",48,null],[12,"collection","pliantdb_core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",50,null],[12,"id","","The id of the deleted <code>Document</code>.",50,null],[3,"Executed","pliantdb_core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",51,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",51,null],[11,"to_owned","","Convert this structure to be free of borrows.",51,[[],["executed",3]]],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",52,null],[12,"id","","The id of the changed <code>Document</code>.",52,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",52,null],[0,"kv","pliantdb_core","Types for utilizing a lightweight atomic Key-Value store.",null,null],[0,"get","pliantdb_core::kv","Types for executing get operations.",null,null],[3,"Builder","pliantdb_core::kv::get","Executes [<code>Command::Get</code>] when awaited. Also offers methods …",null,null],[0,"namespaced","pliantdb_core::kv","Types for handling key namespaces.",null,null],[3,"Namespaced","pliantdb_core::kv::namespaced","A namespaced key-value store. All operations performed …",null,null],[0,"set","pliantdb_core::kv","Types for executing set operations.",null,null],[3,"Builder","pliantdb_core::kv::set","Executes [<code>Command::Set</code>] when awaited. Also offers methods …",null,null],[3,"Timestamp","pliantdb_core::kv","A timestamp relative to [<code>UNIX_EPOCH</code>].",null,null],[12,"seconds","","The number of whole seconds since [<code>UNIX_EPOCH</code>].",53,null],[12,"nanos","","The number of nanoseconds in the timestamp.",53,null],[8,"Kv","","Key-Value store methods. The Key-Value store is designed …",null,null],[10,"execute_key_operation","","Executes a single [<code>KeyOperation</code>].",54,[[["keyoperation",3]],[["pin",3],["box",3]]]],[11,"set_key","","Sets <code>key</code> to <code>value</code>. This function returns a builder that …",54,[[["string",3],["into",8]],[["builder",3],["serialize",8]]]],[11,"get_key","","Gets the value stored at <code>key</code>. This function returns a …",54,[[["string",3],["into",8]],[["builder",3],["deserialize",8]]]],[11,"delete_key","","Deletes the value stored at <code>key</code>.",54,[[["into",8],["string",3],["send",8]],[["box",3],["pin",3]]]],[11,"key_namespace","","The current namespace.",54,[[],[["option",4],["str",15]]]],[11,"with_key_namespace","","Access this Key-Value store within a namespace. When …",54,[[["str",15]],["namespaced",3]]],[4,"KeyCheck","","Checks for existing keys.",null,null],[13,"OnlyIfPresent","","Only allow the operation if an existing key is present.",55,null],[13,"OnlyIfVacant","","Only allow the opeartion if the key isn\'t present.",55,null],[3,"KeyOperation","","An operation performed on a key.",null,null],[12,"namespace","","The namespace for the key.",56,null],[12,"key","","The key to operate on.",56,null],[12,"command","","The command to execute.",56,null],[4,"Command","","Commands for a key-value store.",null,null],[13,"Set","","Set a key/value pair.",57,null],[12,"value","pliantdb_core::kv::Command","The value.",58,null],[12,"expiration","","If set, the key will be set to expire automatically.",58,null],[12,"keep_existing_expiration","","If true and the key already exists, the expiration will …",58,null],[12,"check","","Conditional checks for whether the key is already present …",58,null],[12,"return_previous_value","","If true and the key already exists, the existing key will …",58,null],[13,"Get","pliantdb_core::kv","Get the value from a key.",57,null],[12,"delete","pliantdb_core::kv::Command","Remove the key after retrieving the value.",59,null],[13,"Delete","pliantdb_core::kv","Delete a key.",57,null],[4,"Output","","The result of a [<code>KeyOperation</code>].",null,null],[13,"Status","","A status was returned.",60,null],[13,"Value","","A value was returned.",60,null],[4,"KeyStatus","","The status of an operation on a Key.",null,null],[13,"Inserted","","A new key was inserted.",61,null],[13,"Updated","","An existing key was updated with a new value.",61,null],[13,"Deleted","","A key was deleted.",61,null],[13,"NotChanged","","No changes were made.",61,null],[0,"networking","pliantdb_core","Types for implementing the <code>PliantDb</code> network protocol.",null,null],[3,"Payload","pliantdb_core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",62,null],[12,"wrapped","","The wrapped payload.",62,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",63,null],[13,"Database","","A database-related request.",63,null],[12,"database","pliantdb_core::networking::Request","The name of the database.",64,null],[12,"request","","The request made to the database.",64,null],[4,"ServerRequest","pliantdb_core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",65,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",65,null],[12,"name","pliantdb_core::networking::ServerRequest","The name of the database to delete.",66,null],[13,"ListDatabases","pliantdb_core::networking","Lists all databases.",65,null],[13,"ListAvailableSchemas","","Lists available schemas.",65,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",67,null],[12,"collection","pliantdb_core::networking::DatabaseRequest","The collection of the document.",68,null],[12,"id","","The id of the document.",68,null],[13,"GetMultiple","pliantdb_core::networking","Retrieve multiple documents.",67,null],[12,"collection","pliantdb_core::networking::DatabaseRequest","The collection of the documents.",69,null],[12,"ids","","The ids of the documents.",69,null],[13,"Query","pliantdb_core::networking","Queries a view.",67,null],[12,"view","pliantdb_core::networking::DatabaseRequest","The name of the view.",70,null],[12,"key","","The filter for the view.",70,null],[12,"access_policy","","The access policy for the query.",70,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",70,null],[13,"Reduce","pliantdb_core::networking","Reduces a view.",67,null],[12,"view","pliantdb_core::networking::DatabaseRequest","The name of the view.",71,null],[12,"key","","The filter for the view.",71,null],[12,"access_policy","","The access policy for the query.",71,null],[12,"grouped","","Whether to return a single value or values grouped by …",71,null],[13,"ApplyTransaction","pliantdb_core::networking","Applies a transaction.",67,null],[12,"transaction","pliantdb_core::networking::DatabaseRequest","The trasnaction to apply.",72,null],[13,"ListExecutedTransactions","pliantdb_core::networking","Lists executed transactions.",67,null],[12,"starting_id","pliantdb_core::networking::DatabaseRequest","The starting transaction id.",73,null],[12,"result_limit","","The maximum number of results.",73,null],[13,"LastTransactionId","pliantdb_core::networking","Queries the last transaction id.",67,null],[13,"CreateSubscriber","","Creates a <code>PubSub</code> <code>Subscriber</code>",67,null],[13,"Publish","","Publishes <code>payload</code> to all subscribers of <code>topic</code>.",67,null],[12,"topic","pliantdb_core::networking::DatabaseRequest","The topics to publish to.",74,null],[12,"payload","","The payload to publish.",74,null],[13,"PublishToAll","pliantdb_core::networking","Publishes <code>payload</code> to all subscribers of all <code>topics</code>.",67,null],[12,"topics","pliantdb_core::networking::DatabaseRequest","The topics to publish to.",75,null],[12,"payload","","The payload to publish.",75,null],[13,"SubscribeTo","pliantdb_core::networking","Subscribes <code>subscriber_id</code> to messages for <code>topic</code>.",67,null],[12,"subscriber_id","pliantdb_core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",76,null],[12,"topic","","The topic to subscribe to.",76,null],[13,"UnsubscribeFrom","pliantdb_core::networking","Unsubscribes <code>subscriber_id</code> from messages for <code>topic</code>.",67,null],[12,"subscriber_id","pliantdb_core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",77,null],[12,"topic","","The topic to unsubscribe from.",77,null],[13,"UnregisterSubscriber","pliantdb_core::networking","Unregisters the subscriber.",67,null],[12,"subscriber_id","pliantdb_core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",78,null],[13,"ExecuteKeyOperation","pliantdb_core::networking","Excutes a key-value store operation.",67,null],[4,"Response","","A response from a server.",null,null],[13,"Ok","","A request succeded but provided no output.",79,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",79,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",79,null],[13,"Error","","An error occurred processing a request.",79,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",80,null],[12,"name","pliantdb_core::networking::ServerResponse","The name of the database to create.",81,null],[13,"DatabaseDeleted","pliantdb_core::networking","A database with <code>name</code> was successfully removed.",80,null],[12,"name","pliantdb_core::networking::ServerResponse","The name of the database to remove.",82,null],[13,"Databases","pliantdb_core::networking","A list of available databases.",80,null],[13,"AvailableSchemas","","A list of availble schemas.",80,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",83,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",83,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",83,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",83,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",83,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",83,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",83,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",83,null],[13,"SubscriberCreated","","A new <code>PubSub</code> subscriber was created.",83,null],[12,"subscriber_id","pliantdb_core::networking::DatabaseResponse","The unique ID of the subscriber.",84,null],[13,"MessageReceived","pliantdb_core::networking","A PubSub message was received.",83,null],[12,"subscriber_id","pliantdb_core::networking::DatabaseResponse","The ID of the subscriber receiving the message.",85,null],[12,"topic","","The topic the payload was received on.",85,null],[12,"payload","","The message payload.",85,null],[13,"KvOutput","pliantdb_core::networking","Output from a [<code>KeyOperation</code>] being executed.",83,null],[3,"MappedDocument","","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",86,null],[12,"value","","The serialized value.",86,null],[12,"source","","The source document.",86,null],[11,"deserialized","","Deserialize into a <code>MappedDocument</code>.",86,[[],[["result",4],["error",4],["mappeddocument",3]]]],[4,"Error","","A networking error.",null,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",87,null],[13,"Disconnected","","The connection was interrupted.",87,null],[0,"pubsub","pliantdb_core","Types for Publish/Subscribe (<code>PubSub</code>) messaging.",null,null],[8,"PubSub","pliantdb_core::pubsub","Publishes and Subscribes to messages on topics.",null,null],[16,"Subscriber","","The Subscriber type for this <code>PubSub</code> connection.",88,null],[10,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",88,[[],[["box",3],["pin",3]]]],[10,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",88,[[["into",8],["string",3],["send",8]],[["box",3],["pin",3]]]],[10,"publish_to_all","","Publishes a <code>payload</code> to all subscribers of all <code>topics</code>.",88,[[["vec",3],["string",3]],[["box",3],["pin",3]]]],[8,"Subscriber","","A subscriber to one or more topics.",null,null],[10,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",89,[[["into",8],["string",3],["send",8]],[["box",3],["pin",3]]]],[10,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",89,[[["str",15]],[["box",3],["pin",3]]]],[10,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",89,[[],["receiver",3]]],[0,"test_util","pliantdb_core","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb_core::test_util","",null,null],[12,"value","","",90,null],[12,"category","","",90,null],[12,"parent_id","","",90,null],[11,"new","","",90,[[]]],[11,"with_category","","",90,[[]]],[11,"with_parent_id","","",90,[[["u64",15]]]],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"Unique","","",null,null],[12,"value","","",91,null],[3,"UniqueValue","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",92,null],[11,"new","","",92,[[["asref",8],["path",3]]]],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"HarnessTest","","",null,null],[13,"ServerConnectionTests","","",93,null],[13,"StoreRetrieveUpdate","","",93,null],[13,"NotFound","","",93,null],[13,"Conflict","","",93,null],[13,"BadUpdate","","",93,null],[13,"NoUpdate","","",93,null],[13,"GetMultiple","","",93,null],[13,"ListTransactions","","",93,null],[13,"ViewQuery","","",93,null],[13,"UnassociatedCollection","","",93,null],[13,"ViewUpdate","","",93,null],[13,"ViewAccessPolicies","","",93,null],[13,"UniqueViews","","",93,null],[13,"PubSubSimple","","",93,null],[13,"PubSubMultipleSubscribers","","",93,null],[13,"PubSubDropAndSend","","",93,null],[13,"PubSubUnsubscribe","","",93,null],[13,"PubSubDropCleanup","","",93,null],[13,"PubSubPublishAll","","",93,null],[13,"KvBasic","","",93,null],[13,"KvSet","","",93,null],[13,"KvExpiration","","",93,null],[13,"KvDeleteExpire","","",93,null],[11,"port","","",93,[[["u16",15]],["u16",15]]],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[5,"unique_view_tests","","",null,[[]]],[3,"TimingTest","","",null,null],[11,"new","","",94,[[["duration",3]]]],[11,"wait_until","","",94,[[["duration",3]]]],[11,"elapsed","","",94,[[],["duration",3]]],[5,"basic_server_connection_tests","","",null,[[["str",15],["serverconnection",8]]]],[4,"Error","pliantdb_core","an enumeration of errors that this crate can produce",null,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",95,null],[12,"database_name","pliantdb_core::Error","The name of the database being accessed.",96,null],[12,"schema","","The schema provided for the database.",96,null],[12,"stored_schema","","The schema stored for the database.",96,null],[13,"SchemaAlreadyRegistered","pliantdb_core","The [<code>SchemaName</code>] returned has already been registered …",95,null],[13,"SchemaNotRegistered","","The [<code>SchemaName</code>] requested was not registered with this …",95,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See …",95,null],[13,"DatabaseNotFound","","The database name given was not found.",95,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",95,null],[13,"Database","","An error from interacting with local storage.",95,null],[13,"Server","","An error from interacting with a server.",95,null],[13,"Transport","","An error occurred from the QUIC transport layer.",95,null],[13,"Websocket","","An error occurred from the websocket transport layer.",95,null],[13,"Networking","","An error occurred from networking.",95,null],[13,"Io","","An error occurred from IO.",95,null],[13,"Configuration","","An error occurred with the provided configuration options.",95,null],[13,"Client","","An error occurred inside of the client.",95,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",95,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",95,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",95,null],[13,"UniqueKeyViolation","","When saving a document in a collection with unique views, …",95,null],[12,"view","pliantdb_core::Error","The name of the view that the unique key violation …",97,null],[12,"conflicting_document_id","","The document that caused the violation.",97,null],[12,"existing_document_id","","The document that already uses the same key.",97,null],[13,"InvalidName","pliantdb_core","An invalid name was specified during schema creation.",95,null],[13,"PermissionDenied","","Permission was denied.",95,null],[14,"define_pubsub_test_suite","","Expands into a suite of pubsub unit tests using the …",null,null],[14,"define_connection_test_suite","","Creates a test suite that tests methods available on […",null,null],[14,"define_kv_test_suite","","Defines the Kv test suite",null,null],[11,"schema_name","pliantdb_core::permissions::group","",0,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"define_collections","","",0,[[["schematic",3]],[["error",4],["result",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"collection","","",98,[[],[["collectionname",3],["invalidnameerror",3],["result",4]]]],[11,"unique","","",98,[[],["bool",15]]],[11,"version","","",98,[[],["u64",15]]],[11,"view_name","","",98,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[11,"map","","",98,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",98,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"from","pliantdb_core::permissions::pliant","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"schema_name","pliantdb_core::permissions::role","",9,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"define_collections","","",9,[[["schematic",3]],[["error",4],["result",4]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"collection","","",99,[[],[["collectionname",3],["invalidnameerror",3],["result",4]]]],[11,"unique","","",99,[[],["bool",15]]],[11,"version","","",99,[[],["u64",15]]],[11,"view_name","","",99,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[11,"map","","",99,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",99,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"from","pliantdb_core::permissions","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"equivalent","","",14,[[],["bool",15]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"to_string","","",101,[[],["string",3]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"as_bits","","",101,[[],["bitslice",3]]],[11,"vzip","","",101,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","pliantdb_core::connection","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","pliantdb_core::document","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"equivalent","","",24,[[],["bool",15]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"equivalent","","",25,[[],["bool",15]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","pliantdb_core::schema","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"to_string","","",102,[[],["string",3]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"equivalent","","",102,[[],["bool",15]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"to_string","","",103,[[],["string",3]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"equivalent","","",103,[[],["bool",15]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"equivalent","","",39,[[],["bool",15]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"equivalent","","",37,[[],["bool",15]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"equivalent","","",40,[[],["bool",15]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"from","pliantdb_core::schema::view::map","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","pliantdb_core::schema::view","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"as_bits","","",34,[[],["bitslice",3]]],[11,"vzip","","",34,[[]]],[11,"from","pliantdb_core::transaction","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","pliantdb_core::kv","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"equivalent","","",53,[[],["bool",15]]],[11,"from","pliantdb_core::kv::get","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"into_future","","",105,[[]]],[11,"try_poll","","",105,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",105,[[]]],[11,"from","pliantdb_core::kv::namespaced","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"from","pliantdb_core::kv::set","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"into_future","","",107,[[]]],[11,"try_poll","","",107,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",107,[[]]],[11,"from","pliantdb_core::kv","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","pliantdb_core::networking","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"to_string","","",87,[[],["string",3]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"schema_name","pliantdb_core::test_util","",90,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"define_collections","","",90,[[["schematic",3]],[["error",4],["result",4]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"collection","","",108,[[],[["collectionname",3],["invalidnameerror",3],["result",4]]]],[11,"unique","","",108,[[],["bool",15]]],[11,"version","","",108,[[],["u64",15]]],[11,"view_name","","",108,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[11,"map","","",108,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",108,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"collection","","",109,[[],[["collectionname",3],["invalidnameerror",3],["result",4]]]],[11,"unique","","",109,[[],["bool",15]]],[11,"version","","",109,[[],["u64",15]]],[11,"view_name","","",109,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[11,"map","","",109,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",109,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"collection","","",110,[[],[["collectionname",3],["invalidnameerror",3],["result",4]]]],[11,"unique","","",110,[[],["bool",15]]],[11,"version","","",110,[[],["u64",15]]],[11,"view_name","","",110,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[11,"map","","",110,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",110,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"collection","","",111,[[],[["collectionname",3],["invalidnameerror",3],["result",4]]]],[11,"unique","","",111,[[],["bool",15]]],[11,"version","","",111,[[],["u64",15]]],[11,"view_name","","",111,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[11,"map","","",111,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",111,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"schema_name","","",91,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"define_collections","","",91,[[["schematic",3]],[["error",4],["result",4]]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"collection","","",113,[[],[["collectionname",3],["invalidnameerror",3],["result",4]]]],[11,"unique","","",113,[[],["bool",15]]],[11,"version","","",113,[[],["u64",15]]],[11,"view_name","","",113,[[],[["result",4],["viewname",3],["invalidnameerror",3]]]],[11,"map","","",113,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",113,[[["bool",15]],[["vec",3],["error",4],["result",4]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"schema_name","","",114,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"define_collections","","",114,[[["schematic",3]],[["error",4],["result",4]]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"vzip","","",114,[[]]],[11,"schema_name","","",115,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"define_collections","","",115,[[["schematic",3]],[["error",4],["result",4]]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"schema_name","","",116,[[],[["schemaname",3],["invalidnameerror",3],["result",4]]]],[11,"define_collections","","",116,[[["schematic",3]],[["error",4],["result",4]]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"vzip","","",116,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"to_string","","",93,[[],["string",3]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"from","pliantdb_core","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"to_string","","",95,[[],["string",3]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"fmt","pliantdb_core::permissions","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",14,[[]]],[11,"serialize","","",101,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"from","","",14,[[["str",15]],["identifier",4]]],[11,"from","","",14,[[["string",3]],["identifier",4]]],[11,"from","","",14,[[["u64",15]],["identifier",4]]],[11,"from","","",100,[[["vec",3],["statement",3],["global",3]],["permissions",3]]],[11,"from","","",12,[[["actionname",3]],["actionnamelist",4]]],[11,"from","","",14,[[["string",3]],["identifier",4]]],[11,"from","","",12,[[["vec",3],["actionname",3],["global",3]],["actionnamelist",4]]],[11,"from","","",12,[[],["actionnamelist",4]]],[11,"as_ref","","",101,[[]]],[11,"into_iter","","",101,[[]]],[11,"deserialize","","",16,[[],[["statement",3],["result",4]]]],[11,"deserialize","","",11,[[],[["result",4],["actionname",3]]]],[11,"deserialize","","",12,[[],[["result",4],["actionnamelist",4]]]],[11,"deserialize","","",15,[[],[["result",4],["permissiondenied",3]]]],[11,"deserialize","","",14,[[],[["identifier",4],["result",4]]]],[11,"deserialize","","",101,[[],[["resourcename",3],["result",4]]]],[11,"default","","",100,[[],["permissions",3]]],[11,"default","","",11,[[],["actionname",3]]],[11,"default","","",101,[[],["resourcename",3]]],[11,"clone","","",11,[[],["actionname",3]]],[11,"clone","","",101,[[],["resourcename",3]]],[11,"clone","","",14,[[],["identifier",4]]],[11,"clone","","",15,[[],["permissiondenied",3]]],[11,"eq","","",14,[[["identifier",4]],["bool",15]]],[11,"ne","","",14,[[["identifier",4]],["bool",15]]],[11,"collection_name","pliantdb_core::permissions::group","",0,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"define_views","","",0,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","pliantdb_core::permissions::role","",9,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"define_views","","",9,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","pliantdb_core::test_util","",90,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"define_views","","",90,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","","",91,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"define_views","","",91,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","","",114,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"define_views","","",114,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","","",115,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"define_views","","",115,[[["schematic",3]],[["result",4],["error",4]]]],[11,"collection_name","","",116,[[],[["collectionname",3],["result",4],["invalidnameerror",3]]]],[11,"define_views","","",116,[[["schematic",3]],[["result",4],["error",4]]]],[11,"as_big_endian_bytes","pliantdb_core::kv","",53,[[],[["cow",4],["result",6]]]],[11,"from_big_endian_bytes","","",53,[[],["result",6]]],[11,"unique","pliantdb_core::permissions::group","",98,[[],["bool",15]]],[11,"version","","",98,[[],["u64",15]]],[11,"name","","",98,[[],[["name",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",98,[[["document",3]],["mapresult",6]]],[11,"unique","pliantdb_core::permissions::role","",99,[[],["bool",15]]],[11,"version","","",99,[[],["u64",15]]],[11,"name","","",99,[[],[["name",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",99,[[["document",3]],["mapresult",6]]],[11,"version","pliantdb_core::test_util","",108,[[],["u64",15]]],[11,"name","","",108,[[],[["name",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",108,[[["document",3]],["mapresult",6]]],[11,"reduce","","",108,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",109,[[],["u64",15]]],[11,"name","","",109,[[],[["name",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",109,[[["document",3]],["mapresult",6]]],[11,"reduce","","",109,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",110,[[],["u64",15]]],[11,"name","","",110,[[],[["name",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",110,[[["document",3]],["mapresult",6]]],[11,"reduce","","",110,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",111,[[],["u64",15]]],[11,"name","","",111,[[],[["name",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",111,[[["document",3]],["mapresult",6]]],[11,"unique","","",113,[[],["bool",15]]],[11,"version","","",113,[[],["u64",15]]],[11,"name","","",113,[[],[["name",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",113,[[["document",3]],["mapresult",6]]],[11,"schema_name","","",112,[[],[["result",4],["schemaname",3],["invalidnameerror",3]]]],[11,"define_collections","","",112,[[["schematic",3]],[["result",4],["error",4]]]],[11,"execute_key_operation","pliantdb_core::kv::namespaced","",106,[[["keyoperation",3]],[["pin",3],["box",3]]]],[11,"key_namespace","","",106,[[],[["option",4],["str",15]]]],[11,"with_key_namespace","","",106,[[["str",15]],["namespaced",3]]],[11,"drop","pliantdb_core::test_util","",92,[[]]],[11,"as_ref","pliantdb_core::schema","",102,[[],["str",15]]],[11,"as_ref","pliantdb_core::schema::view","",34,[[]]],[11,"as_ref","pliantdb_core::test_util","",92,[[],["path",3]]],[11,"from","pliantdb_core::schema::view","",32,[[["error",3]]]],[11,"from","","",34,[[],["serializablevalue",4]]],[11,"from","pliantdb_core::kv","",53,[[["systemtime",3]]]],[11,"from","pliantdb_core","",95,[[["invalidnameerror",3]]]],[11,"from","","",95,[[["permissiondenied",3]]]],[11,"from","","",95,[[["error",3]]]],[11,"into","pliantdb_core::schema","",102,[[],["string",3]]],[11,"clone","pliantdb_core::permissions::pliant","",1,[[],["pliantaction",4]]],[11,"clone","","",2,[[],["serveraction",4]]],[11,"clone","","",3,[[],["databaseaction",4]]],[11,"clone","","",4,[[],["documentaction",4]]],[11,"clone","","",5,[[],["viewaction",4]]],[11,"clone","","",6,[[],["transactionaction",4]]],[11,"clone","","",7,[[],["pubsubaction",4]]],[11,"clone","","",8,[[],["kvaction",4]]],[11,"clone","pliantdb_core::connection","",20,[[],["querykey",4]]],[11,"clone","","",21,[[],["accesspolicy",4]]],[11,"clone","","",23,[[],["database",3]]],[11,"clone","pliantdb_core::document","",24,[[],["revision",3]]],[11,"clone","","",25,[[],["header",3]]],[11,"clone","","",26,[[],["document",3]]],[11,"clone","pliantdb_core::schema","",102,[[],["name",3]]],[11,"clone","","",38,[[],["invalidnameerror",3]]],[11,"clone","","",103,[[],["authority",3]]],[11,"clone","","",39,[[],["schemaname",3]]],[11,"clone","","",37,[[],["collectionname",3]]],[11,"clone","","",40,[[],["viewname",3]]],[11,"clone","pliantdb_core::schema::view::map","",29,[[],["serialized",3]]],[11,"clone","","",30,[[],["mappedvalue",3]]],[11,"clone","pliantdb_core::transaction","",42,[[],["transaction",3]]],[11,"clone","","",43,[[],["operation",3]]],[11,"clone","","",44,[[],["command",4]]],[11,"clone","","",48,[[],["operationresult",4]]],[11,"clone","","",51,[[],["executed",3]]],[11,"clone","","",52,[[],["changeddocument",3]]],[11,"clone","pliantdb_core::kv","",53,[[],["timestamp",3]]],[11,"clone","","",55,[[],["keycheck",4]]],[11,"clone","","",56,[[],["keyoperation",3]]],[11,"clone","","",57,[[],["command",4]]],[11,"clone","","",60,[[],["output",4]]],[11,"clone","","",61,[[],["keystatus",4]]],[11,"clone","pliantdb_core::networking","",62,[[],["payload",3]]],[11,"clone","","",63,[[],["request",4]]],[11,"clone","","",65,[[],["serverrequest",4]]],[11,"clone","","",67,[[],["databaserequest",4]]],[11,"clone","","",79,[[],["response",4]]],[11,"clone","","",80,[[],["serverresponse",4]]],[11,"clone","","",83,[[],["databaseresponse",4]]],[11,"clone","","",86,[[],["mappeddocument",3]]],[11,"clone","","",87,[[],["error",4]]],[11,"clone","pliantdb_core","",95,[[],["error",4]]],[11,"clone","pliantdb_core::test_util","",93,[[],["harnesstest",4]]],[11,"default","pliantdb_core::schema","",104,[[],["schematic",3]]],[11,"default","pliantdb_core::transaction","",42,[[],["transaction",3]]],[11,"default","pliantdb_core::test_util","",90,[[],["basic",3]]],[11,"default","","",91,[[],["unique",3]]],[11,"cmp","pliantdb_core::kv","",53,[[["timestamp",3]],["ordering",4]]],[11,"eq","pliantdb_core::connection","",23,[[["database",3]],["bool",15]]],[11,"ne","","",23,[[["database",3]],["bool",15]]],[11,"eq","pliantdb_core::document","",24,[[["revision",3]],["bool",15]]],[11,"ne","","",24,[[["revision",3]],["bool",15]]],[11,"eq","","",25,[[["header",3]],["bool",15]]],[11,"ne","","",25,[[["header",3]],["bool",15]]],[11,"eq","pliantdb_core::schema","",102,[[["name",3]],["bool",15]]],[11,"ne","","",102,[[["name",3]],["bool",15]]],[11,"eq","","",103,[[["authority",3]],["bool",15]]],[11,"ne","","",103,[[["authority",3]],["bool",15]]],[11,"eq","","",39,[[["schemaname",3]],["bool",15]]],[11,"ne","","",39,[[["schemaname",3]],["bool",15]]],[11,"eq","","",37,[[["collectionname",3]],["bool",15]]],[11,"ne","","",37,[[["collectionname",3]],["bool",15]]],[11,"eq","","",40,[[["viewname",3]],["bool",15]]],[11,"ne","","",40,[[["viewname",3]],["bool",15]]],[11,"eq","pliantdb_core::schema::view::map","",27,[[["map",3]],["bool",15]]],[11,"ne","","",27,[[["map",3]],["bool",15]]],[11,"eq","","",30,[[["mappedvalue",3]],["bool",15]]],[11,"ne","","",30,[[["mappedvalue",3]],["bool",15]]],[11,"eq","pliantdb_core::kv","",53,[[["timestamp",3]],["bool",15]]],[11,"ne","","",53,[[["timestamp",3]],["bool",15]]],[11,"eq","","",61,[[["keystatus",4]],["bool",15]]],[11,"eq","pliantdb_core::test_util","",90,[[["basic",3]],["bool",15]]],[11,"ne","","",90,[[["basic",3]],["bool",15]]],[11,"eq","","",91,[[["unique",3]],["bool",15]]],[11,"ne","","",91,[[["unique",3]],["bool",15]]],[11,"partial_cmp","pliantdb_core::kv","",53,[[["timestamp",3]],[["option",4],["ordering",4]]]],[11,"lt","","",53,[[["timestamp",3]],["bool",15]]],[11,"le","","",53,[[["timestamp",3]],["bool",15]]],[11,"gt","","",53,[[["timestamp",3]],["bool",15]]],[11,"ge","","",53,[[["timestamp",3]],["bool",15]]],[11,"fmt","pliantdb_core::permissions::group","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::permissions::pliant","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::permissions::role","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::connection","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::document","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::view::map","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::view","",32,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::transaction","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::kv","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::networking","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core","",95,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::test_util","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::view","",32,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::networking","",87,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core","",95,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::test_util","",93,[[["formatter",3]],["result",6]]],[11,"sub","pliantdb_core::kv","",53,[[]]],[11,"add","","",53,[[["duration",3]]]],[11,"hash","pliantdb_core::schema","",102,[[]]],[11,"hash","","",103,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",40,[[]]],[11,"try_from","","",102,[[["str",15]],[["result",4],["invalidnameerror",3]]]],[11,"try_from","","",102,[[["string",3]],[["result",4],["invalidnameerror",3]]]],[11,"try_from","","",103,[[["str",15]],[["result",4],["invalidnameerror",3]]]],[11,"try_from","","",103,[[["string",3]],[["result",4],["invalidnameerror",3]]]],[11,"try_from","","",39,[[["str",15]],[["result",4],["invalidnameerror",3]]]],[11,"try_from","","",37,[[["str",15]],[["result",4],["invalidnameerror",3]]]],[11,"source","pliantdb_core::schema::view","",32,[[],[["error",8],["option",4]]]],[11,"source","pliantdb_core","",95,[[],[["error",8],["option",4]]]],[11,"poll","pliantdb_core::kv::get","",105,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","pliantdb_core::kv::set","",107,[[["pin",3],["context",3]],["poll",4]]],[11,"serialize","pliantdb_core::permissions::group","",0,[[],["result",4]]],[11,"serialize","pliantdb_core::permissions::pliant","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","pliantdb_core::permissions::role","",9,[[],["result",4]]],[11,"serialize","pliantdb_core::connection","",20,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","pliantdb_core::document","",24,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","pliantdb_core::schema","",102,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","","",103,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","","",40,[[],["result",4]]],[11,"serialize","pliantdb_core::schema::view::map","",29,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","pliantdb_core::transaction","",42,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","","",44,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","","",51,[[],["result",4]]],[11,"serialize","","",52,[[],["result",4]]],[11,"serialize","pliantdb_core::kv","",53,[[],["result",4]]],[11,"serialize","","",55,[[],["result",4]]],[11,"serialize","","",56,[[],["result",4]]],[11,"serialize","","",57,[[],["result",4]]],[11,"serialize","","",60,[[],["result",4]]],[11,"serialize","","",61,[[],["result",4]]],[11,"serialize","pliantdb_core::networking","",62,[[],["result",4]]],[11,"serialize","","",63,[[],["result",4]]],[11,"serialize","","",65,[[],["result",4]]],[11,"serialize","","",67,[[],["result",4]]],[11,"serialize","","",79,[[],["result",4]]],[11,"serialize","","",80,[[],["result",4]]],[11,"serialize","","",83,[[],["result",4]]],[11,"serialize","","",86,[[],["result",4]]],[11,"serialize","","",87,[[],["result",4]]],[11,"serialize","pliantdb_core","",95,[[],["result",4]]],[11,"serialize","pliantdb_core::test_util","",90,[[],["result",4]]],[11,"serialize","","",91,[[],["result",4]]],[11,"deserialize","pliantdb_core::permissions::group","",0,[[],["result",4]]],[11,"deserialize","pliantdb_core::permissions::pliant","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","pliantdb_core::permissions::role","",9,[[],["result",4]]],[11,"deserialize","pliantdb_core::connection","",20,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","pliantdb_core::document","",24,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","pliantdb_core::schema","",102,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","","",103,[[],["result",4]]],[11,"deserialize","","",39,[[],["result",4]]],[11,"deserialize","","",37,[[],["result",4]]],[11,"deserialize","","",40,[[],["result",4]]],[11,"deserialize","pliantdb_core::schema::view::map","",29,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","pliantdb_core::transaction","",42,[[],["result",4]]],[11,"deserialize","","",43,[[],["result",4]]],[11,"deserialize","","",44,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","","",51,[[],["result",4]]],[11,"deserialize","","",52,[[],["result",4]]],[11,"deserialize","pliantdb_core::kv","",53,[[],["result",4]]],[11,"deserialize","","",55,[[],["result",4]]],[11,"deserialize","","",56,[[],["result",4]]],[11,"deserialize","","",57,[[],["result",4]]],[11,"deserialize","","",60,[[],["result",4]]],[11,"deserialize","","",61,[[],["result",4]]],[11,"deserialize","pliantdb_core::networking","",62,[[],["result",4]]],[11,"deserialize","","",63,[[],["result",4]]],[11,"deserialize","","",65,[[],["result",4]]],[11,"deserialize","","",67,[[],["result",4]]],[11,"deserialize","","",79,[[],["result",4]]],[11,"deserialize","","",80,[[],["result",4]]],[11,"deserialize","","",83,[[],["result",4]]],[11,"deserialize","","",86,[[],["result",4]]],[11,"deserialize","","",87,[[],["result",4]]],[11,"deserialize","pliantdb_core","",95,[[],["result",4]]],[11,"deserialize","pliantdb_core::test_util","",90,[[],["result",4]]],[11,"deserialize","","",91,[[],["result",4]]],[11,"name","pliantdb_core::permissions::pliant","",1,[[],["actionname",3]]],[11,"name","","",2,[[],["actionname",3]]],[11,"name","","",3,[[],["actionname",3]]],[11,"name","","",4,[[],["actionname",3]]],[11,"name","","",5,[[],["actionname",3]]],[11,"name","","",6,[[],["actionname",3]]],[11,"name","","",7,[[],["actionname",3]]],[11,"name","","",8,[[],["actionname",3]]],[11,"to_owned","pliantdb_core::permissions","Convert this identifier to an un-borrowed identifier.",14,[[],["identifier",4]]],[11,"allowed_to","","Evaluate whether the <code>action</code> is allowed to be taken upon …",100,[[],["bool",15]]],[11,"to_owned","","Convert a borrowed name to an un-borrwed name.",101,[[],["resourcename",3]]],[11,"any","","Creates a <code>ResourceName</code> that matches any identifier.",101,[[],["resourcename",3]]],[11,"named","","Creates a <code>ResourceName</code> with <code>name</code>.",101,[[],["resourcename",3]]],[11,"and","","Adds another name segment.",101,[[],["resourcename",3]]],[11,"new","pliantdb_core::document","Creates the first revision for a document with the SHA256 …",24,[[]]],[11,"with_id","","Creates a revision with <code>id</code> for a document with the SHA256 …",24,[[["u32",15]]]],[11,"next_revision","","Creates the next revision in sequence with an updated …",24,[[],["option",4]]],[11,"new","pliantdb_core::schema","Creates a new name after validating it.",102,[[["tryinto",8]],[["result",4],["invalidnameerror",3]]]],[11,"new","","Creates a new schema name.",39,[[["authority",3],["tryinto",8],["tryinto",8],["name",3]],[["result",4],["invalidnameerror",3]]]],[11,"new","","Creates a new collection name.",37,[[["authority",3],["tryinto",8],["tryinto",8],["name",3]],[["result",4],["invalidnameerror",3]]]],[11,"new","","Creates a new view name.",40,[[["collectionname",3],["tryinto",8],["tryinto",8],["name",3]],[["result",4],["invalidnameerror",3]]]],[11,"define_collection","","Adds the collection <code>C</code> and its views.",104,[[],[["result",4],["error",4]]]],[11,"define_view","","Adds the view <code>V</code>.",104,[[["view",8]],[["result",4],["error",4]]]],[11,"contains","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",104,[[],["bool",15]]],[11,"contains_collection_id","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",104,[[["collectionname",3]],["bool",15]]],[11,"view_by_name","","Looks up a [<code>view::Serialized</code>] by name.",104,[[["viewname",3]],[["serialized",8],["option",4]]]],[11,"view","","Looks up a [<code>view::Serialized</code>] through the the type <code>V</code>.",104,[[],[["serialized",8],["option",4]]]],[11,"views","","Iterates over all registered views.",104,[[]]],[11,"views_in_collection","","Iterates over all views that belong to <code>collection</code>.",104,[[["collectionname",3]],[["option",4],["vec",3]]]],[11,"unique_views_in_collection","","Iterates over all views that are unique that belong to …",104,[[["collectionname",3]],[["option",4],["vec",3]]]],[11,"now","pliantdb_core::kv","Returns the current timestamp according to the OS. Uses […",53,[[]]],[11,"and_delete","pliantdb_core::kv::get","Delete the key after retrieving the value.",105,[[]]],[11,"expire_in","pliantdb_core::kv::set","Set this key to expire after <code>duration</code> from now.",107,[[["duration",3]]]],[11,"expire_at","","Set this key to expire at the provided <code>time</code>.",107,[[["systemtime",3]]]],[11,"keep_existing_expiration","","If the key already exists, do not update the currently …",107,[[]]],[11,"only_if_exists","","Only set the value if this key already exists.",107,[[]]],[11,"only_if_vacant","","Only set the value if this key isn\'t present.",107,[[]]],[11,"returning_previous","","Executes the Set operation, requesting the previous value …",107,[[]]],[11,"set_key","pliantdb_core::kv","Sets <code>key</code> to <code>value</code>. This function returns a builder that …",54,[[["string",3],["into",8]],[["builder",3],["serialize",8]]]],[11,"get_key","","Gets the value stored at <code>key</code>. This function returns a …",54,[[["string",3],["into",8]],[["builder",3],["deserialize",8]]]],[11,"delete_key","","Deletes the value stored at <code>key</code>.",54,[[["into",8],["string",3],["send",8]],[["box",3],["pin",3]]]],[11,"key_namespace","","The current namespace.",54,[[],[["option",4],["str",15]]]],[11,"with_key_namespace","","Access this Key-Value store within a namespace. When …",54,[[["str",15]],["namespaced",3]]]],"p":[[3,"PermissionGroup"],[4,"PliantAction"],[4,"ServerAction"],[4,"DatabaseAction"],[4,"DocumentAction"],[4,"ViewAction"],[4,"TransactionAction"],[4,"PubSubAction"],[4,"KvAction"],[3,"Role"],[8,"Action"],[3,"ActionName"],[4,"ActionNameList"],[8,"Dispatcher"],[4,"Identifier"],[3,"PermissionDenied"],[3,"Statement"],[8,"Connection"],[3,"Collection"],[3,"View"],[4,"QueryKey"],[4,"AccessPolicy"],[8,"ServerConnection"],[3,"Database"],[3,"Revision"],[3,"Header"],[3,"Document"],[3,"Map"],[3,"MappedDocument"],[3,"Serialized"],[3,"MappedValue"],[8,"Key"],[4,"Error"],[8,"View"],[4,"SerializableValue"],[8,"Serialized"],[8,"Collection"],[3,"CollectionName"],[3,"InvalidNameError"],[3,"SchemaName"],[3,"ViewName"],[8,"Schema"],[3,"Transaction"],[3,"Operation"],[4,"Command"],[13,"Insert"],[13,"Update"],[13,"Delete"],[4,"OperationResult"],[13,"DocumentUpdated"],[13,"DocumentDeleted"],[3,"Executed"],[3,"ChangedDocument"],[3,"Timestamp"],[8,"Kv"],[4,"KeyCheck"],[3,"KeyOperation"],[4,"Command"],[13,"Set"],[13,"Get"],[4,"Output"],[4,"KeyStatus"],[3,"Payload"],[4,"Request"],[13,"Database"],[4,"ServerRequest"],[13,"DeleteDatabase"],[4,"DatabaseRequest"],[13,"Get"],[13,"GetMultiple"],[13,"Query"],[13,"Reduce"],[13,"ApplyTransaction"],[13,"ListExecutedTransactions"],[13,"Publish"],[13,"PublishToAll"],[13,"SubscribeTo"],[13,"UnsubscribeFrom"],[13,"UnregisterSubscriber"],[4,"Response"],[4,"ServerResponse"],[13,"DatabaseCreated"],[13,"DatabaseDeleted"],[4,"DatabaseResponse"],[13,"SubscriberCreated"],[13,"MessageReceived"],[3,"MappedDocument"],[4,"Error"],[8,"PubSub"],[8,"Subscriber"],[3,"Basic"],[3,"Unique"],[3,"TestDirectory"],[4,"HarnessTest"],[3,"TimingTest"],[4,"Error"],[13,"SchemaMismatch"],[13,"UniqueKeyViolation"],[3,"ByName"],[3,"ByName"],[3,"Permissions"],[3,"ResourceName"],[3,"Name"],[3,"Authority"],[3,"Schematic"],[3,"Builder"],[3,"Namespaced"],[3,"Builder"],[3,"BasicCount"],[3,"BasicByParentId"],[3,"BasicByCategory"],[3,"BasicByBrokenParentId"],[3,"BasicSchema"],[3,"UniqueValue"],[3,"BasicCollectionWithNoViews"],[3,"BasicCollectionWithOnlyBrokenParentId"],[3,"UnassociatedCollection"]]},\
"pliantdb_jobs":{"doc":"Aysnc jobs management for <code>PliantDb</code>.","i":[[0,"manager","pliantdb_jobs","Types related to the job <code>Manager</code>.",null,null],[3,"Manager","pliantdb_jobs::manager","A background jobs manager.",null,null],[11,"enqueue","","Pushes a <code>job</code> into the queue. Pushing the same job …",0,[[["job",8]]]],[11,"lookup_or_enqueue","","Uses [<code>Keyed::key</code>] to ensure no other job with the same <code>key</code>…",0,[[["keyed",8]]]],[11,"spawn_worker","","Spawns a worker. In general, you shouldn\'t need to call …",0,[[]]],[0,"task","pliantdb_jobs","Types related to defining [<code>Job</code>]s.",null,null],[3,"Id","pliantdb_jobs::task","he <code>Id</code> of an executing task.",null,null],[3,"Handle","","References a background task.",null,null],[12,"id","","The task\'s id.",1,null],[11,"clone","","Returns a copy of this handle. When the job is completed, …",1,[[]]],[11,"receive","","Waits for the job to complete and returns the result.",1,[[]]],[11,"try_receive","","Tries to receive the status of the job. If available, it …",1,[[],[["result",4],["result",4],["tryrecverror",4]]]],[8,"Job","pliantdb_jobs","Defines a background job that can be queued and executed.",null,null],[16,"Output","","The output type of the job.",2,null],[10,"execute","","Executes the job and returns the result.",2,[[],[["pin",3],["box",3]]]],[8,"Keyed","","Defines a background job that has a unique <code>key</code>.",null,null],[10,"key","","The unique <code>key</code> for this <code>Job</code>",3,[[]]],[11,"from","pliantdb_jobs::manager","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","pliantdb_jobs::task","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","pliantdb_jobs::manager","",0,[[]]],[11,"clone","pliantdb_jobs::task","",4,[[],["id",3]]],[11,"default","pliantdb_jobs::manager","",0,[[]]],[11,"eq","pliantdb_jobs::task","",4,[[["id",3]],["bool",15]]],[11,"ne","","",4,[[["id",3]],["bool",15]]],[11,"fmt","pliantdb_jobs::manager","",0,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_jobs::task","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"hash","","",4,[[]]]],"p":[[3,"Manager"],[3,"Handle"],[8,"Job"],[8,"Keyed"],[3,"Id"]]},\
"pliantdb_local":{"doc":"Local storage backend for <code>PliantDb</code>.","i":[[0,"config","pliantdb_local","Configuration options.",null,null],[3,"Configuration","pliantdb_local::config","Configuration options for <code>Storage</code>.",null,null],[12,"workers","","Configuration options related to background tasks.",0,null],[12,"views","","Configuration options related to views.",0,null],[3,"Tasks","","Configujration options for background tasks.",null,null],[12,"worker_count","","Defines how many workers should be spawned to process …",1,null],[3,"Views","","Configuration options for views.",null,null],[12,"check_integrity_on_open","","If true, the database will scan all views during the call …",2,null],[0,"backup","pliantdb_local","Local database tool to save and load databases into plain …",null,null],[3,"Cli","pliantdb_local::backup","The command line interface for <code>pliantdb local-backup</code>.",null,null],[12,"database_path","","The path to the database you wish to operate on.",3,null],[12,"subcommand","","The command to execute on the database.",3,null],[4,"Command","","The command to execute.",null,null],[13,"Save","","Exports all of the data into a straightforward file …",4,null],[12,"output_directory","pliantdb_local::backup::Command","The directory to export the data within. The process will …",5,null],[12,"output_name","","The name of the folder to export the data to. If not …",5,null],[13,"Load","pliantdb_local::backup","Loads all of the data from a previously saved backup. Any …",4,null],[12,"backup","pliantdb_local::backup::Command","The path to the previously saved backup.",6,null],[11,"execute","pliantdb_local::backup","Executes the command.",4,[[["pathbuf",3]]]],[0,"permissions","pliantdb_local::core","Types for creating and validating permissions.",null,null],[0,"group","pliantdb_local::core::permissions","Schema types for permission groups.",null,null],[3,"PermissionGroup","pliantdb_local::core::permissions::group","A named group of permissions statements.",null,null],[12,"name","","The name of the group. Must be unique.",7,null],[12,"statements","","The permission statements.",7,null],[3,"ByName","","A unique view of permission groups by name.",null,null],[0,"pliant","pliantdb_local::core::permissions","Types used for granting permissions within <code>PliantDb</code>.",null,null],[5,"pliantdb_resource_name","pliantdb_local::core::permissions::pliant","Creates a resource name with the database <code>name</code>.",null,[[],["resourcename",3]]],[5,"database_resource_name","","Creates a resource name with the database <code>name</code>.",null,[[["str",15]],["resourcename",3]]],[5,"collection_resource_name","","Creates a resource name for a <code>collection</code> within a <code>database</code>…",null,[[["collectionname",3],["str",15]],["resourcename",3]]],[5,"document_resource_name","","Creates a resource name for a document <code>id</code> within …",null,[[["collectionname",3],["u64",15],["str",15]],["resourcename",3]]],[5,"view_resource_name","","Creaets a resource name for a <code>view</code> within <code>database</code>.",null,[[["viewname",3],["str",15]],["resourcename",3]]],[5,"pubsub_topic_resource_name","","Creates a resource name for <code>PubSub</code> <code>topic</code> within <code>database</code>.",null,[[["str",15]],["resourcename",3]]],[5,"kv_key_resource_name","","Creates a resource name for <code>key</code> within <code>namespace</code> within …",null,[[["option",4],["str",15]],["resourcename",3]]],[4,"PliantAction","","Actions that can be permitted within <code>PliantDb</code>.",null,null],[13,"Server","","Actions that operate on a server",8,null],[13,"Database","","Actions that operate on a specific database.",8,null],[4,"ServerAction","","Actions that operate on a server.",null,null],[13,"Connect","","Permits connecting to the server. Upon negotiating …",9,null],[13,"ListAvailableSchemas","","Permits <code>ServerConnection::list_available_schemas</code>.",9,null],[13,"ListDatabases","","Permits <code>ServerConnection::list_databases</code>.",9,null],[13,"CreateDatabase","","Permits <code>ServerConnection::create_database</code>.",9,null],[13,"DeleteDatabase","","Permits <code>ServerConnection::delete_database</code>.",9,null],[4,"DatabaseAction","","Actions that operate on a specific database.",null,null],[13,"Document","","Actions that operate on a document.",10,null],[13,"View","","Actions that operate on a view.",10,null],[13,"Transaction","","Actions that operate on transactions.",10,null],[13,"PubSub","","Actions that operate on the <code>PubSub</code> system.",10,null],[13,"Kv","","Actions that operate on the key-value store.",10,null],[4,"DocumentAction","","Actions that operate on a document.",null,null],[13,"Get","","Allows document retrieval through <code>Connection::get()</code> and …",11,null],[13,"Insert","","Allows inserting a document through …",11,null],[13,"Update","","Allows updating a document through …",11,null],[13,"Delete","","Allows deleting a document through …",11,null],[4,"ViewAction","","Actions that operate on a view.",null,null],[13,"Query","","Allows querying a view with <code>Connection::query()</code>. See […",12,null],[13,"Reduce","","Allows reducing a view with <code>Connection::reduce()</code>. See […",12,null],[4,"TransactionAction","","Actions that operate on transactions.",null,null],[13,"ListExecuted","","Allows listing executed transactions with …",13,null],[13,"GetLastId","","Allows retrieving the last executed transaction id with …",13,null],[4,"PubSubAction","","Actions that operate on the <code>PubSub</code> system.",null,null],[13,"CreateSuscriber","","Allows creating a subscriber with …",14,null],[13,"Publish","","Allows publishing a payload to a <code>PubSub</code> topic with …",14,null],[13,"SubscribeTo","","Allows subscribing to a <code>PubSub</code> topic with …",14,null],[13,"UnsubscribeFrom","","Allows unsubscribing from a <code>PubSub</code> topic with …",14,null],[4,"KvAction","","Actions that operate on the key-value store.",null,null],[13,"ExecuteOperation","","Allows executing a key-value store operation with …",15,null],[0,"role","pliantdb_local::core::permissions","Schema types for roles.",null,null],[3,"Role","pliantdb_local::core::permissions::role","An assignable role, which grants permissions based on the …",null,null],[12,"name","","The name of the role. Must be unique.",16,null],[12,"groups","","The IDs of the permission groups this role belongs to.",16,null],[3,"ByName","","A unique view of roles by name.",null,null],[8,"Action","pliantdb_local::core::permissions","An action that can be allowed or disallowed.",null,null],[10,"name","","The full name of this action.",17,[[],["actionname",3]]],[24,"Action","","Derives the <code>actionable::Action</code> trait.",null,null],[3,"ActionName","","A unique name of an action.",null,null],[12,"0","","",18,null],[4,"ActionNameList","","A list of [<code>ActionName</code>]s.",null,null],[13,"List","","A specific list of names.",19,null],[13,"All","","All actions.",19,null],[24,"Actionable","","Derives a set of traits that can be used to implement a …",null,null],[8,"Dispatcher","","Dispatches <code>T</code> to an appropriate handler. This trait is …",null,null],[16,"Result","","The type of the result.",20,null],[10,"dispatch","","Dispatches <code>request</code> to the appropriate handler while also …",20,[[["permissions",3]],[["pin",3],["box",3]]]],[24,"Dispatcher","","Derives the <code>Dispatcher</code> trait.",null,null],[4,"Identifier","","A single element of a [<code>ResourceName</code>]",null,null],[13,"Any","","When checking for allowed permissions, allow any match …",21,null],[13,"Integer","","An integer identifier.",21,null],[13,"String","","A string identifier.",21,null],[3,"PermissionDenied","","An <code>action</code> was denied.",null,null],[12,"resource","","The resource that <code>action</code> was attempted upon.",22,null],[12,"action","","The <code>action</code> attempted upon <code>resource</code>.",22,null],[3,"Permissions","","A collection of allowed permissions. This is constructed …",null,null],[3,"ResourceName","","A unique name/identifier of a resource.",null,null],[3,"Statement","","A statement of permissions. A statement describes whether …",null,null],[12,"resources","","The list of resources this statement applies to.",23,null],[12,"actions","","The list of actions this statement applies to.",23,null],[12,"allowed","","Whether the <code>actions</code> should be allowed or disallowed.",23,null],[3,"PermissionGroup","","A named group of permissions statements.",null,null],[12,"name","","The name of the group. Must be unique.",7,null],[12,"statements","","The permission statements.",7,null],[3,"Role","","An assignable role, which grants permissions based on the …",null,null],[12,"name","","The name of the role. Must be unique.",16,null],[12,"groups","","The IDs of the permission groups this role belongs to.",16,null],[0,"connection","pliantdb_local::core","Types for interacting with <code>PliantDb</code>.",null,null],[8,"Connection","pliantdb_local::core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",24,[[],["collection",3]]],[11,"insert","","Inserts a newly created document into the connected […",24,[[["global",3],["vec",3],["u8",15]],[["pin",3],["box",3]]]],[11,"update","","Updates an existing document in the connected […",24,[[["document",3]],[["box",3],["pin",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",24,[[["u64",15]],[["pin",3],["box",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",24,[[],[["box",3],["pin",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",24,[[["document",3]],[["box",3],["pin",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",24,[[],["view",3]]],[10,"query","","Queries for view entries matching [<code>View</code>].",24,[[["accesspolicy",4],["querykey",4],["option",4]],[["box",3],["pin",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",24,[[["accesspolicy",4],["querykey",4],["option",4]],[["box",3],["pin",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",24,[[["accesspolicy",4],["querykey",4],["option",4]],[["pin",3],["box",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",24,[[["accesspolicy",4],["querykey",4],["option",4]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",24,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",24,[[["usize",15],["option",4],["u64",15],["option",4]],[["pin",3],["box",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",24,[[],[["pin",3],["box",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",25,null],[12,"access_policy","","The view\'s data access policy. The default value is […",25,null],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",26,null],[13,"Range","","Matches all entires with keys in the range provided.",26,null],[13,"Multiple","","Matches all entries that have keys that are included in …",26,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",27,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",27,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",27,null],[8,"ServerConnection","","Functions for interacting with a multi-database <code>PliantDb</code> …",null,null],[11,"create_database","","Creates a database named <code>name</code> with the <code>Schema</code> provided.",28,[[["str",15]],[["box",3],["pin",3]]]],[10,"create_database_with_schema","","Creates a database named <code>name</code> using the [<code>SchemaName</code>] …",28,[[["str",15],["schemaname",3]],[["box",3],["pin",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",28,[[["str",15]],[["box",3],["pin",3]]]],[10,"list_databases","","Lists the databases on this server.",28,[[],[["box",3],["pin",3]]]],[10,"list_available_schemas","","Lists the [<code>SchemaName</code>]s on this server.",28,[[],[["pin",3],["box",3]]]],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",29,null],[12,"schema","","The schema defining the database.",29,null],[0,"document","pliantdb_local::core","Types for interacting with <code>Document</code>s.",null,null],[3,"Header","pliantdb_local::core::document","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",30,null],[12,"revision","","The revision of the stored document.",30,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",31,null],[12,"header","","The header of the document, which contains the id and …",31,null],[12,"contents","","The serialized bytes of the stored item.",31,null],[3,"Revision","","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",32,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",32,null],[0,"limits","pliantdb_local::core","Limits used within <code>PliantDb</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb_local::core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"schema","pliantdb_local::core","Types for defining database schema.",null,null],[0,"view","pliantdb_local::core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb_local::core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb_local::core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",33,null],[12,"key","","The key used to index the View.",33,null],[12,"value","","An associated value stored in the view.",33,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",34,null],[12,"key","","The key used to index the View.",34,null],[12,"value","","An associated value stored in the view.",34,null],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",35,null],[12,"key","","The key used to index the View.",35,null],[12,"value","","An associated value stored in the view.",35,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",36,null],[12,"value","","The value generated by the <code>View</code>",36,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",37,[[],[["cow",4],["error",3],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",37,[[],[["error",3],["result",4]]]],[8,"EnumKey","","Adds <code>Key</code> support to an enum. Requires implementing …",null,null],[4,"Error","pliantdb_local::core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",38,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",38,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",38,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",39,null],[16,"Key","","The key for this view.",39,null],[16,"Value","","An associated type that can be stored with each entry in …",39,null],[11,"unique","","If true, no two documents may emit the same key. Unique …",39,[[],["bool",15]]],[10,"version","","The version of the view. Changing this value will cause …",39,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",39,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"view_name","","The namespaced name of the view.",39,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[10,"map","","The map function for this view. This function is …",39,[[["document",3]],[["option",4],["result",4],["error",4]]]],[11,"reduce","","The reduce function for this view. If …",39,[[["bool",15]],[["error",4],["result",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",40,null],[13,"Borrowed","","a borrowed value",40,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",41,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[10,"unique","","Wraps [<code>View::unique</code>]",41,[[],["bool",15]]],[10,"version","","Wraps [<code>View::version</code>]",41,[[],["u64",15]]],[10,"view_name","","Wraps [<code>View::view_name</code>]",41,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[10,"map","","Wraps [<code>View::map</code>]",41,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",41,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[8,"Schema","pliantdb_local::core::schema","Defines a group of collections that are stored into a …",null,null],[10,"schema_name","","Returns the unique [<code>SchemaName</code>] for this schema.",42,[[],[["invalidnameerror",3],["result",4],["schemaname",3]]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",42,[[["schematic",3]],[["error",4],["result",4]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",42,[[],[["result",4],["schematic",3],["error",4]]]],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_name","","The <code>Id</code> of this collection.",43,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",43,[[["schematic",3]],[["error",4],["result",4]]]],[3,"Authority","","The owner of a schema item. This should represent the …",null,null],[3,"CollectionName","","The name of a <code>Collection</code>.",null,null],[12,"authority","","The authority of this collection.",44,null],[12,"name","","The name of this collection.",44,null],[3,"InvalidNameError","","An invalid name was used in a schema definition.",null,null],[12,"0","","",45,null],[3,"Name","","A valid schema name. Must be alphanumeric (<code>a-zA-Z9-0</code>) or …",null,null],[3,"SchemaName","","The name of a <code>Schema</code>.",null,null],[12,"authority","","The authority of this schema.",46,null],[12,"name","","The name of this schema.",46,null],[3,"ViewName","","The name of a <code>View</code>.",null,null],[12,"collection","","The name of the collection that contains this view.",47,null],[12,"name","","The name of this view.",47,null],[3,"Schematic","","A collection of defined collections and views.",null,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",37,[[],[["cow",4],["error",3],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",37,[[],[["error",3],["result",4]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",33,null],[12,"key","","The key used to index the View.",33,null],[12,"value","","An associated value stored in the view.",33,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",34,null],[12,"key","","The key used to index the View.",34,null],[12,"value","","An associated value stored in the view.",34,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",36,null],[12,"value","","The value generated by the <code>View</code>",36,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",39,null],[16,"Key","","The key for this view.",39,null],[16,"Value","","An associated type that can be stored with each entry in …",39,null],[11,"unique","","If true, no two documents may emit the same key. Unique …",39,[[],["bool",15]]],[10,"version","","The version of the view. Changing this value will cause …",39,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",39,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"view_name","","The namespaced name of the view.",39,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[10,"map","","The map function for this view. This function is …",39,[[["document",3]],[["option",4],["result",4],["error",4]]]],[11,"reduce","","The reduce function for this view. If …",39,[[["bool",15]],[["error",4],["result",4]]]],[0,"transaction","pliantdb_local::core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb_local::core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",48,null],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",49,null],[12,"command","","The command being performed.",49,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",50,null],[12,"contents","pliantdb_local::core::transaction::Command","The initial contents of the document.",51,null],[13,"Update","pliantdb_local::core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",50,null],[12,"header","pliantdb_local::core::transaction::Command","The current header of the <code>Document</code>.",52,null],[12,"contents","","The new contents to store within the <code>Document</code>.",52,null],[13,"Delete","pliantdb_local::core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",50,null],[12,"header","pliantdb_local::core::transaction::Command","The current header of the <code>Document</code>.",53,null],[4,"OperationResult","pliantdb_local::core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",54,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",54,null],[12,"collection","pliantdb_local::core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",55,null],[12,"header","","The header of the updated <code>Document</code>.",55,null],[13,"DocumentDeleted","pliantdb_local::core::transaction","A <code>Document</code> was deleted.",54,null],[12,"collection","pliantdb_local::core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",56,null],[12,"id","","The id of the deleted <code>Document</code>.",56,null],[3,"Executed","pliantdb_local::core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",57,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",57,null],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",58,null],[12,"id","","The id of the changed <code>Document</code>.",58,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",58,null],[0,"kv","pliantdb_local::core","Types for utilizing a lightweight atomic Key-Value store.",null,null],[4,"KeyCheck","pliantdb_local::core::kv","Checks for existing keys.",null,null],[13,"OnlyIfPresent","","Only allow the operation if an existing key is present.",59,null],[13,"OnlyIfVacant","","Only allow the opeartion if the key isn\'t present.",59,null],[3,"KeyOperation","","An operation performed on a key.",null,null],[12,"namespace","","The namespace for the key.",60,null],[12,"key","","The key to operate on.",60,null],[12,"command","","The command to execute.",60,null],[4,"Command","","Commands for a key-value store.",null,null],[13,"Set","","Set a key/value pair.",61,null],[12,"value","pliantdb_local::core::kv::Command","The value.",62,null],[12,"expiration","","If set, the key will be set to expire automatically.",62,null],[12,"keep_existing_expiration","","If true and the key already exists, the expiration will …",62,null],[12,"check","","Conditional checks for whether the key is already present …",62,null],[12,"return_previous_value","","If true and the key already exists, the existing key will …",62,null],[13,"Get","pliantdb_local::core::kv","Get the value from a key.",61,null],[12,"delete","pliantdb_local::core::kv::Command","Remove the key after retrieving the value.",63,null],[13,"Delete","pliantdb_local::core::kv","Delete a key.",61,null],[4,"Output","","The result of a [<code>KeyOperation</code>].",null,null],[13,"Status","","A status was returned.",64,null],[13,"Value","","A value was returned.",64,null],[4,"KeyStatus","","The status of an operation on a Key.",null,null],[13,"Inserted","","A new key was inserted.",65,null],[13,"Updated","","An existing key was updated with a new value.",65,null],[13,"Deleted","","A key was deleted.",65,null],[13,"NotChanged","","No changes were made.",65,null],[3,"Timestamp","","A timestamp relative to [<code>UNIX_EPOCH</code>].",null,null],[12,"seconds","","The number of whole seconds since [<code>UNIX_EPOCH</code>].",66,null],[12,"nanos","","The number of nanoseconds in the timestamp.",66,null],[0,"get","","Types for executing get operations.",null,null],[3,"Builder","pliantdb_local::core::kv::get","Executes [<code>Command::Get</code>] when awaited. Also offers methods …",null,null],[0,"namespaced","pliantdb_local::core::kv","Types for handling key namespaces.",null,null],[3,"Namespaced","pliantdb_local::core::kv::namespaced","A namespaced key-value store. All operations performed …",null,null],[0,"set","pliantdb_local::core::kv","Types for executing set operations.",null,null],[3,"Builder","pliantdb_local::core::kv::set","Executes [<code>Command::Set</code>] when awaited. Also offers methods …",null,null],[8,"Kv","pliantdb_local::core::kv","Key-Value store methods. The Key-Value store is designed …",null,null],[10,"execute_key_operation","","Executes a single [<code>KeyOperation</code>].",67,[[["keyoperation",3]],[["box",3],["pin",3]]]],[11,"set_key","","Sets <code>key</code> to <code>value</code>. This function returns a builder that …",67,[[],["builder",3]]],[11,"get_key","","Gets the value stored at <code>key</code>. This function returns a …",67,[[],["builder",3]]],[11,"delete_key","","Deletes the value stored at <code>key</code>.",67,[[],[["pin",3],["box",3]]]],[11,"key_namespace","","The current namespace.",67,[[],[["str",15],["option",4]]]],[11,"with_key_namespace","","Access this Key-Value store within a namespace. When …",67,[[["str",15]],["namespaced",3]]],[0,"networking","pliantdb_local::core","Types for implementing the <code>PliantDb</code> network protocol.",null,null],[3,"Payload","pliantdb_local::core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",68,null],[12,"wrapped","","The wrapped payload.",68,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",69,null],[13,"Database","","A database-related request.",69,null],[12,"database","pliantdb_local::core::networking::Request","The name of the database.",70,null],[12,"request","","The request made to the database.",70,null],[4,"ServerRequest","pliantdb_local::core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",71,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",71,null],[12,"name","pliantdb_local::core::networking::ServerRequest","The name of the database to delete.",72,null],[13,"ListDatabases","pliantdb_local::core::networking","Lists all databases.",71,null],[13,"ListAvailableSchemas","","Lists available schemas.",71,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",73,null],[12,"collection","pliantdb_local::core::networking::DatabaseRequest","The collection of the document.",74,null],[12,"id","","The id of the document.",74,null],[13,"GetMultiple","pliantdb_local::core::networking","Retrieve multiple documents.",73,null],[12,"collection","pliantdb_local::core::networking::DatabaseRequest","The collection of the documents.",75,null],[12,"ids","","The ids of the documents.",75,null],[13,"Query","pliantdb_local::core::networking","Queries a view.",73,null],[12,"view","pliantdb_local::core::networking::DatabaseRequest","The name of the view.",76,null],[12,"key","","The filter for the view.",76,null],[12,"access_policy","","The access policy for the query.",76,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",76,null],[13,"Reduce","pliantdb_local::core::networking","Reduces a view.",73,null],[12,"view","pliantdb_local::core::networking::DatabaseRequest","The name of the view.",77,null],[12,"key","","The filter for the view.",77,null],[12,"access_policy","","The access policy for the query.",77,null],[12,"grouped","","Whether to return a single value or values grouped by …",77,null],[13,"ApplyTransaction","pliantdb_local::core::networking","Applies a transaction.",73,null],[12,"transaction","pliantdb_local::core::networking::DatabaseRequest","The trasnaction to apply.",78,null],[13,"ListExecutedTransactions","pliantdb_local::core::networking","Lists executed transactions.",73,null],[12,"starting_id","pliantdb_local::core::networking::DatabaseRequest","The starting transaction id.",79,null],[12,"result_limit","","The maximum number of results.",79,null],[13,"LastTransactionId","pliantdb_local::core::networking","Queries the last transaction id.",73,null],[13,"CreateSubscriber","","Creates a <code>PubSub</code> <code>Subscriber</code>",73,null],[13,"Publish","","Publishes <code>payload</code> to all subscribers of <code>topic</code>.",73,null],[12,"topic","pliantdb_local::core::networking::DatabaseRequest","The topics to publish to.",80,null],[12,"payload","","The payload to publish.",80,null],[13,"PublishToAll","pliantdb_local::core::networking","Publishes <code>payload</code> to all subscribers of all <code>topics</code>.",73,null],[12,"topics","pliantdb_local::core::networking::DatabaseRequest","The topics to publish to.",81,null],[12,"payload","","The payload to publish.",81,null],[13,"SubscribeTo","pliantdb_local::core::networking","Subscribes <code>subscriber_id</code> to messages for <code>topic</code>.",73,null],[12,"subscriber_id","pliantdb_local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",82,null],[12,"topic","","The topic to subscribe to.",82,null],[13,"UnsubscribeFrom","pliantdb_local::core::networking","Unsubscribes <code>subscriber_id</code> from messages for <code>topic</code>.",73,null],[12,"subscriber_id","pliantdb_local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",83,null],[12,"topic","","The topic to unsubscribe from.",83,null],[13,"UnregisterSubscriber","pliantdb_local::core::networking","Unregisters the subscriber.",73,null],[12,"subscriber_id","pliantdb_local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",84,null],[13,"ExecuteKeyOperation","pliantdb_local::core::networking","Excutes a key-value store operation.",73,null],[4,"Response","","A response from a server.",null,null],[13,"Ok","","A request succeded but provided no output.",85,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",85,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",85,null],[13,"Error","","An error occurred processing a request.",85,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",86,null],[12,"name","pliantdb_local::core::networking::ServerResponse","The name of the database to create.",87,null],[13,"DatabaseDeleted","pliantdb_local::core::networking","A database with <code>name</code> was successfully removed.",86,null],[12,"name","pliantdb_local::core::networking::ServerResponse","The name of the database to remove.",88,null],[13,"Databases","pliantdb_local::core::networking","A list of available databases.",86,null],[13,"AvailableSchemas","","A list of availble schemas.",86,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",89,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",89,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",89,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",89,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",89,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",89,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",89,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",89,null],[13,"SubscriberCreated","","A new <code>PubSub</code> subscriber was created.",89,null],[12,"subscriber_id","pliantdb_local::core::networking::DatabaseResponse","The unique ID of the subscriber.",90,null],[13,"MessageReceived","pliantdb_local::core::networking","A PubSub message was received.",89,null],[12,"subscriber_id","pliantdb_local::core::networking::DatabaseResponse","The ID of the subscriber receiving the message.",91,null],[12,"topic","","The topic the payload was received on.",91,null],[12,"payload","","The message payload.",91,null],[13,"KvOutput","pliantdb_local::core::networking","Output from a [<code>KeyOperation</code>] being executed.",89,null],[3,"MappedDocument","","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",92,null],[12,"value","","The serialized value.",92,null],[12,"source","","The source document.",92,null],[4,"Error","","A networking error.",null,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",93,null],[13,"Disconnected","","The connection was interrupted.",93,null],[0,"dangerous","pliantdb_local::core::networking::fabruic","Security-sensitive settings are hidden behind these …",null,null],[8,"Builder","pliantdb_local::core::networking::fabruic::dangerous","Security-sensitive configuration for [<code>Builder</code>].",null,null],[10,"set_root_certificates","","Set [<code>Certificate</code>]s to be added into the root certificate …",94,[[]]],[8,"PrivateKey","","Gives read access to the [<code>PrivateKey</code>].",null,null],[10,"as_ref","","Returns a <code>&[u8]</code> to the [<code>PrivateKey</code>].",95,[[]]],[10,"into","","Returns a [<code>Vec<u8></code>] to the [<code>PrivateKey</code>].",95,[[],[["global",3],["vec",3],["u8",15]]]],[10,"serialize","","Serialize with [<code>serde</code>].",95,[[],["result",4]]],[8,"KeyPair","","Gives serialization access to [<code>KeyPair</code>].",null,null],[10,"serialize","","Serialize with [<code>serde</code>].",96,[[],["result",4]]],[0,"error","pliantdb_local::core::networking::fabruic","<code>Error</code> for this [<code>crate</code>].",null,null],[3,"Certificate","pliantdb_local::core::networking::fabruic::error","Error constructing <code>Certificate</code> with <code>Certificate::from_der</code>.",null,null],[12,"error","","The error.",97,null],[12,"certificate","","The bytes used to build the <code>Certificate</code>.",97,null],[4,"CertificateError","","Error constructing <code>Certificate</code> with <code>Certificate::from_der</code>.",null,null],[13,"WebPki","","<code>Error</code> returned by [<code>webpki</code>].",98,null],[13,"X509","","<code>Error</code> returned by [<code>x509_parser</code>].",98,null],[13,"Dangling","","Bytes passed contain uncorrelated bytes.",98,null],[13,"Expired","","<code>Certificate</code> has expired.",98,null],[13,"Domain","","<code>Certificate</code> is missing a domain name.",98,null],[3,"PrivateKey","","Failed to parse the given private key with …",null,null],[12,"0","","",99,null],[3,"KeyPair","","Failed to pair given <code>CertificateChain</code> and <code>PrivateKey</code> with …",null,null],[3,"CertificateChain","","Failed to verify the certificate chain with …",null,null],[3,"AlreadyClosed","","Attempting to close something that is already closed.",null,null],[3,"Builder","","Error binding socket during construction of <code>Endpoint</code> with …",null,null],[12,"error","","The error binding <code>Endpoint</code>.",100,null],[12,"builder","","Recovered <code>Builder</code> for re-use.",100,null],[4,"Connect","","Error connecting to a server with <code>Endpoint::connect</code>.",null,null],[13,"MultipleDomains","","The passed <code>Certificate</code> has multiple domains, this is not …",101,null],[13,"ParseUrl","","Failed to parse URL.",101,null],[13,"Domain","","URL didn\'t contain a domain.",101,null],[13,"Port","","URL didn\'t contain a port.",101,null],[13,"ParseDomain","","Failed to parse domain.",101,null],[13,"TrustDns","","Failed to resolve domain with <code>trust-dns</code>.",101,null],[13,"StdDns","","Failed to resolve domain with <code>ToSocketAddrs</code>.",101,null],[13,"NoIp","","Found no IP address for that domain.",101,null],[13,"Config","","Configuration needed to connect to a server is faulty.",101,null],[3,"Connection","","Error receiving connection from peer with <code>Stream</code> on from …",null,null],[12,"0","","",102,null],[3,"Connecting","","Error completing connection with peer with <code>Incoming::type</code> …",null,null],[12,"0","","",103,null],[4,"Stream","","Error opening a new stream to peer with …",null,null],[13,"Open","","Opening a new stream with <code>Connection::open_stream</code> failed.",104,null],[13,"Sender","","Sending the type information to peer failed.",104,null],[4,"Incoming","","Error receiving type information from <code>Incoming</code> stream.",null,null],[13,"Receiver","","Failed receiving type information from <code>Incoming</code> stream.",105,null],[13,"Closed","","<code>Incoming</code> was closed before type information could be …",105,null],[4,"Receiver","","Error receiving a message from a <code>Receiver</code>.",null,null],[13,"Read","","Failed to read from a <code>Receiver</code>.",106,null],[13,"Deserialize","","Failed to <code>Deserialize</code> a message from a <code>Receiver</code>.",106,null],[4,"Sender","","Error sending a message to a <code>Sender</code>.",null,null],[13,"Serialize","","Failed to <code>Serialize</code> a message for a <code>Sender</code>.",107,null],[13,"Write","","Failed to write to a <code>Sender</code>.",107,null],[13,"Closed","","[<code>Sender</code>] is closed.",107,null],[4,"ErrorKind","","The kind of error that can be produced during a …",null,null],[13,"Io","","If the error stems from the reader/writer that is being …",108,null],[13,"InvalidUtf8Encoding","","Returned if the deserializer attempts to deserialize a …",108,null],[13,"InvalidBoolEncoding","","Returned if the deserializer attempts to deserialize a …",108,null],[13,"InvalidCharEncoding","","Returned if the deserializer attempts to deserialize a …",108,null],[13,"InvalidTagEncoding","","Returned if the deserializer attempts to deserialize the …",108,null],[13,"DeserializeAnyNotSupported","","Serde has a deserialize_any method that lets the format …",108,null],[13,"SizeLimit","","If (de)serializing a message takes more than the provided …",108,null],[13,"SequenceMustHaveLength","","Bincode can not encode sequences of unknown length (like …",108,null],[13,"Custom","","A custom error message from Serde.",108,null],[4,"ConnectError","","Errors in the parameters being used to create a new …",null,null],[13,"EndpointStopping","","The endpoint can no longer create new connections",109,null],[13,"TooManyConnections","","The number of active connections on the local endpoint is …",109,null],[13,"InvalidDnsName","","The domain name supplied was malformed",109,null],[13,"Config","","The transport configuration was invalid",109,null],[13,"InvalidRemoteAddress","","The remote [<code>SocketAddr</code>] supplied was malformed",109,null],[4,"ConnectionError","","Reasons why a connection might be lost",null,null],[13,"VersionMismatch","","The peer doesn\'t implement any supported version",110,null],[13,"TransportError","","The peer violated the QUIC specification as understood by …",110,null],[13,"ConnectionClosed","","The peer\'s QUIC stack aborted the connection automatically",110,null],[13,"ApplicationClosed","","The peer closed the connection",110,null],[13,"Reset","","The peer is unable to continue processing this …",110,null],[13,"TimedOut","","Communication with the peer has lapsed for longer than …",110,null],[13,"LocallyClosed","","The local application closed the connection",110,null],[4,"ReadError","","Errors that arise from reading from a stream.",null,null],[13,"Reset","","The peer abandoned transmitting data on this stream.",111,null],[13,"ConnectionClosed","","The connection was closed.",111,null],[13,"UnknownStream","","The stream has already been stopped, finished, or reset",111,null],[13,"IllegalOrderedRead","","Attempted an ordered read following an unordered read",111,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",111,null],[4,"WriteError","","Errors that arise from writing to a stream",null,null],[13,"Stopped","","The peer is no longer accepting data on this stream.",112,null],[13,"ConnectionClosed","","The connection was closed.",112,null],[13,"UnknownStream","","The stream has already been finished or reset",112,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",112,null],[4,"Error","","An error that occurs during certificate validation or …",null,null],[13,"BadDER","","The encoding of some ASN.1 DER-encoded item is invalid.",113,null],[13,"BadDERTime","","The encoding of an ASN.1 DER-encoded time is invalid.",113,null],[13,"CAUsedAsEndEntity","","A CA certificate is veing used as an end-entity …",113,null],[13,"CertExpired","","The certificate is expired; i.e. the time it is being …",113,null],[13,"CertNotValidForName","","The certificate is not valid for the name it is being …",113,null],[13,"CertNotValidYet","","The certificate is not valid yet; i.e. the time it is …",113,null],[13,"EndEntityUsedAsCA","","An end-entity certificate is being used as a CA …",113,null],[13,"ExtensionValueInvalid","","An X.509 extension is invalid.",113,null],[13,"InvalidCertValidity","","The certificate validity period (notBefore, notAfter) is …",113,null],[13,"InvalidSignatureForPublicKey","","The signature is invalid for the given public key.",113,null],[13,"NameConstraintViolation","","The certificate violates one or more name constraints.",113,null],[13,"PathLenConstraintViolated","","The certificate violates one or more path length …",113,null],[13,"SignatureAlgorithmMismatch","","The algorithm in the TBSCertificate \\\"signature\\\" field of …",113,null],[13,"RequiredEKUNotFound","","The certificate is not valid for the Extended Key Usage …",113,null],[13,"UnknownIssuer","","A valid issuer for the certificate could not be found.",113,null],[13,"UnsupportedCertVersion","","The certificate is not a v3 X.509 certificate.",113,null],[13,"UnsupportedCriticalExtension","","The certificate contains an unsupported critical …",113,null],[13,"UnsupportedSignatureAlgorithmForPublicKey","","The signature\'s algorithm does not match the algorithm of …",113,null],[13,"UnsupportedSignatureAlgorithm","","The signature algorithm for a signature is not in the set …",113,null],[3,"ResolveError","","The error type for errors that get returned in the crate",null,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",114,null],[13,"IdnaError","","",114,null],[13,"InvalidPort","","",114,null],[13,"InvalidIpv4Address","","",114,null],[13,"InvalidIpv6Address","","",114,null],[13,"InvalidDomainCharacter","","",114,null],[13,"RelativeUrlWithoutBase","","",114,null],[13,"RelativeUrlWithCannotBeABaseBase","","",114,null],[13,"SetHostOnCannotBeABaseUrl","","",114,null],[13,"Overflow","","",114,null],[4,"X509Error","","An error that can occur while parsing or validating a …",null,null],[13,"Generic","","",115,null],[13,"InvalidVersion","","",115,null],[13,"InvalidSerial","","",115,null],[13,"InvalidAlgorithmIdentifier","","",115,null],[13,"InvalidX509Name","","",115,null],[13,"InvalidDate","","",115,null],[13,"InvalidSPKI","","",115,null],[13,"InvalidSubjectUID","","",115,null],[13,"InvalidIssuerUID","","",115,null],[13,"InvalidExtensions","","",115,null],[13,"InvalidAttributes","","",115,null],[13,"DuplicateExtensions","","",115,null],[13,"DuplicateAttributes","","",115,null],[13,"InvalidSignatureValue","","",115,null],[13,"InvalidTbsCertificate","","",115,null],[13,"InvalidUserCertificate","","",115,null],[13,"InvalidCertificate","","Top-level certificate structure is invalid",115,null],[13,"SignatureVerificationError","","",115,null],[13,"SignatureUnsupportedAlgorithm","","",115,null],[13,"Der","","",115,null],[13,"NomError","","",115,null],[4,"Err","","The <code>Err</code> enum indicates the parser was not successful",null,null],[13,"Incomplete","","There was not enough data",116,null],[13,"Error","","The parser had an error (recoverable)",116,null],[13,"Failure","","The parser had an unrecoverable error: we got to the right…",116,null],[3,"Builder","pliantdb_local::core::networking::fabruic","Helper for constructing an [<code>Endpoint</code>].",null,null],[3,"Connecting","","Represent\'s an intermediate state to build a [<code>Connection</code>].",null,null],[3,"Connection","","Represents an open connection. Receives [<code>Incoming</code>] …",null,null],[3,"Endpoint","","Represents a socket using the QUIC protocol to …",null,null],[3,"Incoming","","An intermediate state to define which type to accept in …",null,null],[3,"Receiver","","Used to receive data from a stream. Will stop receiving …",null,null],[3,"Sender","","Used to send data to a stream.",null,null],[4,"Store","","Configuration option for [<code>Builder::set_store</code>].",null,null],[13,"Empty","","Empty root certificate store.",117,null],[13,"Os","","Uses the OS root certificate store, see …",117,null],[13,"Embedded","","Use an embedded root certificate store, see <code>webpki-roots</code>.",117,null],[3,"Certificate","","A public certificate. You can distribute it freely to …",null,null],[3,"CertificateChain","","A public [<code>Certificate</code>] chain, used to prese",null,null],[3,"KeyPair","","A key-pair, consisting of a [<code>CertificateChain</code>] and […",null,null],[3,"PrivateKey","","A private key.",null,null],[0,"pubsub","pliantdb_local::core","Types for Publish/Subscribe (<code>PubSub</code>) messaging.",null,null],[8,"PubSub","pliantdb_local::core::pubsub","Publishes and Subscribes to messages on topics.",null,null],[16,"Subscriber","","The Subscriber type for this <code>PubSub</code> connection.",118,null],[10,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",118,[[],[["box",3],["pin",3]]]],[10,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",118,[[],[["box",3],["pin",3]]]],[10,"publish_to_all","","Publishes a <code>payload</code> to all subscribers of all <code>topics</code>.",118,[[["vec",3],["string",3],["global",3]],[["box",3],["pin",3]]]],[8,"Subscriber","","A subscriber to one or more topics.",null,null],[10,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",119,[[],[["box",3],["pin",3]]]],[10,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",119,[[["str",15]],[["box",3],["pin",3]]]],[10,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",119,[[],["receiver",3]]],[4,"Error","pliantdb_local::core","an enumeration of errors that this crate can produce",null,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",120,null],[12,"database_name","pliantdb_local::core::Error","The name of the database being accessed.",121,null],[12,"schema","","The schema provided for the database.",121,null],[12,"stored_schema","","The schema stored for the database.",121,null],[13,"SchemaAlreadyRegistered","pliantdb_local::core","The [<code>SchemaName</code>] returned has already been registered …",120,null],[13,"SchemaNotRegistered","","The [<code>SchemaName</code>] requested was not registered with this …",120,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See …",120,null],[13,"DatabaseNotFound","","The database name given was not found.",120,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",120,null],[13,"Database","","An error from interacting with local storage.",120,null],[13,"Server","","An error from interacting with a server.",120,null],[13,"Transport","","An error occurred from the QUIC transport layer.",120,null],[13,"Websocket","","An error occurred from the websocket transport layer.",120,null],[13,"Networking","","An error occurred from networking.",120,null],[13,"Io","","An error occurred from IO.",120,null],[13,"Configuration","","An error occurred with the provided configuration options.",120,null],[13,"Client","","An error occurred inside of the client.",120,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",120,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",120,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",120,null],[13,"UniqueKeyViolation","","When saving a document in a collection with unique views, …",120,null],[12,"view","pliantdb_local::core::Error","The name of the view that the unique key violation …",122,null],[12,"conflicting_document_id","","The document that caused the violation.",122,null],[12,"existing_document_id","","The document that already uses the same key.",122,null],[13,"InvalidName","pliantdb_local::core","An invalid name was specified during schema creation.",120,null],[13,"PermissionDenied","","Permission was denied.",120,null],[0,"test_util","","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb_local::core::test_util","",null,null],[12,"value","","",123,null],[12,"category","","",123,null],[12,"parent_id","","",123,null],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"Unique","","",null,null],[12,"value","","",124,null],[3,"UniqueValue","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",125,null],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"HarnessTest","","",null,null],[13,"ServerConnectionTests","","",126,null],[13,"StoreRetrieveUpdate","","",126,null],[13,"NotFound","","",126,null],[13,"Conflict","","",126,null],[13,"BadUpdate","","",126,null],[13,"NoUpdate","","",126,null],[13,"GetMultiple","","",126,null],[13,"ListTransactions","","",126,null],[13,"ViewQuery","","",126,null],[13,"UnassociatedCollection","","",126,null],[13,"ViewUpdate","","",126,null],[13,"ViewAccessPolicies","","",126,null],[13,"UniqueViews","","",126,null],[13,"PubSubSimple","","",126,null],[13,"PubSubMultipleSubscribers","","",126,null],[13,"PubSubDropAndSend","","",126,null],[13,"PubSubUnsubscribe","","",126,null],[13,"PubSubDropCleanup","","",126,null],[13,"PubSubPublishAll","","",126,null],[13,"KvBasic","","",126,null],[13,"KvSet","","",126,null],[13,"KvExpiration","","",126,null],[13,"KvDeleteExpire","","",126,null],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[5,"unique_view_tests","","",null,[[]]],[3,"TimingTest","","",null,null],[5,"basic_server_connection_tests","","",null,[[["str",15]]]],[0,"bounds","pliantdb_local::core::num_traits","",null,null],[8,"Bounded","pliantdb_local::core::num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",127,[[]]],[10,"max_value","","returns the largest finite number this type can represent",127,[[]]],[0,"cast","pliantdb_local::core::num_traits","",null,null],[8,"ToPrimitive","pliantdb_local::core::num_traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",128,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",128,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",128,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",128,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",128,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",128,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",128,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",128,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",128,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",128,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",128,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",128,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",128,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",128,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",129,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",129,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",129,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",129,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",129,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",129,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",129,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",129,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",129,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",129,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",129,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",129,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",129,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",129,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",130,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",131,[[]]],[0,"float","pliantdb_local::core::num_traits","",null,null],[8,"FloatCore","pliantdb_local::core::num_traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",132,[[]]],[10,"neg_infinity","","Returns negative infinity.",132,[[]]],[10,"nan","","Returns NaN.",132,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",132,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",132,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",132,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",132,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",132,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",132,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",132,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",132,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",132,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",132,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",132,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",132,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",132,[[]]],[11,"trunc","","Return the integer part of a number.",132,[[]]],[11,"fract","","Returns the fractional part of a number.",132,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",132,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",132,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",132,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",132,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",132,[[]]],[11,"max","","Returns the maximum of the two numbers.",132,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",132,[[]]],[11,"powi","","Raise a number to an integer power.",132,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",132,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",132,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",132,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",133,[[]]],[10,"infinity","","Returns the infinite value.",133,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",133,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",133,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",133,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",133,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",133,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",133,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",133,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",133,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",133,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",133,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",133,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",133,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",133,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",133,[[]]],[10,"trunc","","Return the integer part of a number.",133,[[]]],[10,"fract","","Returns the fractional part of a number.",133,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",133,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",133,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",133,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",133,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",133,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",133,[[]]],[10,"powi","","Raise a number to an integer power.",133,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",133,[[]]],[10,"sqrt","","Take the square root of a number.",133,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",133,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",133,[[]]],[10,"ln","","Returns the natural logarithm of the number.",133,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",133,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",133,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",133,[[]]],[11,"to_degrees","","Converts radians to degrees.",133,[[]]],[11,"to_radians","","Converts degrees to radians.",133,[[]]],[10,"max","","Returns the maximum of the two numbers.",133,[[]]],[10,"min","","Returns the minimum of the two numbers.",133,[[]]],[10,"abs_sub","","The positive difference of two numbers.",133,[[]]],[10,"cbrt","","Take the cubic root of a number.",133,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",133,[[]]],[10,"sin","","Computes the sine of a number (in radians).",133,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",133,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",133,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",133,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",133,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",133,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",133,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",133,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",133,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",133,[[]]],[10,"sinh","","Hyperbolic sine function.",133,[[]]],[10,"cosh","","Hyperbolic cosine function.",133,[[]]],[10,"tanh","","Hyperbolic tangent function.",133,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",133,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",133,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",133,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",133,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",134,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",134,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",134,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",134,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",134,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",134,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",134,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",134,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",134,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",134,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",134,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",134,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",134,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",134,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",134,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",134,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",134,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",134,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",134,[[]]],[0,"identities","pliantdb_local::core::num_traits","",null,null],[8,"Zero","pliantdb_local::core::num_traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",135,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",135,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",135,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",136,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",136,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",136,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[0,"int","pliantdb_local::core::num_traits","",null,null],[8,"PrimInt","pliantdb_local::core::num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",137,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",137,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",137,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",137,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",137,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",137,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",137,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",137,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",137,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",137,[[["u32",15]]]],[0,"ops","pliantdb_local::core::num_traits","",null,null],[0,"checked","pliantdb_local::core::num_traits::ops","",null,null],[8,"CheckedAdd","pliantdb_local::core::num_traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",138,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",139,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",140,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",141,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",142,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",143,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",144,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",145,[[["u32",15]],["option",4]]],[0,"inv","pliantdb_local::core::num_traits::ops","",null,null],[8,"Inv","pliantdb_local::core::num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",146,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",146,[[]]],[0,"mul_add","pliantdb_local::core::num_traits::ops","",null,null],[8,"MulAdd","pliantdb_local::core::num_traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",147,null],[10,"mul_add","","Performs the fused multiply-add operation.",147,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",148,[[]]],[0,"overflowing","pliantdb_local::core::num_traits::ops","",null,null],[8,"OverflowingAdd","pliantdb_local::core::num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean …",149,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean …",150,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean …",151,[[]]],[0,"saturating","pliantdb_local::core::num_traits::ops","",null,null],[8,"Saturating","pliantdb_local::core::num_traits::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",152,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",152,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",153,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",154,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",155,[[]]],[0,"wrapping","pliantdb_local::core::num_traits::ops","",null,null],[8,"WrappingAdd","pliantdb_local::core::num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",156,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",157,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",158,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",159,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",160,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",161,[[["u32",15]]]],[0,"pow","pliantdb_local::core::num_traits","",null,null],[8,"Pow","pliantdb_local::core::num_traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",162,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",162,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[0,"real","pliantdb_local::core::num_traits","",null,null],[8,"Real","pliantdb_local::core::num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can …",163,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",163,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",163,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",163,[[]]],[10,"floor","","Returns the largest integer less than or equal to a …",163,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",163,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",163,[[]]],[10,"trunc","","Return the integer part of a number.",163,[[]]],[10,"fract","","Returns the fractional part of a number.",163,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",163,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",163,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",163,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",163,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",163,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",163,[[]]],[10,"powi","","Raise a number to an integer power.",163,[[["i32",15]]]],[10,"powf","","Raise a number to a real number power.",163,[[]]],[10,"sqrt","","Take the square root of a number.",163,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",163,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",163,[[]]],[10,"ln","","Returns the natural logarithm of the number.",163,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",163,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",163,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",163,[[]]],[10,"to_degrees","","Converts radians to degrees.",163,[[]]],[10,"to_radians","","Converts degrees to radians.",163,[[]]],[10,"max","","Returns the maximum of the two numbers.",163,[[]]],[10,"min","","Returns the minimum of the two numbers.",163,[[]]],[10,"abs_sub","","The positive difference of two numbers.",163,[[]]],[10,"cbrt","","Take the cubic root of a number.",163,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",163,[[]]],[10,"sin","","Computes the sine of a number (in radians).",163,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",163,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",163,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",163,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",163,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",163,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",163,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",163,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",163,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",163,[[]]],[10,"sinh","","Hyperbolic sine function.",163,[[]]],[10,"cosh","","Hyperbolic cosine function.",163,[[]]],[10,"tanh","","Hyperbolic tangent function.",163,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",163,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",163,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",163,[[]]],[0,"sign","pliantdb_local::core::num_traits","",null,null],[8,"Signed","pliantdb_local::core::num_traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",164,[[]]],[10,"abs_sub","","The positive difference of two numbers.",164,[[]]],[10,"signum","","Returns the sign of the number.",164,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",164,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",164,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","pliantdb_local::core::num_traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",165,null],[10,"from_str_radix","","Convert from a string and radix (typically <code>2..=36</code>).",165,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",166,null],[13,"Invalid","","",166,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",167,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",127,[[]]],[10,"max_value","","returns the largest finite number this type can represent",127,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",133,[[]]],[10,"infinity","","Returns the infinite value.",133,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",133,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",133,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",133,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",133,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",133,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",133,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",133,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",133,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",133,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",133,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",133,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",133,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",133,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",133,[[]]],[10,"trunc","","Return the integer part of a number.",133,[[]]],[10,"fract","","Returns the fractional part of a number.",133,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",133,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",133,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",133,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",133,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",133,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",133,[[]]],[10,"powi","","Raise a number to an integer power.",133,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",133,[[]]],[10,"sqrt","","Take the square root of a number.",133,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",133,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",133,[[]]],[10,"ln","","Returns the natural logarithm of the number.",133,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",133,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",133,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",133,[[]]],[11,"to_degrees","","Converts radians to degrees.",133,[[]]],[11,"to_radians","","Converts degrees to radians.",133,[[]]],[10,"max","","Returns the maximum of the two numbers.",133,[[]]],[10,"min","","Returns the minimum of the two numbers.",133,[[]]],[10,"abs_sub","","The positive difference of two numbers.",133,[[]]],[10,"cbrt","","Take the cubic root of a number.",133,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",133,[[]]],[10,"sin","","Computes the sine of a number (in radians).",133,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",133,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",133,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",133,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",133,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",133,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",133,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",133,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",133,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",133,[[]]],[10,"sinh","","Hyperbolic sine function.",133,[[]]],[10,"cosh","","Hyperbolic cosine function.",133,[[]]],[10,"tanh","","Hyperbolic tangent function.",133,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",133,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",133,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",133,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",133,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",134,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",134,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",134,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",134,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",134,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",134,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",134,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",134,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",134,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",134,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",134,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",134,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",134,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",134,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",134,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",134,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",134,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",134,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",134,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",131,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",129,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",129,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",129,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",129,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",129,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",129,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",129,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",129,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",129,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",129,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",129,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",129,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",129,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",129,[[["f64",15]],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",130,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",128,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",128,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",128,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",128,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",128,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",128,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",128,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",128,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",128,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",128,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",128,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",128,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",128,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",128,[[],[["f64",15],["option",4]]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",136,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",136,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",136,[[],["bool",15]]],[8,"Zero","","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",135,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",135,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",135,[[],["bool",15]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",137,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",137,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",137,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",137,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",137,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",137,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",137,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",137,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",137,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",137,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",137,[[["u32",15]]]],[8,"CheckedAdd","","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",138,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",141,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",140,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",143,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",142,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",144,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",145,[[["u32",15]],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",139,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",146,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",146,[[]]],[8,"MulAdd","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",147,null],[10,"mul_add","","Performs the fused multiply-add operation.",147,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",148,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",152,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",152,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",153,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",155,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",154,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",156,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",158,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",159,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",160,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",161,[[["u32",15]]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",157,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",162,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",162,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",164,[[]]],[10,"abs_sub","","The positive difference of two numbers.",164,[[]]],[10,"signum","","Returns the sign of the number.",164,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",164,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",164,[[],["bool",15]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[14,"define_pubsub_test_suite","pliantdb_local::core","Expands into a suite of pubsub unit tests using the …",null,null],[3,"Message","pliantdb_local::core::circulate","A <code>PubSub</code> message.",null,null],[12,"topic","","The topic of the message.",168,null],[12,"payload","","The payload of the message.",168,null],[3,"Relay","","Manages subscriptions and notifications for <code>PubSub</code>.",null,null],[3,"Subscriber","","A subscriber for [<code>Message</code>]s published to subscribed …",null,null],[0,"select","pliantdb_local::core::circulate::flume","Types that permit waiting upon multiple blocking …",null,null],[4,"SelectError","pliantdb_local::core::circulate::flume::select","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",169,null],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[0,"async","pliantdb_local::core::circulate::flume","Futures and other types that allow asynchronous …",null,null],[3,"SendFut","pliantdb_local::core::circulate::flume::async","A future that sends a value into a channel.",null,null],[3,"SendSink","","A sink that allows sending values into a channel.",null,null],[3,"RecvFut","","A future which allows asynchronously receiving a message.",null,null],[3,"RecvStream","","A stream which allows asynchronously receiving messages.",null,null],[3,"SendError","pliantdb_local::core::circulate::flume","An error that may be emitted when attempting to send a …",null,null],[12,"0","","",170,null],[4,"TrySendError","","An error that may be emitted when attempting to send a …",null,null],[13,"Full","","",171,null],[13,"Disconnected","","",171,null],[4,"SendTimeoutError","","An error that may be emitted when sending a value into a …",null,null],[13,"Timeout","","",172,null],[13,"Disconnected","","",172,null],[4,"RecvError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Disconnected","","",173,null],[4,"TryRecvError","","An error that may be emitted when attempting to fetch a …",null,null],[13,"Empty","","",174,null],[13,"Disconnected","","",174,null],[4,"RecvTimeoutError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",175,null],[13,"Disconnected","","",175,null],[3,"Sender","","A transmitting end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel.",null,null],[3,"Iter","","An iterator over the msgs received from a channel.",null,null],[3,"TryIter","","An non-blocking iterator over the msgs received from a …",null,null],[3,"Drain","","An fixed-sized iterator over the msgs drained from a …",null,null],[3,"IntoIter","","An owned iterator over the msgs received from a channel.",null,null],[5,"unbounded","","Create a channel with no maximum capacity.",null,[[]]],[5,"bounded","","Create a channel with a maximum capacity.",null,[[["usize",15]]]],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[14,"define_connection_test_suite","pliantdb_local::core","Creates a test suite that tests methods available on […",null,null],[14,"define_kv_test_suite","","Defines the Kv test suite",null,null],[3,"Subscriber","pliantdb_local","A subscriber for <code>PubSub</code> messages.",null,null],[3,"Database","","A local, file-based database.",null,null],[4,"Error","","Errors that can occur from interacting with storage.",null,null],[13,"Sled","","An error occurred interacting with <code>sled</code>.",176,null],[13,"InternalSerialization","","An error occurred serializing the underlying database …",176,null],[13,"Serialization","","An error occurred serializing the contents of a <code>Document</code> …",176,null],[13,"InternalCommunication","","An internal error occurred while waiting for a message.",176,null],[13,"View","","An error occurred while executing a view",176,null],[13,"Core","","An core error occurred.",176,null],[13,"Other","","An unexpected error occurred.",176,null],[3,"Storage","","A file-based, multi-database, multi-user database engine.",null,null],[11,"from","pliantdb_local::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","pliantdb_local::core::circulate","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"vzip","","",177,[[]]],[11,"init","","",177,[[],["usize",15]]],[11,"deref","","",177,[[["usize",15]]]],[11,"deref_mut","","",177,[[["usize",15]]]],[11,"drop","","",177,[[["usize",15]]]],[11,"from","pliantdb_local","",178,[[]]],[11,"into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"vzip","","",178,[[]]],[11,"init","","",178,[[],["usize",15]]],[11,"deref","","",178,[[["usize",15]]]],[11,"deref_mut","","",178,[[["usize",15]]]],[11,"drop","","",178,[[["usize",15]]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"vzip","","",179,[[]]],[11,"init","","",179,[[],["usize",15]]],[11,"deref","","",179,[[["usize",15]]]],[11,"deref_mut","","",179,[[["usize",15]]]],[11,"drop","","",179,[[["usize",15]]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_string","","",176,[[],["string",3]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"vzip","","",176,[[]]],[11,"init","","",176,[[],["usize",15]]],[11,"deref","","",176,[[["usize",15]]]],[11,"deref_mut","","",176,[[["usize",15]]]],[11,"drop","","",176,[[["usize",15]]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"vzip","","",180,[[]]],[11,"init","","",180,[[],["usize",15]]],[11,"deref","","",180,[[["usize",15]]]],[11,"deref_mut","","",180,[[["usize",15]]]],[11,"drop","","",180,[[["usize",15]]]],[11,"from","pliantdb_local::backup","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","pliantdb_local::core::permissions","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"schema_name","","",7,[[],[["invalidnameerror",3],["result",4],["schemaname",3]]]],[11,"define_collections","","",7,[[["schematic",3]],[["error",4],["result",4]]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","pliantdb_local::core::permissions::group","",181,[[]]],[11,"into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"collection","","",181,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"unique","","",181,[[],["bool",15]]],[11,"version","","",181,[[],["u64",15]]],[11,"view_name","","",181,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",181,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",181,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[11,"vzip","","",181,[[]]],[11,"init","","",181,[[],["usize",15]]],[11,"deref","","",181,[[["usize",15]]]],[11,"deref_mut","","",181,[[["usize",15]]]],[11,"drop","","",181,[[["usize",15]]]],[11,"from","pliantdb_local::core::permissions::pliant","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","pliantdb_local::core::permissions","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"schema_name","","",16,[[],[["invalidnameerror",3],["result",4],["schemaname",3]]]],[11,"define_collections","","",16,[[["schematic",3]],[["error",4],["result",4]]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"from","pliantdb_local::core::permissions::role","",182,[[]]],[11,"into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"collection","","",182,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"unique","","",182,[[],["bool",15]]],[11,"version","","",182,[[],["u64",15]]],[11,"view_name","","",182,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",182,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",182,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[11,"vzip","","",182,[[]]],[11,"init","","",182,[[],["usize",15]]],[11,"deref","","",182,[[["usize",15]]]],[11,"deref_mut","","",182,[[["usize",15]]]],[11,"drop","","",182,[[["usize",15]]]],[11,"from","pliantdb_local::core::permissions","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[],["usize",15]]],[11,"deref","","",18,[[["usize",15]]]],[11,"deref_mut","","",18,[[["usize",15]]]],[11,"drop","","",18,[[["usize",15]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[],["usize",15]]],[11,"deref","","",19,[[["usize",15]]]],[11,"deref_mut","","",19,[[["usize",15]]]],[11,"drop","","",19,[[["usize",15]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"equivalent","","",21,[[],["bool",15]]],[11,"init","","",21,[[],["usize",15]]],[11,"deref","","",21,[[["usize",15]]]],[11,"deref_mut","","",21,[[["usize",15]]]],[11,"drop","","",21,[[["usize",15]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[],["usize",15]]],[11,"deref","","",22,[[["usize",15]]]],[11,"deref_mut","","",22,[[["usize",15]]]],[11,"drop","","",22,[[["usize",15]]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"vzip","","",183,[[]]],[11,"init","","",183,[[],["usize",15]]],[11,"deref","","",183,[[["usize",15]]]],[11,"deref_mut","","",183,[[["usize",15]]]],[11,"drop","","",183,[[["usize",15]]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"to_string","","",184,[[],["string",3]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"as_bits","","",184,[[],["bitslice",3]]],[11,"vzip","","",184,[[]]],[11,"init","","",184,[[],["usize",15]]],[11,"deref","","",184,[[["usize",15]]]],[11,"deref_mut","","",184,[[["usize",15]]]],[11,"drop","","",184,[[["usize",15]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[],["usize",15]]],[11,"deref","","",23,[[["usize",15]]]],[11,"deref_mut","","",23,[[["usize",15]]]],[11,"drop","","",23,[[["usize",15]]]],[11,"from","pliantdb_local::core::connection","",185,[[]]],[11,"into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"vzip","","",185,[[]]],[11,"init","","",185,[[],["usize",15]]],[11,"deref","","",185,[[["usize",15]]]],[11,"deref_mut","","",185,[[["usize",15]]]],[11,"drop","","",185,[[["usize",15]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[],["usize",15]]],[11,"deref","","",25,[[["usize",15]]]],[11,"deref_mut","","",25,[[["usize",15]]]],[11,"drop","","",25,[[["usize",15]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[],["usize",15]]],[11,"deref","","",26,[[["usize",15]]]],[11,"deref_mut","","",26,[[["usize",15]]]],[11,"drop","","",26,[[["usize",15]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[],["usize",15]]],[11,"deref","","",27,[[["usize",15]]]],[11,"deref_mut","","",27,[[["usize",15]]]],[11,"drop","","",27,[[["usize",15]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[],["usize",15]]],[11,"deref","","",29,[[["usize",15]]]],[11,"deref_mut","","",29,[[["usize",15]]]],[11,"drop","","",29,[[["usize",15]]]],[11,"from","pliantdb_local::core::document","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"equivalent","","",30,[[],["bool",15]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[],["usize",15]]],[11,"deref","","",31,[[["usize",15]]]],[11,"deref_mut","","",31,[[["usize",15]]]],[11,"drop","","",31,[[["usize",15]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"equivalent","","",32,[[],["bool",15]]],[11,"init","","",32,[[],["usize",15]]],[11,"deref","","",32,[[["usize",15]]]],[11,"deref_mut","","",32,[[["usize",15]]]],[11,"drop","","",32,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[],["usize",15]]],[11,"deref","","",33,[[["usize",15]]]],[11,"deref_mut","","",33,[[["usize",15]]]],[11,"drop","","",33,[[["usize",15]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[],["usize",15]]],[11,"deref","","",34,[[["usize",15]]]],[11,"deref_mut","","",34,[[["usize",15]]]],[11,"drop","","",34,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema::view::map","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[],["usize",15]]],[11,"deref","","",35,[[["usize",15]]]],[11,"deref_mut","","",35,[[["usize",15]]]],[11,"drop","","",35,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[],["usize",15]]],[11,"deref","","",36,[[["usize",15]]]],[11,"deref_mut","","",36,[[["usize",15]]]],[11,"drop","","",36,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema::view","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[],["usize",15]]],[11,"deref","","",38,[[["usize",15]]]],[11,"deref_mut","","",38,[[["usize",15]]]],[11,"drop","","",38,[[["usize",15]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"as_bits","","",40,[[],["bitslice",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[],["usize",15]]],[11,"deref","","",40,[[["usize",15]]]],[11,"deref_mut","","",40,[[["usize",15]]]],[11,"drop","","",40,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"to_string","","",186,[[],["string",3]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"vzip","","",186,[[]]],[11,"equivalent","","",186,[[],["bool",15]]],[11,"init","","",186,[[],["usize",15]]],[11,"deref","","",186,[[["usize",15]]]],[11,"deref_mut","","",186,[[["usize",15]]]],[11,"drop","","",186,[[["usize",15]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"equivalent","","",44,[[],["bool",15]]],[11,"init","","",44,[[],["usize",15]]],[11,"deref","","",44,[[["usize",15]]]],[11,"deref_mut","","",44,[[["usize",15]]]],[11,"drop","","",44,[[["usize",15]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[],["usize",15]]],[11,"deref","","",45,[[["usize",15]]]],[11,"deref_mut","","",45,[[["usize",15]]]],[11,"drop","","",45,[[["usize",15]]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"to_string","","",187,[[],["string",3]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"vzip","","",187,[[]]],[11,"equivalent","","",187,[[],["bool",15]]],[11,"init","","",187,[[],["usize",15]]],[11,"deref","","",187,[[["usize",15]]]],[11,"deref_mut","","",187,[[["usize",15]]]],[11,"drop","","",187,[[["usize",15]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"equivalent","","",46,[[],["bool",15]]],[11,"init","","",46,[[],["usize",15]]],[11,"deref","","",46,[[["usize",15]]]],[11,"deref_mut","","",46,[[["usize",15]]]],[11,"drop","","",46,[[["usize",15]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"equivalent","","",47,[[],["bool",15]]],[11,"init","","",47,[[],["usize",15]]],[11,"deref","","",47,[[["usize",15]]]],[11,"deref_mut","","",47,[[["usize",15]]]],[11,"drop","","",47,[[["usize",15]]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"vzip","","",188,[[]]],[11,"init","","",188,[[],["usize",15]]],[11,"deref","","",188,[[["usize",15]]]],[11,"deref_mut","","",188,[[["usize",15]]]],[11,"drop","","",188,[[["usize",15]]]],[11,"from","pliantdb_local::core::transaction","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[],["usize",15]]],[11,"deref","","",48,[[["usize",15]]]],[11,"deref_mut","","",48,[[["usize",15]]]],[11,"drop","","",48,[[["usize",15]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[],["usize",15]]],[11,"deref","","",49,[[["usize",15]]]],[11,"deref_mut","","",49,[[["usize",15]]]],[11,"drop","","",49,[[["usize",15]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[],["usize",15]]],[11,"deref","","",50,[[["usize",15]]]],[11,"deref_mut","","",50,[[["usize",15]]]],[11,"drop","","",50,[[["usize",15]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[],["usize",15]]],[11,"deref","","",54,[[["usize",15]]]],[11,"deref_mut","","",54,[[["usize",15]]]],[11,"drop","","",54,[[["usize",15]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"init","","",57,[[],["usize",15]]],[11,"deref","","",57,[[["usize",15]]]],[11,"deref_mut","","",57,[[["usize",15]]]],[11,"drop","","",57,[[["usize",15]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[],["usize",15]]],[11,"deref","","",58,[[["usize",15]]]],[11,"deref_mut","","",58,[[["usize",15]]]],[11,"drop","","",58,[[["usize",15]]]],[11,"from","pliantdb_local::core::kv","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[],["usize",15]]],[11,"deref","","",59,[[["usize",15]]]],[11,"deref_mut","","",59,[[["usize",15]]]],[11,"drop","","",59,[[["usize",15]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[],["usize",15]]],[11,"deref","","",60,[[["usize",15]]]],[11,"deref_mut","","",60,[[["usize",15]]]],[11,"drop","","",60,[[["usize",15]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[],["usize",15]]],[11,"deref","","",61,[[["usize",15]]]],[11,"deref_mut","","",61,[[["usize",15]]]],[11,"drop","","",61,[[["usize",15]]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"init","","",64,[[],["usize",15]]],[11,"deref","","",64,[[["usize",15]]]],[11,"deref_mut","","",64,[[["usize",15]]]],[11,"drop","","",64,[[["usize",15]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[],["usize",15]]],[11,"deref","","",65,[[["usize",15]]]],[11,"deref_mut","","",65,[[["usize",15]]]],[11,"drop","","",65,[[["usize",15]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"equivalent","","",66,[[],["bool",15]]],[11,"init","","",66,[[],["usize",15]]],[11,"deref","","",66,[[["usize",15]]]],[11,"deref_mut","","",66,[[["usize",15]]]],[11,"drop","","",66,[[["usize",15]]]],[11,"from","pliantdb_local::core::kv::get","",189,[[]]],[11,"into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"into_future","","",189,[[]]],[11,"try_poll","","",189,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",189,[[]]],[11,"init","","",189,[[],["usize",15]]],[11,"deref","","",189,[[["usize",15]]]],[11,"deref_mut","","",189,[[["usize",15]]]],[11,"drop","","",189,[[["usize",15]]]],[11,"from","pliantdb_local::core::kv::namespaced","",190,[[]]],[11,"into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"vzip","","",190,[[]]],[11,"init","","",190,[[],["usize",15]]],[11,"deref","","",190,[[["usize",15]]]],[11,"deref_mut","","",190,[[["usize",15]]]],[11,"drop","","",190,[[["usize",15]]]],[11,"from","pliantdb_local::core::kv::set","",191,[[]]],[11,"into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"into_future","","",191,[[]]],[11,"try_poll","","",191,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",191,[[]]],[11,"init","","",191,[[],["usize",15]]],[11,"deref","","",191,[[["usize",15]]]],[11,"deref_mut","","",191,[[["usize",15]]]],[11,"drop","","",191,[[["usize",15]]]],[11,"from","pliantdb_local::core::networking","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"init","","",68,[[],["usize",15]]],[11,"deref","","",68,[[["usize",15]]]],[11,"deref_mut","","",68,[[["usize",15]]]],[11,"drop","","",68,[[["usize",15]]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"init","","",69,[[],["usize",15]]],[11,"deref","","",69,[[["usize",15]]]],[11,"deref_mut","","",69,[[["usize",15]]]],[11,"drop","","",69,[[["usize",15]]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"init","","",71,[[],["usize",15]]],[11,"deref","","",71,[[["usize",15]]]],[11,"deref_mut","","",71,[[["usize",15]]]],[11,"drop","","",71,[[["usize",15]]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"init","","",73,[[],["usize",15]]],[11,"deref","","",73,[[["usize",15]]]],[11,"deref_mut","","",73,[[["usize",15]]]],[11,"drop","","",73,[[["usize",15]]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"init","","",85,[[],["usize",15]]],[11,"deref","","",85,[[["usize",15]]]],[11,"deref_mut","","",85,[[["usize",15]]]],[11,"drop","","",85,[[["usize",15]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"init","","",86,[[],["usize",15]]],[11,"deref","","",86,[[["usize",15]]]],[11,"deref_mut","","",86,[[["usize",15]]]],[11,"drop","","",86,[[["usize",15]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"init","","",89,[[],["usize",15]]],[11,"deref","","",89,[[["usize",15]]]],[11,"deref_mut","","",89,[[["usize",15]]]],[11,"drop","","",89,[[["usize",15]]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"init","","",92,[[],["usize",15]]],[11,"deref","","",92,[[["usize",15]]]],[11,"deref_mut","","",92,[[["usize",15]]]],[11,"drop","","",92,[[["usize",15]]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"to_string","","",93,[[],["string",3]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"init","","",93,[[],["usize",15]]],[11,"deref","","",93,[[["usize",15]]]],[11,"deref_mut","","",93,[[["usize",15]]]],[11,"drop","","",93,[[["usize",15]]]],[11,"from","pliantdb_local::core::networking::fabruic::error","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_string","","",97,[[],["string",3]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"init","","",97,[[],["usize",15]]],[11,"deref","","",97,[[["usize",15]]]],[11,"deref_mut","","",97,[[["usize",15]]]],[11,"drop","","",97,[[["usize",15]]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_string","","",98,[[],["string",3]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"init","","",98,[[],["usize",15]]],[11,"deref","","",98,[[["usize",15]]]],[11,"deref_mut","","",98,[[["usize",15]]]],[11,"drop","","",98,[[["usize",15]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"to_string","","",99,[[],["string",3]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"equivalent","","",99,[[],["bool",15]]],[11,"init","","",99,[[],["usize",15]]],[11,"deref","","",99,[[["usize",15]]]],[11,"deref_mut","","",99,[[["usize",15]]]],[11,"drop","","",99,[[["usize",15]]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"to_string","","",192,[[],["string",3]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"vzip","","",192,[[]]],[11,"equivalent","","",192,[[],["bool",15]]],[11,"init","","",192,[[],["usize",15]]],[11,"deref","","",192,[[["usize",15]]]],[11,"deref_mut","","",192,[[["usize",15]]]],[11,"drop","","",192,[[["usize",15]]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"to_string","","",193,[[],["string",3]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"vzip","","",193,[[]]],[11,"equivalent","","",193,[[],["bool",15]]],[11,"init","","",193,[[],["usize",15]]],[11,"deref","","",193,[[["usize",15]]]],[11,"deref_mut","","",193,[[["usize",15]]]],[11,"drop","","",193,[[["usize",15]]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"to_string","","",194,[[],["string",3]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"vzip","","",194,[[]]],[11,"equivalent","","",194,[[],["bool",15]]],[11,"init","","",194,[[],["usize",15]]],[11,"deref","","",194,[[["usize",15]]]],[11,"deref_mut","","",194,[[["usize",15]]]],[11,"drop","","",194,[[["usize",15]]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_string","","",100,[[],["string",3]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"init","","",100,[[],["usize",15]]],[11,"deref","","",100,[[["usize",15]]]],[11,"deref_mut","","",100,[[["usize",15]]]],[11,"drop","","",100,[[["usize",15]]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_string","","",101,[[],["string",3]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"init","","",101,[[],["usize",15]]],[11,"deref","","",101,[[["usize",15]]]],[11,"deref_mut","","",101,[[["usize",15]]]],[11,"drop","","",101,[[["usize",15]]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"to_string","","",102,[[],["string",3]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"equivalent","","",102,[[],["bool",15]]],[11,"init","","",102,[[],["usize",15]]],[11,"deref","","",102,[[["usize",15]]]],[11,"deref_mut","","",102,[[["usize",15]]]],[11,"drop","","",102,[[["usize",15]]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"to_string","","",103,[[],["string",3]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"equivalent","","",103,[[],["bool",15]]],[11,"init","","",103,[[],["usize",15]]],[11,"deref","","",103,[[["usize",15]]]],[11,"deref_mut","","",103,[[["usize",15]]]],[11,"drop","","",103,[[["usize",15]]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_string","","",104,[[],["string",3]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"init","","",104,[[],["usize",15]]],[11,"deref","","",104,[[["usize",15]]]],[11,"deref_mut","","",104,[[["usize",15]]]],[11,"drop","","",104,[[["usize",15]]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_string","","",105,[[],["string",3]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"init","","",105,[[],["usize",15]]],[11,"deref","","",105,[[["usize",15]]]],[11,"deref_mut","","",105,[[["usize",15]]]],[11,"drop","","",105,[[["usize",15]]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_string","","",106,[[],["string",3]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"init","","",106,[[],["usize",15]]],[11,"deref","","",106,[[["usize",15]]]],[11,"deref_mut","","",106,[[["usize",15]]]],[11,"drop","","",106,[[["usize",15]]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_string","","",107,[[],["string",3]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"init","","",107,[[],["usize",15]]],[11,"deref","","",107,[[["usize",15]]]],[11,"deref_mut","","",107,[[["usize",15]]]],[11,"drop","","",107,[[["usize",15]]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_string","","",108,[[],["string",3]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"init","","",108,[[],["usize",15]]],[11,"deref","","",108,[[["usize",15]]]],[11,"deref_mut","","",108,[[["usize",15]]]],[11,"drop","","",108,[[["usize",15]]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"to_string","","",109,[[],["string",3]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"equivalent","","",109,[[],["bool",15]]],[11,"init","","",109,[[],["usize",15]]],[11,"deref","","",109,[[["usize",15]]]],[11,"deref_mut","","",109,[[["usize",15]]]],[11,"drop","","",109,[[["usize",15]]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"to_string","","",110,[[],["string",3]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"equivalent","","",110,[[],["bool",15]]],[11,"init","","",110,[[],["usize",15]]],[11,"deref","","",110,[[["usize",15]]]],[11,"deref_mut","","",110,[[["usize",15]]]],[11,"drop","","",110,[[["usize",15]]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"to_string","","",111,[[],["string",3]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"equivalent","","",111,[[],["bool",15]]],[11,"init","","",111,[[],["usize",15]]],[11,"deref","","",111,[[["usize",15]]]],[11,"deref_mut","","",111,[[["usize",15]]]],[11,"drop","","",111,[[["usize",15]]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"to_string","","",112,[[],["string",3]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"equivalent","","",112,[[],["bool",15]]],[11,"init","","",112,[[],["usize",15]]],[11,"deref","","",112,[[["usize",15]]]],[11,"deref_mut","","",112,[[["usize",15]]]],[11,"drop","","",112,[[["usize",15]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"init","","",113,[[],["usize",15]]],[11,"deref","","",113,[[["usize",15]]]],[11,"deref_mut","","",113,[[["usize",15]]]],[11,"drop","","",113,[[["usize",15]]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"to_string","","",195,[[],["string",3]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"vzip","","",195,[[]]],[11,"init","","",195,[[],["usize",15]]],[11,"deref","","",195,[[["usize",15]]]],[11,"deref_mut","","",195,[[["usize",15]]]],[11,"drop","","",195,[[["usize",15]]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"to_string","","",114,[[],["string",3]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"vzip","","",114,[[]]],[11,"equivalent","","",114,[[],["bool",15]]],[11,"init","","",114,[[],["usize",15]]],[11,"deref","","",114,[[["usize",15]]]],[11,"deref_mut","","",114,[[["usize",15]]]],[11,"drop","","",114,[[["usize",15]]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_string","","",115,[[],["string",3]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"init","","",115,[[],["usize",15]]],[11,"deref","","",115,[[["usize",15]]]],[11,"deref_mut","","",115,[[["usize",15]]]],[11,"drop","","",115,[[["usize",15]]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"to_string","","",116,[[],["string",3]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"vzip","","",116,[[]]],[11,"equivalent","","",116,[[],["bool",15]]],[11,"init","","",116,[[],["usize",15]]],[11,"deref","","",116,[[["usize",15]]]],[11,"deref_mut","","",116,[[["usize",15]]]],[11,"drop","","",116,[[["usize",15]]]],[11,"from","pliantdb_local::core::networking::fabruic","",196,[[]]],[11,"into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"vzip","","",196,[[]]],[11,"init","","",196,[[],["usize",15]]],[11,"deref","","",196,[[["usize",15]]]],[11,"deref_mut","","",196,[[["usize",15]]]],[11,"drop","","",196,[[["usize",15]]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"vzip","","",197,[[]]],[11,"init","","",197,[[],["usize",15]]],[11,"deref","","",197,[[["usize",15]]]],[11,"deref_mut","","",197,[[["usize",15]]]],[11,"drop","","",197,[[["usize",15]]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"try_poll_next","","",198,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"vzip","","",198,[[]]],[11,"init","","",198,[[],["usize",15]]],[11,"deref","","",198,[[["usize",15]]]],[11,"deref_mut","","",198,[[["usize",15]]]],[11,"drop","","",198,[[["usize",15]]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"vzip","","",199,[[]]],[11,"init","","",199,[[],["usize",15]]],[11,"deref","","",199,[[["usize",15]]]],[11,"deref_mut","","",199,[[["usize",15]]]],[11,"drop","","",199,[[["usize",15]]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"vzip","","",200,[[]]],[11,"init","","",200,[[],["usize",15]]],[11,"deref","","",200,[[["usize",15]]]],[11,"deref_mut","","",200,[[["usize",15]]]],[11,"drop","","",200,[[["usize",15]]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"try_poll_next","","",201,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"vzip","","",201,[[]]],[11,"init","","",201,[[],["usize",15]]],[11,"deref","","",201,[[["usize",15]]]],[11,"deref_mut","","",201,[[["usize",15]]]],[11,"drop","","",201,[[["usize",15]]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"vzip","","",202,[[]]],[11,"init","","",202,[[],["usize",15]]],[11,"deref","","",202,[[["usize",15]]]],[11,"deref_mut","","",202,[[["usize",15]]]],[11,"drop","","",202,[[["usize",15]]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"vzip","","",117,[[]]],[11,"equivalent","","",117,[[],["bool",15]]],[11,"init","","",117,[[],["usize",15]]],[11,"deref","","",117,[[["usize",15]]]],[11,"deref_mut","","",117,[[["usize",15]]]],[11,"drop","","",117,[[["usize",15]]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"as_bits","","",203,[[],["bitslice",3]]],[11,"vzip","","",203,[[]]],[11,"equivalent","","",203,[[],["bool",15]]],[11,"init","","",203,[[],["usize",15]]],[11,"deref","","",203,[[["usize",15]]]],[11,"deref_mut","","",203,[[["usize",15]]]],[11,"drop","","",203,[[["usize",15]]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"vzip","","",204,[[]]],[11,"equivalent","","",204,[[],["bool",15]]],[11,"init","","",204,[[],["usize",15]]],[11,"deref","","",204,[[["usize",15]]]],[11,"deref_mut","","",204,[[["usize",15]]]],[11,"drop","","",204,[[["usize",15]]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"vzip","","",205,[[]]],[11,"equivalent","","",205,[[],["bool",15]]],[11,"init","","",205,[[],["usize",15]]],[11,"deref","","",205,[[["usize",15]]]],[11,"deref_mut","","",205,[[["usize",15]]]],[11,"drop","","",205,[[["usize",15]]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"vzip","","",206,[[]]],[11,"equivalent","","",206,[[],["bool",15]]],[11,"init","","",206,[[],["usize",15]]],[11,"deref","","",206,[[["usize",15]]]],[11,"deref_mut","","",206,[[["usize",15]]]],[11,"drop","","",206,[[["usize",15]]]],[11,"from","pliantdb_local::core","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"to_string","","",120,[[],["string",3]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"vzip","","",120,[[]]],[11,"init","","",120,[[],["usize",15]]],[11,"deref","","",120,[[["usize",15]]]],[11,"deref_mut","","",120,[[["usize",15]]]],[11,"drop","","",120,[[["usize",15]]]],[11,"from","pliantdb_local::core::test_util","",123,[[]]],[11,"into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"schema_name","","",123,[[],[["invalidnameerror",3],["result",4],["schemaname",3]]]],[11,"define_collections","","",123,[[["schematic",3]],[["error",4],["result",4]]]],[11,"vzip","","",123,[[]]],[11,"init","","",123,[[],["usize",15]]],[11,"deref","","",123,[[["usize",15]]]],[11,"deref_mut","","",123,[[["usize",15]]]],[11,"drop","","",123,[[["usize",15]]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"collection","","",207,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"unique","","",207,[[],["bool",15]]],[11,"version","","",207,[[],["u64",15]]],[11,"view_name","","",207,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",207,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",207,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[11,"vzip","","",207,[[]]],[11,"init","","",207,[[],["usize",15]]],[11,"deref","","",207,[[["usize",15]]]],[11,"deref_mut","","",207,[[["usize",15]]]],[11,"drop","","",207,[[["usize",15]]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"collection","","",208,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"unique","","",208,[[],["bool",15]]],[11,"version","","",208,[[],["u64",15]]],[11,"view_name","","",208,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",208,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",208,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[11,"vzip","","",208,[[]]],[11,"init","","",208,[[],["usize",15]]],[11,"deref","","",208,[[["usize",15]]]],[11,"deref_mut","","",208,[[["usize",15]]]],[11,"drop","","",208,[[["usize",15]]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"collection","","",209,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"unique","","",209,[[],["bool",15]]],[11,"version","","",209,[[],["u64",15]]],[11,"view_name","","",209,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",209,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",209,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[11,"vzip","","",209,[[]]],[11,"init","","",209,[[],["usize",15]]],[11,"deref","","",209,[[["usize",15]]]],[11,"deref_mut","","",209,[[["usize",15]]]],[11,"drop","","",209,[[["usize",15]]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"collection","","",210,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"unique","","",210,[[],["bool",15]]],[11,"version","","",210,[[],["u64",15]]],[11,"view_name","","",210,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",210,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",210,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[11,"vzip","","",210,[[]]],[11,"init","","",210,[[],["usize",15]]],[11,"deref","","",210,[[["usize",15]]]],[11,"deref_mut","","",210,[[["usize",15]]]],[11,"drop","","",210,[[["usize",15]]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"vzip","","",211,[[]]],[11,"init","","",211,[[],["usize",15]]],[11,"deref","","",211,[[["usize",15]]]],[11,"deref_mut","","",211,[[["usize",15]]]],[11,"drop","","",211,[[["usize",15]]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"schema_name","","",124,[[],[["invalidnameerror",3],["result",4],["schemaname",3]]]],[11,"define_collections","","",124,[[["schematic",3]],[["error",4],["result",4]]]],[11,"vzip","","",124,[[]]],[11,"init","","",124,[[],["usize",15]]],[11,"deref","","",124,[[["usize",15]]]],[11,"deref_mut","","",124,[[["usize",15]]]],[11,"drop","","",124,[[["usize",15]]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"collection","","",212,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"unique","","",212,[[],["bool",15]]],[11,"version","","",212,[[],["u64",15]]],[11,"view_name","","",212,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[11,"map","","",212,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",212,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[11,"vzip","","",212,[[]]],[11,"init","","",212,[[],["usize",15]]],[11,"deref","","",212,[[["usize",15]]]],[11,"deref_mut","","",212,[[["usize",15]]]],[11,"drop","","",212,[[["usize",15]]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"vzip","","",125,[[]]],[11,"init","","",125,[[],["usize",15]]],[11,"deref","","",125,[[["usize",15]]]],[11,"deref_mut","","",125,[[["usize",15]]]],[11,"drop","","",125,[[["usize",15]]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"schema_name","","",213,[[],[["invalidnameerror",3],["result",4],["schemaname",3]]]],[11,"define_collections","","",213,[[["schematic",3]],[["error",4],["result",4]]]],[11,"vzip","","",213,[[]]],[11,"init","","",213,[[],["usize",15]]],[11,"deref","","",213,[[["usize",15]]]],[11,"deref_mut","","",213,[[["usize",15]]]],[11,"drop","","",213,[[["usize",15]]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"schema_name","","",214,[[],[["invalidnameerror",3],["result",4],["schemaname",3]]]],[11,"define_collections","","",214,[[["schematic",3]],[["error",4],["result",4]]]],[11,"vzip","","",214,[[]]],[11,"init","","",214,[[],["usize",15]]],[11,"deref","","",214,[[["usize",15]]]],[11,"deref_mut","","",214,[[["usize",15]]]],[11,"drop","","",214,[[["usize",15]]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"schema_name","","",215,[[],[["invalidnameerror",3],["result",4],["schemaname",3]]]],[11,"define_collections","","",215,[[["schematic",3]],[["error",4],["result",4]]]],[11,"vzip","","",215,[[]]],[11,"init","","",215,[[],["usize",15]]],[11,"deref","","",215,[[["usize",15]]]],[11,"deref_mut","","",215,[[["usize",15]]]],[11,"drop","","",215,[[["usize",15]]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"to_string","","",126,[[],["string",3]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"vzip","","",126,[[]]],[11,"init","","",126,[[],["usize",15]]],[11,"deref","","",126,[[["usize",15]]]],[11,"deref_mut","","",126,[[["usize",15]]]],[11,"drop","","",126,[[["usize",15]]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"vzip","","",216,[[]]],[11,"init","","",216,[[],["usize",15]]],[11,"deref","","",216,[[["usize",15]]]],[11,"deref_mut","","",216,[[["usize",15]]]],[11,"drop","","",216,[[["usize",15]]]],[11,"from","pliantdb_local::core::num_traits","",166,[[]]],[11,"into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"vzip","","",166,[[]]],[11,"init","","",166,[[],["usize",15]]],[11,"deref","","",166,[[["usize",15]]]],[11,"deref_mut","","",166,[[["usize",15]]]],[11,"drop","","",166,[[["usize",15]]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_string","","",167,[[],["string",3]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"vzip","","",167,[[]]],[11,"init","","",167,[[],["usize",15]]],[11,"deref","","",167,[[["usize",15]]]],[11,"deref_mut","","",167,[[["usize",15]]]],[11,"drop","","",167,[[["usize",15]]]],[11,"from","pliantdb_local::core::circulate","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"vzip","","",168,[[]]],[11,"init","","",168,[[],["usize",15]]],[11,"deref","","",168,[[["usize",15]]]],[11,"deref_mut","","",168,[[["usize",15]]]],[11,"drop","","",168,[[["usize",15]]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"vzip","","",217,[[]]],[11,"init","","",217,[[],["usize",15]]],[11,"deref","","",217,[[["usize",15]]]],[11,"deref_mut","","",217,[[["usize",15]]]],[11,"drop","","",217,[[["usize",15]]]],[11,"from","pliantdb_local::core::circulate::flume::select","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"to_string","","",169,[[],["string",3]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"vzip","","",169,[[]]],[11,"equivalent","","",169,[[],["bool",15]]],[11,"init","","",169,[[],["usize",15]]],[11,"deref","","",169,[[["usize",15]]]],[11,"deref_mut","","",169,[[["usize",15]]]],[11,"drop","","",169,[[["usize",15]]]],[11,"from","pliantdb_local::core::circulate::flume","",218,[[]]],[11,"into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"vzip","","",218,[[]]],[11,"init","","",218,[[],["usize",15]]],[11,"deref","","",218,[[["usize",15]]]],[11,"deref_mut","","",218,[[["usize",15]]]],[11,"drop","","",218,[[["usize",15]]]],[11,"from","pliantdb_local::core::circulate::flume::async","",219,[[]]],[11,"into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"into_future","","",219,[[]]],[11,"try_poll","","",219,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",219,[[]]],[11,"init","","",219,[[],["usize",15]]],[11,"deref","","",219,[[["usize",15]]]],[11,"deref_mut","","",219,[[["usize",15]]]],[11,"drop","","",219,[[["usize",15]]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"vzip","","",220,[[]]],[11,"init","","",220,[[],["usize",15]]],[11,"deref","","",220,[[["usize",15]]]],[11,"deref_mut","","",220,[[["usize",15]]]],[11,"drop","","",220,[[["usize",15]]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"into_future","","",221,[[]]],[11,"try_poll","","",221,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",221,[[]]],[11,"init","","",221,[[],["usize",15]]],[11,"deref","","",221,[[["usize",15]]]],[11,"deref_mut","","",221,[[["usize",15]]]],[11,"drop","","",221,[[["usize",15]]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"try_poll_next","","",222,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"vzip","","",222,[[]]],[11,"init","","",222,[[],["usize",15]]],[11,"deref","","",222,[[["usize",15]]]],[11,"deref_mut","","",222,[[["usize",15]]]],[11,"drop","","",222,[[["usize",15]]]],[11,"from","pliantdb_local::core::circulate::flume","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"to_string","","",170,[[],["string",3]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"vzip","","",170,[[]]],[11,"equivalent","","",170,[[],["bool",15]]],[11,"init","","",170,[[],["usize",15]]],[11,"deref","","",170,[[["usize",15]]]],[11,"deref_mut","","",170,[[["usize",15]]]],[11,"drop","","",170,[[["usize",15]]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"to_string","","",171,[[],["string",3]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"vzip","","",171,[[]]],[11,"equivalent","","",171,[[],["bool",15]]],[11,"init","","",171,[[],["usize",15]]],[11,"deref","","",171,[[["usize",15]]]],[11,"deref_mut","","",171,[[["usize",15]]]],[11,"drop","","",171,[[["usize",15]]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"to_string","","",172,[[],["string",3]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"vzip","","",172,[[]]],[11,"equivalent","","",172,[[],["bool",15]]],[11,"init","","",172,[[],["usize",15]]],[11,"deref","","",172,[[["usize",15]]]],[11,"deref_mut","","",172,[[["usize",15]]]],[11,"drop","","",172,[[["usize",15]]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"to_string","","",173,[[],["string",3]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"vzip","","",173,[[]]],[11,"equivalent","","",173,[[],["bool",15]]],[11,"init","","",173,[[],["usize",15]]],[11,"deref","","",173,[[["usize",15]]]],[11,"deref_mut","","",173,[[["usize",15]]]],[11,"drop","","",173,[[["usize",15]]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"to_string","","",174,[[],["string",3]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"vzip","","",174,[[]]],[11,"equivalent","","",174,[[],["bool",15]]],[11,"init","","",174,[[],["usize",15]]],[11,"deref","","",174,[[["usize",15]]]],[11,"deref_mut","","",174,[[["usize",15]]]],[11,"drop","","",174,[[["usize",15]]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"to_string","","",175,[[],["string",3]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"vzip","","",175,[[]]],[11,"equivalent","","",175,[[],["bool",15]]],[11,"init","","",175,[[],["usize",15]]],[11,"deref","","",175,[[["usize",15]]]],[11,"deref_mut","","",175,[[["usize",15]]]],[11,"drop","","",175,[[["usize",15]]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"vzip","","",223,[[]]],[11,"init","","",223,[[],["usize",15]]],[11,"deref","","",223,[[["usize",15]]]],[11,"deref_mut","","",223,[[["usize",15]]]],[11,"drop","","",223,[[["usize",15]]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"vzip","","",224,[[]]],[11,"init","","",224,[[],["usize",15]]],[11,"deref","","",224,[[["usize",15]]]],[11,"deref_mut","","",224,[[["usize",15]]]],[11,"drop","","",224,[[["usize",15]]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"into_iter","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"vzip","","",225,[[]]],[11,"emit","","",225,[[["binencoder",3]],[["usize",15],["result",4],["protoerror",3]]]],[11,"nfd","","",225,[[],["decompositions",3]]],[11,"nfkd","","",225,[[],["decompositions",3]]],[11,"nfc","","",225,[[],["recompositions",3]]],[11,"nfkc","","",225,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",225,[[],["replacements",3]]],[11,"stream_safe","","",225,[[],["streamsafe",3]]],[11,"init","","",225,[[],["usize",15]]],[11,"deref","","",225,[[["usize",15]]]],[11,"deref_mut","","",225,[[["usize",15]]]],[11,"drop","","",225,[[["usize",15]]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"into_iter","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"vzip","","",226,[[]]],[11,"emit","","",226,[[["binencoder",3]],[["usize",15],["result",4],["protoerror",3]]]],[11,"nfd","","",226,[[],["decompositions",3]]],[11,"nfkd","","",226,[[],["decompositions",3]]],[11,"nfc","","",226,[[],["recompositions",3]]],[11,"nfkc","","",226,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",226,[[],["replacements",3]]],[11,"stream_safe","","",226,[[],["streamsafe",3]]],[11,"init","","",226,[[],["usize",15]]],[11,"deref","","",226,[[["usize",15]]]],[11,"deref_mut","","",226,[[["usize",15]]]],[11,"drop","","",226,[[["usize",15]]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"into_iter","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"vzip","","",227,[[]]],[11,"emit","","",227,[[["binencoder",3]],[["usize",15],["result",4],["protoerror",3]]]],[11,"nfd","","",227,[[],["decompositions",3]]],[11,"nfkd","","",227,[[],["decompositions",3]]],[11,"nfc","","",227,[[],["recompositions",3]]],[11,"nfkc","","",227,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",227,[[],["replacements",3]]],[11,"stream_safe","","",227,[[],["streamsafe",3]]],[11,"init","","",227,[[],["usize",15]]],[11,"deref","","",227,[[["usize",15]]]],[11,"deref_mut","","",227,[[["usize",15]]]],[11,"drop","","",227,[[["usize",15]]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"into_iter","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"vzip","","",228,[[]]],[11,"emit","","",228,[[["binencoder",3]],[["usize",15],["result",4],["protoerror",3]]]],[11,"nfd","","",228,[[],["decompositions",3]]],[11,"nfkd","","",228,[[],["decompositions",3]]],[11,"nfc","","",228,[[],["recompositions",3]]],[11,"nfkc","","",228,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",228,[[],["replacements",3]]],[11,"stream_safe","","",228,[[],["streamsafe",3]]],[11,"init","","",228,[[],["usize",15]]],[11,"deref","","",228,[[["usize",15]]]],[11,"deref_mut","","",228,[[["usize",15]]]],[11,"drop","","",228,[[["usize",15]]]],[11,"try_from","pliantdb_local::core::schema","",187,[[["string",3]],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"try_from","","",186,[[["str",15]],[["result",4],["authority",3],["invalidnameerror",3]]]],[11,"try_from","","",186,[[["string",3]],[["result",4],["authority",3],["invalidnameerror",3]]]],[11,"try_from","","",46,[[["str",15]],[["invalidnameerror",3],["result",4],["schemaname",3]]]],[11,"try_from","","",187,[[["str",15]],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"try_from","","",44,[[["str",15]],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"fmt","pliantdb_local::core::permissions","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::permissions::pliant","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::permissions","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::permissions::pliant","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::permissions::group","",181,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",210,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::kv","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::permissions::pliant","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",215,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::connection","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema::view::map","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::kv","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",207,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",126,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::kv","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",209,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::connection","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema::view","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",211,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::permissions::role","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",212,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::permissions::pliant","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::document","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",213,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::permissions::pliant","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::document","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::permissions::pliant","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",214,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::document","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::kv","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",123,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::permissions::pliant","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::kv","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::connection","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",208,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema::view","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",126,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"as_big_endian_bytes","pliantdb_local::core::kv","",66,[[],[["cow",4],["error",3],["result",4]]]],[11,"from_big_endian_bytes","","",66,[[],[["error",3],["result",4],["timestamp",3]]]],[11,"hash","pliantdb_local::core::schema","",46,[[]]],[11,"hash","","",187,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",186,[[]]],[11,"subscribe_to","pliantdb_local::core::circulate","",217,[[],[["box",3],["pin",3]]]],[11,"unsubscribe_from","","",217,[[["str",15]],[["box",3],["pin",3]]]],[11,"receiver","","",217,[[],["receiver",3]]],[11,"unique","pliantdb_local::core::permissions::group","",181,[[],["bool",15]]],[11,"version","","",181,[[],["u64",15]]],[11,"name","","",181,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",181,[[["document",3]],[["result",4],["error",4],["option",4]]]],[11,"version","pliantdb_local::core::test_util","",210,[[],["u64",15]]],[11,"name","","",210,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",210,[[["document",3]],[["error",4],["option",4],["result",4]]]],[11,"version","","",208,[[],["u64",15]]],[11,"name","","",208,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",208,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",208,[[["bool",15]],[["result",4],["error",4]]]],[11,"unique","","",212,[[],["bool",15]]],[11,"version","","",212,[[],["u64",15]]],[11,"name","","",212,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",212,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"unique","pliantdb_local::core::permissions::role","",182,[[],["bool",15]]],[11,"version","","",182,[[],["u64",15]]],[11,"name","","",182,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",182,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"version","pliantdb_local::core::test_util","",209,[[],["u64",15]]],[11,"name","","",209,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",209,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",209,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",207,[[],["u64",15]]],[11,"name","","",207,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"map","","",207,[[["document",3]],[["option",4],["result",4],["error",4]]]],[11,"reduce","","",207,[[["bool",15]],[["result",4],["error",4]]]],[11,"partial_cmp","pliantdb_local::core::kv","",66,[[["timestamp",3]],[["option",4],["ordering",4]]]],[11,"lt","","",66,[[["timestamp",3]],["bool",15]]],[11,"le","","",66,[[["timestamp",3]],["bool",15]]],[11,"gt","","",66,[[["timestamp",3]],["bool",15]]],[11,"ge","","",66,[[["timestamp",3]],["bool",15]]],[11,"deserialize","pliantdb_local::core::connection","",29,[[],[["result",4],["database",3]]]],[11,"deserialize","pliantdb_local::core::schema","",47,[[],[["viewname",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::kv","",59,[[],[["result",4],["keycheck",4]]]],[11,"deserialize","pliantdb_local::core::permissions","",16,[[],[["role",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::document","",30,[[],[["result",4],["header",3]]]],[11,"deserialize","pliantdb_local::core::networking","",73,[[],[["result",4],["databaserequest",4]]]],[11,"deserialize","pliantdb_local::core::transaction","",57,[[],[["result",4],["executed",3]]]],[11,"deserialize","","",48,[[],[["transaction",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::permissions","",7,[[],[["permissiongroup",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::test_util","",124,[[],[["unique",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::networking","",68,[[],[["payload",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::test_util","",123,[[],[["result",4],["basic",3]]]],[11,"deserialize","pliantdb_local::core::permissions::pliant","",14,[[],[["result",4],["pubsubaction",4]]]],[11,"deserialize","pliantdb_local::core::networking","",85,[[],[["response",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::schema","",187,[[],[["name",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::kv","",66,[[],[["result",4],["timestamp",3]]]],[11,"deserialize","pliantdb_local::core::connection","",26,[[],[["result",4],["querykey",4]]]],[11,"deserialize","pliantdb_local::core::schema::view::map","",35,[[],[["result",4],["serialized",3]]]],[11,"deserialize","pliantdb_local::core::schema","",36,[[],[["result",4],["mappedvalue",3]]]],[11,"deserialize","pliantdb_local::core::permissions::pliant","",15,[[],[["result",4],["kvaction",4]]]],[11,"deserialize","pliantdb_local::core::kv","",65,[[],[["keystatus",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::networking","",92,[[],[["mappeddocument",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::schema","",46,[[],[["result",4],["schemaname",3]]]],[11,"deserialize","pliantdb_local::core::networking","",71,[[],[["result",4],["serverrequest",4]]]],[11,"deserialize","pliantdb_local::core::kv","",61,[[],[["command",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::transaction","",49,[[],[["result",4],["operation",3]]]],[11,"deserialize","pliantdb_local::core::networking","",89,[[],[["result",4],["databaseresponse",4]]]],[11,"deserialize","pliantdb_local::core::schema","",44,[[],[["collectionname",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::transaction","",58,[[],[["result",4],["changeddocument",3]]]],[11,"deserialize","pliantdb_local::core::permissions::pliant","",10,[[],[["result",4],["databaseaction",4]]]],[11,"deserialize","pliantdb_local::core::transaction","",54,[[],[["operationresult",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::document","",32,[[],[["result",4],["revision",3]]]],[11,"deserialize","pliantdb_local::core::schema","",45,[[],[["result",4],["invalidnameerror",3]]]],[11,"deserialize","pliantdb_local::core::permissions::pliant","",12,[[],[["result",4],["viewaction",4]]]],[11,"deserialize","pliantdb_local::core::connection","",27,[[],[["accesspolicy",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::networking","",69,[[],[["request",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::kv","",64,[[],[["output",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::schema","",186,[[],[["result",4],["authority",3]]]],[11,"deserialize","pliantdb_local::core::permissions::pliant","",8,[[],[["result",4],["pliantaction",4]]]],[11,"deserialize","pliantdb_local::core","",120,[[],[["result",4],["error",4]]]],[11,"deserialize","pliantdb_local::core::transaction","",50,[[],[["result",4],["command",4]]]],[11,"deserialize","pliantdb_local::core::permissions::pliant","",13,[[],[["result",4],["transactionaction",4]]]],[11,"deserialize","pliantdb_local::core::networking","",86,[[],[["serverresponse",4],["result",4]]]],[11,"deserialize","","",93,[[],[["result",4],["error",4]]]],[11,"deserialize","pliantdb_local::core::document","",31,[[],[["document",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::permissions::pliant","",9,[[],[["result",4],["serveraction",4]]]],[11,"deserialize","pliantdb_local::core::kv","",60,[[],[["result",4],["keyoperation",3]]]],[11,"deserialize","pliantdb_local::core::permissions::pliant","",11,[[],[["documentaction",4],["result",4]]]],[11,"from","pliantdb_local::core::kv","",66,[[["systemtime",3]],["timestamp",3]]],[11,"from","pliantdb_local::core","",120,[[["error",3]],["error",4]]],[11,"from","pliantdb_local::core::schema::view","",38,[[["error",3]],["error",4]]],[11,"from","pliantdb_local::core","",120,[[["permissiondenied",3]],["error",4]]],[11,"from","","",120,[[["invalidnameerror",3]],["error",4]]],[11,"from","pliantdb_local::core::schema::view","",40,[[],["serializablevalue",4]]],[11,"as_ref","pliantdb_local::core::schema","",187,[[],["str",15]]],[11,"as_ref","pliantdb_local::core::test_util","",125,[[],["path",3]]],[11,"as_ref","pliantdb_local::core::schema::view","",40,[[]]],[11,"default","pliantdb_local::core::transaction","",48,[[],["transaction",3]]],[11,"default","pliantdb_local::core::schema","",188,[[],["schematic",3]]],[11,"default","pliantdb_local::core::test_util","",124,[[],["unique",3]]],[11,"default","","",123,[[],["basic",3]]],[11,"poll","pliantdb_local::core::kv::set","",191,[[["context",3],["pin",3],["builder",3]],["poll",4]]],[11,"poll","pliantdb_local::core::kv::get","",189,[[["pin",3],["builder",3],["context",3]],["poll",4]]],[11,"clone","pliantdb_local::core::permissions::pliant","",15,[[],["kvaction",4]]],[11,"clone","","",9,[[],["serveraction",4]]],[11,"clone","pliantdb_local::core::kv","",66,[[],["timestamp",3]]],[11,"clone","pliantdb_local::core::permissions::pliant","",12,[[],["viewaction",4]]],[11,"clone","pliantdb_local::core::schema::view::map","",35,[[],["serialized",3]]],[11,"clone","pliantdb_local::core::transaction","",49,[[],["operation",3]]],[11,"clone","pliantdb_local::core::networking","",73,[[],["databaserequest",4]]],[11,"clone","pliantdb_local::core::kv","",59,[[],["keycheck",4]]],[11,"clone","pliantdb_local::core::test_util","",126,[[],["harnesstest",4]]],[11,"clone","pliantdb_local::core::kv","",64,[[],["output",4]]],[11,"clone","pliantdb_local::core::schema","",36,[[],["mappedvalue",3]]],[11,"clone","","",186,[[],["authority",3]]],[11,"clone","pliantdb_local::core","",120,[[],["error",4]]],[11,"clone","pliantdb_local::core::connection","",29,[[],["database",3]]],[11,"clone","pliantdb_local::core::permissions::pliant","",11,[[],["documentaction",4]]],[11,"clone","pliantdb_local::core::networking","",71,[[],["serverrequest",4]]],[11,"clone","pliantdb_local::core::kv","",60,[[],["keyoperation",3]]],[11,"clone","pliantdb_local::core::transaction","",50,[[],["command",4]]],[11,"clone","pliantdb_local::core::permissions::pliant","",10,[[],["databaseaction",4]]],[11,"clone","pliantdb_local::core::transaction","",48,[[],["transaction",3]]],[11,"clone","pliantdb_local::core::permissions::pliant","",13,[[],["transactionaction",4]]],[11,"clone","","",8,[[],["pliantaction",4]]],[11,"clone","pliantdb_local::core::connection","",26,[[],["querykey",4]]],[11,"clone","pliantdb_local::core::networking","",69,[[],["request",4]]],[11,"clone","pliantdb_local::core::transaction","",54,[[],["operationresult",4]]],[11,"clone","pliantdb_local::core::document","",32,[[],["revision",3]]],[11,"clone","pliantdb_local::core::networking","",68,[[],["payload",3]]],[11,"clone","","",93,[[],["error",4]]],[11,"clone","","",86,[[],["serverresponse",4]]],[11,"clone","","",89,[[],["databaseresponse",4]]],[11,"clone","pliantdb_local::core::schema","",46,[[],["schemaname",3]]],[11,"clone","pliantdb_local::core::kv","",65,[[],["keystatus",4]]],[11,"clone","pliantdb_local::core::schema","",45,[[],["invalidnameerror",3]]],[11,"clone","pliantdb_local::core::kv","",61,[[],["command",4]]],[11,"clone","pliantdb_local::core::connection","",27,[[],["accesspolicy",4]]],[11,"clone","pliantdb_local::core::networking","",92,[[],["mappeddocument",3]]],[11,"clone","pliantdb_local::core::schema","",44,[[],["collectionname",3]]],[11,"clone","pliantdb_local::core::document","",30,[[],["header",3]]],[11,"clone","pliantdb_local::core::schema","",47,[[],["viewname",3]]],[11,"clone","pliantdb_local::core::permissions::pliant","",14,[[],["pubsubaction",4]]],[11,"clone","pliantdb_local::core::document","",31,[[],["document",3]]],[11,"clone","pliantdb_local::core::networking","",85,[[],["response",4]]],[11,"clone","pliantdb_local::core::schema","",187,[[],["name",3]]],[11,"clone","pliantdb_local::core::transaction","",58,[[],["changeddocument",3]]],[11,"clone","","",57,[[],["executed",3]]],[11,"cmp","pliantdb_local::core::kv","",66,[[["timestamp",3]],["ordering",4]]],[11,"collection_name","pliantdb_local::core::test_util","",123,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"define_views","","",123,[[["schematic",3]],[["error",4],["result",4]]]],[11,"collection_name","pliantdb_local::core::permissions","",16,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"define_views","","",16,[[["schematic",3]],[["error",4],["result",4]]]],[11,"collection_name","pliantdb_local::core::test_util","",214,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"define_views","","",214,[[["schematic",3]],[["error",4],["result",4]]]],[11,"collection_name","pliantdb_local::core::permissions","",7,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"define_views","","",7,[[["schematic",3]],[["error",4],["result",4]]]],[11,"collection_name","pliantdb_local::core::test_util","",215,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"define_views","","",215,[[["schematic",3]],[["error",4],["result",4]]]],[11,"collection_name","","",213,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"define_views","","",213,[[["schematic",3]],[["error",4],["result",4]]]],[11,"collection_name","","",124,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"define_views","","",124,[[["schematic",3]],[["error",4],["result",4]]]],[11,"schema_name","","",211,[[],[["invalidnameerror",3],["result",4],["schemaname",3]]]],[11,"define_collections","","",211,[[["schematic",3]],[["error",4],["result",4]]]],[11,"execute_key_operation","pliantdb_local::core::kv::namespaced","",190,[[["keyoperation",3]],[["box",3],["pin",3]]]],[11,"key_namespace","","",190,[[],[["str",15],["option",4]]]],[11,"with_key_namespace","","",190,[[["str",15]],[["namespaced",3],["namespaced",3]]]],[11,"source","pliantdb_local::core::schema::view","",38,[[],[["option",4],["error",8]]]],[11,"source","pliantdb_local::core","",120,[[],[["option",4],["error",8]]]],[11,"name","pliantdb_local::core::permissions::pliant","",15,[[],["actionname",3]]],[11,"name","","",9,[[],["actionname",3]]],[11,"name","","",12,[[],["actionname",3]]],[11,"name","","",11,[[],["actionname",3]]],[11,"name","","",10,[[],["actionname",3]]],[11,"name","","",14,[[],["actionname",3]]],[11,"name","","",8,[[],["actionname",3]]],[11,"name","","",13,[[],["actionname",3]]],[11,"add","pliantdb_local::core::kv","",66,[[["duration",3]]]],[11,"sub","","",66,[[["timestamp",3]]]],[11,"into","pliantdb_local::core::schema","",187,[[],["string",3]]],[11,"create_subscriber","pliantdb_local::core::circulate","",177,[[],[["box",3],["pin",3]]]],[11,"publish","","",177,[[],[["box",3],["pin",3]]]],[11,"publish_to_all","","",177,[[["vec",3],["string",3],["global",3]],[["box",3],["pin",3]]]],[11,"drop","pliantdb_local::core::test_util","",125,[[]]],[11,"eq","","",124,[[["unique",3]],["bool",15]]],[11,"ne","","",124,[[["unique",3]],["bool",15]]],[11,"eq","pliantdb_local::core::kv","",66,[[["timestamp",3]],["bool",15]]],[11,"ne","","",66,[[["timestamp",3]],["bool",15]]],[11,"eq","pliantdb_local::core::schema","",187,[[["name",3]],["bool",15]]],[11,"ne","","",187,[[["name",3]],["bool",15]]],[11,"eq","pliantdb_local::core::test_util","",123,[[["basic",3]],["bool",15]]],[11,"ne","","",123,[[["basic",3]],["bool",15]]],[11,"eq","pliantdb_local::core::document","",32,[[["revision",3]],["bool",15]]],[11,"ne","","",32,[[["revision",3]],["bool",15]]],[11,"eq","pliantdb_local::core::schema","",46,[[["schemaname",3]],["bool",15]]],[11,"ne","","",46,[[["schemaname",3]],["bool",15]]],[11,"eq","pliantdb_local::core::document","",30,[[["header",3]],["bool",15]]],[11,"ne","","",30,[[["header",3]],["bool",15]]],[11,"eq","pliantdb_local::core::schema","",44,[[["collectionname",3]],["bool",15]]],[11,"ne","","",44,[[["collectionname",3]],["bool",15]]],[11,"eq","","",33,[[["map",3]],["bool",15]]],[11,"ne","","",33,[[["map",3]],["bool",15]]],[11,"eq","pliantdb_local::core::connection","",29,[[["database",3]],["bool",15]]],[11,"ne","","",29,[[["database",3]],["bool",15]]],[11,"eq","pliantdb_local::core::kv","",65,[[["keystatus",4]],["bool",15]]],[11,"eq","pliantdb_local::core::schema","",36,[[["mappedvalue",3]],["bool",15]]],[11,"ne","","",36,[[["mappedvalue",3]],["bool",15]]],[11,"eq","","",47,[[["viewname",3]],["bool",15]]],[11,"ne","","",47,[[["viewname",3]],["bool",15]]],[11,"eq","","",186,[[["authority",3]],["bool",15]]],[11,"ne","","",186,[[["authority",3]],["bool",15]]],[11,"serialize","pliantdb_local::core::test_util","",124,[[],["result",4]]],[11,"serialize","pliantdb_local::core::permissions::pliant","",14,[[],["result",4]]],[11,"serialize","pliantdb_local::core::connection","",26,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",45,[[],["result",4]]],[11,"serialize","pliantdb_local::core::kv","",60,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema::view::map","",35,[[],["result",4]]],[11,"serialize","pliantdb_local::core::document","",32,[[],["result",4]]],[11,"serialize","pliantdb_local::core::kv","",65,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",36,[[],["result",4]]],[11,"serialize","pliantdb_local::core::permissions::pliant","",8,[[],["result",4]]],[11,"serialize","pliantdb_local::core::test_util","",123,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",57,[[],["result",4]]],[11,"serialize","pliantdb_local::core::connection","",29,[[],["result",4]]],[11,"serialize","pliantdb_local::core::kv","",61,[[],["result",4]]],[11,"serialize","pliantdb_local::core::connection","",27,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",47,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",68,[[],["result",4]]],[11,"serialize","pliantdb_local::core::permissions::pliant","",9,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",71,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",44,[[],["result",4]]],[11,"serialize","pliantdb_local::core::document","",30,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",73,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",48,[[],["result",4]]],[11,"serialize","pliantdb_local::core::permissions::pliant","",13,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",54,[[],["result",4]]],[11,"serialize","pliantdb_local::core::permissions::pliant","",10,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",49,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",69,[[],["result",4]]],[11,"serialize","pliantdb_local::core","",120,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",86,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",186,[[],["result",4]]],[11,"serialize","pliantdb_local::core::kv","",64,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",93,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",50,[[],["result",4]]],[11,"serialize","pliantdb_local::core::document","",31,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",89,[[],["result",4]]],[11,"serialize","pliantdb_local::core::permissions::pliant","",11,[[],["result",4]]],[11,"serialize","pliantdb_local::core::kv","",66,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",92,[[],["result",4]]],[11,"serialize","pliantdb_local::core::permissions","",7,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",58,[[],["result",4]]],[11,"serialize","pliantdb_local::core::kv","",59,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",46,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",85,[[],["result",4]]],[11,"serialize","pliantdb_local::core::permissions::pliant","",15,[[],["result",4]]],[11,"serialize","pliantdb_local::core::permissions","",16,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",187,[[],["result",4]]],[11,"fmt","pliantdb_local::core::num_traits","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::permissions","",183,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",21,[[]]],[11,"serialize","","",184,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"from","","",21,[[["str",15]],["identifier",4]]],[11,"from","","",21,[[["string",3]],["identifier",4]]],[11,"from","","",21,[[["u64",15]],["identifier",4]]],[11,"from","","",183,[[["vec",3],["global",3],["statement",3]],["permissions",3]]],[11,"from","","",19,[[["actionname",3]],["actionnamelist",4]]],[11,"from","","",21,[[["string",3]],["identifier",4]]],[11,"from","","",19,[[["global",3],["actionname",3],["vec",3]],["actionnamelist",4]]],[11,"from","","",19,[[],["actionnamelist",4]]],[11,"as_ref","","",184,[[]]],[11,"into_iter","","",184,[[]]],[11,"deserialize","","",23,[[],[["statement",3],["result",4]]]],[11,"deserialize","","",18,[[],[["result",4],["actionname",3]]]],[11,"deserialize","","",19,[[],[["result",4],["actionnamelist",4]]]],[11,"deserialize","","",22,[[],[["result",4],["permissiondenied",3]]]],[11,"deserialize","","",21,[[],[["result",4],["identifier",4]]]],[11,"deserialize","","",184,[[],[["result",4],["resourcename",3]]]],[11,"default","","",183,[[],["permissions",3]]],[11,"default","","",18,[[],["actionname",3]]],[11,"default","","",184,[[],["resourcename",3]]],[11,"clone","","",18,[[],["actionname",3]]],[11,"clone","","",184,[[],["resourcename",3]]],[11,"clone","","",21,[[],["identifier",4]]],[11,"clone","","",22,[[],["permissiondenied",3]]],[11,"eq","","",21,[[["identifier",4]],["bool",15]]],[11,"ne","","",21,[[["identifier",4]],["bool",15]]],[11,"try_from","pliantdb_local::core::networking::fabruic","",203,[[["global",3],["vec",3],["u8",15]],[["result",4],["certificate",3]]]],[11,"try_from","","",205,[[],[["keypair",3],["result",4]]]],[11,"try_from","","",204,[[["vec",3],["global",3],["certificate",3]],[["certificatechain",3],["result",4]]]],[11,"try_from","","",206,[[["global",3],["vec",3],["u8",15]],[["privatekey",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",203,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",206,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",117,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",200,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",205,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",204,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",194,[[]]],[11,"hash","pliantdb_local::core::networking::fabruic","",206,[[]]],[11,"hash","","",204,[[]]],[11,"hash","pliantdb_local::core::networking::fabruic::error","",193,[[]]],[11,"hash","","",192,[[]]],[11,"hash","","",99,[[]]],[11,"hash","pliantdb_local::core::networking::fabruic","",203,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",205,[[]]],[11,"index","","",204,[[["usize",15]]]],[11,"partial_cmp","","",203,[[["certificate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",203,[[["certificate",3]],["bool",15]]],[11,"le","","",203,[[["certificate",3]],["bool",15]]],[11,"gt","","",203,[[["certificate",3]],["bool",15]]],[11,"ge","","",203,[[["certificate",3]],["bool",15]]],[11,"partial_cmp","","",204,[[["certificatechain",3]],[["option",4],["ordering",4]]]],[11,"lt","","",204,[[["certificatechain",3]],["bool",15]]],[11,"le","","",204,[[["certificatechain",3]],["bool",15]]],[11,"gt","","",204,[[["certificatechain",3]],["bool",15]]],[11,"ge","","",204,[[["certificatechain",3]],["bool",15]]],[11,"partial_cmp","pliantdb_local::core::networking::fabruic::error","",99,[[["privatekey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",99,[[["privatekey",3]],["bool",15]]],[11,"le","","",99,[[["privatekey",3]],["bool",15]]],[11,"gt","","",99,[[["privatekey",3]],["bool",15]]],[11,"ge","","",99,[[["privatekey",3]],["bool",15]]],[11,"partial_cmp","","",194,[[["alreadyclosed",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","pliantdb_local::core::networking::fabruic","",205,[[["keypair",3]],[["option",4],["ordering",4]]]],[11,"lt","","",205,[[["keypair",3]],["bool",15]]],[11,"le","","",205,[[["keypair",3]],["bool",15]]],[11,"gt","","",205,[[["keypair",3]],["bool",15]]],[11,"ge","","",205,[[["keypair",3]],["bool",15]]],[11,"partial_cmp","pliantdb_local::core::networking::fabruic::error","",193,[[["certificatechain",3]],[["option",4],["ordering",4]]]],[11,"lt","","",193,[[["certificatechain",3]],["bool",15]]],[11,"le","","",193,[[["certificatechain",3]],["bool",15]]],[11,"gt","","",193,[[["certificatechain",3]],["bool",15]]],[11,"ge","","",193,[[["certificatechain",3]],["bool",15]]],[11,"partial_cmp","pliantdb_local::core::networking::fabruic","",117,[[["store",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","pliantdb_local::core::networking::fabruic::error","",192,[[["keypair",3]],[["option",4],["ordering",4]]]],[11,"lt","","",192,[[["keypair",3]],["bool",15]]],[11,"le","","",192,[[["keypair",3]],["bool",15]]],[11,"gt","","",192,[[["keypair",3]],["bool",15]]],[11,"ge","","",192,[[["keypair",3]],["bool",15]]],[11,"partial_cmp","pliantdb_local::core::networking::fabruic","",206,[[["privatekey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",206,[[["privatekey",3]],["bool",15]]],[11,"le","","",206,[[["privatekey",3]],["bool",15]]],[11,"gt","","",206,[[["privatekey",3]],["bool",15]]],[11,"ge","","",206,[[["privatekey",3]],["bool",15]]],[11,"from","pliantdb_local::core::networking::fabruic::error","",107,[[["global",3],["box",3],["errorkind",4]],["sender",4]]],[11,"from","","",106,[[["readerror",4]],["receiver",4]]],[11,"from","","",101,[[["connecterror",4]],["connect",4]]],[11,"from","","",107,[[["writeerror",4]],["sender",4]]],[11,"from","","",101,[[["resolveerror",3],["global",3],["box",3]],["connect",4]]],[11,"from","","",106,[[["errorkind",4]],["receiver",4]]],[11,"from","","",104,[[["sender",4]],["stream",4]]],[11,"from","","",104,[[["connectionerror",4]],["stream",4]]],[11,"from","","",101,[[["error",3]],["connect",4]]],[11,"from","","",107,[[["alreadyclosed",3]],["sender",4]]],[11,"as_ref","pliantdb_local::core::networking::fabruic","",203,[[]]],[11,"into_iter","","",204,[[]]],[11,"default","","",196,[[],["builder",3]]],[11,"clone","pliantdb_local::core::networking::fabruic::error","",192,[[],["keypair",3]]],[11,"clone","pliantdb_local::core::networking::fabruic","",204,[[],["certificatechain",3]]],[11,"clone","","",198,[[],["connection",3]]],[11,"clone","pliantdb_local::core::networking::fabruic::error","",103,[[],["connecting",3]]],[11,"clone","","",102,[[],["connection",3]]],[11,"clone","pliantdb_local::core::networking::fabruic","",201,[[],["receiver",3]]],[11,"clone","","",199,[[],["endpoint",3]]],[11,"clone","pliantdb_local::core::networking::fabruic::error","",99,[[],["privatekey",3]]],[11,"clone","","",194,[[],["alreadyclosed",3]]],[11,"clone","pliantdb_local::core::networking::fabruic","",206,[[],["privatekey",3]]],[11,"clone","","",203,[[],["certificate",3]]],[11,"clone","","",117,[[],["store",4]]],[11,"clone","pliantdb_local::core::networking::fabruic::error","",193,[[],["certificatechain",3]]],[11,"clone","pliantdb_local::core::networking::fabruic","",202,[[],["sender",3]]],[11,"clone","","",205,[[],["keypair",3]]],[11,"cmp","pliantdb_local::core::networking::fabruic::error","",192,[[["keypair",3]],["ordering",4]]],[11,"cmp","","",193,[[["certificatechain",3]],["ordering",4]]],[11,"cmp","","",99,[[["privatekey",3]],["ordering",4]]],[11,"cmp","pliantdb_local::core::networking::fabruic","",203,[[["certificate",3]],["ordering",4]]],[11,"cmp","","",205,[[["keypair",3]],["ordering",4]]],[11,"cmp","","",204,[[["certificatechain",3]],["ordering",4]]],[11,"cmp","","",206,[[["privatekey",3]],["ordering",4]]],[11,"cmp","","",117,[[["store",4]],["ordering",4]]],[11,"cmp","pliantdb_local::core::networking::fabruic::error","",194,[[["alreadyclosed",3]],["ordering",4]]],[11,"zeroize","","",99,[[]]],[11,"zeroize","pliantdb_local::core::networking::fabruic","",206,[[]]],[11,"poll_next","","",198,[[["pin",3],["context",3],["connection",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",201,[[["context",3],["pin",3],["receiver",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",199,[[["context",3],["endpoint",3],["pin",3]],[["poll",4],["option",4]]]],[11,"serialize","","",203,[[],["result",4]]],[11,"serialize","","",117,[[],["result",4]]],[11,"serialize","","",204,[[],["result",4]]],[11,"is_terminated","","",198,[[],["bool",15]]],[11,"is_terminated","","",199,[[],["bool",15]]],[11,"source","pliantdb_local::core::networking::fabruic::error","",106,[[],[["option",4],["error",8]]]],[11,"source","","",107,[[],[["option",4],["error",8]]]],[11,"source","","",101,[[],[["option",4],["error",8]]]],[11,"source","","",98,[[],[["option",4],["error",8]]]],[11,"source","","",97,[[],[["option",4],["error",8]]]],[11,"source","","",100,[[],[["option",4],["error",8]]]],[11,"source","","",104,[[],[["option",4],["error",8]]]],[11,"deserialize","pliantdb_local::core::networking::fabruic","",117,[[],[["store",4],["result",4]]]],[11,"deserialize","","",203,[[],[["result",4],["certificate",3]]]],[11,"deserialize","","",205,[[],[["result",4],["keypair",3]]]],[11,"deserialize","","",204,[[],[["result",4],["certificatechain",3]]]],[11,"deserialize","","",206,[[],[["result",4],["privatekey",3]]]],[11,"as_ref","","",206,[[["privatekey",3]]]],[11,"into","","",206,[[["privatekey",3]],[["global",3],["vec",3],["u8",15]]]],[11,"serialize","","",206,[[["privatekey",3]],["result",4]]],[11,"drop","","",206,[[]]],[11,"drop","pliantdb_local::core::networking::fabruic::error","",99,[[]]],[11,"eq","pliantdb_local::core::networking::fabruic","",203,[[["certificate",3]],["bool",15]]],[11,"ne","","",203,[[["certificate",3]],["bool",15]]],[11,"eq","pliantdb_local::core::networking::fabruic::error","",192,[[["keypair",3]],["bool",15]]],[11,"ne","","",192,[[["keypair",3]],["bool",15]]],[11,"eq","pliantdb_local::core::networking::fabruic","",117,[[["store",4]],["bool",15]]],[11,"eq","pliantdb_local::core::networking::fabruic::error","",193,[[["certificatechain",3]],["bool",15]]],[11,"ne","","",193,[[["certificatechain",3]],["bool",15]]],[11,"eq","","",194,[[["alreadyclosed",3]],["bool",15]]],[11,"eq","","",103,[[["connecting",3]],["bool",15]]],[11,"ne","","",103,[[["connecting",3]],["bool",15]]],[11,"eq","pliantdb_local::core::networking::fabruic","",205,[[["keypair",3]],["bool",15]]],[11,"ne","","",205,[[["keypair",3]],["bool",15]]],[11,"eq","","",204,[[["certificatechain",3]],["bool",15]]],[11,"ne","","",204,[[["certificatechain",3]],["bool",15]]],[11,"eq","pliantdb_local::core::networking::fabruic::error","",99,[[["privatekey",3]],["bool",15]]],[11,"ne","","",99,[[["privatekey",3]],["bool",15]]],[11,"eq","pliantdb_local::core::networking::fabruic","",206,[[["privatekey",3]],["bool",15]]],[11,"ne","","",206,[[["privatekey",3]],["bool",15]]],[11,"eq","pliantdb_local::core::networking::fabruic::error","",102,[[["connection",3]],["bool",15]]],[11,"ne","","",102,[[["connection",3]],["bool",15]]],[11,"serialize","pliantdb_local::core::networking::fabruic","",205,[[["keypair",3]],["result",4]]],[11,"set_root_certificates","","",196,[[["builder",3]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",113,[[],["error",4]]],[11,"eq","","",113,[[["error",4]],["bool",15]]],[11,"fmt","","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_error_kind","","",115,[[["errorkind",4]],["x509error",4]]],[11,"append","","",115,[[["errorkind",4],["x509error",4]],["x509error",4]]],[11,"from","","",116,[[["x509error",4]],[["err",4],["x509error",4]]]],[11,"from","","",115,[[["bererror",4]],["x509error",4]]],[11,"from","","",115,[[["errorkind",4]],["x509error",4]]],[11,"source","","",115,[[],[["option",4],["error",8]]]],[11,"eq","","",115,[[["x509error",4]],["bool",15]]],[11,"ne","","",115,[[["x509error",4]],["bool",15]]],[11,"from","","",116,[[["bererror",4]],[["bererror",4],["err",4]]]],[11,"fmt","","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",116,[[],["err",4]]],[11,"source","","",116,[[],[["option",4],["error",8]]]],[11,"eq","","",116,[[["err",4]],["bool",15]]],[11,"ne","","",116,[[["err",4]],["bool",15]]],[11,"fmt","","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"description","","",108,[[],["str",15]]],[11,"cause","","",108,[[],[["option",4],["error",8]]]],[11,"fmt","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",111,[[["readableerror",4]],["readerror",4]]],[11,"source","","",112,[[],[["option",4],["error",8]]]],[11,"clone","","",112,[[],["writeerror",4]]],[11,"clone","","",111,[[],["readerror",4]]],[11,"eq","","",112,[[["writeerror",4]],["bool",15]]],[11,"ne","","",112,[[["writeerror",4]],["bool",15]]],[11,"eq","","",111,[[["readerror",4]],["bool",15]]],[11,"ne","","",111,[[["readerror",4]],["bool",15]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",110,[[["error",3]],["connectionerror",4]]],[11,"from","","",110,[[["close",4]],["connectionerror",4]]],[11,"clone","","",110,[[],["connectionerror",4]]],[11,"clone","","",109,[[],["connecterror",4]]],[11,"source","","",109,[[],[["option",4],["error",8]]]],[11,"source","","",110,[[],[["option",4],["error",8]]]],[11,"eq","","",109,[[["connecterror",4]],["bool",15]]],[11,"ne","","",109,[[["connecterror",4]],["bool",15]]],[11,"eq","","",110,[[["connectionerror",4]],["bool",15]]],[11,"ne","","",110,[[["connectionerror",4]],["bool",15]]],[11,"fmt","","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",195,[[["poisonerror",3]],["resolveerror",3]]],[11,"from","","",195,[[["resolveerrorkind",4]],["resolveerror",3]]],[11,"from","","",195,[[["string",3]],["resolveerror",3]]],[11,"from","","",195,[[["str",15]],["resolveerror",3]]],[11,"from","","",195,[[["protoerror",3]],["resolveerror",3]]],[11,"from","","",195,[[["error",3]],["resolveerror",3]]],[11,"should_retry","","",195,[[],["bool",15]]],[11,"attempted","","",195,[[],["bool",15]]],[11,"clone","","",195,[[],["resolveerror",3]]],[11,"fmt","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",114,[[["errors",3]],["parseerror",4]]],[11,"clone","","",114,[[],["parseerror",4]]],[11,"eq","","",114,[[["parseerror",4]],["bool",15]]],[11,"fmt","pliantdb_local::core::circulate::flume","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::circulate::flume::select","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::circulate::flume","",224,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",218,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",223,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",227,[[["formatter",3]],[["error",3],["result",4]]]],[11,"len","","",227,[[],["usize",15]]],[11,"fmt","","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::circulate::flume::select","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::circulate::flume","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"is_terminated","pliantdb_local::core::circulate::flume::async","",219,[[],["bool",15]]],[11,"is_terminated","","",221,[[],["bool",15]]],[11,"into_iter","pliantdb_local::core::circulate::flume","",224,[[]]],[11,"next","","",228,[[],["option",4]]],[11,"next","","",225,[[],["option",4]]],[11,"next","","",226,[[],["option",4]]],[11,"next","","",227,[[],["option",4]]],[11,"poll_next","pliantdb_local::core::circulate::flume::async","",222,[[["context",3],["pin",3],["recvstream",3]],[["option",4],["poll",4]]]],[11,"default","pliantdb_local::core::circulate::flume","",218,[[],["selector",3]]],[11,"poll","pliantdb_local::core::circulate::flume::async","",221,[[["pin",3],["recvfut",3],["context",3]],["poll",4]]],[11,"poll","","",219,[[["pin",3],["context",3],["sendfut",3]],["poll",4]]],[11,"drop","pliantdb_local::core::circulate::flume","",223,[[]]],[11,"drop","pliantdb_local::core::circulate::flume::async","",221,[[]]],[11,"drop","pliantdb_local::core::circulate::flume","",224,[[]]],[11,"drop","pliantdb_local::core::circulate::flume::async","",219,[[]]],[11,"is_terminated","","",222,[[],["bool",15]]],[11,"clone","pliantdb_local::core::circulate::flume","",172,[[],["sendtimeouterror",4]]],[11,"clone","pliantdb_local::core::circulate::flume::select","",169,[[],["selecterror",4]]],[11,"clone","pliantdb_local::core::circulate::flume::async","",222,[[],["recvstream",3]]],[11,"clone","pliantdb_local::core::circulate::flume","Clone this receiver. [<code>Receiver</code>] acts as a handle to the …",224,[[],["receiver",3]]],[11,"clone","","",171,[[],["trysenderror",4]]],[11,"clone","","",173,[[],["recverror",4]]],[11,"clone","","",175,[[],["recvtimeouterror",4]]],[11,"clone","pliantdb_local::core::circulate::flume::async","",220,[[],["sendsink",3]]],[11,"clone","pliantdb_local::core::circulate::flume","",174,[[],["tryrecverror",4]]],[11,"clone","","Clone this sender. [<code>Sender</code>] acts as a handle to the …",223,[[],["sender",3]]],[11,"clone","","",170,[[],["senderror",3]]],[11,"eq","","",173,[[["recverror",4]],["bool",15]]],[11,"eq","","",170,[[["senderror",3]],["bool",15]]],[11,"ne","","",170,[[["senderror",3]],["bool",15]]],[11,"eq","","",175,[[["recvtimeouterror",4]],["bool",15]]],[11,"eq","","",172,[[["sendtimeouterror",4]],["bool",15]]],[11,"ne","","",172,[[["sendtimeouterror",4]],["bool",15]]],[11,"eq","","",171,[[["trysenderror",4]],["bool",15]]],[11,"ne","","",171,[[["trysenderror",4]],["bool",15]]],[11,"eq","","",174,[[["tryrecverror",4]],["bool",15]]],[11,"eq","pliantdb_local::core::circulate::flume::select","",169,[[["selecterror",4]],["bool",15]]],[11,"poll_ready","pliantdb_local::core::circulate::flume::async","",220,[[["context",3],["pin",3],["sendsink",3]],[["poll",4],["result",4]]]],[11,"start_send","","",220,[[["pin",3],["sendsink",3]],["result",4]]],[11,"poll_flush","","",220,[[["context",3],["pin",3],["sendsink",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",220,[[["context",3],["pin",3],["sendsink",3]],[["poll",4],["result",4]]]],[11,"fmt","pliantdb_local::core::circulate","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",217,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","","",168,[[],[["result",4],["message",3]]]],[11,"default","","",177,[[],["relay",3]]],[11,"serialize","","",168,[[],["result",4]]],[11,"clone","","",217,[[],["subscriber",3]]],[11,"clone","","",168,[[],["message",3]]],[11,"clone","","",177,[[],["relay",3]]],[11,"from","pliantdb_local","",176,[[["error",4]]]],[11,"from","","",176,[[["error",6]]]],[11,"from","","",176,[[["error",3]]]],[11,"from","","",176,[[["recverror",4]]]],[11,"from","","",176,[[["error",4]]]],[11,"from","","",176,[[["error",4]]]],[11,"from","","",176,[[["arc",3],["error",3]]]],[11,"from","pliantdb_local::core","",120,[[["error",4]]]],[11,"from","pliantdb_local","",176,[[["invalidnameerror",3]]]],[11,"clone","pliantdb_local::config","",0,[[],["configuration",3]]],[11,"clone","","",1,[[],["tasks",3]]],[11,"clone","","",2,[[],["views",3]]],[11,"clone","pliantdb_local","",179,[[]]],[11,"clone","","",180,[[],["storage",3]]],[11,"default","pliantdb_local::config","",0,[[],["configuration",3]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_local","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_local::backup","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_local","",176,[[["formatter",3]],["result",6]]],[11,"source","","",176,[[],[["error",8],["option",4]]]],[11,"apply_transaction","","",179,[[["transaction",3]],[["box",3],["pin",3]]]],[11,"get","","",179,[[["u64",15]],[["box",3],["pin",3]]]],[11,"get_multiple","","",179,[[],[["pin",3],["box",3]]]],[11,"list_executed_transactions","","",179,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[11,"query","","",179,[[["option",4],["querykey",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"query_with_docs","","",179,[[["option",4],["querykey",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"reduce","","",179,[[["option",4],["querykey",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[11,"reduce_grouped","","",179,[[["option",4],["querykey",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[11,"last_transaction_id","","",179,[[],[["pin",3],["box",3]]]],[11,"create_database_with_schema","","",180,[[["str",15],["schemaname",3]],[["pin",3],["box",3]]]],[11,"delete_database","","",180,[[["str",15]],[["pin",3],["box",3]]]],[11,"list_databases","","",180,[[],[["box",3],["pin",3]]]],[11,"list_available_schemas","","",180,[[],[["pin",3],["box",3]]]],[11,"execute_key_operation","","",179,[[["keyoperation",3]],[["box",3],["pin",3]]]],[11,"create_subscriber","","",179,[[],[["pin",3],["box",3]]]],[11,"publish","","",179,[[["string",3],["into",8],["send",8]],[["pin",3],["box",3]]]],[11,"publish_to_all","","",179,[[["vec",3],["string",3]],[["pin",3],["box",3]]]],[11,"subscribe_to","","",178,[[["string",3],["into",8],["send",8]],[["box",3],["pin",3]]]],[11,"unsubscribe_from","","",178,[[["str",15]],[["box",3],["pin",3]]]],[11,"receiver","","",178,[[],["receiver",3]]],[11,"clap","pliantdb_local::backup","",3,[[],["app",3]]],[11,"from_clap","","",3,[[["argmatches",3]]]],[11,"clap","","",4,[[],["app",3]]],[11,"from_clap","","",4,[[["argmatches",3]]]],[11,"augment_clap","","",3,[[["app",3]],["app",3]]],[11,"is_subcommand","","",3,[[],["bool",15]]],[11,"augment_clap","","",4,[[["app",3]],["app",3]]],[11,"from_subcommand","","",4,[[],["option",4]]],[11,"is_subcommand","","",4,[[],["bool",15]]],[11,"create_subscriber","pliantdb_local::core::circulate","Create a new [<code>Subscriber</code>] for this relay.",177,[[]]],[11,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",177,[[]]],[11,"publish_to_all","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",177,[[["vec",3],["string",3],["global",3]]]],[11,"publish_serialized_to_all","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",177,[[["vec",3],["vec",3],["u8",15],["string",3],["global",3]]]],[11,"publish_message","","Publishes a message to all subscribers of its topic.",177,[[["message",3]]]],[11,"open_local","pliantdb_local","Creates a <code>Storage</code> with a single-database named \\\"default\\\" …",179,[[["configuration",3],["path",3],["asref",8],["send",8]]]],[11,"storage","","Returns the [<code>Storage</code>] that this database belongs to.",179,[[],["storage",3]]],[11,"schematic","","Returns the [<code>Schematic</code>] for <code>DB</code>.",179,[[],["schematic",3]]],[11,"open_local","","Creates or opens a multi-database [<code>Storage</code>] with its data …",180,[[["configuration",3],["path",3],["asref",8],["send",8]]]],[11,"register_schema","","Registers a schema for use within the server.",180,[[]]],[11,"database","","Retrieves a database. This function only verifies that …",180,[[["str",15]]]],[11,"to_owned","pliantdb_local::core::permissions","Convert this identifier to an un-borrowed identifier.",21,[[],["identifier",4]]],[11,"allowed_to","","Evaluate whether the <code>action</code> is allowed to be taken upon …",183,[[],["bool",15]]],[11,"to_owned","","Convert a borrowed name to an un-borrwed name.",184,[[],["resourcename",3]]],[11,"any","","Creates a <code>ResourceName</code> that matches any identifier.",184,[[],["resourcename",3]]],[11,"named","","Creates a <code>ResourceName</code> with <code>name</code>.",184,[[],["resourcename",3]]],[11,"and","","Adds another name segment.",184,[[],["resourcename",3]]],[11,"new","pliantdb_local::core::connection","Creates a new instance using <code>connection</code>.",185,[[],["collection",3]]],[11,"push","","Adds a new <code>Document<Cl></code> with the contents <code>item</code>.",185,[[]]],[11,"get","","Retrieves a <code>Document<Cl></code> with <code>id</code> from the connection.",185,[[["u64",15]]]],[11,"with_key","","Filters for entries in the view with <code>key</code>.",25,[[],["view",3]]],[11,"with_keys","","Filters for entries in the view with <code>keys</code>.",25,[[["vec",3],["global",3]],["view",3]]],[11,"with_key_range","","Filters for entries in the view with the range <code>keys</code>.",25,[[["range",3]],["view",3]]],[11,"with_access_policy","","Sets the access policy for queries.",25,[[["accesspolicy",4]],["view",3]]],[11,"query","","Executes the query and retrieves the results.",25,[[]]],[11,"query_with_docs","","Executes the query and retrieves the results with the …",25,[[]]],[11,"reduce","","Executes a reduce over the results of the query",25,[[]]],[11,"reduce_grouped","","Executes a reduce over the results of the query",25,[[]]],[11,"serialized","","Converts this key to a serialized format using the [<code>Key</code>] …",26,[[],[["result",4],["error",4],["querykey",4]]]],[11,"deserialized","","Deserializes the bytes into <code>K</code> via the [<code>Key</code>] trait.",26,[[],[["querykey",4],["result",4],["error",4]]]],[11,"new","pliantdb_local::core::document","Creates a new document with <code>contents</code>.",31,[[["cow",4],["collectionname",3],["u64",15]],["document",3]]],[11,"with_contents","","Creates a new document with serialized bytes from <code>contents</code>…",31,[[["collectionname",3],["u64",15]],[["document",3],["error",3],["result",4]]]],[11,"contents","","Retrieves <code>contents</code> through deserialization into the type <code>D</code>…",31,[[],[["error",3],["result",4]]]],[11,"set_contents","","Serializes and stores <code>contents</code> into this document.",31,[[],[["error",3],["result",4]]]],[11,"create_new_revision","","Creates a new revision.",31,[[["cow",4]],[["document",3],["option",4]]]],[11,"emit","","Creates a <code>Map</code> result with an empty key and value.",31,[[],["map",3]]],[11,"emit_key","","Creates a <code>Map</code> result with a <code>key</code> and an empty value.",31,[[],["map",3]]],[11,"emit_value","","Creates a <code>Map</code> result with <code>value</code> and an empty key.",31,[[],["map",3]]],[11,"emit_key_and_value","","Creates a <code>Map</code> result with a <code>key</code> and <code>value</code>.",31,[[],["map",3]]],[11,"to_owned","","Clone the document\'s data so that it\'s no longer borrowed …",31,[[],["document",3]]],[11,"new","","Creates the first revision for a document with the SHA256 …",32,[[],["revision",3]]],[11,"with_id","","Creates a revision with <code>id</code> for a document with the SHA256 …",32,[[["u32",15]],["revision",3]]],[11,"next_revision","","Creates the next revision in sequence with an updated …",32,[[],[["option",4],["revision",3]]]],[11,"serialized","pliantdb_local::core::schema","Serializes this map.",33,[[],[["serialized",3],["error",4],["result",4]]]],[11,"new","","Creates a new Map entry for the document with id <code>source</code>.",33,[[["u64",15]],["map",3]]],[11,"deserialized","pliantdb_local::core::schema::view::map","Deserializes this map.",35,[[],[["map",3],["error",4],["result",4]]]],[11,"new","pliantdb_local::core::schema","Creates a new collection name.",44,[[],[["result",4],["collectionname",3],["invalidnameerror",3]]]],[11,"new","","Creates a new name after validating it.",187,[[],[["result",4],["name",3],["invalidnameerror",3]]]],[11,"new","","Creates a new schema name.",46,[[],[["invalidnameerror",3],["result",4],["schemaname",3]]]],[11,"new","","Creates a new view name.",47,[[],[["viewname",3],["result",4],["invalidnameerror",3]]]],[11,"define_collection","","Adds the collection <code>C</code> and its views.",188,[[],[["error",4],["result",4]]]],[11,"define_view","","Adds the view <code>V</code>.",188,[[],[["error",4],["result",4]]]],[11,"contains","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",188,[[],["bool",15]]],[11,"contains_collection_id","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",188,[[["collectionname",3]],["bool",15]]],[11,"view_by_name","","Looks up a [<code>view::Serialized</code>] by name.",188,[[["viewname",3]],[["serialized",8],["option",4]]]],[11,"view","","Looks up a [<code>view::Serialized</code>] through the the type <code>V</code>.",188,[[],[["serialized",8],["option",4]]]],[11,"views","","Iterates over all registered views.",188,[[]]],[11,"views_in_collection","","Iterates over all views that belong to <code>collection</code>.",188,[[["collectionname",3]],[["vec",3],["option",4]]]],[11,"unique_views_in_collection","","Iterates over all views that are unique that belong to …",188,[[["collectionname",3]],[["vec",3],["option",4]]]],[11,"push","pliantdb_local::core::transaction","Adds an operation to the transaction.",48,[[["operation",3]]]],[11,"to_owned","","Convert this structure to be free of borrows.",57,[[],["executed",3]]],[11,"now","pliantdb_local::core::kv","Returns the current timestamp according to the OS. Uses […",66,[[],["timestamp",3]]],[11,"and_delete","pliantdb_local::core::kv::get","Delete the key after retrieving the value.",189,[[],["builder",3]]],[11,"expire_in","pliantdb_local::core::kv::set","Set this key to expire after <code>duration</code> from now.",191,[[["duration",3]],["builder",3]]],[11,"expire_at","","Set this key to expire at the provided <code>time</code>.",191,[[["systemtime",3]],["builder",3]]],[11,"keep_existing_expiration","","If the key already exists, do not update the currently …",191,[[],["builder",3]]],[11,"only_if_exists","","Only set the value if this key already exists.",191,[[],["builder",3]]],[11,"only_if_vacant","","Only set the value if this key isn\'t present.",191,[[],["builder",3]]],[11,"returning_previous","","Executes the Set operation, requesting the previous value …",191,[[]]],[11,"deserialized","pliantdb_local::core::networking","Deserialize into a <code>MappedDocument</code>.",92,[[],[["error",4],["result",4],["mappeddocument",3]]]],[11,"kind","pliantdb_local::core::networking::fabruic::error","Get the kind of the error",195,[[],["resolveerrorkind",4]]],[11,"from_response","","A conversion to determine if the response is an error",195,[[["dnsresponse",3],["bool",15]],[["result",4],["dnsresponse",3],["resolveerror",3]]]],[11,"is_incomplete","","Tests if the result is Incomplete",116,[[],["bool",15]]],[11,"map","","Applies the given function to the inner error",116,[[],["err",4]]],[11,"convert","","Automatically converts between errors if the underlying …",116,[[["err",4]],["err",4]]],[11,"map_input","","Maps <code>Err<(T, ErrorKind)></code> to <code>Err<(U, ErrorKind)></code> with the …",116,[[],["err",4]]],[11,"to_owned","","Obtaining ownership",116,[[],["err",4]]],[11,"to_owned","","Automatically converts between errors if the underlying …",116,[[],["err",4]]],[11,"new","pliantdb_local::core::networking::fabruic","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …",196,[[],["builder",3]]],[11,"set_address","","Set\'s the [<code>SocketAddr</code>] to bind to.",196,[[["socketaddr",4]]]],[11,"address","","Returns the [<code>SocketAddr</code>] to bind to.",196,[[],["socketaddr",4]]],[11,"set_server_key_pair","","Set a server certificate [<code>KeyPair</code>], use [<code>None</code>] to remove …",196,[[["option",4],["keypair",3]]]],[11,"server_key_pair","","Returns the server certificate [<code>KeyPair</code>].",196,[[],["option",4]]],[11,"set_client_key_pair","","Set a client certificate [<code>KeyPair</code>], use [<code>None</code>] to remove …",196,[[["option",4],["keypair",3]]]],[11,"client_key_pair","","Returns the client certificate [<code>KeyPair</code>].",196,[[],["option",4]]],[11,"set_protocols","","Set the protocols to accept, in order of descending …",196,[[]]],[11,"protocols","","Returns the set protocols.",196,[[]]],[11,"set_trust_dns","","Controls the use of <code>trust-dns</code> for [<code>Endpoint::connect</code>].",196,[[["bool",15]]]],[11,"disable_trust_dns","","Disables the use of <code>trust-dns</code> for [<code>Endpoint::connect</code>] …",196,[[]]],[11,"trust_dns","","Returns if <code>trust-dns</code> is enabled.",196,[[],["bool",15]]],[11,"set_dnssec","","Controls DNSSEC validation for <code>trust-dns</code> in […",196,[[["bool",15]]]],[11,"dnssec","","Returns if DNSSEC is enabled for <code>trust-dns</code>.",196,[[],["bool",15]]],[11,"set_hosts_file","","Controls <code>/etc/hosts</code> file support for <code>trust-dns</code> in […",196,[[["bool",15]]]],[11,"hosts_file","","Returns if <code>/etc/hosts</code> file support is enabled for …",196,[[],["bool",15]]],[11,"set_store","","Set\'s the default root certificate store.",196,[[["store",4]]]],[11,"store","","Returns the set [<code>Store</code>].",196,[[],["store",4]]],[11,"build","","Consumes [<code>Builder</code>] to build [<code>Endpoint</code>]. Must be called …",196,[[],[["result",4],["builder",3],["endpoint",3]]]],[11,"protocol","","The negotiated application protocol. See …",197,[[]]],[11,"accept","","Accept the [<code>Connection</code>] with the given <code>T</code> as the type …",197,[[]]],[11,"open_stream","","Open a stream on this [<code>Connection</code>], allowing to send data …",198,[[]]],[11,"protocol","","The negotiated application protocol. See …",198,[[],[["option",4],["vec",3]]]],[11,"peer_identity","","Get the peer’s identity, if available.",198,[[],[["certificatechain",3],["option",4]]]],[11,"remote_address","","The peer\'s address. Clients may change addresses at will, …",198,[[],["socketaddr",4]]],[11,"close_incoming","","Prevents any new incoming streams. Already incoming …",198,[[]]],[11,"close","","Close the [<code>Connection</code>] immediately.",198,[[]]],[11,"builder","","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …",199,[[],["builder",3]]],[11,"new_client","","Simplified version of creating a client. See [<code>Builder</code>] …",199,[[],[["error",3],["result",4],["endpoint",3]]]],[11,"new_server","","Simplified version of creating a server. See [<code>Builder</code>] …",199,[[["u16",15],["keypair",3]],[["error",3],["result",4],["endpoint",3]]]],[11,"connect","","Establishes a new <code>Connection</code> to a server. The servers […",199,[[]]],[11,"connect_pinned","","Establishes a new <code>Connection</code> to a server.",199,[[["keypair",3],["certificate",3],["option",4]]]],[11,"local_address","","Get the local [<code>SocketAddr</code>] the underlying socket is bound …",199,[[],[["error",3],["result",4],["socketaddr",4]]]],[11,"close","","Close all of this [<code>Endpoint</code>]\'s <code>Connection</code>s immediately …",199,[[]]],[11,"close_incoming","","Prevents any new incoming connections. Already incoming …",199,[[]]],[11,"wait_idle","","Wait for all <code>Connection</code>s to the [<code>Endpoint</code>] to be cleanly …",199,[[]]],[11,"type","","Returns the type information for that stream.",200,[[]]],[11,"accept","","Accept the incoming stream with the given types.",200,[[]]],[11,"finish","","Wait for the [<code>Receiver</code>] part of the stream to finish …",201,[[]]],[11,"close","","Close the [<code>Receiver</code>] immediately. To close a [<code>Receiver</code>] …",201,[[]]],[11,"send","","Send <code>data</code> into the stream.",202,[[],[["result",4],["sender",4]]]],[11,"finish","","Shut down the [<code>Send</code>] part of the stream gracefully.",202,[[]]],[11,"close","","Close the [<code>Sender</code>] immediately.",202,[[]]],[11,"from_der","","Build [<code>Certificate</code>] from DER-format. This is not meant as …",203,[[],[["certificate",3],["result",4],["certificate",3]]]],[11,"unchecked_from_der","","Build [<code>Certificate</code>] from DER-format. This skips the …",203,[[],["certificate",3]]],[11,"domains","","PanicsPanics if [<code>Certificate</code>] couldn\'t be parsed or …",203,[[],[["vec",3],["string",3],["global",3]]]],[11,"from_certificates","","Builds a new [<code>CertificateChain</code>] from the given […",204,[[],[["result",4],["certificatechain",3],["certificatechain",3]]]],[11,"unchecked_from_certificates","","Builds [<code>CertificateChain</code>] from the given [<code>Certificate</code>]s. …",204,[[],["certificatechain",3]]],[11,"into_end_entity_certificate","","Returns the end-entity [<code>Certificate</code>].",204,[[],["certificate",3]]],[11,"end_entity_certificate","","Returns a reference to the end-entity [<code>Certificate</code>].",204,[[],["certificate",3]]],[11,"iter","","Returns an iterator over the [<code>CertificateChain</code>].",204,[[],[["certificate",3],["iter",3]]]],[11,"get","","Provides a reference to the [<code>Certificate</code>] at the given …",204,[[["usize",15]],[["option",4],["certificate",3]]]],[11,"new_self_signed","","Generate a self signed certificate.",205,[[],["keypair",3]]],[11,"from_parts","","Builds a new [<code>KeyPair</code>] from the given [<code>CertificateChain</code>] …",205,[[["certificatechain",3],["privatekey",3]],[["keypair",3],["keypair",3],["result",4]]]],[11,"unchecked_from_parts","","Build [<code>KeyPair</code>] from the given [<code>CertificateChain</code>] and […",205,[[["certificatechain",3],["privatekey",3]],["keypair",3]]],[11,"certificate_chain","","Return the [<code>CertificateChain</code>] of this [<code>KeyPair</code>].",205,[[],["certificatechain",3]]],[11,"end_entity_certificate","","Returns the end-entity [<code>Certificate</code>].",205,[[],["certificate",3]]],[11,"private_key","","Return the secret [<code>PrivateKey</code>] of this [<code>KeyPair</code>].",205,[[],["privatekey",3]]],[11,"into_parts","","Destructure [<code>KeyPair</code>] into it\'s owned parts.",205,[[]]],[11,"parts","","Destructure [<code>KeyPair</code>] into it\'s borrowed parts.",205,[[]]],[11,"from_der","","Build [<code>PrivateKey</code>] from DER-format. This is not meant as …",206,[[],[["result",4],["privatekey",3],["privatekey",3]]]],[11,"unchecked_from_der","","Build [<code>PrivateKey</code>] from DER-format. This skips the …",206,[[],["privatekey",3]]],[11,"new","pliantdb_local::core::test_util","",123,[[],["basic",3]]],[11,"with_category","","",123,[[],["basic",3]]],[11,"with_parent_id","","",123,[[["u64",15]],["basic",3]]],[11,"new","","",125,[[],["testdirectory",3]]],[11,"port","","",126,[[["u16",15]],["u16",15]]],[11,"new","","",216,[[["duration",3]],["timingtest",3]]],[11,"wait_until","","",216,[[["duration",3]]]],[11,"elapsed","","",216,[[],["duration",3]]],[11,"new","pliantdb_local::core::circulate","Creates a new message.",168,[[],[["error",3],["message",3],["result",4]]]],[11,"payload","","Deserialize the payload as <code>P</code> using CBOR.",168,[[],[["result",4],["error",3]]]],[11,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",217,[[]]],[11,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",217,[[["str",15]]]],[11,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",217,[[],["receiver",3]]],[11,"id","","Returns the unique ID of the subscriber.",217,[[],["u64",15]]],[11,"new","pliantdb_local::core::circulate::flume","Create a new selector.",218,[[],["selector",3]]],[11,"send","","Add a send operation to the selector that sends the …",218,[[["sender",3]],["selector",3]]],[11,"recv","","Add a receive operation to the selector.",218,[[["receiver",3]],["selector",3]]],[11,"wait","","Wait until one of the events associated with this […",218,[[]]],[11,"wait_timeout","","Wait until one of the events associated with this […",218,[[["duration",3]],[["selecterror",4],["result",4]]]],[11,"wait_deadline","","Wait until one of the events associated with this […",218,[[["instant",3]],[["selecterror",4],["result",4]]]],[11,"is_disconnected","pliantdb_local::core::circulate::flume::async","See [<code>Sender::is_disconnected</code>].",219,[[],["bool",15]]],[11,"is_empty","","See [<code>Sender::is_empty</code>].",219,[[],["bool",15]]],[11,"is_full","","See [<code>Sender::is_full</code>].",219,[[],["bool",15]]],[11,"len","","See [<code>Sender::len</code>].",219,[[],["usize",15]]],[11,"capacity","","See [<code>Sender::capacity</code>].",219,[[],[["usize",15],["option",4]]]],[11,"is_disconnected","","See [<code>Sender::is_disconnected</code>].",220,[[],["bool",15]]],[11,"is_empty","","See [<code>Sender::is_empty</code>].",220,[[],["bool",15]]],[11,"is_full","","See [<code>Sender::is_full</code>].",220,[[],["bool",15]]],[11,"len","","See [<code>Sender::len</code>].",220,[[],["usize",15]]],[11,"capacity","","See [<code>Sender::capacity</code>].",220,[[],[["usize",15],["option",4]]]],[11,"is_disconnected","","See [<code>Receiver::is_disconnected</code>].",221,[[],["bool",15]]],[11,"is_empty","","See [<code>Receiver::is_empty</code>].",221,[[],["bool",15]]],[11,"is_full","","See [<code>Receiver::is_full</code>].",221,[[],["bool",15]]],[11,"len","","See [<code>Receiver::len</code>].",221,[[],["usize",15]]],[11,"capacity","","See [<code>Receiver::capacity</code>].",221,[[],[["usize",15],["option",4]]]],[11,"is_disconnected","","See [<code>Receiver::is_disconnected</code>].",222,[[],["bool",15]]],[11,"is_empty","","See [<code>Receiver::is_empty</code>].",222,[[],["bool",15]]],[11,"is_full","","See [<code>Receiver::is_full</code>].",222,[[],["bool",15]]],[11,"len","","See [<code>Receiver::len</code>].",222,[[],["usize",15]]],[11,"capacity","","See [<code>Receiver::capacity</code>].",222,[[],[["usize",15],["option",4]]]],[11,"send_async","pliantdb_local::core::circulate::flume","Asynchronously send a value into the channel, returning …",223,[[],["sendfut",3]]],[11,"into_send_async","","Convert this sender into a future that asynchronously …",223,[[],["sendfut",3]]],[11,"sink","","Create an asynchronous sink that uses this sender to …",223,[[],["sendsink",3]]],[11,"into_sink","","Convert this sender into a sink that allows …",223,[[],["sendsink",3]]],[11,"try_send","","Attempt to send a value into the channel. If the channel …",223,[[],[["result",4],["trysenderror",4]]]],[11,"send","","Send a value into the channel, returning an error if all …",223,[[],[["senderror",3],["result",4]]]],[11,"send_deadline","","Send a value into the channel, returning an error if all …",223,[[["instant",3]],[["result",4],["sendtimeouterror",4]]]],[11,"send_timeout","","Send a value into the channel, returning an error if all …",223,[[["duration",3]],[["result",4],["sendtimeouterror",4]]]],[11,"is_disconnected","","Returns true if all receivers for this channel have been …",223,[[],["bool",15]]],[11,"is_empty","","Returns true if the channel is empty. Note: Zero-capacity …",223,[[],["bool",15]]],[11,"is_full","","Returns true if the channel is full. Note: Zero-capacity …",223,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel",223,[[],["usize",15]]],[11,"capacity","","If the channel is bounded, returns its capacity.",223,[[],[["usize",15],["option",4]]]],[11,"recv_async","","Asynchronously receive a value from the channel, …",224,[[],["recvfut",3]]],[11,"into_recv_async","","Convert this receiver into a future that asynchronously …",224,[[],["recvfut",3]]],[11,"stream","","Create an asynchronous stream that uses this receiver to …",224,[[],["recvstream",3]]],[11,"into_stream","","Convert this receiver into a stream that allows …",224,[[],["recvstream",3]]],[11,"try_recv","","Attempt to fetch an incoming value from the channel …",224,[[],[["result",4],["tryrecverror",4]]]],[11,"recv","","Wait for an incoming value from the channel associated …",224,[[],[["result",4],["recverror",4]]]],[11,"recv_deadline","","Wait for an incoming value from the channel associated …",224,[[["instant",3]],[["recvtimeouterror",4],["result",4]]]],[11,"recv_timeout","","Wait for an incoming value from the channel associated …",224,[[["duration",3]],[["recvtimeouterror",4],["result",4]]]],[11,"iter","","Create a blocking iterator over the values received on …",224,[[],["iter",3]]],[11,"try_iter","","A non-blocking iterator over the values received on the …",224,[[],["tryiter",3]]],[11,"drain","","Take all msgs currently sitting in the channel and …",224,[[],["drain",3]]],[11,"is_disconnected","","Returns true if all senders for this channel have been …",224,[[],["bool",15]]],[11,"is_empty","","Returns true if the channel is empty. Note: Zero-capacity …",224,[[],["bool",15]]],[11,"is_full","","Returns true if the channel is full. Note: Zero-capacity …",224,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel.",224,[[],["usize",15]]],[11,"capacity","","If the channel is bounded, returns its capacity.",224,[[],[["usize",15],["option",4]]]]],"p":[[3,"Configuration"],[3,"Tasks"],[3,"Views"],[3,"Cli"],[4,"Command"],[13,"Save"],[13,"Load"],[3,"PermissionGroup"],[4,"PliantAction"],[4,"ServerAction"],[4,"DatabaseAction"],[4,"DocumentAction"],[4,"ViewAction"],[4,"TransactionAction"],[4,"PubSubAction"],[4,"KvAction"],[3,"Role"],[8,"Action"],[3,"ActionName"],[4,"ActionNameList"],[8,"Dispatcher"],[4,"Identifier"],[3,"PermissionDenied"],[3,"Statement"],[8,"Connection"],[3,"View"],[4,"QueryKey"],[4,"AccessPolicy"],[8,"ServerConnection"],[3,"Database"],[3,"Header"],[3,"Document"],[3,"Revision"],[3,"Map"],[3,"MappedDocument"],[3,"Serialized"],[3,"MappedValue"],[8,"Key"],[4,"Error"],[8,"View"],[4,"SerializableValue"],[8,"Serialized"],[8,"Schema"],[8,"Collection"],[3,"CollectionName"],[3,"InvalidNameError"],[3,"SchemaName"],[3,"ViewName"],[3,"Transaction"],[3,"Operation"],[4,"Command"],[13,"Insert"],[13,"Update"],[13,"Delete"],[4,"OperationResult"],[13,"DocumentUpdated"],[13,"DocumentDeleted"],[3,"Executed"],[3,"ChangedDocument"],[4,"KeyCheck"],[3,"KeyOperation"],[4,"Command"],[13,"Set"],[13,"Get"],[4,"Output"],[4,"KeyStatus"],[3,"Timestamp"],[8,"Kv"],[3,"Payload"],[4,"Request"],[13,"Database"],[4,"ServerRequest"],[13,"DeleteDatabase"],[4,"DatabaseRequest"],[13,"Get"],[13,"GetMultiple"],[13,"Query"],[13,"Reduce"],[13,"ApplyTransaction"],[13,"ListExecutedTransactions"],[13,"Publish"],[13,"PublishToAll"],[13,"SubscribeTo"],[13,"UnsubscribeFrom"],[13,"UnregisterSubscriber"],[4,"Response"],[4,"ServerResponse"],[13,"DatabaseCreated"],[13,"DatabaseDeleted"],[4,"DatabaseResponse"],[13,"SubscriberCreated"],[13,"MessageReceived"],[3,"MappedDocument"],[4,"Error"],[8,"Builder"],[8,"PrivateKey"],[8,"KeyPair"],[3,"Certificate"],[4,"CertificateError"],[3,"PrivateKey"],[3,"Builder"],[4,"Connect"],[3,"Connection"],[3,"Connecting"],[4,"Stream"],[4,"Incoming"],[4,"Receiver"],[4,"Sender"],[4,"ErrorKind"],[4,"ConnectError"],[4,"ConnectionError"],[4,"ReadError"],[4,"WriteError"],[4,"Error"],[4,"ParseError"],[4,"X509Error"],[4,"Err"],[4,"Store"],[8,"PubSub"],[8,"Subscriber"],[4,"Error"],[13,"SchemaMismatch"],[13,"UniqueKeyViolation"],[3,"Basic"],[3,"Unique"],[3,"TestDirectory"],[4,"HarnessTest"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"Message"],[4,"SelectError"],[3,"SendError"],[4,"TrySendError"],[4,"SendTimeoutError"],[4,"RecvError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[4,"Error"],[3,"Relay"],[3,"Subscriber"],[3,"Database"],[3,"Storage"],[3,"ByName"],[3,"ByName"],[3,"Permissions"],[3,"ResourceName"],[3,"Collection"],[3,"Authority"],[3,"Name"],[3,"Schematic"],[3,"Builder"],[3,"Namespaced"],[3,"Builder"],[3,"KeyPair"],[3,"CertificateChain"],[3,"AlreadyClosed"],[3,"ResolveError"],[3,"Builder"],[3,"Connecting"],[3,"Connection"],[3,"Endpoint"],[3,"Incoming"],[3,"Receiver"],[3,"Sender"],[3,"Certificate"],[3,"CertificateChain"],[3,"KeyPair"],[3,"PrivateKey"],[3,"BasicCount"],[3,"BasicByParentId"],[3,"BasicByCategory"],[3,"BasicByBrokenParentId"],[3,"BasicSchema"],[3,"UniqueValue"],[3,"BasicCollectionWithNoViews"],[3,"BasicCollectionWithOnlyBrokenParentId"],[3,"UnassociatedCollection"],[3,"TimingTest"],[3,"Subscriber"],[3,"Selector"],[3,"SendFut"],[3,"SendSink"],[3,"RecvFut"],[3,"RecvStream"],[3,"Sender"],[3,"Receiver"],[3,"Iter"],[3,"TryIter"],[3,"Drain"],[3,"IntoIter"]]},\
"pliantdb_macros":{"doc":"Macros <code>PliantDb</code>.","i":[[24,"Action","pliantdb_macros","Derives the <code>pliantdb_core::permissions::Action</code> trait.",null,null]],"p":[]},\
"pliantdb_server":{"doc":"The <code>PliantDb</code> Server.","i":[[0,"cli","pliantdb_server","Command-line interface for the server.",null,null],[0,"certificate","pliantdb_server::cli","Command-line interface for managing the root certificate.",null,null],[4,"Command","pliantdb_server::cli::certificate","Command to manage the server\'s certificates.",null,null],[13,"InstallSelfSigned","","Installs a self-signed certificate into the server. The …",0,null],[12,"server_name","pliantdb_server::cli::certificate::Command","The name of the server. If this server has a DNS name, …",1,null],[12,"overwrite","","If an existing certificate exists, an error will be …",1,null],[13,"Install","pliantdb_server::cli::certificate","Installs a X.509 certificate and associated private key …",0,null],[12,"private_key","pliantdb_server::cli::certificate::Command","A private key used to generate <code>certificate</code> in binary DER …",2,null],[12,"certificate","","The X.509 certificate in binary DER format.",2,null],[11,"execute","pliantdb_server::cli::certificate","Executes the command.",0,[[["server",3]]]],[0,"serve","pliantdb_server::cli","Command-line interface for hosting a server.",null,null],[3,"Serve","pliantdb_server::cli::serve","Execute the server",null,null],[12,"listen_on","","The bind address and port. Defaults to 5645",3,null],[11,"execute","","Starts the server.",3,[[["server",3]]]],[3,"Cli","pliantdb_server::cli","Command-line interface for <code>pliantdb server</code>.",null,null],[12,"server_data_directory","","The path to the directory where the server should store …",4,null],[12,"subcommand","","The command to execute.",4,null],[4,"Command","","Available commands for <code>pliantdb server</code>.",null,null],[13,"Certificate","","Manage the server\'s root certificate.",5,null],[13,"Serve","","Execute the server.",5,null],[11,"execute","","Executes the command.",5,[[["fn",8],["path",3],["send",8]]]],[0,"test_util","pliantdb_server","",null,null],[17,"BASIC_SERVER_NAME","pliantdb_server::test_util","",null,null],[5,"initialize_basic_server","","",null,[[["path",3]]]],[3,"Configuration","pliantdb_server","Configuration options for <code>Server</code>",null,null],[12,"request_workers","","Number of simultaneous requests to be processed. Default …",6,null],[12,"storage","","Configuration options for individual databases.",6,null],[12,"default_permissions","","The permissions granted to all connections to this server.",6,null],[4,"Error","","An error occurred while interacting with a <code>Server</code>.",null,null],[13,"Transport","","An error occurred from the QUIC transport layer.",7,null],[13,"Websocket","","An error occurred from the Websocket transport layer.",7,null],[13,"Io","","An error occurred from IO",7,null],[13,"Request","","An error occurred while processing a request",7,null],[13,"Core","","An error occurred from within the schema.",7,null],[13,"Database","","An error occurred while interacting with a local database.",7,null],[3,"Server","","A <code>PliantDb</code> server.",null,null],[11,"from","pliantdb_server::cli::certificate","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","pliantdb_server::cli::serve","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","pliantdb_server::cli","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","pliantdb_server","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["error",3]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["invalidnameerror",3]]]],[11,"from","","",7,[[["error",6]]]],[11,"from","","",7,[[["certificatechain",3]]]],[11,"from","","",7,[[["receiver",4]]]],[11,"from","","",7,[[["connecting",3]]]],[11,"from","","",7,[[["privatekey",3]]]],[11,"from","","",7,[[["keypair",3]]]],[11,"from","","",7,[[["connection",3]]]],[11,"from","","",7,[[["incoming",4]]]],[11,"from","","",7,[[["alreadyclosed",3]]]],[11,"clone","","",8,[[],["server",3]]],[11,"default","","",6,[[]]],[11,"deref","","",8,[[]]],[11,"fmt","pliantdb_server::cli::certificate","",0,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_server::cli::serve","",3,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_server::cli","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_server","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"create_database_with_schema","","",8,[[["schemaname",3],["str",15]],[["pin",3],["box",3]]]],[11,"delete_database","","",8,[[["str",15]],[["pin",3],["box",3]]]],[11,"list_databases","","",8,[[],[["box",3],["pin",3]]]],[11,"list_available_schemas","","",8,[[],[["pin",3],["box",3]]]],[11,"clap","pliantdb_server::cli::certificate","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"clap","pliantdb_server::cli::serve","",3,[[],["app",3]]],[11,"from_clap","","",3,[[["argmatches",3]]]],[11,"clap","pliantdb_server::cli","",4,[[],["app",3]]],[11,"from_clap","","",4,[[["argmatches",3]]]],[11,"clap","","",5,[[],["app",3]]],[11,"from_clap","","",5,[[["argmatches",3]]]],[11,"augment_clap","pliantdb_server::cli::certificate","",0,[[["app",3]],["app",3]]],[11,"from_subcommand","","",0,[[],["option",4]]],[11,"is_subcommand","","",0,[[],["bool",15]]],[11,"augment_clap","pliantdb_server::cli::serve","",3,[[["app",3]],["app",3]]],[11,"is_subcommand","","",3,[[],["bool",15]]],[11,"augment_clap","pliantdb_server::cli","",4,[[["app",3]],["app",3]]],[11,"is_subcommand","","",4,[[],["bool",15]]],[11,"augment_clap","","",5,[[["app",3]],["app",3]]],[11,"from_subcommand","","",5,[[],["option",4]]],[11,"is_subcommand","","",5,[[],["bool",15]]],[11,"open","pliantdb_server","Opens a server using <code>directory</code> for storage.",8,[[["path",3],["configuration",3]]]],[11,"database","","Retrieves a database. This function only verifies that …",8,[[["str",15]]]],[11,"install_self_signed_certificate","","Installs an X.509 certificate used for general purpose …",8,[[["bool",15],["str",15]]]],[11,"install_certificate","","Installs an X.509 certificate used for general purpose …",8,[[["privatekey",3],["certificate",3]]]],[11,"certificate","","Returns the current certificate.",8,[[]]],[11,"listen_on","","Listens for incoming client connections. Does not return …",8,[[["u16",15]]]],[11,"listen_for_websockets_on","","Listens for <code>WebSocket</code> traffic on <code>port</code>.",8,[[["send",8],["tosocketaddrs",8],["sync",8]]]],[11,"shutdown","","Shuts the server down. If a <code>timeout</code> is provided, the …",8,[[["duration",3],["option",4]]]]],"p":[[4,"Command"],[13,"InstallSelfSigned"],[13,"Install"],[3,"Serve"],[3,"Cli"],[4,"Command"],[3,"Configuration"],[4,"Error"],[3,"Server"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);
var searchIndex = JSON.parse('{\
"circulate":{"doc":"Lightweight async <code>PubSub</code> framework.","i":[[3,"Message","circulate","A <code>PubSub</code> message.",null,null],[12,"topic","","The topic of the message.",0,null],[12,"payload","","The payload of the message.",0,null],[11,"new","","Creates a new message.",0,[[["string",3],["into",8]],[["error",3],["result",4]]]],[11,"payload","","Deserialize the payload as <code>P</code> using CBOR.",0,[[],[["deserialize",8],["error",3],["result",4]]]],[3,"Relay","","Manages subscriptions and notifications for <code>PubSub</code>.",null,null],[11,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",1,[[]]],[11,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",1,[[["string",3],["into",8],["send",8]]]],[11,"publish_message","","Publishes a message to all subscribers of its topic.",1,[[["message",3]]]],[3,"Subscriber","","A subscriber for [<code>Message</code>]s published to subscribed …",null,null],[11,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",2,[[["string",3],["into",8],["send",8]]]],[11,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",2,[[["str",15]]]],[11,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",2,[[],["receiver",3]]],[11,"id","","Returns the unique ID of the subscriber.",2,[[],["u64",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",0,[[],["message",3]]],[11,"clone","","",1,[[],["relay",3]]],[11,"clone","","",2,[[],["subscriber",3]]],[11,"default","","",1,[[],["relay",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"Message"],[3,"Relay"],[3,"Subscriber"]]},\
"pliantdb":{"doc":"A programmable document database inspired by <code>CouchDB</code> …","i":[[0,"cli","pliantdb","<code>PliantDB</code> command line tools.",null,null],[4,"Command","pliantdb::cli","The command line interface for <code>pliantdb</code>.",null,null],[13,"LocalBackup","","Back up or restore a local database",0,null],[13,"Server","","Execute a <code>PliantDB</code> server command.",0,null],[11,"execute","","Executes the command.",0,[[["fn",8],["send",8]]]],[3,"Url","pliantdb::client::url","A parsed URL record.",null,null],[3,"ParseOptions","","Full configuration for the URL parser.",null,null],[3,"UrlQuery","","Implementation detail of <code>Url::query_pairs_mut</code>. Typically …",null,null],[5,"parse","pliantdb::client::url::form_urlencoded","Convert a byte string in the …",null,[[],["parse",3]]],[3,"Parse","","The return type of <code>parse()</code>.",null,null],[3,"ParseIntoOwned","","Like <code>Parse</code>, but yields pairs of <code>String</code> instead of pairs …",null,null],[5,"byte_serialize","","The <code>application/x-www-form-urlencoded</code> byte serializer.",null,[[],["byteserialize",3]]],[3,"ByteSerialize","","Return value of <code>byte_serialize()</code>.",null,null],[3,"Serializer","","The <code>application/x-www-form-urlencoded</code> serializer.",null,null],[8,"Target","","",null,null],[10,"as_mut_string","","",1,[[],["string",3]]],[10,"finish","","",1,[[]]],[16,"Finished","","",1,null],[6,"EncodingOverride","","",null,null],[4,"Host","pliantdb::client::url","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as \'.\' dot-separated labels. Non-ASCII …",2,null],[13,"Ipv4","","An IPv4 address. <code>Url::host_str</code> returns the serialization …",2,null],[13,"Ipv6","","An IPv6 address. <code>Url::host_str</code> returns the serialization …",2,null],[3,"OpaqueOrigin","","Opaque identifier for URLs that have file or other schemes",null,null],[4,"Origin","","The origin of an URL",null,null],[13,"Opaque","","A globally unique identifier",3,null],[13,"Tuple","","Consists of the URL\'s scheme, host and port",3,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",4,null],[13,"IdnaError","","",4,null],[13,"InvalidPort","","",4,null],[13,"InvalidIpv4Address","","",4,null],[13,"InvalidIpv6Address","","",4,null],[13,"InvalidDomainCharacter","","",4,null],[13,"RelativeUrlWithoutBase","","",4,null],[13,"RelativeUrlWithCannotBeABaseBase","","",4,null],[13,"SetHostOnCannotBeABaseUrl","","",4,null],[13,"Overflow","","",4,null],[4,"SyntaxViolation","","Non-fatal syntax violations that can occur during parsing.",null,null],[13,"Backslash","","",5,null],[13,"C0SpaceIgnored","","",5,null],[13,"EmbeddedCredentials","","",5,null],[13,"ExpectedDoubleSlash","","",5,null],[13,"ExpectedFileDoubleSlash","","",5,null],[13,"FileWithHostAndWindowsDrive","","",5,null],[13,"NonUrlCodePoint","","",5,null],[13,"NullInFragment","","",5,null],[13,"PercentDecode","","",5,null],[13,"TabOrNewlineIgnored","","",5,null],[13,"UnencodedAtSign","","",5,null],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is …",null,null],[4,"Position","","Indicates a position within a URL based on its components.",null,null],[13,"BeforeScheme","","",6,null],[13,"AfterScheme","","",6,null],[13,"BeforeUsername","","",6,null],[13,"AfterUsername","","",6,null],[13,"BeforePassword","","",6,null],[13,"AfterPassword","","",6,null],[13,"BeforeHost","","",6,null],[13,"AfterHost","","",6,null],[13,"BeforePort","","",6,null],[13,"AfterPort","","",6,null],[13,"BeforePath","","",6,null],[13,"AfterPath","","",6,null],[13,"BeforeQuery","","",6,null],[13,"AfterQuery","","",6,null],[13,"BeforeFragment","","",6,null],[13,"AfterFragment","","",6,null],[6,"EncodingOverride","","",null,null],[3,"Client","pliantdb::client","Client for connecting to a <code>PliantDB</code> server.",null,null],[3,"RemoteDatabase","","A database on a remote server.",null,null],[4,"Error","","Errors related to working with <code>Client</code>",null,null],[13,"Transport","","An error occurred from the QUIC transport layer.",7,null],[13,"WebSocket","","An error occurred from the WebSocket transport layer.",7,null],[13,"Network","","An error occurred from networking.",7,null],[13,"InvalidUrl","","An invalid Url was provided.",7,null],[13,"Disconnected","","The connection was interrupted.",7,null],[13,"Core","","The connection was interrupted.",7,null],[0,"connection","pliantdb::core","Types for interacting with a database.",null,null],[8,"Connection","pliantdb::core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",8,[[],["collection",3]]],[11,"insert","","Inserts a newly created document into the connected […",8,[[["vec",3],["global",3],["u8",15]],[["pin",3],["box",3]]]],[11,"update","","Updates an existing document in the connected […",8,[[["document",3]],[["pin",3],["box",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",8,[[["u64",15]],[["box",3],["pin",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",8,[[],[["box",3],["pin",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",8,[[["document",3]],[["pin",3],["box",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",8,[[],["view",3]]],[10,"query","","Queries for view entries matching [<code>View</code>].",8,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",8,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",8,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",8,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",8,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",8,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",8,[[],[["box",3],["pin",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",9,null],[12,"access_policy","","The view\'s data access policy. The default value is […",9,null],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",10,null],[13,"Range","","Matches all entires with keys in the range provided.",10,null],[13,"Multiple","","Matches all entries that have keys that are included in …",10,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",11,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",11,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",11,null],[0,"document","pliantdb::core","Types for interacting with <code>Document</code>s.",null,null],[3,"Header","pliantdb::core::document","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",12,null],[12,"revision","","The revision of the stored document.",12,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",13,null],[12,"header","","The header of the document, which contains the id and …",13,null],[12,"contents","","The serialized bytes of the stored item.",13,null],[3,"Revision","","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",14,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",14,null],[0,"limits","pliantdb::core","Limits used within <code>PliantDB</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb::core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"networking","pliantdb::core","Types for networked communications.",null,null],[3,"Payload","pliantdb::core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",15,null],[12,"wrapped","","The wrapped payload.",15,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",16,null],[13,"Database","","A database-related request.",16,null],[12,"database","pliantdb::core::networking::Request","The name of the database.",17,null],[12,"request","","The request made to the database.",17,null],[4,"ServerRequest","pliantdb::core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",18,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",18,null],[12,"name","pliantdb::core::networking::ServerRequest","The name of the database to delete.",19,null],[13,"ListDatabases","pliantdb::core::networking","Lists all databases.",18,null],[13,"ListAvailableSchemas","","Lists available schemas.",18,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",20,null],[12,"collection","pliantdb::core::networking::DatabaseRequest","The collection of the document.",21,null],[12,"id","","The id of the document.",21,null],[13,"GetMultiple","pliantdb::core::networking","Retrieve multiple documents.",20,null],[12,"collection","pliantdb::core::networking::DatabaseRequest","The collection of the documents.",22,null],[12,"ids","","The ids of the documents.",22,null],[13,"Query","pliantdb::core::networking","Queries a view.",20,null],[12,"view","pliantdb::core::networking::DatabaseRequest","The name of the view.",23,null],[12,"key","","The filter for the view.",23,null],[12,"access_policy","","The access policy for the query.",23,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",23,null],[13,"Reduce","pliantdb::core::networking","Reduces a view.",20,null],[12,"view","pliantdb::core::networking::DatabaseRequest","The name of the view.",24,null],[12,"key","","The filter for the view.",24,null],[12,"access_policy","","The access policy for the query.",24,null],[12,"grouped","","Whether to return a single value or values grouped by …",24,null],[13,"ApplyTransaction","pliantdb::core::networking","Applies a transaction.",20,null],[12,"transaction","pliantdb::core::networking::DatabaseRequest","The trasnaction to apply.",25,null],[13,"ListExecutedTransactions","pliantdb::core::networking","Lists executed transactions.",20,null],[12,"starting_id","pliantdb::core::networking::DatabaseRequest","The starting transaction id.",26,null],[12,"result_limit","","The maximum number of results.",26,null],[13,"LastTransactionId","pliantdb::core::networking","Queries the last transaction id.",20,null],[13,"CreateSubscriber","","Creates a <code>PubSub</code> <code>Subscriber</code>",20,null],[13,"Publish","","Publishes a <code>PubSub</code> message.",20,null],[13,"SubscribeTo","","Subscribes <code>subscriber_id</code> to messages for <code>topic</code>.",20,null],[12,"subscriber_id","pliantdb::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",27,null],[12,"topic","","The topic to subscribe to.",27,null],[13,"UnsubscribeFrom","pliantdb::core::networking","Unsubscribes <code>subscriber_id</code> from messages for <code>topic</code>.",20,null],[12,"subscriber_id","pliantdb::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",28,null],[12,"topic","","The topic to unsubscribe from.",28,null],[13,"UnregisterSubscriber","pliantdb::core::networking","Unregisters the subscriber.",20,null],[12,"subscriber_id","pliantdb::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",29,null],[4,"Response","pliantdb::core::networking","A response from a server.",null,null],[13,"Ok","","A request succeded but provided no output.",30,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",30,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",30,null],[13,"Error","","An error occurred processing a request.",30,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",31,null],[12,"name","pliantdb::core::networking::ServerResponse","The name of the database to create.",32,null],[13,"DatabaseDeleted","pliantdb::core::networking","A database with <code>name</code> was successfully removed.",31,null],[12,"name","pliantdb::core::networking::ServerResponse","The name of the database to remove.",33,null],[13,"Databases","pliantdb::core::networking","A list of available databases.",31,null],[13,"AvailableSchemas","","A list of availble schemas.",31,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",34,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",34,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",34,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",34,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",34,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",34,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",34,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",34,null],[13,"SubscriberCreated","","A new <code>PubSub</code> subscriber was created.",34,null],[12,"subscriber_id","pliantdb::core::networking::DatabaseResponse","The unique ID of the subscriber.",35,null],[13,"MessageReceived","pliantdb::core::networking","A PubSub message was received.",34,null],[12,"subscriber_id","pliantdb::core::networking::DatabaseResponse","The ID of the subscriber receiving the message.",36,null],[12,"message","","The message received.",36,null],[3,"MappedDocument","pliantdb::core::networking","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",37,null],[12,"value","","The serialized value.",37,null],[12,"source","","The source document.",37,null],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",38,null],[12,"schema","","The schema defining the database.",38,null],[8,"ServerConnection","","Functions for interacting with a <code>PliantDB</code> server.",null,null],[10,"create_database","","Creates a database named <code>name</code> using the [<code>SchemaId</code>] <code>schema</code>.",39,[[["str",15],["schemaid",3]],[["pin",3],["box",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",39,[[["str",15]],[["pin",3],["box",3]]]],[10,"list_databases","","Lists the databases on this server.",39,[[],[["pin",3],["box",3]]]],[10,"list_available_schemas","","Lists the [<code>SchemaId</code>]s on this server.",39,[[],[["pin",3],["box",3]]]],[4,"Error","","A networking error.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See […",40,null],[13,"DatabaseNotFound","","The database name given was not found.",40,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",40,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",40,null],[13,"Disconnected","","The connection was interrupted.",40,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",40,null],[12,"database_name","pliantdb::core::networking::Error","The name of the database being accessed.",41,null],[12,"schema","","The schema provided for the database.",41,null],[12,"stored_schema","","The schema stored for the database.",41,null],[13,"SchemaAlreadyRegistered","pliantdb::core::networking","The [<code>SchemaId</code>] returned has already been registered with …",40,null],[13,"SchemaNotRegistered","","The [<code>SchemaId</code>] requested was not registered with this …",40,null],[0,"error","pliantdb::core::networking::fabruic","<code>Error</code> for this [<code>crate</code>].",null,null],[6,"Result","pliantdb::core::networking::fabruic::error","<code>Result</code> type for this [<code>crate</code>].",null,null],[4,"Error","","<code>Error</code> for this [<code>crate</code>].",null,null],[13,"ParseCertificate","","Failed to parse the given certificate.",42,null],[12,"certificate","pliantdb::core::networking::fabruic::error::Error","The certificate passed to <code>from_der</code>.",43,null],[12,"error","","The parsing error.",43,null],[13,"DanglingCertificate","pliantdb::core::networking::fabruic::error","Data passed to generate <code>Certificate</code> with <code>from_der</code> found …",42,null],[12,"certificate","pliantdb::core::networking::fabruic::error::Error","The certificate passed to <code>from_der</code>.",44,null],[12,"dangling","","The dangling bytes.",44,null],[13,"ExpiredCertificate","pliantdb::core::networking::fabruic::error","<code>Certificate</code> has expired.",42,null],[13,"DomainCertificate","","<code>Certificate</code> is missing a domain name.",42,null],[13,"ParsePrivateKey","","Failed to parse the given private key.",42,null],[13,"ParseAddress","","Parsing a <code>SocketAddr</code> from a [<code>str</code>] failed.",42,null],[13,"Certificate","","Returned by <code>Endpoint</code> when failing to parse the given …",42,null],[13,"PrivateKey","","Returned by <code>Endpoint</code> when failing to parse the given …",42,null],[13,"InvalidKeyPair","","Returned by <code>Endpoint</code> when failing to pair the given …",42,null],[13,"InvalidCertificate","","Returned by <code>Endpoint</code> when failing to add the given …",42,null],[13,"BindSocket","","Returned by <code>Endpoint</code> when failing to bind the socket on …",42,null],[13,"Resolve","","Failed to resolve domain to IP address.",42,null],[13,"NoIp","","Found no IP address for that domain.",42,null],[13,"LocalAddress","","Returned by <code>Endpoint::local_address</code> when failing to …",42,null],[13,"AlreadyClosed","","Attempting to close something that is already closed.",42,null],[13,"ConnectConfig","","Returned by <code>Endpoint::connect</code> if configuration needed to …",42,null],[13,"Connecting","","Returned by <code>Connecting::accept</code> if connecting to the peer …",42,null],[13,"ReceiveStream","","Returned by <code>Connection</code> <code>Stream</code> when receiving a new stream …",42,null],[13,"OpenStream","","Returned by <code>Connection::open_stream</code> if opening a stream …",42,null],[13,"Write","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to write into …",42,null],[13,"Finish","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to finish a …",42,null],[13,"Send","","Returned by <code>Sender::send</code> if the stream was closed by …",42,null],[13,"Serialize","","Returned by <code>Sender::send</code> if <code>serialization</code> failed.",42,null],[13,"Read","","Returned by <code>Receiver::close</code> if <code>Receiver</code> failed to read …",42,null],[13,"Deserialize","","Returned by <code>Receiver::finish</code> if <code>Receiver</code> failed to …",42,null],[13,"NoType","","Returned by <code>Incoming::type</code> if the peer closed the stream …",42,null],[4,"ParseCertificate","","Possible certificate parsing errors.",null,null],[13,"WebPki","","<code>Error</code> returned by [<code>webpki</code>].",45,null],[13,"X509","","<code>Error</code> returned by [<code>x509_parser</code>].",45,null],[3,"IoError","","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…",null,null],[3,"AddrParseError","","An error which can be returned when parsing an IP address …",null,null],[4,"ErrorKind","","The kind of error that can be produced during a …",null,null],[13,"Io","","If the error stems from the reader/writer that is being …",46,null],[13,"InvalidUtf8Encoding","","Returned if the deserializer attempts to deserialize a …",46,null],[13,"InvalidBoolEncoding","","Returned if the deserializer attempts to deserialize a …",46,null],[13,"InvalidCharEncoding","","Returned if the deserializer attempts to deserialize a …",46,null],[13,"InvalidTagEncoding","","Returned if the deserializer attempts to deserialize the …",46,null],[13,"DeserializeAnyNotSupported","","Serde has a deserialize_any method that lets the format …",46,null],[13,"SizeLimit","","If (de)serializing a message takes more than the provided …",46,null],[13,"SequenceMustHaveLength","","Bincode can not encode sequences of unknown length (like …",46,null],[13,"Custom","","A custom error message from Serde.",46,null],[4,"ConnectError","","Errors in the parameters being used to create a new …",null,null],[13,"EndpointStopping","","The endpoint can no longer create new connections",47,null],[13,"TooManyConnections","","The number of active connections on the local endpoint is …",47,null],[13,"InvalidDnsName","","The domain name supplied was malformed",47,null],[13,"Config","","The transport configuration was invalid",47,null],[13,"InvalidRemoteAddress","","The remote [<code>SocketAddr</code>] supplied was malformed",47,null],[4,"ConnectionError","","Reasons why a connection might be lost",null,null],[13,"VersionMismatch","","The peer doesn\'t implement any supported version",48,null],[13,"TransportError","","The peer violated the QUIC specification as understood by …",48,null],[13,"ConnectionClosed","","The peer\'s QUIC stack aborted the connection automatically",48,null],[13,"ApplicationClosed","","The peer closed the connection",48,null],[13,"Reset","","The peer is unable to continue processing this …",48,null],[13,"TimedOut","","Communication with the peer has lapsed for longer than …",48,null],[13,"LocallyClosed","","The local application closed the connection",48,null],[4,"EndpointError","","Errors that can occur during the construction of an …",null,null],[13,"Socket","","An error during setup of the underlying UDP socket.",49,null],[3,"ParseError","","Errors encountered while parsing a TLS certificate or …",null,null],[4,"ReadError","","Errors that arise from reading from a stream.",null,null],[13,"Reset","","The peer abandoned transmitting data on this stream.",50,null],[13,"ConnectionClosed","","The connection was closed.",50,null],[13,"UnknownStream","","The stream has already been stopped, finished, or reset",50,null],[13,"IllegalOrderedRead","","Attempted an ordered read following an unordered read",50,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",50,null],[4,"WriteError","","Errors that arise from writing to a stream",null,null],[13,"Stopped","","The peer is no longer accepting data on this stream.",51,null],[13,"ConnectionClosed","","The connection was closed.",51,null],[13,"UnknownStream","","The stream has already been finished or reset",51,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",51,null],[3,"KeyRejected","","An error parsing or validating a key.",null,null],[4,"TLSError","","rustls reports protocol errors using this type.",null,null],[13,"InappropriateMessage","","We received a TLS message that isn\'t valid right now. …",52,null],[12,"expect_types","pliantdb::core::networking::fabruic::error::TLSError","Which types we expected",53,null],[12,"got_type","","What type we received",53,null],[13,"InappropriateHandshakeMessage","pliantdb::core::networking::fabruic::error","We received a TLS handshake message that isn\'t valid …",52,null],[12,"expect_types","pliantdb::core::networking::fabruic::error::TLSError","Which handshake type we expected",54,null],[12,"got_type","","What handshake type we received",54,null],[13,"CorruptMessage","pliantdb::core::networking::fabruic::error","The peer sent us a syntactically incorrect TLS message.",52,null],[13,"CorruptMessagePayload","","The peer sent us a TLS message with invalid contents.",52,null],[13,"NoCertificatesPresented","","The peer didn\'t give us any certificates.",52,null],[13,"DecryptError","","We couldn\'t decrypt a message.  This is invariably fatal.",52,null],[13,"PeerIncompatibleError","","The peer doesn\'t support a protocol version/feature we …",52,null],[13,"PeerMisbehavedError","","The peer deviated from the standard TLS protocol. The …",52,null],[13,"AlertReceived","","We received a fatal alert.  This means the peer is …",52,null],[13,"WebPKIError","","The presented certificate chain is invalid.",52,null],[13,"InvalidSCT","","The presented SCT(s) were invalid.",52,null],[13,"General","","A catch-all error for unlikely errors.",52,null],[13,"FailedToGetCurrentTime","","We failed to figure out what time it currently is.",52,null],[13,"HandshakeNotComplete","","This function doesn\'t work until the TLS handshake is …",52,null],[13,"PeerSentOversizedRecord","","The peer sent an oversized record/fragment.",52,null],[13,"NoApplicationProtocol","","An incoming connection did not support any known …",52,null],[3,"ResolveError","","The error type for errors that get returned in the crate",null,null],[4,"WebPkiError","","An error that occurs during certificate validation or …",null,null],[13,"BadDER","","The encoding of some ASN.1 DER-encoded item is invalid.",55,null],[13,"BadDERTime","","The encoding of an ASN.1 DER-encoded time is invalid.",55,null],[13,"CAUsedAsEndEntity","","A CA certificate is veing used as an end-entity …",55,null],[13,"CertExpired","","The certificate is expired; i.e. the time it is being …",55,null],[13,"CertNotValidForName","","The certificate is not valid for the name it is being …",55,null],[13,"CertNotValidYet","","The certificate is not valid yet; i.e. the time it is …",55,null],[13,"EndEntityUsedAsCA","","An end-entity certificate is being used as a CA …",55,null],[13,"ExtensionValueInvalid","","An X.509 extension is invalid.",55,null],[13,"InvalidCertValidity","","The certificate validity period (notBefore, notAfter) is …",55,null],[13,"InvalidSignatureForPublicKey","","The signature is invalid for the given public key.",55,null],[13,"NameConstraintViolation","","The certificate violates one or more name constraints.",55,null],[13,"PathLenConstraintViolated","","The certificate violates one or more path length …",55,null],[13,"SignatureAlgorithmMismatch","","The algorithm in the TBSCertificate \\\"signature\\\" field of …",55,null],[13,"RequiredEKUNotFound","","The certificate is not valid for the Extended Key Usage …",55,null],[13,"UnknownIssuer","","A valid issuer for the certificate could not be found.",55,null],[13,"UnsupportedCertVersion","","The certificate is not a v3 X.509 certificate.",55,null],[13,"UnsupportedCriticalExtension","","The certificate contains an unsupported critical …",55,null],[13,"UnsupportedSignatureAlgorithmForPublicKey","","The signature\'s algorithm does not match the algorithm of …",55,null],[13,"UnsupportedSignatureAlgorithm","","The signature algorithm for a signature is not in the set …",55,null],[4,"X509Error","","An error that can occur while parsing or validating a …",null,null],[13,"Generic","","",56,null],[13,"InvalidVersion","","",56,null],[13,"InvalidSerial","","",56,null],[13,"InvalidAlgorithmIdentifier","","",56,null],[13,"InvalidX509Name","","",56,null],[13,"InvalidDate","","",56,null],[13,"InvalidSPKI","","",56,null],[13,"InvalidSubjectUID","","",56,null],[13,"InvalidIssuerUID","","",56,null],[13,"InvalidExtensions","","",56,null],[13,"InvalidAttributes","","",56,null],[13,"DuplicateExtensions","","",56,null],[13,"DuplicateAttributes","","",56,null],[13,"InvalidSignatureValue","","",56,null],[13,"InvalidTbsCertificate","","",56,null],[13,"InvalidUserCertificate","","",56,null],[13,"InvalidCertificate","","Top-level certificate structure is invalid",56,null],[13,"SignatureVerificationError","","",56,null],[13,"SignatureUnsupportedAlgorithm","","",56,null],[13,"Der","","",56,null],[13,"NomError","","",56,null],[4,"Err","","The <code>Err</code> enum indicates the parser was not successful",null,null],[13,"Incomplete","","There was not enough data",57,null],[13,"Error","","The parser had an error (recoverable)",57,null],[13,"Failure","","The parser had an unrecoverable error: we got to the right…",57,null],[5,"generate_self_signed","pliantdb::core::networking::fabruic","Generate a self signed certificate.",null,[[]]],[3,"Certificate","","A public Certificate. You can distribute it freely to …",null,null],[8,"Dangerous","","Gives read access to the [<code>PrivateKey</code>].",null,null],[10,"as_ref","","Returns a <code>&[u8]</code> to the [<code>PrivateKey</code>].",58,[[]]],[10,"into","","Returns a [<code>Vec<u8></code>] to the [<code>PrivateKey</code>].",58,[[],[["vec",3],["global",3],["u8",15]]]],[10,"serialize","","Serialize with [<code>serde</code>].",58,[[],["result",4]]],[3,"PrivateKey","","A private Key.",null,null],[4,"Error","","<code>Error</code> for this [<code>crate</code>].",null,null],[13,"ParseCertificate","","Failed to parse the given certificate.",42,null],[12,"certificate","pliantdb::core::networking::fabruic::Error","The certificate passed to <code>from_der</code>.",43,null],[12,"error","","The parsing error.",43,null],[13,"DanglingCertificate","pliantdb::core::networking::fabruic","Data passed to generate <code>Certificate</code> with <code>from_der</code> found …",42,null],[12,"certificate","pliantdb::core::networking::fabruic::Error","The certificate passed to <code>from_der</code>.",44,null],[12,"dangling","","The dangling bytes.",44,null],[13,"ExpiredCertificate","pliantdb::core::networking::fabruic","<code>Certificate</code> has expired.",42,null],[13,"DomainCertificate","","<code>Certificate</code> is missing a domain name.",42,null],[13,"ParsePrivateKey","","Failed to parse the given private key.",42,null],[13,"ParseAddress","","Parsing a <code>SocketAddr</code> from a [<code>str</code>] failed.",42,null],[13,"Certificate","","Returned by <code>Endpoint</code> when failing to parse the given …",42,null],[13,"PrivateKey","","Returned by <code>Endpoint</code> when failing to parse the given …",42,null],[13,"InvalidKeyPair","","Returned by <code>Endpoint</code> when failing to pair the given …",42,null],[13,"InvalidCertificate","","Returned by <code>Endpoint</code> when failing to add the given …",42,null],[13,"BindSocket","","Returned by <code>Endpoint</code> when failing to bind the socket on …",42,null],[13,"Resolve","","Failed to resolve domain to IP address.",42,null],[13,"NoIp","","Found no IP address for that domain.",42,null],[13,"LocalAddress","","Returned by <code>Endpoint::local_address</code> when failing to …",42,null],[13,"AlreadyClosed","","Attempting to close something that is already closed.",42,null],[13,"ConnectConfig","","Returned by <code>Endpoint::connect</code> if configuration needed to …",42,null],[13,"Connecting","","Returned by <code>Connecting::accept</code> if connecting to the peer …",42,null],[13,"ReceiveStream","","Returned by <code>Connection</code> <code>Stream</code> when receiving a new stream …",42,null],[13,"OpenStream","","Returned by <code>Connection::open_stream</code> if opening a stream …",42,null],[13,"Write","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to write into …",42,null],[13,"Finish","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to finish a …",42,null],[13,"Send","","Returned by <code>Sender::send</code> if the stream was closed by …",42,null],[13,"Serialize","","Returned by <code>Sender::send</code> if <code>serialization</code> failed.",42,null],[13,"Read","","Returned by <code>Receiver::close</code> if <code>Receiver</code> failed to read …",42,null],[13,"Deserialize","","Returned by <code>Receiver::finish</code> if <code>Receiver</code> failed to …",42,null],[13,"NoType","","Returned by <code>Incoming::type</code> if the peer closed the stream …",42,null],[6,"Result","","<code>Result</code> type for this [<code>crate</code>].",null,null],[3,"Builder","","Holding configuration for [<code>Builder</code>] to build [<code>Endpoint</code>].",null,null],[3,"Connecting","","Represent\'s an intermediate state to build a [<code>Connection</code>].",null,null],[3,"Connection","","Represents an open connection. Receives [<code>Incoming</code>] …",null,null],[3,"Endpoint","","Represents a socket using the QUIC protocol to …",null,null],[3,"Incoming","","An intermediate state to define which type to accept in …",null,null],[3,"Receiver","","Used to receive data from a stream.",null,null],[3,"Sender","","Used to send data to a stream.",null,null],[0,"schema","pliantdb::core","Types for defining database schema.",null,null],[0,"view","pliantdb::core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb::core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb::core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",59,null],[12,"key","","The key used to index the View.",59,null],[12,"value","","An associated value stored in the view.",59,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",60,null],[12,"key","","The key used to index the View.",60,null],[12,"value","","An associated value stored in the view.",60,null],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",61,null],[12,"key","","The key used to index the View.",61,null],[12,"value","","An associated value stored in the view.",61,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",62,null],[12,"value","","The value generated by the <code>View</code>",62,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",63,[[],[["error",3],["result",4],["cow",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",63,[[],[["error",3],["result",4]]]],[8,"EnumKey","","Adds <code>Key</code> support to an enum. Requires implementing …",null,null],[4,"Error","pliantdb::core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",64,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",64,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",64,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",65,null],[16,"Key","","The key for this view.",65,null],[16,"Value","","An associated type that can be stored with each entry in …",65,null],[10,"version","","The version of the view. Changing this value will cause …",65,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",65,[[],[["cow",4],["str",15]]]],[10,"map","","The map function for this view. This function is …",65,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",65,[[["bool",15]],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",66,null],[13,"Borrowed","","a borrowed value",66,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",67,[[],["collectionid",3]]],[10,"version","","Wraps [<code>View::version</code>]",67,[[],["u64",15]]],[10,"name","","Wraps [<code>View::name</code>]",67,[[],[["cow",4],["str",15]]]],[10,"map","","Wraps [<code>View::map</code>]",67,[[["document",3]],[["option",4],["error",4],["result",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",67,[[["bool",15]],[["vec",3],["result",4],["error",4]]]],[3,"SchemaId","pliantdb::core::schema","The unique Id of a [<code>Schema</code>]. Primarily used to try to …",null,null],[8,"Schema","","Defines a group of collections that are stored into a …",null,null],[10,"schema_id","","Returns the unique [<code>SchemaId</code>] for this schema.",68,[[],["schemaid",3]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",68,[[["schematic",3]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",68,[[],["schematic",3]]],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_id","","The <code>Id</code> of this collection.",69,[[],["collectionid",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",69,[[["schematic",3]]]],[3,"CollectionId","","A unique collection id. Choose collection names that …",null,null],[3,"Schematic","","A collection of defined collections and views.",null,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",63,[[],[["error",3],["result",4],["cow",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",63,[[],[["error",3],["result",4]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",59,null],[12,"key","","The key used to index the View.",59,null],[12,"value","","An associated value stored in the view.",59,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",60,null],[12,"key","","The key used to index the View.",60,null],[12,"value","","An associated value stored in the view.",60,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",62,null],[12,"value","","The value generated by the <code>View</code>",62,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",65,null],[16,"Key","","The key for this view.",65,null],[16,"Value","","An associated type that can be stored with each entry in …",65,null],[10,"version","","The version of the view. Changing this value will cause …",65,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",65,[[],[["cow",4],["str",15]]]],[10,"map","","The map function for this view. This function is …",65,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",65,[[["bool",15]],[["result",4],["error",4]]]],[0,"transaction","pliantdb::core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb::core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",70,null],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",71,null],[12,"command","","The command being performed.",71,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",72,null],[12,"contents","pliantdb::core::transaction::Command","The initial contents of the document.",73,null],[13,"Update","pliantdb::core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",72,null],[12,"header","pliantdb::core::transaction::Command","The current header of the <code>Document</code>.",74,null],[12,"contents","","The new contents to store within the <code>Document</code>.",74,null],[13,"Delete","pliantdb::core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",72,null],[12,"header","pliantdb::core::transaction::Command","The current header of the <code>Document</code>.",75,null],[4,"OperationResult","pliantdb::core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",76,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",76,null],[12,"collection","pliantdb::core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",77,null],[12,"header","","The header of the updated <code>Document</code>.",77,null],[13,"DocumentDeleted","pliantdb::core::transaction","A <code>Document</code> was deleted.",76,null],[12,"collection","pliantdb::core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",78,null],[12,"id","","The id of the deleted <code>Document</code>.",78,null],[3,"Executed","pliantdb::core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",79,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",79,null],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",80,null],[12,"id","","The id of the changed <code>Document</code>.",80,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",80,null],[0,"pubsub","pliantdb::core","Types for Publish/Subscribe (<code>PubSub</code>) messaging.",null,null],[8,"PubSub","pliantdb::core::pubsub","Publishes and Subscribes to messages on topics.",null,null],[16,"Subscriber","","The Subscriber type for this <code>PubSub</code> connection.",81,null],[10,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",81,[[],[["pin",3],["box",3]]]],[10,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",81,[[],[["pin",3],["box",3]]]],[8,"Subscriber","","A subscriber to one or more topics.",null,null],[10,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",82,[[],[["pin",3],["box",3]]]],[10,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",82,[[["str",15]],[["pin",3],["box",3]]]],[10,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",82,[[],["receiver",3]]],[4,"Error","pliantdb::core","an enumeration of errors that this crate can produce",null,null],[13,"Storage","","An error from interacting with local storage.",83,null],[13,"Server","","An error from interacting with a server.",83,null],[13,"Transport","","An error occurred from the QUIC transport layer.",83,null],[13,"Websocket","","An error occurred from the websocket transport layer.",83,null],[13,"Networking","","An error occurred from networking.",83,null],[13,"Io","","An error occurred from IO.",83,null],[13,"Configuration","","An error occurred with the provided configuration options.",83,null],[13,"Client","","An error occurred inside of the client.",83,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",83,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",83,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",83,null],[0,"test_util","","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb::core::test_util","",null,null],[12,"value","","",84,null],[12,"category","","",84,null],[12,"parent_id","","",84,null],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",85,null],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"HarnessTest","","",null,null],[13,"StoreRetrieveUpdate","","",86,null],[13,"NotFound","","",86,null],[13,"Conflict","","",86,null],[13,"BadUpdate","","",86,null],[13,"NoUpdate","","",86,null],[13,"GetMultiple","","",86,null],[13,"ListTransactions","","",86,null],[13,"ViewQuery","","",86,null],[13,"UnassociatedCollection","","",86,null],[13,"ViewUpdate","","",86,null],[13,"ViewAccessPolicies","","",86,null],[13,"PubSubSimple","","",86,null],[13,"PubSubMultipleSubscribers","","",86,null],[13,"PubSubDropAndSend","","",86,null],[13,"PubSubUnsubscribe","","",86,null],[13,"PubSubDropCleanup","","",86,null],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[3,"Message","pliantdb::core::circulate","A <code>PubSub</code> message.",null,null],[12,"topic","","The topic of the message.",87,null],[12,"payload","","The payload of the message.",87,null],[3,"Relay","","Manages subscriptions and notifications for <code>PubSub</code>.",null,null],[3,"Subscriber","","A subscriber for [<code>Message</code>]s published to subscribed …",null,null],[0,"select","pliantdb::core::circulate::flume","Types that permit waiting upon multiple blocking …",null,null],[4,"SelectError","pliantdb::core::circulate::flume::select","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",88,null],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[0,"async","pliantdb::core::circulate::flume","Futures and other types that allow asynchronous …",null,null],[3,"SendFut","pliantdb::core::circulate::flume::async","A future that sends a value into a channel.",null,null],[3,"SendSink","","A sink that allows sending values into a channel.",null,null],[3,"RecvFut","","A future which allows asynchronously receiving a message.",null,null],[3,"RecvStream","","A stream which allows asynchronously receiving messages.",null,null],[3,"SendError","pliantdb::core::circulate::flume","An error that may be emitted when attempting to send a …",null,null],[12,"0","","",89,null],[4,"TrySendError","","An error that may be emitted when attempting to send a …",null,null],[13,"Full","","",90,null],[13,"Disconnected","","",90,null],[4,"SendTimeoutError","","An error that may be emitted when sending a value into a …",null,null],[13,"Timeout","","",91,null],[13,"Disconnected","","",91,null],[4,"RecvError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Disconnected","","",92,null],[4,"TryRecvError","","An error that may be emitted when attempting to fetch a …",null,null],[13,"Empty","","",93,null],[13,"Disconnected","","",93,null],[4,"RecvTimeoutError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",94,null],[13,"Disconnected","","",94,null],[3,"Sender","","A transmitting end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel.",null,null],[3,"Iter","","An iterator over the msgs received from a channel.",null,null],[3,"TryIter","","An non-blocking iterator over the msgs received from a …",null,null],[3,"Drain","","An fixed-sized iterator over the msgs drained from a …",null,null],[3,"IntoIter","","An owned iterator over the msgs received from a channel.",null,null],[5,"unbounded","","Create a channel with no maximum capacity.",null,[[]]],[5,"bounded","","Create a channel with a maximum capacity.",null,[[["usize",15]]]],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[0,"bounds","pliantdb::core::num_traits","",null,null],[8,"Bounded","pliantdb::core::num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",95,[[]]],[10,"max_value","","returns the largest finite number this type can represent",95,[[]]],[0,"cast","pliantdb::core::num_traits","",null,null],[8,"ToPrimitive","pliantdb::core::num_traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",96,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",96,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",96,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",96,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",96,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",96,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",96,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",96,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",96,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",96,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",96,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",96,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",96,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",96,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",97,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",97,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",97,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",97,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",97,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",97,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",97,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",97,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",97,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",97,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",97,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",97,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",97,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",97,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",98,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",99,[[]]],[0,"float","pliantdb::core::num_traits","",null,null],[8,"FloatCore","pliantdb::core::num_traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",100,[[]]],[10,"neg_infinity","","Returns negative infinity.",100,[[]]],[10,"nan","","Returns NaN.",100,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",100,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",100,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",100,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",100,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",100,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",100,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",100,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",100,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",100,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",100,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",100,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",100,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",100,[[]]],[11,"trunc","","Return the integer part of a number.",100,[[]]],[11,"fract","","Returns the fractional part of a number.",100,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",100,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",100,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",100,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",100,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",100,[[]]],[11,"max","","Returns the maximum of the two numbers.",100,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",100,[[]]],[11,"powi","","Raise a number to an integer power.",100,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",100,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",100,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",100,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",101,[[]]],[10,"infinity","","Returns the infinite value.",101,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",101,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",101,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",101,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",101,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",101,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",101,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",101,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",101,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",101,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",101,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",101,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",101,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",101,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",101,[[]]],[10,"trunc","","Return the integer part of a number.",101,[[]]],[10,"fract","","Returns the fractional part of a number.",101,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",101,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",101,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",101,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",101,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",101,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",101,[[]]],[10,"powi","","Raise a number to an integer power.",101,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",101,[[]]],[10,"sqrt","","Take the square root of a number.",101,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",101,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",101,[[]]],[10,"ln","","Returns the natural logarithm of the number.",101,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",101,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",101,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",101,[[]]],[11,"to_degrees","","Converts radians to degrees.",101,[[]]],[11,"to_radians","","Converts degrees to radians.",101,[[]]],[10,"max","","Returns the maximum of the two numbers.",101,[[]]],[10,"min","","Returns the minimum of the two numbers.",101,[[]]],[10,"abs_sub","","The positive difference of two numbers.",101,[[]]],[10,"cbrt","","Take the cubic root of a number.",101,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",101,[[]]],[10,"sin","","Computes the sine of a number (in radians).",101,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",101,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",101,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",101,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",101,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",101,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",101,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",101,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",101,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",101,[[]]],[10,"sinh","","Hyperbolic sine function.",101,[[]]],[10,"cosh","","Hyperbolic cosine function.",101,[[]]],[10,"tanh","","Hyperbolic tangent function.",101,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",101,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",101,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",101,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",101,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",102,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",102,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",102,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",102,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",102,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",102,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",102,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",102,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",102,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",102,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",102,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",102,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",102,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",102,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",102,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",102,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",102,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",102,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",102,[[]]],[0,"identities","pliantdb::core::num_traits","",null,null],[8,"Zero","pliantdb::core::num_traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",103,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",103,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",103,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",104,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",104,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",104,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[0,"int","pliantdb::core::num_traits","",null,null],[8,"PrimInt","pliantdb::core::num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",105,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",105,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",105,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",105,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",105,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",105,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",105,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",105,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",105,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",105,[[["u32",15]]]],[0,"ops","pliantdb::core::num_traits","",null,null],[0,"checked","pliantdb::core::num_traits::ops","",null,null],[8,"CheckedAdd","pliantdb::core::num_traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",106,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",107,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",108,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",109,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",110,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",111,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",112,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",113,[[["u32",15]],["option",4]]],[0,"inv","pliantdb::core::num_traits::ops","",null,null],[8,"Inv","pliantdb::core::num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",114,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",114,[[]]],[0,"mul_add","pliantdb::core::num_traits::ops","",null,null],[8,"MulAdd","pliantdb::core::num_traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",115,null],[10,"mul_add","","Performs the fused multiply-add operation.",115,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",116,[[]]],[0,"overflowing","pliantdb::core::num_traits::ops","",null,null],[8,"OverflowingAdd","pliantdb::core::num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean …",117,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean …",118,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean …",119,[[]]],[0,"saturating","pliantdb::core::num_traits::ops","",null,null],[8,"Saturating","pliantdb::core::num_traits::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",120,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",120,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",121,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",122,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",123,[[]]],[0,"wrapping","pliantdb::core::num_traits::ops","",null,null],[8,"WrappingAdd","pliantdb::core::num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",124,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",125,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",126,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",127,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",128,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",129,[[["u32",15]]]],[0,"pow","pliantdb::core::num_traits","",null,null],[8,"Pow","pliantdb::core::num_traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",130,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",130,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[0,"real","pliantdb::core::num_traits","",null,null],[8,"Real","pliantdb::core::num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can …",131,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",131,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",131,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",131,[[]]],[10,"floor","","Returns the largest integer less than or equal to a …",131,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",131,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",131,[[]]],[10,"trunc","","Return the integer part of a number.",131,[[]]],[10,"fract","","Returns the fractional part of a number.",131,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",131,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",131,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",131,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",131,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",131,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",131,[[]]],[10,"powi","","Raise a number to an integer power.",131,[[["i32",15]]]],[10,"powf","","Raise a number to a real number power.",131,[[]]],[10,"sqrt","","Take the square root of a number.",131,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",131,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",131,[[]]],[10,"ln","","Returns the natural logarithm of the number.",131,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",131,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",131,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",131,[[]]],[10,"to_degrees","","Converts radians to degrees.",131,[[]]],[10,"to_radians","","Converts degrees to radians.",131,[[]]],[10,"max","","Returns the maximum of the two numbers.",131,[[]]],[10,"min","","Returns the minimum of the two numbers.",131,[[]]],[10,"abs_sub","","The positive difference of two numbers.",131,[[]]],[10,"cbrt","","Take the cubic root of a number.",131,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",131,[[]]],[10,"sin","","Computes the sine of a number (in radians).",131,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",131,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",131,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",131,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",131,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",131,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",131,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",131,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",131,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",131,[[]]],[10,"sinh","","Hyperbolic sine function.",131,[[]]],[10,"cosh","","Hyperbolic cosine function.",131,[[]]],[10,"tanh","","Hyperbolic tangent function.",131,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",131,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",131,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",131,[[]]],[0,"sign","pliantdb::core::num_traits","",null,null],[8,"Signed","pliantdb::core::num_traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",132,[[]]],[10,"abs_sub","","The positive difference of two numbers.",132,[[]]],[10,"signum","","Returns the sign of the number.",132,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",132,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",132,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","pliantdb::core::num_traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",133,null],[10,"from_str_radix","","Convert from a string and radix (typically <code>2..=36</code>).",133,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",134,null],[13,"Invalid","","",134,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",135,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",95,[[]]],[10,"max_value","","returns the largest finite number this type can represent",95,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",101,[[]]],[10,"infinity","","Returns the infinite value.",101,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",101,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",101,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",101,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",101,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",101,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",101,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",101,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",101,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",101,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",101,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",101,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",101,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",101,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",101,[[]]],[10,"trunc","","Return the integer part of a number.",101,[[]]],[10,"fract","","Returns the fractional part of a number.",101,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",101,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",101,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",101,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",101,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",101,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",101,[[]]],[10,"powi","","Raise a number to an integer power.",101,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",101,[[]]],[10,"sqrt","","Take the square root of a number.",101,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",101,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",101,[[]]],[10,"ln","","Returns the natural logarithm of the number.",101,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",101,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",101,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",101,[[]]],[11,"to_degrees","","Converts radians to degrees.",101,[[]]],[11,"to_radians","","Converts degrees to radians.",101,[[]]],[10,"max","","Returns the maximum of the two numbers.",101,[[]]],[10,"min","","Returns the minimum of the two numbers.",101,[[]]],[10,"abs_sub","","The positive difference of two numbers.",101,[[]]],[10,"cbrt","","Take the cubic root of a number.",101,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",101,[[]]],[10,"sin","","Computes the sine of a number (in radians).",101,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",101,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",101,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",101,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",101,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",101,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",101,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",101,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",101,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",101,[[]]],[10,"sinh","","Hyperbolic sine function.",101,[[]]],[10,"cosh","","Hyperbolic cosine function.",101,[[]]],[10,"tanh","","Hyperbolic tangent function.",101,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",101,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",101,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",101,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",101,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",102,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",102,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",102,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",102,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",102,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",102,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",102,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",102,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",102,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",102,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",102,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",102,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",102,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",102,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",102,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",102,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",102,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",102,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",102,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",99,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",97,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",97,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",97,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",97,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",97,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",97,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",97,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",97,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",97,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",97,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",97,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",97,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",97,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",97,[[["f64",15]],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",98,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",96,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",96,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",96,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",96,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",96,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",96,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",96,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",96,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",96,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",96,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",96,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",96,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",96,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",96,[[],[["f64",15],["option",4]]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",104,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",104,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",104,[[],["bool",15]]],[8,"Zero","","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",103,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",103,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",103,[[],["bool",15]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",105,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",105,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",105,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",105,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",105,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",105,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",105,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",105,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",105,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",105,[[["u32",15]]]],[8,"CheckedAdd","","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",106,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",109,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",108,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",111,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",110,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",112,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",113,[[["u32",15]],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",107,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",114,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",114,[[]]],[8,"MulAdd","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",115,null],[10,"mul_add","","Performs the fused multiply-add operation.",115,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",116,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",120,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",120,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",121,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",123,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",122,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",124,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",126,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",127,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",128,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",129,[[["u32",15]]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",125,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",130,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",130,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",132,[[]]],[10,"abs_sub","","The positive difference of two numbers.",132,[[]]],[10,"signum","","Returns the sign of the number.",132,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",132,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",132,[[],["bool",15]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[14,"define_pubsub_test_suite","pliantdb::core","Expands into a suite of pubsub unit tests using the …",null,null],[14,"define_connection_test_suite","","Creates a test suite that tests methods available on […",null,null],[0,"config","pliantdb::local","Configuration options.",null,null],[3,"Configuration","pliantdb::local::config","Configuration options for <code>Storage</code>.",null,null],[12,"workers","","Configuration options related to background tasks.",136,null],[12,"views","","Configuration options related to views.",136,null],[3,"Tasks","","Configujration options for background tasks.",null,null],[12,"worker_count","","Defines how many workers should be spawned to process …",137,null],[3,"Views","","Configuration options for views.",null,null],[12,"check_integrity_on_open","","If true, the database will scan all views during the call …",138,null],[0,"backup","pliantdb::local","Local database tool to save and load databases into plain …",null,null],[3,"Cli","pliantdb::local::backup","The command line interface for <code>pliantdb local-backup</code>.",null,null],[12,"database_path","","The path to the database you wish to operate on.",139,null],[12,"subcommand","","The command to execute on the database.",139,null],[4,"Command","","The command to execute.",null,null],[13,"Save","","Exports all of the data into a straightforward file …",140,null],[12,"output_directory","pliantdb::local::backup::Command","The directory to export the data within. The process will …",141,null],[12,"output_name","","The name of the folder to export the data to. If not …",141,null],[13,"Load","pliantdb::local::backup","Loads all of the data from a previously saved backup. Any …",140,null],[12,"backup","pliantdb::local::backup::Command","The path to the previously saved backup.",142,null],[0,"connection","pliantdb::local::core","Types for interacting with a database.",null,null],[8,"Connection","pliantdb::local::core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",8,[[],["collection",3]]],[11,"insert","","Inserts a newly created document into the connected […",8,[[["vec",3],["global",3],["u8",15]],[["pin",3],["box",3]]]],[11,"update","","Updates an existing document in the connected […",8,[[["document",3]],[["pin",3],["box",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",8,[[["u64",15]],[["box",3],["pin",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",8,[[],[["box",3],["pin",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",8,[[["document",3]],[["pin",3],["box",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",8,[[],["view",3]]],[10,"query","","Queries for view entries matching [<code>View</code>].",8,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",8,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",8,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",8,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",8,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",8,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",8,[[],[["box",3],["pin",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",9,null],[12,"access_policy","","The view\'s data access policy. The default value is […",9,null],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",10,null],[13,"Range","","Matches all entires with keys in the range provided.",10,null],[13,"Multiple","","Matches all entries that have keys that are included in …",10,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",11,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",11,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",11,null],[0,"document","pliantdb::local::core","Types for interacting with <code>Document</code>s.",null,null],[3,"Header","pliantdb::local::core::document","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",12,null],[12,"revision","","The revision of the stored document.",12,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",13,null],[12,"header","","The header of the document, which contains the id and …",13,null],[12,"contents","","The serialized bytes of the stored item.",13,null],[3,"Revision","","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",14,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",14,null],[0,"limits","pliantdb::local::core","Limits used within <code>PliantDB</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb::local::core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"networking","pliantdb::local::core","Types for networked communications.",null,null],[3,"Payload","pliantdb::local::core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",15,null],[12,"wrapped","","The wrapped payload.",15,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",16,null],[13,"Database","","A database-related request.",16,null],[12,"database","pliantdb::local::core::networking::Request","The name of the database.",17,null],[12,"request","","The request made to the database.",17,null],[4,"ServerRequest","pliantdb::local::core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",18,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",18,null],[12,"name","pliantdb::local::core::networking::ServerRequest","The name of the database to delete.",19,null],[13,"ListDatabases","pliantdb::local::core::networking","Lists all databases.",18,null],[13,"ListAvailableSchemas","","Lists available schemas.",18,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",20,null],[12,"collection","pliantdb::local::core::networking::DatabaseRequest","The collection of the document.",21,null],[12,"id","","The id of the document.",21,null],[13,"GetMultiple","pliantdb::local::core::networking","Retrieve multiple documents.",20,null],[12,"collection","pliantdb::local::core::networking::DatabaseRequest","The collection of the documents.",22,null],[12,"ids","","The ids of the documents.",22,null],[13,"Query","pliantdb::local::core::networking","Queries a view.",20,null],[12,"view","pliantdb::local::core::networking::DatabaseRequest","The name of the view.",23,null],[12,"key","","The filter for the view.",23,null],[12,"access_policy","","The access policy for the query.",23,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",23,null],[13,"Reduce","pliantdb::local::core::networking","Reduces a view.",20,null],[12,"view","pliantdb::local::core::networking::DatabaseRequest","The name of the view.",24,null],[12,"key","","The filter for the view.",24,null],[12,"access_policy","","The access policy for the query.",24,null],[12,"grouped","","Whether to return a single value or values grouped by …",24,null],[13,"ApplyTransaction","pliantdb::local::core::networking","Applies a transaction.",20,null],[12,"transaction","pliantdb::local::core::networking::DatabaseRequest","The trasnaction to apply.",25,null],[13,"ListExecutedTransactions","pliantdb::local::core::networking","Lists executed transactions.",20,null],[12,"starting_id","pliantdb::local::core::networking::DatabaseRequest","The starting transaction id.",26,null],[12,"result_limit","","The maximum number of results.",26,null],[13,"LastTransactionId","pliantdb::local::core::networking","Queries the last transaction id.",20,null],[13,"CreateSubscriber","","Creates a <code>PubSub</code> <code>Subscriber</code>",20,null],[13,"Publish","","Publishes a <code>PubSub</code> message.",20,null],[13,"SubscribeTo","","Subscribes <code>subscriber_id</code> to messages for <code>topic</code>.",20,null],[12,"subscriber_id","pliantdb::local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",27,null],[12,"topic","","The topic to subscribe to.",27,null],[13,"UnsubscribeFrom","pliantdb::local::core::networking","Unsubscribes <code>subscriber_id</code> from messages for <code>topic</code>.",20,null],[12,"subscriber_id","pliantdb::local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",28,null],[12,"topic","","The topic to unsubscribe from.",28,null],[13,"UnregisterSubscriber","pliantdb::local::core::networking","Unregisters the subscriber.",20,null],[12,"subscriber_id","pliantdb::local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",29,null],[4,"Response","pliantdb::local::core::networking","A response from a server.",null,null],[13,"Ok","","A request succeded but provided no output.",30,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",30,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",30,null],[13,"Error","","An error occurred processing a request.",30,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",31,null],[12,"name","pliantdb::local::core::networking::ServerResponse","The name of the database to create.",32,null],[13,"DatabaseDeleted","pliantdb::local::core::networking","A database with <code>name</code> was successfully removed.",31,null],[12,"name","pliantdb::local::core::networking::ServerResponse","The name of the database to remove.",33,null],[13,"Databases","pliantdb::local::core::networking","A list of available databases.",31,null],[13,"AvailableSchemas","","A list of availble schemas.",31,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",34,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",34,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",34,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",34,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",34,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",34,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",34,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",34,null],[13,"SubscriberCreated","","A new <code>PubSub</code> subscriber was created.",34,null],[12,"subscriber_id","pliantdb::local::core::networking::DatabaseResponse","The unique ID of the subscriber.",35,null],[13,"MessageReceived","pliantdb::local::core::networking","A PubSub message was received.",34,null],[12,"subscriber_id","pliantdb::local::core::networking::DatabaseResponse","The ID of the subscriber receiving the message.",36,null],[12,"message","","The message received.",36,null],[3,"MappedDocument","pliantdb::local::core::networking","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",37,null],[12,"value","","The serialized value.",37,null],[12,"source","","The source document.",37,null],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",38,null],[12,"schema","","The schema defining the database.",38,null],[8,"ServerConnection","","Functions for interacting with a <code>PliantDB</code> server.",null,null],[10,"create_database","","Creates a database named <code>name</code> using the [<code>SchemaId</code>] <code>schema</code>.",39,[[["str",15],["schemaid",3]],[["pin",3],["box",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",39,[[["str",15]],[["pin",3],["box",3]]]],[10,"list_databases","","Lists the databases on this server.",39,[[],[["pin",3],["box",3]]]],[10,"list_available_schemas","","Lists the [<code>SchemaId</code>]s on this server.",39,[[],[["pin",3],["box",3]]]],[4,"Error","","A networking error.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See […",40,null],[13,"DatabaseNotFound","","The database name given was not found.",40,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",40,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",40,null],[13,"Disconnected","","The connection was interrupted.",40,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",40,null],[12,"database_name","pliantdb::local::core::networking::Error","The name of the database being accessed.",41,null],[12,"schema","","The schema provided for the database.",41,null],[12,"stored_schema","","The schema stored for the database.",41,null],[13,"SchemaAlreadyRegistered","pliantdb::local::core::networking","The [<code>SchemaId</code>] returned has already been registered with …",40,null],[13,"SchemaNotRegistered","","The [<code>SchemaId</code>] requested was not registered with this …",40,null],[0,"error","pliantdb::local::core::networking::fabruic","<code>Error</code> for this [<code>crate</code>].",null,null],[6,"Result","pliantdb::local::core::networking::fabruic::error","<code>Result</code> type for this [<code>crate</code>].",null,null],[4,"Error","","<code>Error</code> for this [<code>crate</code>].",null,null],[13,"ParseCertificate","","Failed to parse the given certificate.",42,null],[12,"certificate","pliantdb::local::core::networking::fabruic::error::Error","The certificate passed to <code>from_der</code>.",43,null],[12,"error","","The parsing error.",43,null],[13,"DanglingCertificate","pliantdb::local::core::networking::fabruic::error","Data passed to generate <code>Certificate</code> with <code>from_der</code> found …",42,null],[12,"certificate","pliantdb::local::core::networking::fabruic::error::Error","The certificate passed to <code>from_der</code>.",44,null],[12,"dangling","","The dangling bytes.",44,null],[13,"ExpiredCertificate","pliantdb::local::core::networking::fabruic::error","<code>Certificate</code> has expired.",42,null],[13,"DomainCertificate","","<code>Certificate</code> is missing a domain name.",42,null],[13,"ParsePrivateKey","","Failed to parse the given private key.",42,null],[13,"ParseAddress","","Parsing a <code>SocketAddr</code> from a [<code>str</code>] failed.",42,null],[13,"Certificate","","Returned by <code>Endpoint</code> when failing to parse the given …",42,null],[13,"PrivateKey","","Returned by <code>Endpoint</code> when failing to parse the given …",42,null],[13,"InvalidKeyPair","","Returned by <code>Endpoint</code> when failing to pair the given …",42,null],[13,"InvalidCertificate","","Returned by <code>Endpoint</code> when failing to add the given …",42,null],[13,"BindSocket","","Returned by <code>Endpoint</code> when failing to bind the socket on …",42,null],[13,"Resolve","","Failed to resolve domain to IP address.",42,null],[13,"NoIp","","Found no IP address for that domain.",42,null],[13,"LocalAddress","","Returned by <code>Endpoint::local_address</code> when failing to …",42,null],[13,"AlreadyClosed","","Attempting to close something that is already closed.",42,null],[13,"ConnectConfig","","Returned by <code>Endpoint::connect</code> if configuration needed to …",42,null],[13,"Connecting","","Returned by <code>Connecting::accept</code> if connecting to the peer …",42,null],[13,"ReceiveStream","","Returned by <code>Connection</code> <code>Stream</code> when receiving a new stream …",42,null],[13,"OpenStream","","Returned by <code>Connection::open_stream</code> if opening a stream …",42,null],[13,"Write","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to write into …",42,null],[13,"Finish","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to finish a …",42,null],[13,"Send","","Returned by <code>Sender::send</code> if the stream was closed by …",42,null],[13,"Serialize","","Returned by <code>Sender::send</code> if <code>serialization</code> failed.",42,null],[13,"Read","","Returned by <code>Receiver::close</code> if <code>Receiver</code> failed to read …",42,null],[13,"Deserialize","","Returned by <code>Receiver::finish</code> if <code>Receiver</code> failed to …",42,null],[13,"NoType","","Returned by <code>Incoming::type</code> if the peer closed the stream …",42,null],[4,"ParseCertificate","","Possible certificate parsing errors.",null,null],[13,"WebPki","","<code>Error</code> returned by [<code>webpki</code>].",45,null],[13,"X509","","<code>Error</code> returned by [<code>x509_parser</code>].",45,null],[3,"IoError","","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…",null,null],[3,"AddrParseError","","An error which can be returned when parsing an IP address …",null,null],[4,"ErrorKind","","The kind of error that can be produced during a …",null,null],[13,"Io","","If the error stems from the reader/writer that is being …",46,null],[13,"InvalidUtf8Encoding","","Returned if the deserializer attempts to deserialize a …",46,null],[13,"InvalidBoolEncoding","","Returned if the deserializer attempts to deserialize a …",46,null],[13,"InvalidCharEncoding","","Returned if the deserializer attempts to deserialize a …",46,null],[13,"InvalidTagEncoding","","Returned if the deserializer attempts to deserialize the …",46,null],[13,"DeserializeAnyNotSupported","","Serde has a deserialize_any method that lets the format …",46,null],[13,"SizeLimit","","If (de)serializing a message takes more than the provided …",46,null],[13,"SequenceMustHaveLength","","Bincode can not encode sequences of unknown length (like …",46,null],[13,"Custom","","A custom error message from Serde.",46,null],[4,"ConnectError","","Errors in the parameters being used to create a new …",null,null],[13,"EndpointStopping","","The endpoint can no longer create new connections",47,null],[13,"TooManyConnections","","The number of active connections on the local endpoint is …",47,null],[13,"InvalidDnsName","","The domain name supplied was malformed",47,null],[13,"Config","","The transport configuration was invalid",47,null],[13,"InvalidRemoteAddress","","The remote [<code>SocketAddr</code>] supplied was malformed",47,null],[4,"ConnectionError","","Reasons why a connection might be lost",null,null],[13,"VersionMismatch","","The peer doesn\'t implement any supported version",48,null],[13,"TransportError","","The peer violated the QUIC specification as understood by …",48,null],[13,"ConnectionClosed","","The peer\'s QUIC stack aborted the connection automatically",48,null],[13,"ApplicationClosed","","The peer closed the connection",48,null],[13,"Reset","","The peer is unable to continue processing this …",48,null],[13,"TimedOut","","Communication with the peer has lapsed for longer than …",48,null],[13,"LocallyClosed","","The local application closed the connection",48,null],[4,"EndpointError","","Errors that can occur during the construction of an …",null,null],[13,"Socket","","An error during setup of the underlying UDP socket.",49,null],[3,"ParseError","","Errors encountered while parsing a TLS certificate or …",null,null],[4,"ReadError","","Errors that arise from reading from a stream.",null,null],[13,"Reset","","The peer abandoned transmitting data on this stream.",50,null],[13,"ConnectionClosed","","The connection was closed.",50,null],[13,"UnknownStream","","The stream has already been stopped, finished, or reset",50,null],[13,"IllegalOrderedRead","","Attempted an ordered read following an unordered read",50,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",50,null],[4,"WriteError","","Errors that arise from writing to a stream",null,null],[13,"Stopped","","The peer is no longer accepting data on this stream.",51,null],[13,"ConnectionClosed","","The connection was closed.",51,null],[13,"UnknownStream","","The stream has already been finished or reset",51,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",51,null],[3,"KeyRejected","","An error parsing or validating a key.",null,null],[4,"TLSError","","rustls reports protocol errors using this type.",null,null],[13,"InappropriateMessage","","We received a TLS message that isn\'t valid right now. …",52,null],[12,"expect_types","pliantdb::local::core::networking::fabruic::error::TLSError","Which types we expected",53,null],[12,"got_type","","What type we received",53,null],[13,"InappropriateHandshakeMessage","pliantdb::local::core::networking::fabruic::error","We received a TLS handshake message that isn\'t valid …",52,null],[12,"expect_types","pliantdb::local::core::networking::fabruic::error::TLSError","Which handshake type we expected",54,null],[12,"got_type","","What handshake type we received",54,null],[13,"CorruptMessage","pliantdb::local::core::networking::fabruic::error","The peer sent us a syntactically incorrect TLS message.",52,null],[13,"CorruptMessagePayload","","The peer sent us a TLS message with invalid contents.",52,null],[13,"NoCertificatesPresented","","The peer didn\'t give us any certificates.",52,null],[13,"DecryptError","","We couldn\'t decrypt a message.  This is invariably fatal.",52,null],[13,"PeerIncompatibleError","","The peer doesn\'t support a protocol version/feature we …",52,null],[13,"PeerMisbehavedError","","The peer deviated from the standard TLS protocol. The …",52,null],[13,"AlertReceived","","We received a fatal alert.  This means the peer is …",52,null],[13,"WebPKIError","","The presented certificate chain is invalid.",52,null],[13,"InvalidSCT","","The presented SCT(s) were invalid.",52,null],[13,"General","","A catch-all error for unlikely errors.",52,null],[13,"FailedToGetCurrentTime","","We failed to figure out what time it currently is.",52,null],[13,"HandshakeNotComplete","","This function doesn\'t work until the TLS handshake is …",52,null],[13,"PeerSentOversizedRecord","","The peer sent an oversized record/fragment.",52,null],[13,"NoApplicationProtocol","","An incoming connection did not support any known …",52,null],[3,"ResolveError","","The error type for errors that get returned in the crate",null,null],[4,"WebPkiError","","An error that occurs during certificate validation or …",null,null],[13,"BadDER","","The encoding of some ASN.1 DER-encoded item is invalid.",55,null],[13,"BadDERTime","","The encoding of an ASN.1 DER-encoded time is invalid.",55,null],[13,"CAUsedAsEndEntity","","A CA certificate is veing used as an end-entity …",55,null],[13,"CertExpired","","The certificate is expired; i.e. the time it is being …",55,null],[13,"CertNotValidForName","","The certificate is not valid for the name it is being …",55,null],[13,"CertNotValidYet","","The certificate is not valid yet; i.e. the time it is …",55,null],[13,"EndEntityUsedAsCA","","An end-entity certificate is being used as a CA …",55,null],[13,"ExtensionValueInvalid","","An X.509 extension is invalid.",55,null],[13,"InvalidCertValidity","","The certificate validity period (notBefore, notAfter) is …",55,null],[13,"InvalidSignatureForPublicKey","","The signature is invalid for the given public key.",55,null],[13,"NameConstraintViolation","","The certificate violates one or more name constraints.",55,null],[13,"PathLenConstraintViolated","","The certificate violates one or more path length …",55,null],[13,"SignatureAlgorithmMismatch","","The algorithm in the TBSCertificate \\\"signature\\\" field of …",55,null],[13,"RequiredEKUNotFound","","The certificate is not valid for the Extended Key Usage …",55,null],[13,"UnknownIssuer","","A valid issuer for the certificate could not be found.",55,null],[13,"UnsupportedCertVersion","","The certificate is not a v3 X.509 certificate.",55,null],[13,"UnsupportedCriticalExtension","","The certificate contains an unsupported critical …",55,null],[13,"UnsupportedSignatureAlgorithmForPublicKey","","The signature\'s algorithm does not match the algorithm of …",55,null],[13,"UnsupportedSignatureAlgorithm","","The signature algorithm for a signature is not in the set …",55,null],[4,"X509Error","","An error that can occur while parsing or validating a …",null,null],[13,"Generic","","",56,null],[13,"InvalidVersion","","",56,null],[13,"InvalidSerial","","",56,null],[13,"InvalidAlgorithmIdentifier","","",56,null],[13,"InvalidX509Name","","",56,null],[13,"InvalidDate","","",56,null],[13,"InvalidSPKI","","",56,null],[13,"InvalidSubjectUID","","",56,null],[13,"InvalidIssuerUID","","",56,null],[13,"InvalidExtensions","","",56,null],[13,"InvalidAttributes","","",56,null],[13,"DuplicateExtensions","","",56,null],[13,"DuplicateAttributes","","",56,null],[13,"InvalidSignatureValue","","",56,null],[13,"InvalidTbsCertificate","","",56,null],[13,"InvalidUserCertificate","","",56,null],[13,"InvalidCertificate","","Top-level certificate structure is invalid",56,null],[13,"SignatureVerificationError","","",56,null],[13,"SignatureUnsupportedAlgorithm","","",56,null],[13,"Der","","",56,null],[13,"NomError","","",56,null],[4,"Err","","The <code>Err</code> enum indicates the parser was not successful",null,null],[13,"Incomplete","","There was not enough data",57,null],[13,"Error","","The parser had an error (recoverable)",57,null],[13,"Failure","","The parser had an unrecoverable error: we got to the right…",57,null],[5,"generate_self_signed","pliantdb::local::core::networking::fabruic","Generate a self signed certificate.",null,[[]]],[3,"Certificate","","A public Certificate. You can distribute it freely to …",null,null],[8,"Dangerous","","Gives read access to the [<code>PrivateKey</code>].",null,null],[10,"as_ref","","Returns a <code>&[u8]</code> to the [<code>PrivateKey</code>].",58,[[]]],[10,"into","","Returns a [<code>Vec<u8></code>] to the [<code>PrivateKey</code>].",58,[[],[["vec",3],["global",3],["u8",15]]]],[10,"serialize","","Serialize with [<code>serde</code>].",58,[[],["result",4]]],[3,"PrivateKey","","A private Key.",null,null],[4,"Error","","<code>Error</code> for this [<code>crate</code>].",null,null],[13,"ParseCertificate","","Failed to parse the given certificate.",42,null],[12,"certificate","pliantdb::local::core::networking::fabruic::Error","The certificate passed to <code>from_der</code>.",43,null],[12,"error","","The parsing error.",43,null],[13,"DanglingCertificate","pliantdb::local::core::networking::fabruic","Data passed to generate <code>Certificate</code> with <code>from_der</code> found …",42,null],[12,"certificate","pliantdb::local::core::networking::fabruic::Error","The certificate passed to <code>from_der</code>.",44,null],[12,"dangling","","The dangling bytes.",44,null],[13,"ExpiredCertificate","pliantdb::local::core::networking::fabruic","<code>Certificate</code> has expired.",42,null],[13,"DomainCertificate","","<code>Certificate</code> is missing a domain name.",42,null],[13,"ParsePrivateKey","","Failed to parse the given private key.",42,null],[13,"ParseAddress","","Parsing a <code>SocketAddr</code> from a [<code>str</code>] failed.",42,null],[13,"Certificate","","Returned by <code>Endpoint</code> when failing to parse the given …",42,null],[13,"PrivateKey","","Returned by <code>Endpoint</code> when failing to parse the given …",42,null],[13,"InvalidKeyPair","","Returned by <code>Endpoint</code> when failing to pair the given …",42,null],[13,"InvalidCertificate","","Returned by <code>Endpoint</code> when failing to add the given …",42,null],[13,"BindSocket","","Returned by <code>Endpoint</code> when failing to bind the socket on …",42,null],[13,"Resolve","","Failed to resolve domain to IP address.",42,null],[13,"NoIp","","Found no IP address for that domain.",42,null],[13,"LocalAddress","","Returned by <code>Endpoint::local_address</code> when failing to …",42,null],[13,"AlreadyClosed","","Attempting to close something that is already closed.",42,null],[13,"ConnectConfig","","Returned by <code>Endpoint::connect</code> if configuration needed to …",42,null],[13,"Connecting","","Returned by <code>Connecting::accept</code> if connecting to the peer …",42,null],[13,"ReceiveStream","","Returned by <code>Connection</code> <code>Stream</code> when receiving a new stream …",42,null],[13,"OpenStream","","Returned by <code>Connection::open_stream</code> if opening a stream …",42,null],[13,"Write","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to write into …",42,null],[13,"Finish","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to finish a …",42,null],[13,"Send","","Returned by <code>Sender::send</code> if the stream was closed by …",42,null],[13,"Serialize","","Returned by <code>Sender::send</code> if <code>serialization</code> failed.",42,null],[13,"Read","","Returned by <code>Receiver::close</code> if <code>Receiver</code> failed to read …",42,null],[13,"Deserialize","","Returned by <code>Receiver::finish</code> if <code>Receiver</code> failed to …",42,null],[13,"NoType","","Returned by <code>Incoming::type</code> if the peer closed the stream …",42,null],[6,"Result","","<code>Result</code> type for this [<code>crate</code>].",null,null],[3,"Builder","","Holding configuration for [<code>Builder</code>] to build [<code>Endpoint</code>].",null,null],[3,"Connecting","","Represent\'s an intermediate state to build a [<code>Connection</code>].",null,null],[3,"Connection","","Represents an open connection. Receives [<code>Incoming</code>] …",null,null],[3,"Endpoint","","Represents a socket using the QUIC protocol to …",null,null],[3,"Incoming","","An intermediate state to define which type to accept in …",null,null],[3,"Receiver","","Used to receive data from a stream.",null,null],[3,"Sender","","Used to send data to a stream.",null,null],[0,"schema","pliantdb::local::core","Types for defining database schema.",null,null],[0,"view","pliantdb::local::core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb::local::core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb::local::core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",59,null],[12,"key","","The key used to index the View.",59,null],[12,"value","","An associated value stored in the view.",59,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",60,null],[12,"key","","The key used to index the View.",60,null],[12,"value","","An associated value stored in the view.",60,null],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",61,null],[12,"key","","The key used to index the View.",61,null],[12,"value","","An associated value stored in the view.",61,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",62,null],[12,"value","","The value generated by the <code>View</code>",62,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",63,[[],[["error",3],["result",4],["cow",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",63,[[],[["error",3],["result",4]]]],[8,"EnumKey","","Adds <code>Key</code> support to an enum. Requires implementing …",null,null],[4,"Error","pliantdb::local::core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",64,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",64,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",64,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",65,null],[16,"Key","","The key for this view.",65,null],[16,"Value","","An associated type that can be stored with each entry in …",65,null],[10,"version","","The version of the view. Changing this value will cause …",65,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",65,[[],[["cow",4],["str",15]]]],[10,"map","","The map function for this view. This function is …",65,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",65,[[["bool",15]],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",66,null],[13,"Borrowed","","a borrowed value",66,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",67,[[],["collectionid",3]]],[10,"version","","Wraps [<code>View::version</code>]",67,[[],["u64",15]]],[10,"name","","Wraps [<code>View::name</code>]",67,[[],[["cow",4],["str",15]]]],[10,"map","","Wraps [<code>View::map</code>]",67,[[["document",3]],[["option",4],["error",4],["result",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",67,[[["bool",15]],[["vec",3],["result",4],["error",4]]]],[3,"SchemaId","pliantdb::local::core::schema","The unique Id of a [<code>Schema</code>]. Primarily used to try to …",null,null],[8,"Schema","","Defines a group of collections that are stored into a …",null,null],[10,"schema_id","","Returns the unique [<code>SchemaId</code>] for this schema.",68,[[],["schemaid",3]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",68,[[["schematic",3]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",68,[[],["schematic",3]]],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_id","","The <code>Id</code> of this collection.",69,[[],["collectionid",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",69,[[["schematic",3]]]],[3,"CollectionId","","A unique collection id. Choose collection names that …",null,null],[3,"Schematic","","A collection of defined collections and views.",null,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",63,[[],[["error",3],["result",4],["cow",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",63,[[],[["error",3],["result",4]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",59,null],[12,"key","","The key used to index the View.",59,null],[12,"value","","An associated value stored in the view.",59,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",60,null],[12,"key","","The key used to index the View.",60,null],[12,"value","","An associated value stored in the view.",60,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",62,null],[12,"value","","The value generated by the <code>View</code>",62,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",65,null],[16,"Key","","The key for this view.",65,null],[16,"Value","","An associated type that can be stored with each entry in …",65,null],[10,"version","","The version of the view. Changing this value will cause …",65,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",65,[[],[["cow",4],["str",15]]]],[10,"map","","The map function for this view. This function is …",65,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",65,[[["bool",15]],[["result",4],["error",4]]]],[0,"transaction","pliantdb::local::core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb::local::core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",70,null],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",71,null],[12,"command","","The command being performed.",71,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",72,null],[12,"contents","pliantdb::local::core::transaction::Command","The initial contents of the document.",73,null],[13,"Update","pliantdb::local::core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",72,null],[12,"header","pliantdb::local::core::transaction::Command","The current header of the <code>Document</code>.",74,null],[12,"contents","","The new contents to store within the <code>Document</code>.",74,null],[13,"Delete","pliantdb::local::core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",72,null],[12,"header","pliantdb::local::core::transaction::Command","The current header of the <code>Document</code>.",75,null],[4,"OperationResult","pliantdb::local::core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",76,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",76,null],[12,"collection","pliantdb::local::core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",77,null],[12,"header","","The header of the updated <code>Document</code>.",77,null],[13,"DocumentDeleted","pliantdb::local::core::transaction","A <code>Document</code> was deleted.",76,null],[12,"collection","pliantdb::local::core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",78,null],[12,"id","","The id of the deleted <code>Document</code>.",78,null],[3,"Executed","pliantdb::local::core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",79,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",79,null],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",80,null],[12,"id","","The id of the changed <code>Document</code>.",80,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",80,null],[0,"pubsub","pliantdb::local::core","Types for Publish/Subscribe (<code>PubSub</code>) messaging.",null,null],[8,"PubSub","pliantdb::local::core::pubsub","Publishes and Subscribes to messages on topics.",null,null],[16,"Subscriber","","The Subscriber type for this <code>PubSub</code> connection.",81,null],[10,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",81,[[],[["pin",3],["box",3]]]],[10,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",81,[[],[["pin",3],["box",3]]]],[8,"Subscriber","","A subscriber to one or more topics.",null,null],[10,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",82,[[],[["pin",3],["box",3]]]],[10,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",82,[[["str",15]],[["pin",3],["box",3]]]],[10,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",82,[[],["receiver",3]]],[4,"Error","pliantdb::local::core","an enumeration of errors that this crate can produce",null,null],[13,"Storage","","An error from interacting with local storage.",83,null],[13,"Server","","An error from interacting with a server.",83,null],[13,"Transport","","An error occurred from the QUIC transport layer.",83,null],[13,"Websocket","","An error occurred from the websocket transport layer.",83,null],[13,"Networking","","An error occurred from networking.",83,null],[13,"Io","","An error occurred from IO.",83,null],[13,"Configuration","","An error occurred with the provided configuration options.",83,null],[13,"Client","","An error occurred inside of the client.",83,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",83,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",83,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",83,null],[0,"test_util","","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb::local::core::test_util","",null,null],[12,"value","","",84,null],[12,"category","","",84,null],[12,"parent_id","","",84,null],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",85,null],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"HarnessTest","","",null,null],[13,"StoreRetrieveUpdate","","",86,null],[13,"NotFound","","",86,null],[13,"Conflict","","",86,null],[13,"BadUpdate","","",86,null],[13,"NoUpdate","","",86,null],[13,"GetMultiple","","",86,null],[13,"ListTransactions","","",86,null],[13,"ViewQuery","","",86,null],[13,"UnassociatedCollection","","",86,null],[13,"ViewUpdate","","",86,null],[13,"ViewAccessPolicies","","",86,null],[13,"PubSubSimple","","",86,null],[13,"PubSubMultipleSubscribers","","",86,null],[13,"PubSubDropAndSend","","",86,null],[13,"PubSubUnsubscribe","","",86,null],[13,"PubSubDropCleanup","","",86,null],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[3,"Message","pliantdb::local::core::circulate","A <code>PubSub</code> message.",null,null],[12,"topic","","The topic of the message.",87,null],[12,"payload","","The payload of the message.",87,null],[3,"Relay","","Manages subscriptions and notifications for <code>PubSub</code>.",null,null],[3,"Subscriber","","A subscriber for [<code>Message</code>]s published to subscribed …",null,null],[0,"select","pliantdb::local::core::circulate::flume","Types that permit waiting upon multiple blocking …",null,null],[4,"SelectError","pliantdb::local::core::circulate::flume::select","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",88,null],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[0,"async","pliantdb::local::core::circulate::flume","Futures and other types that allow asynchronous …",null,null],[3,"SendFut","pliantdb::local::core::circulate::flume::async","A future that sends a value into a channel.",null,null],[3,"SendSink","","A sink that allows sending values into a channel.",null,null],[3,"RecvFut","","A future which allows asynchronously receiving a message.",null,null],[3,"RecvStream","","A stream which allows asynchronously receiving messages.",null,null],[3,"SendError","pliantdb::local::core::circulate::flume","An error that may be emitted when attempting to send a …",null,null],[12,"0","","",89,null],[4,"TrySendError","","An error that may be emitted when attempting to send a …",null,null],[13,"Full","","",90,null],[13,"Disconnected","","",90,null],[4,"SendTimeoutError","","An error that may be emitted when sending a value into a …",null,null],[13,"Timeout","","",91,null],[13,"Disconnected","","",91,null],[4,"RecvError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Disconnected","","",92,null],[4,"TryRecvError","","An error that may be emitted when attempting to fetch a …",null,null],[13,"Empty","","",93,null],[13,"Disconnected","","",93,null],[4,"RecvTimeoutError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",94,null],[13,"Disconnected","","",94,null],[3,"Sender","","A transmitting end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel.",null,null],[3,"Iter","","An iterator over the msgs received from a channel.",null,null],[3,"TryIter","","An non-blocking iterator over the msgs received from a …",null,null],[3,"Drain","","An fixed-sized iterator over the msgs drained from a …",null,null],[3,"IntoIter","","An owned iterator over the msgs received from a channel.",null,null],[5,"unbounded","","Create a channel with no maximum capacity.",null,[[]]],[5,"bounded","","Create a channel with a maximum capacity.",null,[[["usize",15]]]],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[0,"bounds","pliantdb::local::core::num_traits","",null,null],[8,"Bounded","pliantdb::local::core::num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",95,[[]]],[10,"max_value","","returns the largest finite number this type can represent",95,[[]]],[0,"cast","pliantdb::local::core::num_traits","",null,null],[8,"ToPrimitive","pliantdb::local::core::num_traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",96,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",96,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",96,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",96,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",96,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",96,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",96,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",96,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",96,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",96,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",96,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",96,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",96,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",96,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",97,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",97,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",97,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",97,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",97,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",97,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",97,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",97,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",97,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",97,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",97,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",97,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",97,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",97,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",98,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",99,[[]]],[0,"float","pliantdb::local::core::num_traits","",null,null],[8,"FloatCore","pliantdb::local::core::num_traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",100,[[]]],[10,"neg_infinity","","Returns negative infinity.",100,[[]]],[10,"nan","","Returns NaN.",100,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",100,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",100,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",100,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",100,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",100,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",100,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",100,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",100,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",100,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",100,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",100,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",100,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",100,[[]]],[11,"trunc","","Return the integer part of a number.",100,[[]]],[11,"fract","","Returns the fractional part of a number.",100,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",100,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",100,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",100,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",100,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",100,[[]]],[11,"max","","Returns the maximum of the two numbers.",100,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",100,[[]]],[11,"powi","","Raise a number to an integer power.",100,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",100,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",100,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",100,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",101,[[]]],[10,"infinity","","Returns the infinite value.",101,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",101,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",101,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",101,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",101,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",101,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",101,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",101,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",101,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",101,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",101,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",101,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",101,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",101,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",101,[[]]],[10,"trunc","","Return the integer part of a number.",101,[[]]],[10,"fract","","Returns the fractional part of a number.",101,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",101,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",101,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",101,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",101,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",101,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",101,[[]]],[10,"powi","","Raise a number to an integer power.",101,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",101,[[]]],[10,"sqrt","","Take the square root of a number.",101,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",101,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",101,[[]]],[10,"ln","","Returns the natural logarithm of the number.",101,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",101,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",101,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",101,[[]]],[11,"to_degrees","","Converts radians to degrees.",101,[[]]],[11,"to_radians","","Converts degrees to radians.",101,[[]]],[10,"max","","Returns the maximum of the two numbers.",101,[[]]],[10,"min","","Returns the minimum of the two numbers.",101,[[]]],[10,"abs_sub","","The positive difference of two numbers.",101,[[]]],[10,"cbrt","","Take the cubic root of a number.",101,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",101,[[]]],[10,"sin","","Computes the sine of a number (in radians).",101,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",101,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",101,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",101,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",101,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",101,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",101,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",101,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",101,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",101,[[]]],[10,"sinh","","Hyperbolic sine function.",101,[[]]],[10,"cosh","","Hyperbolic cosine function.",101,[[]]],[10,"tanh","","Hyperbolic tangent function.",101,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",101,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",101,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",101,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",101,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",102,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",102,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",102,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",102,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",102,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",102,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",102,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",102,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",102,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",102,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",102,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",102,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",102,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",102,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",102,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",102,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",102,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",102,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",102,[[]]],[0,"identities","pliantdb::local::core::num_traits","",null,null],[8,"Zero","pliantdb::local::core::num_traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",103,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",103,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",103,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",104,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",104,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",104,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[0,"int","pliantdb::local::core::num_traits","",null,null],[8,"PrimInt","pliantdb::local::core::num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",105,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",105,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",105,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",105,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",105,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",105,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",105,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",105,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",105,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",105,[[["u32",15]]]],[0,"ops","pliantdb::local::core::num_traits","",null,null],[0,"checked","pliantdb::local::core::num_traits::ops","",null,null],[8,"CheckedAdd","pliantdb::local::core::num_traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",106,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",107,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",108,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",109,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",110,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",111,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",112,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",113,[[["u32",15]],["option",4]]],[0,"inv","pliantdb::local::core::num_traits::ops","",null,null],[8,"Inv","pliantdb::local::core::num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",114,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",114,[[]]],[0,"mul_add","pliantdb::local::core::num_traits::ops","",null,null],[8,"MulAdd","pliantdb::local::core::num_traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",115,null],[10,"mul_add","","Performs the fused multiply-add operation.",115,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",116,[[]]],[0,"overflowing","pliantdb::local::core::num_traits::ops","",null,null],[8,"OverflowingAdd","pliantdb::local::core::num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean …",117,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean …",118,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean …",119,[[]]],[0,"saturating","pliantdb::local::core::num_traits::ops","",null,null],[8,"Saturating","pliantdb::local::core::num_traits::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",120,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",120,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",121,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",122,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",123,[[]]],[0,"wrapping","pliantdb::local::core::num_traits::ops","",null,null],[8,"WrappingAdd","pliantdb::local::core::num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",124,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",125,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",126,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",127,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",128,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",129,[[["u32",15]]]],[0,"pow","pliantdb::local::core::num_traits","",null,null],[8,"Pow","pliantdb::local::core::num_traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",130,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",130,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[0,"real","pliantdb::local::core::num_traits","",null,null],[8,"Real","pliantdb::local::core::num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can …",131,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",131,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",131,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",131,[[]]],[10,"floor","","Returns the largest integer less than or equal to a …",131,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",131,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",131,[[]]],[10,"trunc","","Return the integer part of a number.",131,[[]]],[10,"fract","","Returns the fractional part of a number.",131,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",131,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",131,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",131,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",131,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",131,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",131,[[]]],[10,"powi","","Raise a number to an integer power.",131,[[["i32",15]]]],[10,"powf","","Raise a number to a real number power.",131,[[]]],[10,"sqrt","","Take the square root of a number.",131,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",131,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",131,[[]]],[10,"ln","","Returns the natural logarithm of the number.",131,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",131,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",131,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",131,[[]]],[10,"to_degrees","","Converts radians to degrees.",131,[[]]],[10,"to_radians","","Converts degrees to radians.",131,[[]]],[10,"max","","Returns the maximum of the two numbers.",131,[[]]],[10,"min","","Returns the minimum of the two numbers.",131,[[]]],[10,"abs_sub","","The positive difference of two numbers.",131,[[]]],[10,"cbrt","","Take the cubic root of a number.",131,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",131,[[]]],[10,"sin","","Computes the sine of a number (in radians).",131,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",131,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",131,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",131,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",131,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",131,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",131,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",131,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",131,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",131,[[]]],[10,"sinh","","Hyperbolic sine function.",131,[[]]],[10,"cosh","","Hyperbolic cosine function.",131,[[]]],[10,"tanh","","Hyperbolic tangent function.",131,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",131,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",131,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",131,[[]]],[0,"sign","pliantdb::local::core::num_traits","",null,null],[8,"Signed","pliantdb::local::core::num_traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",132,[[]]],[10,"abs_sub","","The positive difference of two numbers.",132,[[]]],[10,"signum","","Returns the sign of the number.",132,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",132,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",132,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","pliantdb::local::core::num_traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",133,null],[10,"from_str_radix","","Convert from a string and radix (typically <code>2..=36</code>).",133,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",134,null],[13,"Invalid","","",134,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",135,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",95,[[]]],[10,"max_value","","returns the largest finite number this type can represent",95,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",101,[[]]],[10,"infinity","","Returns the infinite value.",101,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",101,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",101,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",101,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",101,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",101,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",101,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",101,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",101,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",101,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",101,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",101,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",101,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",101,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",101,[[]]],[10,"trunc","","Return the integer part of a number.",101,[[]]],[10,"fract","","Returns the fractional part of a number.",101,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",101,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",101,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",101,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",101,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",101,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",101,[[]]],[10,"powi","","Raise a number to an integer power.",101,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",101,[[]]],[10,"sqrt","","Take the square root of a number.",101,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",101,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",101,[[]]],[10,"ln","","Returns the natural logarithm of the number.",101,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",101,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",101,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",101,[[]]],[11,"to_degrees","","Converts radians to degrees.",101,[[]]],[11,"to_radians","","Converts degrees to radians.",101,[[]]],[10,"max","","Returns the maximum of the two numbers.",101,[[]]],[10,"min","","Returns the minimum of the two numbers.",101,[[]]],[10,"abs_sub","","The positive difference of two numbers.",101,[[]]],[10,"cbrt","","Take the cubic root of a number.",101,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",101,[[]]],[10,"sin","","Computes the sine of a number (in radians).",101,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",101,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",101,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",101,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",101,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",101,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",101,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",101,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",101,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",101,[[]]],[10,"sinh","","Hyperbolic sine function.",101,[[]]],[10,"cosh","","Hyperbolic cosine function.",101,[[]]],[10,"tanh","","Hyperbolic tangent function.",101,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",101,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",101,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",101,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",101,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",102,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",102,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",102,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",102,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",102,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",102,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",102,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",102,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",102,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",102,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",102,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",102,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",102,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",102,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",102,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",102,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",102,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",102,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",102,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",99,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",97,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",97,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",97,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",97,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",97,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",97,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",97,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",97,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",97,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",97,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",97,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",97,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",97,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",97,[[["f64",15]],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",98,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",96,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",96,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",96,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",96,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",96,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",96,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",96,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",96,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",96,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",96,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",96,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",96,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",96,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",96,[[],[["f64",15],["option",4]]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",104,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",104,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",104,[[],["bool",15]]],[8,"Zero","","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",103,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",103,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",103,[[],["bool",15]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",105,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",105,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",105,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",105,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",105,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",105,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",105,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",105,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",105,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",105,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",105,[[["u32",15]]]],[8,"CheckedAdd","","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",106,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",109,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",108,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",111,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",110,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",112,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",113,[[["u32",15]],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",107,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",114,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",114,[[]]],[8,"MulAdd","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",115,null],[10,"mul_add","","Performs the fused multiply-add operation.",115,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",116,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",120,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",120,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",121,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",123,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",122,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",124,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",126,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",127,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",128,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",129,[[["u32",15]]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",125,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",130,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",130,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",132,[[]]],[10,"abs_sub","","The positive difference of two numbers.",132,[[]]],[10,"signum","","Returns the sign of the number.",132,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",132,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",132,[[],["bool",15]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[14,"define_pubsub_test_suite","pliantdb::local::core","Expands into a suite of pubsub unit tests using the …",null,null],[14,"define_connection_test_suite","","Creates a test suite that tests methods available on […",null,null],[3,"Configuration","pliantdb::local","Configuration options for <code>Storage</code>.",null,null],[12,"workers","","Configuration options related to background tasks.",136,null],[12,"views","","Configuration options related to views.",136,null],[4,"Error","","Errors that can occur from interacting with storage.",null,null],[13,"Sled","","An error occurred interacting with <code>sled</code>.",143,null],[13,"InternalSerialization","","An error occurred serializing the underlying database …",143,null],[13,"Serialization","","An error occurred serializing the contents of a <code>Document</code> …",143,null],[13,"InternalCommunication","","An internal error occurred while waiting for a message.",143,null],[13,"View","","An error occurred while executing a view",143,null],[13,"Core","","An internal error occurred while waiting for a message.",143,null],[13,"Other","","An internal error occurred while waiting for a message.",143,null],[3,"Storage","","A local, file-based database.",null,null],[0,"cli","pliantdb::server","Command-line interface for the server.",null,null],[0,"certificate","pliantdb::server::cli","Command-line interface for managing the root certificate.",null,null],[4,"Command","pliantdb::server::cli::certificate","Command to manage the server\'s certificates.",null,null],[13,"InstallSelfSigned","","Installs a self-signed certificate into the server. The …",144,null],[12,"server_name","pliantdb::server::cli::certificate::Command","The name of the server. If this server has a DNS name, …",145,null],[12,"overwrite","","If an existing certificate exists, an error will be …",145,null],[13,"Install","pliantdb::server::cli::certificate","Installs a X.509 certificate and associated private key …",144,null],[12,"private_key","pliantdb::server::cli::certificate::Command","A private key used to generate <code>certificate</code> in binary DER …",146,null],[12,"certificate","","The X.509 certificate in binary DER format.",146,null],[0,"serve","pliantdb::server::cli","Command-line interface for hosting a server.",null,null],[3,"Serve","pliantdb::server::cli::serve","Execute the server",null,null],[12,"listen_on","","The bind address and port. Defaults to 5645",147,null],[3,"Cli","pliantdb::server::cli","Command-line interface for <code>pliantdb server</code>.",null,null],[12,"server_data_directory","","The path to the directory where the server should store …",148,null],[12,"subcommand","","The command to execute.",148,null],[4,"Command","","Available commands for <code>pliantdb server</code>.",null,null],[13,"Certificate","","Manage the server\'s root certificate.",149,null],[13,"Serve","","Execute the server.",149,null],[0,"test_util","pliantdb::server","",null,null],[17,"BASIC_SERVER_NAME","pliantdb::server::test_util","",null,null],[5,"initialize_basic_server","","",null,[[["path",3]]]],[5,"basic_server_connection_tests","","",null,[[]]],[3,"Configuration","pliantdb::server","Configuration options for <code>Server</code>",null,null],[12,"request_workers","","Number of simultaneous requests to be processed. Default …",150,null],[12,"storage","","Configuration options for individual databases.",150,null],[4,"Error","","An error occurred while interacting with a <code>Server</code>.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See …",151,null],[13,"DatabaseNotFound","","The database name given was not found.",151,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",151,null],[13,"Transport","","An error occurred from the QUIC transport layer.",151,null],[13,"Websocket","","An error occurred from the Websocket transport layer.",151,null],[13,"Io","","An error occurred from IO",151,null],[13,"Request","","An error occurred while processing a request",151,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",151,null],[12,"database_name","pliantdb::server::Error","The name of the database being accessed.",152,null],[12,"schema","","The schema provided for the database.",152,null],[12,"stored_schema","","The schema stored for the database.",152,null],[13,"SchemaAlreadyRegistered","pliantdb::server","The [<code>SchemaId</code>] returned has already been registered with …",151,null],[13,"Core","","An error occurred from within the schema.",151,null],[13,"Storage","","An error occurred while interacting with a local database.",151,null],[3,"Database","","A database hosted on a server.",null,null],[3,"Server","","A <code>PliantDB</code> server.",null,null],[11,"from","pliantdb::cli","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","pliantdb::client::url","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"to_string","","",153,[[],["string",3]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"vzip","","",153,[[]]],[11,"equivalent","","",153,[[],["bool",15]]],[11,"init","","",153,[[],["usize",15]]],[11,"deref","","",153,[[["usize",15]]]],[11,"deref_mut","","",153,[[["usize",15]]]],[11,"drop","","",153,[[["usize",15]]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"vzip","","",154,[[]]],[11,"init","","",154,[[],["usize",15]]],[11,"deref","","",154,[[["usize",15]]]],[11,"deref_mut","","",154,[[["usize",15]]]],[11,"drop","","",154,[[["usize",15]]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"vzip","","",155,[[]]],[11,"init","","",155,[[],["usize",15]]],[11,"deref","","",155,[[["usize",15]]]],[11,"deref_mut","","",155,[[["usize",15]]]],[11,"drop","","",155,[[["usize",15]]]],[11,"from","pliantdb::client::url::form_urlencoded","",156,[[]]],[11,"into","","",156,[[]]],[11,"into_iter","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"vzip","","",156,[[]]],[11,"init","","",156,[[],["usize",15]]],[11,"deref","","",156,[[["usize",15]]]],[11,"deref_mut","","",156,[[["usize",15]]]],[11,"drop","","",156,[[["usize",15]]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"into_iter","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"vzip","","",157,[[]]],[11,"init","","",157,[[],["usize",15]]],[11,"deref","","",157,[[["usize",15]]]],[11,"deref_mut","","",157,[[["usize",15]]]],[11,"drop","","",157,[[["usize",15]]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"into_iter","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"vzip","","",158,[[]]],[11,"init","","",158,[[],["usize",15]]],[11,"deref","","",158,[[["usize",15]]]],[11,"deref_mut","","",158,[[["usize",15]]]],[11,"drop","","",158,[[["usize",15]]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"vzip","","",159,[[]]],[11,"init","","",159,[[],["usize",15]]],[11,"deref","","",159,[[["usize",15]]]],[11,"deref_mut","","",159,[[["usize",15]]]],[11,"drop","","",159,[[["usize",15]]]],[11,"from","pliantdb::client::url","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"equivalent","","",2,[[],["bool",15]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"vzip","","",160,[[]]],[11,"equivalent","","",160,[[],["bool",15]]],[11,"init","","",160,[[],["usize",15]]],[11,"deref","","",160,[[["usize",15]]]],[11,"deref_mut","","",160,[[["usize",15]]]],[11,"drop","","",160,[[["usize",15]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"equivalent","","",3,[[],["bool",15]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"equivalent","","",4,[[],["bool",15]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"equivalent","","",5,[[],["bool",15]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"vzip","","",161,[[]]],[11,"init","","",161,[[],["usize",15]]],[11,"deref","","",161,[[["usize",15]]]],[11,"deref_mut","","",161,[[["usize",15]]]],[11,"drop","","",161,[[["usize",15]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","pliantdb::client","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"vzip","","",162,[[]]],[11,"init","","",162,[[],["usize",15]]],[11,"deref","","",162,[[["usize",15]]]],[11,"deref_mut","","",162,[[["usize",15]]]],[11,"drop","","",162,[[["usize",15]]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"vzip","","",163,[[]]],[11,"init","","",163,[[],["usize",15]]],[11,"deref","","",163,[[["usize",15]]]],[11,"deref_mut","","",163,[[["usize",15]]]],[11,"drop","","",163,[[["usize",15]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","pliantdb::local::core::connection","",164,[[]]],[11,"into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"vzip","","",164,[[]]],[11,"init","","",164,[[],["usize",15]]],[11,"deref","","",164,[[["usize",15]]]],[11,"deref_mut","","",164,[[["usize",15]]]],[11,"drop","","",164,[[["usize",15]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","pliantdb::local::core::document","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"equivalent","","",12,[[],["bool",15]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"equivalent","","",14,[[],["bool",15]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"from","pliantdb::local::core::networking","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[],["usize",15]]],[11,"deref","","",18,[[["usize",15]]]],[11,"deref_mut","","",18,[[["usize",15]]]],[11,"drop","","",18,[[["usize",15]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[],["usize",15]]],[11,"deref","","",20,[[["usize",15]]]],[11,"deref_mut","","",20,[[["usize",15]]]],[11,"drop","","",20,[[["usize",15]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[],["usize",15]]],[11,"deref","","",31,[[["usize",15]]]],[11,"deref_mut","","",31,[[["usize",15]]]],[11,"drop","","",31,[[["usize",15]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[],["usize",15]]],[11,"deref","","",34,[[["usize",15]]]],[11,"deref_mut","","",34,[[["usize",15]]]],[11,"drop","","",34,[[["usize",15]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[],["usize",15]]],[11,"deref","","",37,[[["usize",15]]]],[11,"deref_mut","","",37,[[["usize",15]]]],[11,"drop","","",37,[[["usize",15]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[],["usize",15]]],[11,"deref","","",38,[[["usize",15]]]],[11,"deref_mut","","",38,[[["usize",15]]]],[11,"drop","","",38,[[["usize",15]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[],["usize",15]]],[11,"deref","","",40,[[["usize",15]]]],[11,"deref_mut","","",40,[[["usize",15]]]],[11,"drop","","",40,[[["usize",15]]]],[11,"from","pliantdb::local::core::networking::fabruic","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"init","","",42,[[],["usize",15]]],[11,"deref","","",42,[[["usize",15]]]],[11,"deref_mut","","",42,[[["usize",15]]]],[11,"drop","","",42,[[["usize",15]]]],[11,"from","pliantdb::local::core::networking::fabruic::error","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[],["usize",15]]],[11,"deref","","",45,[[["usize",15]]]],[11,"deref_mut","","",45,[[["usize",15]]]],[11,"drop","","",45,[[["usize",15]]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_string","","",165,[[],["string",3]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"vzip","","",165,[[]]],[11,"init","","",165,[[],["usize",15]]],[11,"deref","","",165,[[["usize",15]]]],[11,"deref_mut","","",165,[[["usize",15]]]],[11,"drop","","",165,[[["usize",15]]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"to_string","","",166,[[],["string",3]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"vzip","","",166,[[]]],[11,"equivalent","","",166,[[],["bool",15]]],[11,"init","","",166,[[],["usize",15]]],[11,"deref","","",166,[[["usize",15]]]],[11,"deref_mut","","",166,[[["usize",15]]]],[11,"drop","","",166,[[["usize",15]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[],["usize",15]]],[11,"deref","","",46,[[["usize",15]]]],[11,"deref_mut","","",46,[[["usize",15]]]],[11,"drop","","",46,[[["usize",15]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"equivalent","","",47,[[],["bool",15]]],[11,"init","","",47,[[],["usize",15]]],[11,"deref","","",47,[[["usize",15]]]],[11,"deref_mut","","",47,[[["usize",15]]]],[11,"drop","","",47,[[["usize",15]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"equivalent","","",48,[[],["bool",15]]],[11,"init","","",48,[[],["usize",15]]],[11,"deref","","",48,[[["usize",15]]]],[11,"deref_mut","","",48,[[["usize",15]]]],[11,"drop","","",48,[[["usize",15]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[],["usize",15]]],[11,"deref","","",49,[[["usize",15]]]],[11,"deref_mut","","",49,[[["usize",15]]]],[11,"drop","","",49,[[["usize",15]]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"to_string","","",167,[[],["string",3]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"vzip","","",167,[[]]],[11,"init","","",167,[[],["usize",15]]],[11,"deref","","",167,[[["usize",15]]]],[11,"deref_mut","","",167,[[["usize",15]]]],[11,"drop","","",167,[[["usize",15]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"equivalent","","",50,[[],["bool",15]]],[11,"init","","",50,[[],["usize",15]]],[11,"deref","","",50,[[["usize",15]]]],[11,"deref_mut","","",50,[[["usize",15]]]],[11,"drop","","",50,[[["usize",15]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"equivalent","","",51,[[],["bool",15]]],[11,"init","","",51,[[],["usize",15]]],[11,"deref","","",51,[[["usize",15]]]],[11,"deref_mut","","",51,[[["usize",15]]]],[11,"drop","","",51,[[["usize",15]]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"to_string","","",168,[[],["string",3]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"vzip","","",168,[[]]],[11,"init","","",168,[[],["usize",15]]],[11,"deref","","",168,[[["usize",15]]]],[11,"deref_mut","","",168,[[["usize",15]]]],[11,"drop","","",168,[[["usize",15]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[],["usize",15]]],[11,"deref","","",52,[[["usize",15]]]],[11,"deref_mut","","",52,[[["usize",15]]]],[11,"drop","","",52,[[["usize",15]]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"to_string","","",169,[[],["string",3]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"vzip","","",169,[[]]],[11,"init","","",169,[[],["usize",15]]],[11,"deref","","",169,[[["usize",15]]]],[11,"deref_mut","","",169,[[["usize",15]]]],[11,"drop","","",169,[[["usize",15]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[],["usize",15]]],[11,"deref","","",55,[[["usize",15]]]],[11,"deref_mut","","",55,[[["usize",15]]]],[11,"drop","","",55,[[["usize",15]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[],["usize",15]]],[11,"deref","","",56,[[["usize",15]]]],[11,"deref_mut","","",56,[[["usize",15]]]],[11,"drop","","",56,[[["usize",15]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"equivalent","","",57,[[],["bool",15]]],[11,"init","","",57,[[],["usize",15]]],[11,"deref","","",57,[[["usize",15]]]],[11,"deref_mut","","",57,[[["usize",15]]]],[11,"drop","","",57,[[["usize",15]]]],[11,"from","pliantdb::local::core::networking::fabruic","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"as_bits","","",170,[[],["bitslice",3]]],[11,"vzip","","",170,[[]]],[11,"equivalent","","",170,[[],["bool",15]]],[11,"init","","",170,[[],["usize",15]]],[11,"deref","","",170,[[["usize",15]]]],[11,"deref_mut","","",170,[[["usize",15]]]],[11,"drop","","",170,[[["usize",15]]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"vzip","","",171,[[]]],[11,"equivalent","","",171,[[],["bool",15]]],[11,"init","","",171,[[],["usize",15]]],[11,"deref","","",171,[[["usize",15]]]],[11,"deref_mut","","",171,[[["usize",15]]]],[11,"drop","","",171,[[["usize",15]]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"vzip","","",172,[[]]],[11,"init","","",172,[[],["usize",15]]],[11,"deref","","",172,[[["usize",15]]]],[11,"deref_mut","","",172,[[["usize",15]]]],[11,"drop","","",172,[[["usize",15]]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"vzip","","",173,[[]]],[11,"init","","",173,[[],["usize",15]]],[11,"deref","","",173,[[["usize",15]]]],[11,"deref_mut","","",173,[[["usize",15]]]],[11,"drop","","",173,[[["usize",15]]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"vzip","","",174,[[]]],[11,"init","","",174,[[],["usize",15]]],[11,"deref","","",174,[[["usize",15]]]],[11,"deref_mut","","",174,[[["usize",15]]]],[11,"drop","","",174,[[["usize",15]]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"vzip","","",175,[[]]],[11,"init","","",175,[[],["usize",15]]],[11,"deref","","",175,[[["usize",15]]]],[11,"deref_mut","","",175,[[["usize",15]]]],[11,"drop","","",175,[[["usize",15]]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"vzip","","",176,[[]]],[11,"init","","",176,[[],["usize",15]]],[11,"deref","","",176,[[["usize",15]]]],[11,"deref_mut","","",176,[[["usize",15]]]],[11,"drop","","",176,[[["usize",15]]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"try_poll_next","","",177,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"vzip","","",177,[[]]],[11,"init","","",177,[[],["usize",15]]],[11,"deref","","",177,[[["usize",15]]]],[11,"deref_mut","","",177,[[["usize",15]]]],[11,"drop","","",177,[[["usize",15]]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"vzip","","",178,[[]]],[11,"init","","",178,[[],["usize",15]]],[11,"deref","","",178,[[["usize",15]]]],[11,"deref_mut","","",178,[[["usize",15]]]],[11,"drop","","",178,[[["usize",15]]]],[11,"from","pliantdb::local::core::schema","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[],["usize",15]]],[11,"deref","","",59,[[["usize",15]]]],[11,"deref_mut","","",59,[[["usize",15]]]],[11,"drop","","",59,[[["usize",15]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[],["usize",15]]],[11,"deref","","",60,[[["usize",15]]]],[11,"deref_mut","","",60,[[["usize",15]]]],[11,"drop","","",60,[[["usize",15]]]],[11,"from","pliantdb::local::core::schema::view::map","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[],["usize",15]]],[11,"deref","","",61,[[["usize",15]]]],[11,"deref_mut","","",61,[[["usize",15]]]],[11,"drop","","",61,[[["usize",15]]]],[11,"from","pliantdb::local::core::schema","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[],["usize",15]]],[11,"deref","","",62,[[["usize",15]]]],[11,"deref_mut","","",62,[[["usize",15]]]],[11,"drop","","",62,[[["usize",15]]]],[11,"from","pliantdb::local::core::schema::view","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"init","","",64,[[],["usize",15]]],[11,"deref","","",64,[[["usize",15]]]],[11,"deref_mut","","",64,[[["usize",15]]]],[11,"drop","","",64,[[["usize",15]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"as_bits","","",66,[[],["bitslice",3]]],[11,"vzip","","",66,[[]]],[11,"init","","",66,[[],["usize",15]]],[11,"deref","","",66,[[["usize",15]]]],[11,"deref_mut","","",66,[[["usize",15]]]],[11,"drop","","",66,[[["usize",15]]]],[11,"from","pliantdb::local::core::schema","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"to_string","","",179,[[],["string",3]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"vzip","","",179,[[]]],[11,"equivalent","","",179,[[],["bool",15]]],[11,"init","","",179,[[],["usize",15]]],[11,"deref","","",179,[[["usize",15]]]],[11,"deref_mut","","",179,[[["usize",15]]]],[11,"drop","","",179,[[["usize",15]]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"to_string","","",180,[[],["string",3]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"vzip","","",180,[[]]],[11,"equivalent","","",180,[[],["bool",15]]],[11,"init","","",180,[[],["usize",15]]],[11,"deref","","",180,[[["usize",15]]]],[11,"deref_mut","","",180,[[["usize",15]]]],[11,"drop","","",180,[[["usize",15]]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"vzip","","",181,[[]]],[11,"init","","",181,[[],["usize",15]]],[11,"deref","","",181,[[["usize",15]]]],[11,"deref_mut","","",181,[[["usize",15]]]],[11,"drop","","",181,[[["usize",15]]]],[11,"from","pliantdb::local::core::transaction","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"init","","",70,[[],["usize",15]]],[11,"deref","","",70,[[["usize",15]]]],[11,"deref_mut","","",70,[[["usize",15]]]],[11,"drop","","",70,[[["usize",15]]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"init","","",71,[[],["usize",15]]],[11,"deref","","",71,[[["usize",15]]]],[11,"deref_mut","","",71,[[["usize",15]]]],[11,"drop","","",71,[[["usize",15]]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"init","","",72,[[],["usize",15]]],[11,"deref","","",72,[[["usize",15]]]],[11,"deref_mut","","",72,[[["usize",15]]]],[11,"drop","","",72,[[["usize",15]]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"init","","",76,[[],["usize",15]]],[11,"deref","","",76,[[["usize",15]]]],[11,"deref_mut","","",76,[[["usize",15]]]],[11,"drop","","",76,[[["usize",15]]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"init","","",79,[[],["usize",15]]],[11,"deref","","",79,[[["usize",15]]]],[11,"deref_mut","","",79,[[["usize",15]]]],[11,"drop","","",79,[[["usize",15]]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"init","","",80,[[],["usize",15]]],[11,"deref","","",80,[[["usize",15]]]],[11,"deref_mut","","",80,[[["usize",15]]]],[11,"drop","","",80,[[["usize",15]]]],[11,"from","pliantdb::local::core","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"init","","",83,[[],["usize",15]]],[11,"deref","","",83,[[["usize",15]]]],[11,"deref_mut","","",83,[[["usize",15]]]],[11,"drop","","",83,[[["usize",15]]]],[11,"from","pliantdb::local::core::test_util","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"schema_id","","",84,[[],["schemaid",3]]],[11,"define_collections","","",84,[[["schematic",3]]]],[11,"vzip","","",84,[[]]],[11,"init","","",84,[[],["usize",15]]],[11,"deref","","",84,[[["usize",15]]]],[11,"deref_mut","","",84,[[["usize",15]]]],[11,"drop","","",84,[[["usize",15]]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"collection","","",182,[[],["collectionid",3]]],[11,"version","","",182,[[],["u64",15]]],[11,"name","","",182,[[],[["cow",4],["str",15]]]],[11,"map","","",182,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",182,[[["bool",15]],[["vec",3],["result",4],["error",4]]]],[11,"vzip","","",182,[[]]],[11,"init","","",182,[[],["usize",15]]],[11,"deref","","",182,[[["usize",15]]]],[11,"deref_mut","","",182,[[["usize",15]]]],[11,"drop","","",182,[[["usize",15]]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"collection","","",183,[[],["collectionid",3]]],[11,"version","","",183,[[],["u64",15]]],[11,"name","","",183,[[],[["cow",4],["str",15]]]],[11,"map","","",183,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",183,[[["bool",15]],[["vec",3],["result",4],["error",4]]]],[11,"vzip","","",183,[[]]],[11,"init","","",183,[[],["usize",15]]],[11,"deref","","",183,[[["usize",15]]]],[11,"deref_mut","","",183,[[["usize",15]]]],[11,"drop","","",183,[[["usize",15]]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"collection","","",184,[[],["collectionid",3]]],[11,"version","","",184,[[],["u64",15]]],[11,"name","","",184,[[],[["cow",4],["str",15]]]],[11,"map","","",184,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",184,[[["bool",15]],[["vec",3],["result",4],["error",4]]]],[11,"vzip","","",184,[[]]],[11,"init","","",184,[[],["usize",15]]],[11,"deref","","",184,[[["usize",15]]]],[11,"deref_mut","","",184,[[["usize",15]]]],[11,"drop","","",184,[[["usize",15]]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"collection","","",185,[[],["collectionid",3]]],[11,"version","","",185,[[],["u64",15]]],[11,"name","","",185,[[],[["cow",4],["str",15]]]],[11,"map","","",185,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",185,[[["bool",15]],[["vec",3],["result",4],["error",4]]]],[11,"vzip","","",185,[[]]],[11,"init","","",185,[[],["usize",15]]],[11,"deref","","",185,[[["usize",15]]]],[11,"deref_mut","","",185,[[["usize",15]]]],[11,"drop","","",185,[[["usize",15]]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"vzip","","",186,[[]]],[11,"init","","",186,[[],["usize",15]]],[11,"deref","","",186,[[["usize",15]]]],[11,"deref_mut","","",186,[[["usize",15]]]],[11,"drop","","",186,[[["usize",15]]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"init","","",85,[[],["usize",15]]],[11,"deref","","",85,[[["usize",15]]]],[11,"deref_mut","","",85,[[["usize",15]]]],[11,"drop","","",85,[[["usize",15]]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"schema_id","","",187,[[],["schemaid",3]]],[11,"define_collections","","",187,[[["schematic",3]]]],[11,"vzip","","",187,[[]]],[11,"init","","",187,[[],["usize",15]]],[11,"deref","","",187,[[["usize",15]]]],[11,"deref_mut","","",187,[[["usize",15]]]],[11,"drop","","",187,[[["usize",15]]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"schema_id","","",188,[[],["schemaid",3]]],[11,"define_collections","","",188,[[["schematic",3]]]],[11,"vzip","","",188,[[]]],[11,"init","","",188,[[],["usize",15]]],[11,"deref","","",188,[[["usize",15]]]],[11,"deref_mut","","",188,[[["usize",15]]]],[11,"drop","","",188,[[["usize",15]]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"schema_id","","",189,[[],["schemaid",3]]],[11,"define_collections","","",189,[[["schematic",3]]]],[11,"vzip","","",189,[[]]],[11,"init","","",189,[[],["usize",15]]],[11,"deref","","",189,[[["usize",15]]]],[11,"deref_mut","","",189,[[["usize",15]]]],[11,"drop","","",189,[[["usize",15]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"to_string","","",86,[[],["string",3]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"init","","",86,[[],["usize",15]]],[11,"deref","","",86,[[["usize",15]]]],[11,"deref_mut","","",86,[[["usize",15]]]],[11,"drop","","",86,[[["usize",15]]]],[11,"from","pliantdb::local::core::circulate","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"init","","",87,[[],["usize",15]]],[11,"deref","","",87,[[["usize",15]]]],[11,"deref_mut","","",87,[[["usize",15]]]],[11,"drop","","",87,[[["usize",15]]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"vzip","","",190,[[]]],[11,"init","","",190,[[],["usize",15]]],[11,"deref","","",190,[[["usize",15]]]],[11,"deref_mut","","",190,[[["usize",15]]]],[11,"drop","","",190,[[["usize",15]]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"vzip","","",191,[[]]],[11,"init","","",191,[[],["usize",15]]],[11,"deref","","",191,[[["usize",15]]]],[11,"deref_mut","","",191,[[["usize",15]]]],[11,"drop","","",191,[[["usize",15]]]],[11,"from","pliantdb::local::core::circulate::flume::select","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"to_string","","",88,[[],["string",3]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"equivalent","","",88,[[],["bool",15]]],[11,"init","","",88,[[],["usize",15]]],[11,"deref","","",88,[[["usize",15]]]],[11,"deref_mut","","",88,[[["usize",15]]]],[11,"drop","","",88,[[["usize",15]]]],[11,"from","pliantdb::local::core::circulate::flume","",192,[[]]],[11,"into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"vzip","","",192,[[]]],[11,"init","","",192,[[],["usize",15]]],[11,"deref","","",192,[[["usize",15]]]],[11,"deref_mut","","",192,[[["usize",15]]]],[11,"drop","","",192,[[["usize",15]]]],[11,"from","pliantdb::local::core::circulate::flume::async","",193,[[]]],[11,"into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"into_future","","",193,[[]]],[11,"try_poll","","",193,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",193,[[]]],[11,"init","","",193,[[],["usize",15]]],[11,"deref","","",193,[[["usize",15]]]],[11,"deref_mut","","",193,[[["usize",15]]]],[11,"drop","","",193,[[["usize",15]]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"vzip","","",194,[[]]],[11,"init","","",194,[[],["usize",15]]],[11,"deref","","",194,[[["usize",15]]]],[11,"deref_mut","","",194,[[["usize",15]]]],[11,"drop","","",194,[[["usize",15]]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"into_future","","",195,[[]]],[11,"try_poll","","",195,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",195,[[]]],[11,"init","","",195,[[],["usize",15]]],[11,"deref","","",195,[[["usize",15]]]],[11,"deref_mut","","",195,[[["usize",15]]]],[11,"drop","","",195,[[["usize",15]]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"try_poll_next","","",196,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"vzip","","",196,[[]]],[11,"init","","",196,[[],["usize",15]]],[11,"deref","","",196,[[["usize",15]]]],[11,"deref_mut","","",196,[[["usize",15]]]],[11,"drop","","",196,[[["usize",15]]]],[11,"from","pliantdb::local::core::circulate::flume","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"to_string","","",89,[[],["string",3]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"equivalent","","",89,[[],["bool",15]]],[11,"init","","",89,[[],["usize",15]]],[11,"deref","","",89,[[["usize",15]]]],[11,"deref_mut","","",89,[[["usize",15]]]],[11,"drop","","",89,[[["usize",15]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"to_string","","",90,[[],["string",3]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"equivalent","","",90,[[],["bool",15]]],[11,"init","","",90,[[],["usize",15]]],[11,"deref","","",90,[[["usize",15]]]],[11,"deref_mut","","",90,[[["usize",15]]]],[11,"drop","","",90,[[["usize",15]]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"to_string","","",91,[[],["string",3]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"equivalent","","",91,[[],["bool",15]]],[11,"init","","",91,[[],["usize",15]]],[11,"deref","","",91,[[["usize",15]]]],[11,"deref_mut","","",91,[[["usize",15]]]],[11,"drop","","",91,[[["usize",15]]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"to_string","","",92,[[],["string",3]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"equivalent","","",92,[[],["bool",15]]],[11,"init","","",92,[[],["usize",15]]],[11,"deref","","",92,[[["usize",15]]]],[11,"deref_mut","","",92,[[["usize",15]]]],[11,"drop","","",92,[[["usize",15]]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"to_string","","",93,[[],["string",3]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"equivalent","","",93,[[],["bool",15]]],[11,"init","","",93,[[],["usize",15]]],[11,"deref","","",93,[[["usize",15]]]],[11,"deref_mut","","",93,[[["usize",15]]]],[11,"drop","","",93,[[["usize",15]]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"to_string","","",94,[[],["string",3]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"equivalent","","",94,[[],["bool",15]]],[11,"init","","",94,[[],["usize",15]]],[11,"deref","","",94,[[["usize",15]]]],[11,"deref_mut","","",94,[[["usize",15]]]],[11,"drop","","",94,[[["usize",15]]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"vzip","","",197,[[]]],[11,"init","","",197,[[],["usize",15]]],[11,"deref","","",197,[[["usize",15]]]],[11,"deref_mut","","",197,[[["usize",15]]]],[11,"drop","","",197,[[["usize",15]]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"vzip","","",198,[[]]],[11,"init","","",198,[[],["usize",15]]],[11,"deref","","",198,[[["usize",15]]]],[11,"deref_mut","","",198,[[["usize",15]]]],[11,"drop","","",198,[[["usize",15]]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"into_iter","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"nfd","","",199,[[],["decompositions",3]]],[11,"nfkd","","",199,[[],["decompositions",3]]],[11,"nfc","","",199,[[],["recompositions",3]]],[11,"nfkc","","",199,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",199,[[],["replacements",3]]],[11,"stream_safe","","",199,[[],["streamsafe",3]]],[11,"vzip","","",199,[[]]],[11,"emit","","",199,[[["binencoder",3]],[["usize",15],["result",4],["protoerror",3]]]],[11,"init","","",199,[[],["usize",15]]],[11,"deref","","",199,[[["usize",15]]]],[11,"deref_mut","","",199,[[["usize",15]]]],[11,"drop","","",199,[[["usize",15]]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"into_iter","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"nfd","","",200,[[],["decompositions",3]]],[11,"nfkd","","",200,[[],["decompositions",3]]],[11,"nfc","","",200,[[],["recompositions",3]]],[11,"nfkc","","",200,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",200,[[],["replacements",3]]],[11,"stream_safe","","",200,[[],["streamsafe",3]]],[11,"vzip","","",200,[[]]],[11,"emit","","",200,[[["binencoder",3]],[["usize",15],["result",4],["protoerror",3]]]],[11,"init","","",200,[[],["usize",15]]],[11,"deref","","",200,[[["usize",15]]]],[11,"deref_mut","","",200,[[["usize",15]]]],[11,"drop","","",200,[[["usize",15]]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"into_iter","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"nfd","","",201,[[],["decompositions",3]]],[11,"nfkd","","",201,[[],["decompositions",3]]],[11,"nfc","","",201,[[],["recompositions",3]]],[11,"nfkc","","",201,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",201,[[],["replacements",3]]],[11,"stream_safe","","",201,[[],["streamsafe",3]]],[11,"vzip","","",201,[[]]],[11,"emit","","",201,[[["binencoder",3]],[["usize",15],["result",4],["protoerror",3]]]],[11,"init","","",201,[[],["usize",15]]],[11,"deref","","",201,[[["usize",15]]]],[11,"deref_mut","","",201,[[["usize",15]]]],[11,"drop","","",201,[[["usize",15]]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"into_iter","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"nfd","","",202,[[],["decompositions",3]]],[11,"nfkd","","",202,[[],["decompositions",3]]],[11,"nfc","","",202,[[],["recompositions",3]]],[11,"nfkc","","",202,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",202,[[],["replacements",3]]],[11,"stream_safe","","",202,[[],["streamsafe",3]]],[11,"vzip","","",202,[[]]],[11,"emit","","",202,[[["binencoder",3]],[["usize",15],["result",4],["protoerror",3]]]],[11,"init","","",202,[[],["usize",15]]],[11,"deref","","",202,[[["usize",15]]]],[11,"deref_mut","","",202,[[["usize",15]]]],[11,"drop","","",202,[[["usize",15]]]],[11,"from","pliantdb::local::core::num_traits","",134,[[]]],[11,"into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"vzip","","",134,[[]]],[11,"init","","",134,[[],["usize",15]]],[11,"deref","","",134,[[["usize",15]]]],[11,"deref_mut","","",134,[[["usize",15]]]],[11,"drop","","",134,[[["usize",15]]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_string","","",135,[[],["string",3]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"vzip","","",135,[[]]],[11,"init","","",135,[[],["usize",15]]],[11,"deref","","",135,[[["usize",15]]]],[11,"deref_mut","","",135,[[["usize",15]]]],[11,"drop","","",135,[[["usize",15]]]],[11,"from","pliantdb::local","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"vzip","","",136,[[]]],[11,"init","","",136,[[],["usize",15]]],[11,"deref","","",136,[[["usize",15]]]],[11,"deref_mut","","",136,[[["usize",15]]]],[11,"drop","","",136,[[["usize",15]]]],[11,"from","pliantdb::local::config","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"vzip","","",137,[[]]],[11,"init","","",137,[[],["usize",15]]],[11,"deref","","",137,[[["usize",15]]]],[11,"deref_mut","","",137,[[["usize",15]]]],[11,"drop","","",137,[[["usize",15]]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"vzip","","",138,[[]]],[11,"init","","",138,[[],["usize",15]]],[11,"deref","","",138,[[["usize",15]]]],[11,"deref_mut","","",138,[[["usize",15]]]],[11,"drop","","",138,[[["usize",15]]]],[11,"from","pliantdb::local::backup","",139,[[]]],[11,"into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"vzip","","",139,[[]]],[11,"init","","",139,[[],["usize",15]]],[11,"deref","","",139,[[["usize",15]]]],[11,"deref_mut","","",139,[[["usize",15]]]],[11,"drop","","",139,[[["usize",15]]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"vzip","","",140,[[]]],[11,"init","","",140,[[],["usize",15]]],[11,"deref","","",140,[[["usize",15]]]],[11,"deref_mut","","",140,[[["usize",15]]]],[11,"drop","","",140,[[["usize",15]]]],[11,"from","pliantdb::local","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_string","","",143,[[],["string",3]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"vzip","","",143,[[]]],[11,"init","","",143,[[],["usize",15]]],[11,"deref","","",143,[[["usize",15]]]],[11,"deref_mut","","",143,[[["usize",15]]]],[11,"drop","","",143,[[["usize",15]]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"vzip","","",203,[[]]],[11,"init","","",203,[[],["usize",15]]],[11,"deref","","",203,[[["usize",15]]]],[11,"deref_mut","","",203,[[["usize",15]]]],[11,"drop","","",203,[[["usize",15]]]],[11,"from","pliantdb::server::cli::certificate","",144,[[]]],[11,"into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"vzip","","",144,[[]]],[11,"init","","",144,[[],["usize",15]]],[11,"deref","","",144,[[["usize",15]]]],[11,"deref_mut","","",144,[[["usize",15]]]],[11,"drop","","",144,[[["usize",15]]]],[11,"from","pliantdb::server::cli::serve","",147,[[]]],[11,"into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"vzip","","",147,[[]]],[11,"init","","",147,[[],["usize",15]]],[11,"deref","","",147,[[["usize",15]]]],[11,"deref_mut","","",147,[[["usize",15]]]],[11,"drop","","",147,[[["usize",15]]]],[11,"from","pliantdb::server::cli","",148,[[]]],[11,"into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"vzip","","",148,[[]]],[11,"init","","",148,[[],["usize",15]]],[11,"deref","","",148,[[["usize",15]]]],[11,"deref_mut","","",148,[[["usize",15]]]],[11,"drop","","",148,[[["usize",15]]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"vzip","","",149,[[]]],[11,"init","","",149,[[],["usize",15]]],[11,"deref","","",149,[[["usize",15]]]],[11,"deref_mut","","",149,[[["usize",15]]]],[11,"drop","","",149,[[["usize",15]]]],[11,"from","pliantdb::server","",150,[[]]],[11,"into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"vzip","","",150,[[]]],[11,"init","","",150,[[],["usize",15]]],[11,"deref","","",150,[[["usize",15]]]],[11,"deref_mut","","",150,[[["usize",15]]]],[11,"drop","","",150,[[["usize",15]]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_string","","",151,[[],["string",3]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"vzip","","",151,[[]]],[11,"init","","",151,[[],["usize",15]]],[11,"deref","","",151,[[["usize",15]]]],[11,"deref_mut","","",151,[[["usize",15]]]],[11,"drop","","",151,[[["usize",15]]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"vzip","","",204,[[]]],[11,"init","","",204,[[],["usize",15]]],[11,"deref","","",204,[[["usize",15]]]],[11,"deref_mut","","",204,[[["usize",15]]]],[11,"drop","","",204,[[["usize",15]]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"vzip","","",205,[[]]],[11,"init","","",205,[[],["usize",15]]],[11,"deref","","",205,[[["usize",15]]]],[11,"deref_mut","","",205,[[["usize",15]]]],[11,"drop","","",205,[[["usize",15]]]],[11,"description","pliantdb::local::core::networking::fabruic::error","",166,[[],["str",15]]],[11,"description","","",165,[[],["str",15]]],[11,"cause","","",165,[[],[["option",4],["error",8]]]],[11,"source","","",165,[[],[["option",4],["error",8]]]],[11,"eq","","",166,[[["addrparseerror",3]],["bool",15]]],[11,"ne","","",166,[[["addrparseerror",3]],["bool",15]]],[11,"fmt","","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",166,[[],["addrparseerror",3]]],[11,"fmt","","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",165,[[["intoinnererror",3]],["error",3]]],[11,"from","","Converts an [<code>ErrorKind</code>] into an [<code>Error</code>].",165,[[["errorkind",4]],["error",3]]],[11,"from","","Converts a [<code>NulError</code>] into a [<code>io::Error</code>].",165,[[["nulerror",3]],["error",3]]],[11,"fmt","pliantdb::client","",163,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"create_subscriber","","",163,[[],[["box",3],["pin",3]]]],[11,"publish","","",163,[[],[["pin",3],["box",3]]]],[11,"create_database","","",162,[[["str",15],["schemaid",3]],[["pin",3],["box",3]]]],[11,"delete_database","","",162,[[["str",15]],[["pin",3],["box",3]]]],[11,"list_databases","","",162,[[],[["pin",3],["box",3]]]],[11,"list_available_schemas","","",162,[[],[["pin",3],["box",3]]]],[11,"clone","","",162,[[],["client",3]]],[11,"clone","","",163,[[],["remotedatabase",3]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"get","","",163,[[["u64",15]],[["box",3],["pin",3]]]],[11,"get_multiple","","",163,[[],[["box",3],["pin",3]]]],[11,"query","","",163,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"query_with_docs","","",163,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"reduce","","",163,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"reduce_grouped","","",163,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"apply_transaction","","",163,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"list_executed_transactions","","",163,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[11,"last_transaction_id","","",163,[[],[["box",3],["pin",3]]]],[11,"from","","",7,[[["error",4]],["error",4]]],[11,"from","pliantdb::local::core","",83,[[["error",4]],["error",4]]],[11,"from","pliantdb::client","",7,[[["error",4]],["error",4]]],[11,"from","","",7,[[["senderror",3]],["error",4]]],[11,"from","","",7,[[["global",3],["box",3],["errorkind",4]],["error",4]]],[11,"from","","",7,[[["error",4]],["error",4]]],[11,"from","","",7,[[["error",4]],["error",4]]],[11,"from","","",7,[[["recverror",4]],["error",4]]],[11,"try_from","pliantdb::client::url","",153,[[["str",15]],[["result",4],["url",3]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",155,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",2,[[]]],[11,"hash","","",160,[[]]],[11,"hash","","",153,[[]]],[11,"hash","","",3,[[]]],[11,"index","","",153,[[["range",3],["position",4]],["str",15]]],[11,"index","","",153,[[["rangefull",3]],["str",15]]],[11,"index","","",153,[[["position",4],["rangeto",3]],["str",15]]],[11,"index","","",153,[[["position",4],["rangefrom",3]],["str",15]]],[11,"partial_cmp","","",153,[[["url",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["host",4]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["host",4]],["bool",15]]],[11,"le","","",2,[[["host",4]],["bool",15]]],[11,"gt","","",2,[[["host",4]],["bool",15]]],[11,"ge","","",2,[[["host",4]],["bool",15]]],[11,"from","","",4,[[["errors",3]],["parseerror",4]]],[11,"as_ref","","",153,[[],["str",15]]],[11,"clone","","",3,[[],["origin",4]]],[11,"clone","","",154,[[],["parseoptions",3]]],[11,"clone","","",5,[[],["syntaxviolation",4]]],[11,"clone","","",6,[[],["position",4]]],[11,"clone","","",160,[[],["opaqueorigin",3]]],[11,"clone","","",4,[[],["parseerror",4]]],[11,"clone","","",2,[[],["host",4]]],[11,"clone","","",153,[[],["url",3]]],[11,"drop","","",155,[[]]],[11,"drop","","",161,[[]]],[11,"cmp","","",153,[[["url",3]],["ordering",4]]],[11,"cmp","","",2,[[["host",4]],["ordering",4]]],[11,"as_mut_string","","",155,[[],["string",3]]],[11,"finish","","",155,[[],["url",3]]],[11,"eq","","",153,[[["url",3]],["bool",15]]],[11,"eq","","",5,[[["syntaxviolation",4]],["bool",15]]],[11,"eq","","",3,[[["origin",4]],["bool",15]]],[11,"ne","","",3,[[["origin",4]],["bool",15]]],[11,"eq","","",160,[[["opaqueorigin",3]],["bool",15]]],[11,"ne","","",160,[[["opaqueorigin",3]],["bool",15]]],[11,"eq","","",2,[[["host",4]],["bool",15]]],[11,"eq","","",4,[[["parseerror",4]],["bool",15]]],[11,"from_str","","",153,[[["str",15]],[["parseerror",4],["result",4],["url",3]]]],[11,"fmt","pliantdb::client::url::form_urlencoded","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next","","",156,[[],["option",4]]],[11,"next","","",157,[[],["option",4]]],[11,"next","","",158,[[],[["option",4],["str",15]]]],[11,"size_hint","","",158,[[]]],[11,"clone","","",156,[[],["parse",3]]],[11,"fmt","pliantdb::local::core::circulate::flume","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::circulate::flume::select","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::circulate::flume","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"len","","",201,[[],["usize",15]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::circulate::flume::select","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::circulate::flume","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"is_terminated","pliantdb::local::core::circulate::flume::async","",195,[[],["bool",15]]],[11,"is_terminated","","",193,[[],["bool",15]]],[11,"into_iter","pliantdb::local::core::circulate::flume","",198,[[]]],[11,"next","","",202,[[],["option",4]]],[11,"next","","",199,[[],["option",4]]],[11,"next","","",200,[[],["option",4]]],[11,"next","","",201,[[],["option",4]]],[11,"poll_next","pliantdb::local::core::circulate::flume::async","",196,[[["recvstream",3],["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"default","pliantdb::local::core::circulate::flume","",192,[[],["selector",3]]],[11,"poll","pliantdb::local::core::circulate::flume::async","",195,[[["context",3],["pin",3],["recvfut",3]],["poll",4]]],[11,"poll","","",193,[[["context",3],["pin",3],["sendfut",3]],["poll",4]]],[11,"clone","pliantdb::local::core::circulate::flume","",90,[[],["trysenderror",4]]],[11,"clone","","",94,[[],["recvtimeouterror",4]]],[11,"clone","","",89,[[],["senderror",3]]],[11,"clone","pliantdb::local::core::circulate::flume::async","",196,[[],["recvstream",3]]],[11,"clone","pliantdb::local::core::circulate::flume::select","",88,[[],["selecterror",4]]],[11,"clone","pliantdb::local::core::circulate::flume","",92,[[],["recverror",4]]],[11,"clone","","",91,[[],["sendtimeouterror",4]]],[11,"clone","","Clone this sender. [<code>Sender</code>] acts as a handle to the …",197,[[],["sender",3]]],[11,"clone","pliantdb::local::core::circulate::flume::async","",194,[[],["sendsink",3]]],[11,"clone","pliantdb::local::core::circulate::flume","",93,[[],["tryrecverror",4]]],[11,"clone","","Clone this receiver. [<code>Receiver</code>] acts as a handle to the …",198,[[],["receiver",3]]],[11,"drop","pliantdb::local::core::circulate::flume::async","",195,[[]]],[11,"drop","","",193,[[]]],[11,"drop","pliantdb::local::core::circulate::flume","",198,[[]]],[11,"drop","","",197,[[]]],[11,"is_terminated","pliantdb::local::core::circulate::flume::async","",196,[[],["bool",15]]],[11,"eq","pliantdb::local::core::circulate::flume","",89,[[["senderror",3]],["bool",15]]],[11,"ne","","",89,[[["senderror",3]],["bool",15]]],[11,"eq","","",91,[[["sendtimeouterror",4]],["bool",15]]],[11,"ne","","",91,[[["sendtimeouterror",4]],["bool",15]]],[11,"eq","pliantdb::local::core::circulate::flume::select","",88,[[["selecterror",4]],["bool",15]]],[11,"eq","pliantdb::local::core::circulate::flume","",92,[[["recverror",4]],["bool",15]]],[11,"eq","","",93,[[["tryrecverror",4]],["bool",15]]],[11,"eq","","",90,[[["trysenderror",4]],["bool",15]]],[11,"ne","","",90,[[["trysenderror",4]],["bool",15]]],[11,"eq","","",94,[[["recvtimeouterror",4]],["bool",15]]],[11,"poll_ready","pliantdb::local::core::circulate::flume::async","",194,[[["context",3],["sendsink",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",194,[[["sendsink",3],["pin",3]],["result",4]]],[11,"poll_flush","","",194,[[["context",3],["sendsink",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",194,[[["context",3],["sendsink",3],["pin",3]],[["poll",4],["result",4]]]],[11,"from","pliantdb::local::core::networking::fabruic::error","",165,[[["error",3]],["error",3]]],[11,"create_subscriber","pliantdb::local::core::circulate","",190,[[],[["box",3],["pin",3]]]],[11,"publish","","",190,[[],[["pin",3],["box",3]]]],[11,"fmt","pliantdb::local::core::networking","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",185,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::transaction","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::transaction","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",183,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::connection","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",181,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::transaction","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::document","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::transaction","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::connection","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::transaction","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema::view::map","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::document","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::document","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema::view","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::test_util","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::schema::view","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"version","pliantdb::local::core::test_util","",182,[[],["u64",15]]],[11,"name","","",182,[[],[["cow",4],["str",15]]]],[11,"map","","",182,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",182,[[["bool",15]],[["error",4],["result",4]]]],[11,"version","","",185,[[],["u64",15]]],[11,"name","","",185,[[],[["cow",4],["str",15]]]],[11,"map","","",185,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"version","","",183,[[],["u64",15]]],[11,"name","","",183,[[],[["cow",4],["str",15]]]],[11,"map","","",183,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",183,[[["bool",15]],[["error",4],["result",4]]]],[11,"version","","",184,[[],["u64",15]]],[11,"name","","",184,[[],[["cow",4],["str",15]]]],[11,"map","","",184,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",184,[[["bool",15]],[["result",4],["error",4]]]],[11,"subscribe_to","pliantdb::local::core::circulate","",191,[[],[["pin",3],["box",3]]]],[11,"unsubscribe_from","","",191,[[["str",15]],[["pin",3],["box",3]]]],[11,"receiver","","",191,[[],["receiver",3]]],[11,"hash","pliantdb::local::core::schema","",180,[[]]],[11,"hash","","",179,[[]]],[11,"from","","",179,[[["str",15]],["schemaid",3]]],[11,"from","pliantdb::local::core::schema::view","",64,[[["error",3]],["error",4]]],[11,"from","pliantdb::local::core::schema","",180,[[["string",3]],["collectionid",3]]],[11,"from","pliantdb::local::core::schema::view","",66,[[],["serializablevalue",4]]],[11,"from","pliantdb::local::core::schema","",180,[[["str",15]],["collectionid",3]]],[11,"from","pliantdb::local::core","",83,[[["error",3]],["error",4]]],[11,"source","pliantdb::local::core::schema::view","",64,[[],[["option",4],["error",8]]]],[11,"serialize","pliantdb::local::core::networking","",38,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",70,[[],["result",4]]],[11,"serialize","pliantdb::local::core","",83,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",71,[[],["result",4]]],[11,"serialize","pliantdb::local::core::connection","",10,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema::view::map","",61,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",79,[[],["result",4]]],[11,"serialize","pliantdb::local::core::test_util","",84,[[],["result",4]]],[11,"serialize","pliantdb::local::core::document","",14,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema","",62,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",40,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",72,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",31,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","pliantdb::local::core::document","",13,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",18,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",76,[[],["result",4]]],[11,"serialize","","",80,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",15,[[],["result",4]]],[11,"serialize","pliantdb::local::core::connection","",11,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",20,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema","",179,[[],["result",4]]],[11,"serialize","pliantdb::local::core::document","",12,[[],["result",4]]],[11,"serialize","pliantdb::local::core::networking","",30,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema","",180,[[],["result",4]]],[11,"as_ref","","",180,[[],["str",15]]],[11,"as_ref","","",179,[[],["str",15]]],[11,"as_ref","pliantdb::local::core::test_util","",85,[[],["path",3]]],[11,"as_ref","pliantdb::local::core::schema::view","",66,[[]]],[11,"default","pliantdb::local::core::test_util","",84,[[],["basic",3]]],[11,"default","pliantdb::local::core::schema","",181,[[],["schematic",3]]],[11,"default","pliantdb::local::core::transaction","",70,[[],["transaction",3]]],[11,"schema_id","pliantdb::local::core::test_util","",186,[[],["schemaid",3]]],[11,"define_collections","","",186,[[["schematic",3]]]],[11,"clone","pliantdb::local::core::connection","",11,[[],["accesspolicy",4]]],[11,"clone","pliantdb::local::core::transaction","",71,[[],["operation",3]]],[11,"clone","pliantdb::local::core::schema","",179,[[],["schemaid",3]]],[11,"clone","pliantdb::local::core::document","",12,[[],["header",3]]],[11,"clone","pliantdb::local::core::networking","",31,[[],["serverresponse",4]]],[11,"clone","pliantdb::local::core::transaction","",70,[[],["transaction",3]]],[11,"clone","pliantdb::local::core::connection","",10,[[],["querykey",4]]],[11,"clone","pliantdb::local::core","",83,[[],["error",4]]],[11,"clone","pliantdb::local::core::networking","",40,[[],["error",4]]],[11,"clone","pliantdb::local::core::transaction","",79,[[],["executed",3]]],[11,"clone","pliantdb::local::core::test_util","",86,[[],["harnesstest",4]]],[11,"clone","pliantdb::local::core::transaction","",76,[[],["operationresult",4]]],[11,"clone","","",72,[[],["command",4]]],[11,"clone","pliantdb::local::core::networking","",20,[[],["databaserequest",4]]],[11,"clone","pliantdb::local::core::schema","",62,[[],["mappedvalue",3]]],[11,"clone","pliantdb::local::core::networking","",16,[[],["request",4]]],[11,"clone","pliantdb::local::core::schema::view::map","",61,[[],["serialized",3]]],[11,"clone","pliantdb::local::core::networking","",30,[[],["response",4]]],[11,"clone","pliantdb::local::core::document","",13,[[],["document",3]]],[11,"clone","","",14,[[],["revision",3]]],[11,"clone","pliantdb::local::core::networking","",15,[[],["payload",3]]],[11,"clone","","",18,[[],["serverrequest",4]]],[11,"clone","","",34,[[],["databaseresponse",4]]],[11,"clone","pliantdb::local::core::schema","",180,[[],["collectionid",3]]],[11,"clone","pliantdb::local::core::networking","",37,[[],["mappeddocument",3]]],[11,"clone","pliantdb::local::core::transaction","",80,[[],["changeddocument",3]]],[11,"clone","pliantdb::local::core::networking","",38,[[],["database",3]]],[11,"drop","pliantdb::local::core::test_util","",85,[[]]],[11,"eq","pliantdb::local::core::document","",14,[[["revision",3]],["bool",15]]],[11,"ne","","",14,[[["revision",3]],["bool",15]]],[11,"eq","pliantdb::local::core::test_util","",84,[[["basic",3]],["bool",15]]],[11,"ne","","",84,[[["basic",3]],["bool",15]]],[11,"eq","pliantdb::local::core::schema","",179,[[["schemaid",3]],["bool",15]]],[11,"ne","","",179,[[["schemaid",3]],["bool",15]]],[11,"eq","","",62,[[["mappedvalue",3]],["bool",15]]],[11,"ne","","",62,[[["mappedvalue",3]],["bool",15]]],[11,"eq","","",59,[[["map",3]],["bool",15]]],[11,"ne","","",59,[[["map",3]],["bool",15]]],[11,"eq","","",180,[[["collectionid",3]],["bool",15]]],[11,"ne","","",180,[[["collectionid",3]],["bool",15]]],[11,"eq","pliantdb::local::core::document","",12,[[["header",3]],["bool",15]]],[11,"ne","","",12,[[["header",3]],["bool",15]]],[11,"eq","pliantdb::local::core::networking","",38,[[["database",3]],["bool",15]]],[11,"ne","","",38,[[["database",3]],["bool",15]]],[11,"deserialize","pliantdb::local::core::document","",12,[[],[["header",3],["result",4]]]],[11,"deserialize","","",13,[[],[["result",4],["document",3]]]],[11,"deserialize","pliantdb::local::core::transaction","",70,[[],[["result",4],["transaction",3]]]],[11,"deserialize","pliantdb::local::core::networking","",16,[[],[["result",4],["request",4]]]],[11,"deserialize","","",31,[[],[["result",4],["serverresponse",4]]]],[11,"deserialize","pliantdb::local::core","",83,[[],[["error",4],["result",4]]]],[11,"deserialize","pliantdb::local::core::transaction","",80,[[],[["result",4],["changeddocument",3]]]],[11,"deserialize","pliantdb::local::core::networking","",37,[[],[["result",4],["mappeddocument",3]]]],[11,"deserialize","pliantdb::local::core::schema","",179,[[],[["schemaid",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::schema::view::map","",61,[[],[["serialized",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::test_util","",84,[[],[["result",4],["basic",3]]]],[11,"deserialize","pliantdb::local::core::transaction","",76,[[],[["operationresult",4],["result",4]]]],[11,"deserialize","pliantdb::local::core::schema","",180,[[],[["result",4],["collectionid",3]]]],[11,"deserialize","pliantdb::local::core::connection","",11,[[],[["result",4],["accesspolicy",4]]]],[11,"deserialize","pliantdb::local::core::schema","",62,[[],[["mappedvalue",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::transaction","",71,[[],[["operation",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::networking","",20,[[],[["result",4],["databaserequest",4]]]],[11,"deserialize","","",34,[[],[["result",4],["databaseresponse",4]]]],[11,"deserialize","","",18,[[],[["result",4],["serverrequest",4]]]],[11,"deserialize","pliantdb::local::core::document","",14,[[],[["revision",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::transaction","",72,[[],[["command",4],["result",4]]]],[11,"deserialize","pliantdb::local::core::networking","",40,[[],[["result",4],["error",4]]]],[11,"deserialize","","",15,[[],[["payload",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::transaction","",79,[[],[["executed",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::connection","",10,[[],[["querykey",4],["result",4]]]],[11,"deserialize","pliantdb::local::core::networking","",38,[[],[["result",4],["database",3]]]],[11,"deserialize","","",30,[[],[["response",4],["result",4]]]],[11,"collection_id","pliantdb::local::core::test_util","",187,[[],["collectionid",3]]],[11,"define_views","","",187,[[["schematic",3]]]],[11,"collection_id","","",84,[[],["collectionid",3]]],[11,"define_views","","",84,[[["schematic",3]]]],[11,"collection_id","","",188,[[],["collectionid",3]]],[11,"define_views","","",188,[[["schematic",3]]]],[11,"collection_id","","",189,[[],["collectionid",3]]],[11,"define_views","","",189,[[["schematic",3]]]],[11,"fmt","pliantdb::local::core::circulate","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","","",87,[[],[["result",4],["message",3]]]],[11,"default","","",190,[[],["relay",3]]],[11,"serialize","","",87,[[],["result",4]]],[11,"clone","","",190,[[],["relay",3]]],[11,"clone","","",87,[[],["message",3]]],[11,"clone","","",191,[[],["subscriber",3]]],[11,"from","pliantdb::local::core::networking::fabruic::error","",165,[[["elapsed",3]],["error",3]]],[11,"from","","",165,[[["joinerror",3]],["error",3]]],[11,"fmt","pliantdb::local::core::networking::fabruic","",176,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","","",171,[[],[["privatekey",3],["result",4]]]],[11,"deserialize","","",170,[[],[["certificate",3],["result",4]]]],[11,"is_terminated","","",175,[[],["bool",15]]],[11,"is_terminated","","",174,[[],["bool",15]]],[11,"zeroize","","",171,[[]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",170,[[]]],[11,"hash","","",171,[[]]],[11,"partial_cmp","","",170,[[["certificate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",170,[[["certificate",3]],["bool",15]]],[11,"le","","",170,[[["certificate",3]],["bool",15]]],[11,"gt","","",170,[[["certificate",3]],["bool",15]]],[11,"ge","","",170,[[["certificate",3]],["bool",15]]],[11,"partial_cmp","","",171,[[["privatekey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",171,[[["privatekey",3]],["bool",15]]],[11,"le","","",171,[[["privatekey",3]],["bool",15]]],[11,"gt","","",171,[[["privatekey",3]],["bool",15]]],[11,"ge","","",171,[[["privatekey",3]],["bool",15]]],[11,"poll_next","","",175,[[["pin",3],["context",3],["endpoint",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",174,[[["context",3],["pin",3],["connection",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",177,[[["receiver",3],["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"source","pliantdb::local::core::networking::fabruic::error","",45,[[],[["option",4],["error",8]]]],[11,"as_ref","pliantdb::local::core::networking::fabruic","",170,[[]]],[11,"default","","",172,[[],["builder",3]]],[11,"clone","","",175,[[],["endpoint",3]]],[11,"clone","","",178,[[],["sender",3]]],[11,"clone","","",174,[[],["connection",3]]],[11,"clone","","",171,[[],["privatekey",3]]],[11,"clone","","",177,[[],["receiver",3]]],[11,"clone","","",170,[[],["certificate",3]]],[11,"drop","","",171,[[]]],[11,"cmp","","",170,[[["certificate",3]],["ordering",4]]],[11,"cmp","","",171,[[["privatekey",3]],["ordering",4]]],[11,"serialize","","",171,[[],["result",4]]],[11,"serialize","","",170,[[],["result",4]]],[11,"eq","","",170,[[["certificate",3]],["bool",15]]],[11,"ne","","",170,[[["certificate",3]],["bool",15]]],[11,"eq","","",171,[[["privatekey",3]],["bool",15]]],[11,"ne","","",171,[[["privatekey",3]],["bool",15]]],[11,"as_ref","","",171,[[["privatekey",3]]]],[11,"into","","",171,[[["privatekey",3]],[["vec",3],["global",3],["u8",15]]]],[11,"serialize","","",171,[[["privatekey",3]],["result",4]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",52,[[],["tlserror",4]]],[11,"eq","","",52,[[["tlserror",4]],["bool",15]]],[11,"ne","","",52,[[["tlserror",4]],["bool",15]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",55,[[],["error",4]]],[11,"eq","","",55,[[["error",4]],["bool",15]]],[11,"fmt","","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",168,[[],["keyrejected",3]]],[11,"fmt","","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"cause","","",168,[[],[["option",4],["error",8]]]],[11,"description","","",168,[[],["str",15]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_error_kind","","",56,[[["errorkind",4]],["x509error",4]]],[11,"append","","",56,[[["x509error",4],["errorkind",4]],["x509error",4]]],[11,"from","","",57,[[["x509error",4]],[["err",4],["x509error",4]]]],[11,"from","","",56,[[["bererror",4]],["x509error",4]]],[11,"from","","",56,[[["errorkind",4]],["x509error",4]]],[11,"source","","",56,[[],[["option",4],["error",8]]]],[11,"eq","","",56,[[["x509error",4]],["bool",15]]],[11,"ne","","",56,[[["x509error",4]],["bool",15]]],[11,"from","","",57,[[["bererror",4]],[["err",4],["bererror",4]]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",57,[[],["err",4]]],[11,"source","","",57,[[],[["option",4],["error",8]]]],[11,"eq","","",57,[[["err",4]],["bool",15]]],[11,"ne","","",57,[[["err",4]],["bool",15]]],[11,"fmt","pliantdb::local::core::num_traits","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::core::networking::fabruic::error","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"description","","",46,[[],["str",15]]],[11,"cause","","",46,[[],[["option",4],["error",8]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",165,[[["readerror",4]],["error",3]]],[11,"from","","",50,[[["readableerror",4]],["readerror",4]]],[11,"from","","",165,[[["writeerror",4]],["error",3]]],[11,"source","","",51,[[],[["option",4],["error",8]]]],[11,"clone","","",50,[[],["readerror",4]]],[11,"clone","","",51,[[],["writeerror",4]]],[11,"eq","","",50,[[["readerror",4]],["bool",15]]],[11,"ne","","",50,[[["readerror",4]],["bool",15]]],[11,"eq","","",51,[[["writeerror",4]],["bool",15]]],[11,"ne","","",51,[[["writeerror",4]],["bool",15]]],[11,"fmt","","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",165,[[["connectionerror",4]],["error",3]]],[11,"from","","",48,[[["close",4]],["connectionerror",4]]],[11,"from","","",48,[[["error",3]],["connectionerror",4]]],[11,"clone","","",47,[[],["connecterror",4]]],[11,"clone","","",167,[[],["parseerror",3]]],[11,"clone","","",48,[[],["connectionerror",4]]],[11,"source","","",48,[[],[["option",4],["error",8]]]],[11,"source","","",47,[[],[["option",4],["error",8]]]],[11,"eq","","",48,[[["connectionerror",4]],["bool",15]]],[11,"ne","","",48,[[["connectionerror",4]],["bool",15]]],[11,"eq","","",47,[[["connecterror",4]],["bool",15]]],[11,"ne","","",47,[[["connecterror",4]],["bool",15]]],[11,"from","","",165,[[["error",3]],["error",3]]],[11,"fmt","","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",169,[[["protoerror",3]],["resolveerror",3]]],[11,"from","","",169,[[["str",15]],["resolveerror",3]]],[11,"from","","",169,[[["poisonerror",3]],["resolveerror",3]]],[11,"from","","",169,[[["resolveerrorkind",4]],["resolveerror",3]]],[11,"from","","",169,[[["string",3]],["resolveerror",3]]],[11,"from","","",169,[[["error",3]],["resolveerror",3]]],[11,"from","","",165,[[["resolveerror",3]],["error",3]]],[11,"should_retry","","",169,[[],["bool",15]]],[11,"attempted","","",169,[[],["bool",15]]],[11,"clone","","",169,[[],["resolveerror",3]]],[11,"from","","",165,[[["protoerror",3]],["error",3]]],[11,"from","","",165,[[["error",3]],["error",3]]],[11,"from","","",165,[[["asn1error",3]],["error",3]]],[11,"into_client_request","pliantdb::client::url","",153,[[],[["result",4],["error",4],["request",3]]]],[11,"into_non_blocking","pliantdb::local::core::networking::fabruic::error","",165,[[],[["option",4],["error",3]]]],[11,"fmt","pliantdb::local::config","",138,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",137,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::backup","",140,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local","",136,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",143,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local::backup","",139,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::local","",203,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",143,[[["formatter",3]],[["error",3],["result",4]]]],[11,"create_subscriber","","",203,[[],[["pin",3],["box",3]]]],[11,"publish","","",203,[[],[["pin",3],["box",3]]]],[11,"source","","",143,[[],[["option",4],["error",8]]]],[11,"from","","",143,[[["global",3],["box",3],["errorkind",4]],["error",4]]],[11,"from","","",143,[[["arc",3],["error",3]],["error",4]]],[11,"from","","",143,[[["error",4]],["error",4]]],[11,"from","","",143,[[["error",3]],["error",4]]],[11,"from","","",143,[[["error",4]],["error",4]]],[11,"from","","",143,[[["recverror",4]],["error",4]]],[11,"from","pliantdb::local::core","",83,[[["error",4]],["error",4]]],[11,"from","pliantdb::local","",143,[[["error",4]],["error",4]]],[11,"default","pliantdb::local::config","",138,[[],["views",3]]],[11,"default","pliantdb::local","",136,[[],["configuration",3]]],[11,"default","pliantdb::local::config","",137,[[],["tasks",3]]],[11,"clap","pliantdb::local::backup","",140,[[],["app",3]]],[11,"from_clap","","",140,[[["argmatches",3]],["command",4]]],[11,"clap","","",139,[[],["app",3]]],[11,"from_clap","","",139,[[["argmatches",3]],["cli",3]]],[11,"clone","pliantdb::local::config","",137,[[],["tasks",3]]],[11,"clone","","",138,[[],["views",3]]],[11,"clone","pliantdb::local","",203,[[],["storage",3]]],[11,"clone","","",136,[[],["configuration",3]]],[11,"apply_transaction","","",203,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"get","","",203,[[["u64",15]],[["box",3],["pin",3]]]],[11,"get_multiple","","",203,[[],[["box",3],["pin",3]]]],[11,"list_executed_transactions","","",203,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[11,"query","","",203,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"query_with_docs","","",203,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"reduce","","",203,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"reduce_grouped","","",203,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"last_transaction_id","","",203,[[],[["box",3],["pin",3]]]],[11,"from","pliantdb::local::core::networking::fabruic::error","",165,[[["error",4]],["error",3]]],[11,"fmt","pliantdb::server","",205,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::cli","",148,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::cli::serve","",147,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::cli","",149,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server::cli::certificate","",144,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb::server","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"create_subscriber","","",204,[[],[["pin",3],["box",3]]]],[11,"publish","","",204,[[],[["pin",3],["box",3]]]],[11,"clap","pliantdb::server::cli::certificate","",144,[[],["app",3]]],[11,"from_clap","","",144,[[["argmatches",3]],["command",4]]],[11,"clap","pliantdb::server::cli::serve","",147,[[],["app",3]]],[11,"from_clap","","",147,[[["argmatches",3]],["serve",3]]],[11,"clap","pliantdb::server::cli","",148,[[],["app",3]]],[11,"from_clap","","",148,[[["argmatches",3]],["cli",3]]],[11,"clap","","",149,[[],["app",3]]],[11,"from_clap","","",149,[[["argmatches",3]],["command",4]]],[11,"from","pliantdb::server","",151,[[["error",4]],["error",4]]],[11,"from","pliantdb::local::core","",83,[[["error",4]],["error",4]]],[11,"from","pliantdb::server","",151,[[["error",4]],["error",4]]],[11,"from","","",151,[[["error",3]],["error",4]]],[11,"from","","",151,[[["global",3],["box",3],["errorkind",4]],["error",4]]],[11,"from","","",151,[[["error",4]],["error",4]]],[11,"from","","",151,[[["error",4]],["error",4]]],[11,"source","","",151,[[],[["option",4],["error",8]]]],[11,"default","","",150,[[],["configuration",3]]],[11,"create_database","","",205,[[["str",15],["schemaid",3]],[["pin",3],["box",3]]]],[11,"delete_database","","",205,[[["str",15]],[["pin",3],["box",3]]]],[11,"list_databases","","",205,[[],[["pin",3],["box",3]]]],[11,"list_available_schemas","","",205,[[],[["pin",3],["box",3]]]],[11,"clone","","",205,[[],["server",3]]],[11,"get","","",204,[[["u64",15]],[["box",3],["pin",3]]]],[11,"get_multiple","","",204,[[],[["box",3],["pin",3]]]],[11,"query","","",204,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"query_with_docs","","",204,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"reduce","","",204,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"reduce_grouped","","",204,[[["querykey",4],["option",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"apply_transaction","","",204,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"list_executed_transactions","","",204,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[11,"last_transaction_id","","",204,[[],[["box",3],["pin",3]]]],[11,"fmt","pliantdb::cli","",0,[[["formatter",3]],["result",6]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_subcommand","","",0,[[],["option",4]]],[11,"is_subcommand","","",0,[[],["bool",15]]],[11,"parse","pliantdb::client::url","Parse an absolute URL from a string.",153,[[["str",15]],[["parseerror",4],["result",4],["url",3]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its …",153,[[["str",15]],[["parseerror",4],["result",4],["url",3]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",153,[[["str",15]],[["parseerror",4],["result",4],["url",3]]]],[11,"options","","Return a default <code>ParseOptions</code> that can fully configure …",153,[[],["parseoptions",3]]],[11,"as_str","","Return the serialization of this URL.",153,[[],["str",15]]],[11,"into_string","","Return the serialization of this URL.",153,[[],["string",3]]],[11,"origin","","Return the origin of this URL (…",153,[[],["origin",4]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII …",153,[[],["str",15]]],[11,"has_authority","","Return whether the URL has an \'authority\', which can …",153,[[],["bool",15]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, …",153,[[],["bool",15]]],[11,"username","","Return the username for this URL (typically the empty …",153,[[],["str",15]]],[11,"password","","Return the password for this URL, if any, as a …",153,[[],[["str",15],["option",4]]]],[11,"has_host","","Equivalent to <code>url.host().is_some()</code>.",153,[[],["bool",15]]],[11,"host_str","","Return the string representation of the host (domain or …",153,[[],[["str",15],["option",4]]]],[11,"host","","Return the parsed representation of the host for this URL.…",153,[[],[["host",4],["option",4]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP …",153,[[],[["str",15],["option",4]]]],[11,"port","","Return the port number for this URL, if any.",153,[[],[["option",4],["u16",15]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port …",153,[[],[["option",4],["u16",15]]]],[11,"socket_addrs","","Resolve a URL’s host and port number to <code>SocketAddr</code>.",153,[[],[["result",4],["vec",3],["error",3]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII …",153,[[],["str",15]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator …",153,[[],[["option",4],["split",3]]]],[11,"query","","Return this URL’s query string, if any, as a …",153,[[],[["str",15],["option",4]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as …",153,[[],["parse",3]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",153,[[],[["str",15],["option",4]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",153,[[["option",4],["str",15]]]],[11,"set_query","","Change this URL’s query string.",153,[[["option",4],["str",15]]]],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a …",153,[[],[["serializer",3],["urlquery",3]]]],[11,"set_path","","Change this URL’s path.",153,[[["str",15]]]],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s …",153,[[],[["pathsegmentsmut",3],["result",4]]]],[11,"set_port","","Change this URL’s port number.",153,[[["option",4],["u16",15]],["result",4]]],[11,"set_host","","Change this URL’s host.",153,[[["option",4],["str",15]],[["parseerror",4],["result",4]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",153,[[["ipaddr",4]],["result",4]]],[11,"set_password","","Change this URL’s password.",153,[[["option",4],["str",15]],["result",4]]],[11,"set_username","","Change this URL’s username.",153,[[["str",15]],["result",4]]],[11,"set_scheme","","Change this URL’s scheme.",153,[[["str",15]],["result",4]]],[11,"from_file_path","","Convert a file name as <code>std::path::Path</code> into an URL in the …",153,[[],[["result",4],["url",3]]]],[11,"from_directory_path","","Convert a directory name as <code>std::path::Path</code> into an URL …",153,[[],[["result",4],["url",3]]]],[11,"to_file_path","","Assuming the URL is in the <code>file</code> scheme or similar, …",153,[[],[["pathbuf",3],["result",4]]]],[11,"base_url","","Change the base URL",154,[[["option",4],["url",3]],["parseoptions",3]]],[11,"encoding_override","","Override the character encoding of query strings. This is …",154,[[["option",4],["fn",8]],["parseoptions",3]]],[11,"syntax_violation_callback","","Call the provided function or closure for a non-fatal …",154,[[["option",4],["fn",8]],["parseoptions",3]]],[11,"parse","","Parse an URL string with the configuration so far.",154,[[["str",15]],[["parseerror",4],["result",4],["url",3]]]],[11,"into_owned","pliantdb::client::url::form_urlencoded","Return a new iterator that yields pairs of <code>String</code> instead …",156,[[],["parseintoowned",3]]],[11,"new","","Create a new <code>application/x-www-form-urlencoded</code> serializer …",159,[[],["serializer",3]]],[11,"for_suffix","","Create a new <code>application/x-www-form-urlencoded</code> serializer …",159,[[["usize",15]],["serializer",3]]],[11,"clear","","Remove any existing name/value pair.",159,[[],["serializer",3]]],[11,"encoding_override","","Set the character encoding to be used for names and …",159,[[["option",4],["fn",8]],["serializer",3]]],[11,"append_pair","","Serialize and append a name/value pair.",159,[[["str",15]],["serializer",3]]],[11,"append_key_only","","Serialize and append a name of parameter without any …",159,[[["str",15]],["serializer",3]]],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",159,[[],["serializer",3]]],[11,"extend_keys_only","","Serialize and append a number of names without values.",159,[[],["serializer",3]]],[11,"finish","","If this serializer was constructed with a string, take …",159,[[]]],[11,"to_owned","pliantdb::client::url","Return a copy of <code>self</code> that owns an allocated <code>String</code> but …",2,[[],[["host",4],["string",3]]]],[11,"parse","","Parse a host: either an IPv6 address in [] square …",2,[[["str",15]],[["parseerror",4],["host",4],["result",4]]]],[11,"parse_opaque","","",2,[[["str",15]],[["parseerror",4],["host",4],["result",4]]]],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",3,[[],["origin",4]]],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple…",3,[[],["bool",15]]],[11,"ascii_serialization","","…",3,[[],["string",3]]],[11,"unicode_serialization","","…",3,[[],["string",3]]],[11,"description","","",5,[[],["str",15]]],[11,"clear","","Remove all segments in the path, leaving the minimal …",161,[[],["pathsegmentsmut",3]]],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is …",161,[[],["pathsegmentsmut",3]]],[11,"pop","","Remove the last segment of this URL’s path.",161,[[],["pathsegmentsmut",3]]],[11,"push","","Append the given segment at the end of this URL’s path.",161,[[["str",15]],["pathsegmentsmut",3]]],[11,"extend","","Append each segment from the given iterator at the end of …",161,[[],["pathsegmentsmut",3]]],[11,"new","pliantdb::client","Initialize a client connecting to <code>url</code> with <code>certificate</code> …",162,[[["url",3],["certificate",3],["option",4]]]],[11,"database","","Returns a structure representing a remote database. No …",162,[[["str",15]]]],[11,"new","pliantdb::local::core::connection","Creates a new instance using <code>connection</code>.",164,[[],["collection",3]]],[11,"push","","Adds a new <code>Document<Cl></code> with the contents <code>item</code>.",164,[[]]],[11,"get","","Retrieves a <code>Document<Cl></code> with <code>id</code> from the connection.",164,[[["u64",15]]]],[11,"with_key","","Filters for entries in the view with <code>key</code>.",9,[[],["view",3]]],[11,"with_keys","","Filters for entries in the view with <code>keys</code>.",9,[[["global",3],["vec",3]],["view",3]]],[11,"with_key_range","","Filters for entries in the view with the range <code>keys</code>.",9,[[["range",3]],["view",3]]],[11,"with_access_policy","","Sets the access policy for queries.",9,[[["accesspolicy",4]],["view",3]]],[11,"query","","Executes the query and retrieves the results.",9,[[]]],[11,"query_with_docs","","Executes the query and retrieves the results with the …",9,[[]]],[11,"reduce","","Executes a reduce over the results of the query",9,[[]]],[11,"reduce_grouped","","Executes a reduce over the results of the query",9,[[]]],[11,"serialized","","Converts this key to a serialized format using the [<code>Key</code>] …",10,[[],[["result",4],["error",4],["querykey",4]]]],[11,"deserialized","","Deserializes the bytes into <code>K</code> via the [<code>Key</code>] trait.",10,[[],[["querykey",4],["error",4],["result",4]]]],[11,"new","pliantdb::local::core::document","Creates a new document with <code>contents</code>.",13,[[["cow",4],["collectionid",3],["u64",15]],["document",3]]],[11,"with_contents","","Creates a new document with serialized bytes from <code>contents</code>…",13,[[["collectionid",3],["u64",15]],[["error",3],["result",4],["document",3]]]],[11,"contents","","Retrieves <code>contents</code> through deserialization into the type <code>D</code>…",13,[[],[["error",3],["result",4]]]],[11,"set_contents","","Serializes and stores <code>contents</code> into this document.",13,[[],[["result",4],["error",3]]]],[11,"create_new_revision","","Creates a new revision.",13,[[["cow",4]],[["option",4],["document",3]]]],[11,"emit","","Creates a <code>Map</code> result with an empty key and value.",13,[[],["map",3]]],[11,"emit_key","","Creates a <code>Map</code> result with a <code>key</code> and an empty value.",13,[[],["map",3]]],[11,"emit_value","","Creates a <code>Map</code> result with <code>value</code> and an empty key.",13,[[],["map",3]]],[11,"emit_key_and_value","","Creates a <code>Map</code> result with a <code>key</code> and <code>value</code>.",13,[[],["map",3]]],[11,"to_owned","","Clone the document\'s data so that it\'s no longer borrowed …",13,[[],["document",3]]],[11,"new","","Creates the first revision for a document with the SHA256 …",14,[[],["revision",3]]],[11,"with_id","","Creates a revision with <code>id</code> for a document with the SHA256 …",14,[[["u32",15]],["revision",3]]],[11,"next_revision","","Creates the next revision in sequence with an updated …",14,[[],[["revision",3],["option",4]]]],[11,"deserialized","pliantdb::local::core::networking","Deserialize into a <code>MappedDocument</code>.",37,[[],[["error",4],["mappeddocument",3],["result",4]]]],[11,"new","pliantdb::local::core::networking::fabruic::error","Creates a new I/O error from a known kind of error as …",165,[[["errorkind",4]],["error",3]]],[11,"last_os_error","","Returns an error representing the last OS error which …",165,[[],["error",3]]],[11,"from_raw_os_error","","Creates a new instance of an [<code>Error</code>] from a particular OS …",165,[[["i32",15]],["error",3]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",165,[[],[["option",4],["i32",15]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this …",165,[[],[["option",4],["error",8]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by …",165,[[],[["error",8],["option",4]]]],[11,"into_inner","","Consumes the <code>Error</code>, returning its inner error (if any).",165,[[],[["option",4],["box",3]]]],[11,"kind","","Returns the corresponding [<code>ErrorKind</code>] for this error.",165,[[],["errorkind",4]]],[11,"description_","","The value returned from ::description()",168,[[],["str",15]]],[11,"kind","","Get the kind of the error",169,[[],["resolveerrorkind",4]]],[11,"from_response","","A conversion to determine if the response is an error",169,[[["bool",15],["dnsresponse",3]],[["result",4],["resolveerror",3],["dnsresponse",3]]]],[11,"is_incomplete","","Tests if the result is Incomplete",57,[[],["bool",15]]],[11,"map","","Applies the given function to the inner error",57,[[],["err",4]]],[11,"convert","","Automatically converts between errors if the underlying …",57,[[["err",4]],["err",4]]],[11,"map_input","","Maps <code>Err<(T, ErrorKind)></code> to <code>Err<(U, ErrorKind)></code> with the …",57,[[],["err",4]]],[11,"to_owned","","Obtaining ownership",57,[[],["err",4]]],[11,"to_owned","","Automatically converts between errors if the underlying …",57,[[],["err",4]]],[11,"from_der","pliantdb::local::core::networking::fabruic","Build [<code>Certificate</code>] from DER-format. This is not meant as …",170,[[["vec",3],["global",3],["u8",15]],[["result",4],["certificate",3],["error",4]]]],[11,"unchecked_from_der","","Build [<code>Certificate</code>] from DER-format. This skips the …",170,[[["vec",3],["global",3],["u8",15]],["certificate",3]]],[11,"from_der","","Build [<code>PrivateKey</code>] from DER-format. This is not meant as …",171,[[["vec",3],["global",3],["u8",15]],[["result",4],["privatekey",3],["error",4]]]],[11,"unchecked_from_der","","Build [<code>PrivateKey</code>] from DER-format. This skips the …",171,[[["vec",3],["global",3],["u8",15]],["privatekey",3]]],[11,"new","","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …",172,[[],["builder",3]]],[11,"set_address","","Set\'s the [<code>SocketAddr</code>]. Default is \\\"[::]:0\\\".",172,[[["socketaddr",4]],["builder",3]]],[11,"set_address_str","","Set\'s the [<code>SocketAddr</code>]. Default is \\\"[::]:0\\\".",172,[[["str",15]],[["result",4],["builder",3],["error",4]]]],[11,"add_ca","","Adds a [<code>Certificate</code>] as a certificate authority for client…",172,[[["certificate",3]],[["result",4],["builder",3],["error",4]]]],[11,"add_key_pair","","Add a [<code>Certificate</code>] and [<code>PrivateKey</code>] for the server. This …",172,[[["privatekey",3],["certificate",3]],[["result",4],["builder",3],["error",4]]]],[11,"set_protocols","","Set the application-layer protocols to accept, in order …",172,[[],["builder",3]]],[11,"build","","Consumes [<code>Builder</code>] to build [<code>Endpoint</code>]. Must be called …",172,[[],[["result",4],["endpoint",3]]]],[11,"protocol","","The negotiated application protocol. See …",173,[[]]],[11,"accept","","Accept the [<code>Connection</code>] with the given <code>T</code> as the type …",173,[[]]],[11,"open_stream","","Open a stream on this [<code>Connection</code>], allowing to send data …",174,[[]]],[11,"protocol","","The negotiated application protocol. See …",174,[[],[["option",4],["vec",3]]]],[11,"remote_address","","The peer\'s address. Clients may change addresses at will, …",174,[[],["socketaddr",4]]],[11,"close_incoming","","Prevents any new incoming streams. Already incoming …",174,[[]]],[11,"close","","Close the [<code>Connection</code>] immediately.",174,[[]]],[11,"builder","","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …",175,[[],["builder",3]]],[11,"new_client","","Simplified version of creating a client. See [<code>Builder</code>] …",175,[[["certificate",3]],[["error",4],["result",4],["endpoint",3]]]],[11,"new_server","","Simplified version of creating a server. See [<code>Builder</code>] …",175,[[["privatekey",3],["u16",15],["certificate",3]],[["error",4],["result",4],["endpoint",3]]]],[11,"connect","","Establish a new <code>Connection</code> to a client. The <code>domain</code> …",175,[[["socketaddr",4]],[["error",4],["connecting",3],["result",4]]]],[11,"connect_with","","Attempts to resolve the IP with the given domain name. …",175,[[["u16",15]]]],[11,"local_address","","Get the local [<code>SocketAddr</code>] the underlying socket is bound …",175,[[],[["socketaddr",4],["result",4],["error",4]]]],[11,"close","","Close all of this [<code>Endpoint</code>]\'s <code>Connection</code>s immediately …",175,[[]]],[11,"close_incoming","","Prevents any new incoming connections. Already incoming …",175,[[]]],[11,"wait_idle","","Wait for all <code>Connection</code>s to the [<code>Endpoint</code>] to be cleanly …",175,[[]]],[11,"type","","Returns the type information for that stream.",176,[[]]],[11,"accept","","Accept the incoming stream with the given types.",176,[[]]],[11,"finish","","Wait for the [<code>Receiver</code>] part of the stream to finish …",177,[[]]],[11,"close","","Close the [<code>Receiver</code>] immediately. To close a [<code>Receiver</code>] …",177,[[]]],[11,"send","","Send <code>data</code> into the stream.",178,[[],[["result",4],["error",4]]]],[11,"finish","","Shut down the [<code>Send</code>] part of the stream gracefully.",178,[[]]],[11,"close","","Close the [<code>Sender</code>] immediately.",178,[[]]],[11,"serialized","pliantdb::local::core::schema","Serializes this map.",59,[[],[["serialized",3],["error",4],["result",4]]]],[11,"new","","Creates a new Map entry for the document with id <code>source</code>.",59,[[["u64",15]],["map",3]]],[11,"deserialized","pliantdb::local::core::schema::view::map","Deserializes this map.",61,[[],[["error",4],["map",3],["result",4]]]],[11,"new","pliantdb::local::core::schema","Creates a new id.",179,[[],["schemaid",3]]],[11,"define_collection","","Adds the collection <code>C</code> and its views.",181,[[]]],[11,"define_view","","Adds the view <code>V</code>.",181,[[]]],[11,"contains","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",181,[[],["bool",15]]],[11,"contains_collection_id","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",181,[[["collectionid",3]],["bool",15]]],[11,"view_by_name","","Looks up a [<code>view::Serialized</code>] by name.",181,[[["str",15]],[["option",4],["serialized",8]]]],[11,"view","","Looks up a [<code>view::Serialized</code>] through the the type <code>V</code>.",181,[[],[["option",4],["serialized",8]]]],[11,"views","","Iterates over all registered views.",181,[[]]],[11,"views_in_collection","","Iterates over all views that belong to <code>collection</code>.",181,[[["collectionid",3]],[["vec",3],["option",4]]]],[11,"push","pliantdb::local::core::transaction","Adds an operation to the transaction.",70,[[["operation",3]]]],[11,"to_owned","","Convert this structure to be free of borrows.",79,[[],["executed",3]]],[11,"new","pliantdb::local::core::test_util","",84,[[],["basic",3]]],[11,"with_category","","",84,[[],["basic",3]]],[11,"with_parent_id","","",84,[[["u64",15]],["basic",3]]],[11,"new","","",85,[[],["testdirectory",3]]],[11,"port","","",86,[[["u16",15]],["u16",15]]],[11,"new","pliantdb::local::core::circulate","Creates a new message.",87,[[],[["error",3],["result",4],["message",3]]]],[11,"payload","","Deserialize the payload as <code>P</code> using CBOR.",87,[[],[["result",4],["error",3]]]],[11,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",190,[[]]],[11,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",190,[[]]],[11,"publish_message","","Publishes a message to all subscribers of its topic.",190,[[["message",3]]]],[11,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",191,[[]]],[11,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",191,[[["str",15]]]],[11,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",191,[[],["receiver",3]]],[11,"id","","Returns the unique ID of the subscriber.",191,[[],["u64",15]]],[11,"new","pliantdb::local::core::circulate::flume","Create a new selector.",192,[[],["selector",3]]],[11,"send","","Add a send operation to the selector that sends the …",192,[[["sender",3]],["selector",3]]],[11,"recv","","Add a receive operation to the selector.",192,[[["receiver",3]],["selector",3]]],[11,"wait","","Wait until one of the events associated with this […",192,[[]]],[11,"wait_timeout","","Wait until one of the events associated with this […",192,[[["duration",3]],[["result",4],["selecterror",4]]]],[11,"wait_deadline","","Wait until one of the events associated with this […",192,[[["instant",3]],[["result",4],["selecterror",4]]]],[11,"is_disconnected","pliantdb::local::core::circulate::flume::async","",194,[[],["bool",15]]],[11,"send_async","pliantdb::local::core::circulate::flume","Asynchronously send a value into the channel, returning …",197,[[],["sendfut",3]]],[11,"into_send_async","","Convert this sender into a future that asynchronously …",197,[[],["sendfut",3]]],[11,"sink","","Create an asynchronous sink that uses this sender to …",197,[[],["sendsink",3]]],[11,"into_sink","","Convert this sender into a sink that allows …",197,[[],["sendsink",3]]],[11,"try_send","","Attempt to send a value into the channel. If the channel …",197,[[],[["trysenderror",4],["result",4]]]],[11,"send","","Send a value into the channel, returning an error if all …",197,[[],[["senderror",3],["result",4]]]],[11,"send_deadline","","Send a value into the channel, returning an error if all …",197,[[["instant",3]],[["sendtimeouterror",4],["result",4]]]],[11,"send_timeout","","Send a value into the channel, returning an error if all …",197,[[["duration",3]],[["sendtimeouterror",4],["result",4]]]],[11,"is_disconnected","","Returns true if all receivers for this channel have been …",197,[[],["bool",15]]],[11,"is_empty","","Returns true if the channel is empty. Note: Zero-capacity …",197,[[],["bool",15]]],[11,"is_full","","Returns true if the channel is full. Note: Zero-capacity …",197,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel",197,[[],["usize",15]]],[11,"capacity","","If the channel is bounded, returns its capacity.",197,[[],[["usize",15],["option",4]]]],[11,"recv_async","","Asynchronously receive a value from the channel, …",198,[[],["recvfut",3]]],[11,"into_recv_async","","Convert this receiver into a future that asynchronously …",198,[[],["recvfut",3]]],[11,"stream","","Create an asynchronous stream that uses this receiver to …",198,[[],["recvstream",3]]],[11,"into_stream","","Convert this receiver into a stream that allows …",198,[[],["recvstream",3]]],[11,"try_recv","","Attempt to fetch an incoming value from the channel …",198,[[],[["tryrecverror",4],["result",4]]]],[11,"recv","","Wait for an incoming value from the channel associated …",198,[[],[["recverror",4],["result",4]]]],[11,"recv_deadline","","Wait for an incoming value from the channel associated …",198,[[["instant",3]],[["recvtimeouterror",4],["result",4]]]],[11,"recv_timeout","","Wait for an incoming value from the channel associated …",198,[[["duration",3]],[["recvtimeouterror",4],["result",4]]]],[11,"iter","","Create a blocking iterator over the values received on …",198,[[],["iter",3]]],[11,"try_iter","","A non-blocking iterator over the values received on the …",198,[[],["tryiter",3]]],[11,"drain","","Take all msgs currently sitting in the channel and …",198,[[],["drain",3]]],[11,"is_disconnected","","Returns true if all senders for this channel have been …",198,[[],["bool",15]]],[11,"is_empty","","Returns true if the channel is empty. Note: Zero-capacity …",198,[[],["bool",15]]],[11,"is_full","","Returns true if the channel is full. Note: Zero-capacity …",198,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel.",198,[[],["usize",15]]],[11,"capacity","","If the channel is bounded, returns its capacity.",198,[[],[["usize",15],["option",4]]]],[11,"execute","pliantdb::local::backup","Executes the command.",140,[[["pathbuf",3]]]],[11,"open_local","pliantdb::local","Opens a local file as a pliantdb.",203,[[["configuration",3]]]],[11,"schematic","","Returns the [<code>Schematic</code>] for <code>DB</code>.",203,[[],["schematic",3]]],[11,"execute","pliantdb::server::cli::certificate","Executes the command.",144,[[["server",3]]]],[11,"execute","pliantdb::server::cli::serve","Starts the server.",147,[[["server",3]]]],[11,"execute","pliantdb::server::cli","Executes the command.",149,[[["path",3]]]],[11,"open","pliantdb::server","Creates or opens a [<code>Server</code>] with its data stored in …",205,[[["path",3],["configuration",3]]]],[11,"register_schema","","Registers a schema for use within the server.",205,[[]]],[11,"database","","Retrieves a database. This function only verifies that …",205,[[["str",15]]]],[11,"install_self_signed_certificate","","Installs an X.509 certificate used for general purpose …",205,[[["str",15],["bool",15]]]],[11,"install_certificate","","Installs an X.509 certificate used for general purpose …",205,[[["certificate",3],["privatekey",3]]]],[11,"certificate","","Returns the current certificate.",205,[[]]],[11,"listen_on","","Listens for incoming client connections. Does not return …",205,[[["u16",15]]]],[11,"listen_for_websockets_on","","Listens for <code>WebSocket</code> traffic on <code>port</code>.",205,[[]]],[11,"shutdown","","Shuts the server down. If a <code>timeout</code> is provided, the …",205,[[["option",4],["duration",3]]]]],"p":[[4,"Command"],[8,"Target"],[4,"Host"],[4,"Origin"],[4,"ParseError"],[4,"SyntaxViolation"],[4,"Position"],[4,"Error"],[8,"Connection"],[3,"View"],[4,"QueryKey"],[4,"AccessPolicy"],[3,"Header"],[3,"Document"],[3,"Revision"],[3,"Payload"],[4,"Request"],[13,"Database"],[4,"ServerRequest"],[13,"DeleteDatabase"],[4,"DatabaseRequest"],[13,"Get"],[13,"GetMultiple"],[13,"Query"],[13,"Reduce"],[13,"ApplyTransaction"],[13,"ListExecutedTransactions"],[13,"SubscribeTo"],[13,"UnsubscribeFrom"],[13,"UnregisterSubscriber"],[4,"Response"],[4,"ServerResponse"],[13,"DatabaseCreated"],[13,"DatabaseDeleted"],[4,"DatabaseResponse"],[13,"SubscriberCreated"],[13,"MessageReceived"],[3,"MappedDocument"],[3,"Database"],[8,"ServerConnection"],[4,"Error"],[13,"SchemaMismatch"],[4,"Error"],[13,"ParseCertificate"],[13,"DanglingCertificate"],[4,"ParseCertificate"],[4,"ErrorKind"],[4,"ConnectError"],[4,"ConnectionError"],[4,"EndpointError"],[4,"ReadError"],[4,"WriteError"],[4,"TLSError"],[13,"InappropriateMessage"],[13,"InappropriateHandshakeMessage"],[4,"WebPkiError"],[4,"X509Error"],[4,"Err"],[8,"Dangerous"],[3,"Map"],[3,"MappedDocument"],[3,"Serialized"],[3,"MappedValue"],[8,"Key"],[4,"Error"],[8,"View"],[4,"SerializableValue"],[8,"Serialized"],[8,"Schema"],[8,"Collection"],[3,"Transaction"],[3,"Operation"],[4,"Command"],[13,"Insert"],[13,"Update"],[13,"Delete"],[4,"OperationResult"],[13,"DocumentUpdated"],[13,"DocumentDeleted"],[3,"Executed"],[3,"ChangedDocument"],[8,"PubSub"],[8,"Subscriber"],[4,"Error"],[3,"Basic"],[3,"TestDirectory"],[4,"HarnessTest"],[3,"Message"],[4,"SelectError"],[3,"SendError"],[4,"TrySendError"],[4,"SendTimeoutError"],[4,"RecvError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"Configuration"],[3,"Tasks"],[3,"Views"],[3,"Cli"],[4,"Command"],[13,"Save"],[13,"Load"],[4,"Error"],[4,"Command"],[13,"InstallSelfSigned"],[13,"Install"],[3,"Serve"],[3,"Cli"],[4,"Command"],[3,"Configuration"],[4,"Error"],[13,"SchemaMismatch"],[3,"Url"],[3,"ParseOptions"],[3,"UrlQuery"],[3,"Parse"],[3,"ParseIntoOwned"],[3,"ByteSerialize"],[3,"Serializer"],[3,"OpaqueOrigin"],[3,"PathSegmentsMut"],[3,"Client"],[3,"RemoteDatabase"],[3,"Collection"],[3,"IoError"],[3,"AddrParseError"],[3,"ParseError"],[3,"KeyRejected"],[3,"ResolveError"],[3,"Certificate"],[3,"PrivateKey"],[3,"Builder"],[3,"Connecting"],[3,"Connection"],[3,"Endpoint"],[3,"Incoming"],[3,"Receiver"],[3,"Sender"],[3,"SchemaId"],[3,"CollectionId"],[3,"Schematic"],[3,"BasicCount"],[3,"BasicByParentId"],[3,"BasicByCategory"],[3,"BasicByBrokenParentId"],[3,"BasicSchema"],[3,"BasicCollectionWithNoViews"],[3,"BasicCollectionWithOnlyBrokenParentId"],[3,"UnassociatedCollection"],[3,"Relay"],[3,"Subscriber"],[3,"Selector"],[3,"SendFut"],[3,"SendSink"],[3,"RecvFut"],[3,"RecvStream"],[3,"Sender"],[3,"Receiver"],[3,"Iter"],[3,"TryIter"],[3,"Drain"],[3,"IntoIter"],[3,"Storage"],[3,"Database"],[3,"Server"]]},\
"pliantdb_client":{"doc":"Client for <code>pliantdb-server</code>.","i":[[3,"Client","pliantdb_client","Client for connecting to a <code>PliantDB</code> server.",null,null],[3,"RemoteDatabase","","A database on a remote server.",null,null],[4,"Error","","Errors related to working with <code>Client</code>",null,null],[13,"Transport","","An error occurred from the QUIC transport layer.",0,null],[13,"WebSocket","","An error occurred from the WebSocket transport layer.",0,null],[13,"Network","","An error occurred from networking.",0,null],[13,"InvalidUrl","","An invalid Url was provided.",0,null],[13,"Disconnected","","The connection was interrupted.",0,null],[13,"Core","","The connection was interrupted.",0,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","","",0,[[["senderror",3]]]],[11,"from","","",0,[[["recverror",4]]]],[11,"from","","",0,[[["error",6]]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[],["client",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"get","","",1,[[["u64",15]],[["pin",3],["box",3]]]],[11,"get_multiple","","",1,[[],[["pin",3],["box",3]]]],[11,"query","","",1,[[["option",4],["querykey",4],["accesspolicy",4]],[["box",3],["pin",3]]]],[11,"query_with_docs","","",1,[[["option",4],["querykey",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"reduce","","",1,[[["option",4],["querykey",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"reduce_grouped","","",1,[[["option",4],["querykey",4],["accesspolicy",4]],[["pin",3],["box",3]]]],[11,"apply_transaction","","",1,[[["transaction",3]],[["box",3],["pin",3]]]],[11,"list_executed_transactions","","",1,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[11,"last_transaction_id","","",1,[[],[["pin",3],["box",3]]]],[11,"create_database","","",2,[[["str",15],["schemaid",3]],[["pin",3],["box",3]]]],[11,"delete_database","","",2,[[["str",15]],[["pin",3],["box",3]]]],[11,"list_databases","","",2,[[],[["pin",3],["box",3]]]],[11,"list_available_schemas","","",2,[[],[["pin",3],["box",3]]]],[11,"create_subscriber","","",1,[[],[["pin",3],["box",3]]]],[11,"publish","","",1,[[["into",8],["string",3],["send",8]],[["pin",3],["box",3]]]],[11,"new","","Initialize a client connecting to <code>url</code> with <code>certificate</code> …",2,[[["url",3],["certificate",3],["option",4]]]],[11,"database","","Returns a structure representing a remote database. No …",2,[[["str",15]]]]],"p":[[4,"Error"],[3,"RemoteDatabase"],[3,"Client"]]},\
"pliantdb_core":{"doc":"Core functionality and types for <code>PliantDB</code>.","i":[[0,"connection","pliantdb_core","Types for interacting with a database.",null,null],[8,"Connection","pliantdb_core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",0,[[],[["collection",3],["collection",8]]]],[11,"insert","","Inserts a newly created document into the connected […",0,[[["vec",3],["u8",15]],[["pin",3],["box",3]]]],[11,"update","","Updates an existing document in the connected […",0,[[["document",3]],[["box",3],["pin",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",0,[[["u64",15]],[["pin",3],["box",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",0,[[],[["pin",3],["box",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",0,[[["document",3]],[["box",3],["pin",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",0,[[],[["view",8],["view",3]]]],[10,"query","","Queries for view entries matching [<code>View</code>].",0,[[["option",4],["accesspolicy",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",0,[[["option",4],["accesspolicy",4],["querykey",4]],[["pin",3],["box",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",0,[[["option",4],["accesspolicy",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",0,[[["option",4],["accesspolicy",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",0,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",0,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",0,[[],[["pin",3],["box",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[11,"new","","Creates a new instance using <code>connection</code>.",1,[[]]],[11,"push","","Adds a new <code>Document<Cl></code> with the contents <code>item</code>.",1,[[]]],[11,"get","","Retrieves a <code>Document<Cl></code> with <code>id</code> from the connection.",1,[[["u64",15]]]],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",2,null],[12,"access_policy","","The view\'s data access policy. The default value is […",2,null],[11,"with_key","","Filters for entries in the view with <code>key</code>.",2,[[]]],[11,"with_keys","","Filters for entries in the view with <code>keys</code>.",2,[[["vec",3]]]],[11,"with_key_range","","Filters for entries in the view with the range <code>keys</code>.",2,[[["range",3]]]],[11,"with_access_policy","","Sets the access policy for queries.",2,[[["accesspolicy",4]]]],[11,"query","","Executes the query and retrieves the results.",2,[[]]],[11,"query_with_docs","","Executes the query and retrieves the results with the …",2,[[]]],[11,"reduce","","Executes a reduce over the results of the query",2,[[]]],[11,"reduce_grouped","","Executes a reduce over the results of the query",2,[[]]],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",3,null],[13,"Range","","Matches all entires with keys in the range provided.",3,null],[13,"Multiple","","Matches all entries that have keys that are included in …",3,null],[11,"serialized","","Converts this key to a serialized format using the [<code>Key</code>] …",3,[[],[["error",4],["result",4],["querykey",4]]]],[11,"deserialized","","Deserializes the bytes into <code>K</code> via the [<code>Key</code>] trait.",3,[[],[["querykey",4],["error",4],["result",4]]]],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",4,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",4,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",4,null],[0,"document","pliantdb_core","Types for interacting with <code>Document</code>s.",null,null],[3,"Revision","pliantdb_core::document","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",5,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",5,null],[3,"Header","","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",6,null],[12,"revision","","The revision of the stored document.",6,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",7,null],[12,"header","","The header of the document, which contains the id and …",7,null],[12,"contents","","The serialized bytes of the stored item.",7,null],[11,"new","","Creates a new document with <code>contents</code>.",7,[[["cow",4],["collectionid",3],["u64",15]]]],[11,"with_contents","","Creates a new document with serialized bytes from <code>contents</code>…",7,[[["collectionid",3],["u64",15]],[["result",4],["error",3]]]],[11,"contents","","Retrieves <code>contents</code> through deserialization into the type <code>D</code>…",7,[[],[["error",3],["result",4],["deserialize",8]]]],[11,"set_contents","","Serializes and stores <code>contents</code> into this document.",7,[[],[["result",4],["error",3]]]],[11,"create_new_revision","","Creates a new revision.",7,[[["cow",4]],["option",4]]],[11,"emit","","Creates a <code>Map</code> result with an empty key and value.",7,[[],["map",3]]],[11,"emit_key","","Creates a <code>Map</code> result with a <code>key</code> and an empty value.",7,[[["key",8]],[["key",8],["map",3]]]],[11,"emit_value","","Creates a <code>Map</code> result with <code>value</code> and an empty key.",7,[[["serialize",8]],[["map",3],["serialize",8]]]],[11,"emit_key_and_value","","Creates a <code>Map</code> result with a <code>key</code> and <code>value</code>.",7,[[["key",8],["serialize",8]],[["key",8],["map",3],["serialize",8]]]],[11,"to_owned","","Clone the document\'s data so that it\'s no longer borrowed …",7,[[],["document",3]]],[0,"limits","pliantdb_core","Limits used within <code>PliantDB</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb_core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"networking","pliantdb_core","Types for networked communications.",null,null],[3,"Payload","pliantdb_core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",8,null],[12,"wrapped","","The wrapped payload.",8,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",9,null],[13,"Database","","A database-related request.",9,null],[12,"database","pliantdb_core::networking::Request","The name of the database.",10,null],[12,"request","","The request made to the database.",10,null],[4,"ServerRequest","pliantdb_core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",11,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",11,null],[12,"name","pliantdb_core::networking::ServerRequest","The name of the database to delete.",12,null],[13,"ListDatabases","pliantdb_core::networking","Lists all databases.",11,null],[13,"ListAvailableSchemas","","Lists available schemas.",11,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",13,null],[12,"collection","pliantdb_core::networking::DatabaseRequest","The collection of the document.",14,null],[12,"id","","The id of the document.",14,null],[13,"GetMultiple","pliantdb_core::networking","Retrieve multiple documents.",13,null],[12,"collection","pliantdb_core::networking::DatabaseRequest","The collection of the documents.",15,null],[12,"ids","","The ids of the documents.",15,null],[13,"Query","pliantdb_core::networking","Queries a view.",13,null],[12,"view","pliantdb_core::networking::DatabaseRequest","The name of the view.",16,null],[12,"key","","The filter for the view.",16,null],[12,"access_policy","","The access policy for the query.",16,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",16,null],[13,"Reduce","pliantdb_core::networking","Reduces a view.",13,null],[12,"view","pliantdb_core::networking::DatabaseRequest","The name of the view.",17,null],[12,"key","","The filter for the view.",17,null],[12,"access_policy","","The access policy for the query.",17,null],[12,"grouped","","Whether to return a single value or values grouped by …",17,null],[13,"ApplyTransaction","pliantdb_core::networking","Applies a transaction.",13,null],[12,"transaction","pliantdb_core::networking::DatabaseRequest","The trasnaction to apply.",18,null],[13,"ListExecutedTransactions","pliantdb_core::networking","Lists executed transactions.",13,null],[12,"starting_id","pliantdb_core::networking::DatabaseRequest","The starting transaction id.",19,null],[12,"result_limit","","The maximum number of results.",19,null],[13,"LastTransactionId","pliantdb_core::networking","Queries the last transaction id.",13,null],[13,"CreateSubscriber","","Creates a <code>PubSub</code> <code>Subscriber</code>",13,null],[13,"Publish","","Publishes a <code>PubSub</code> message.",13,null],[13,"SubscribeTo","","Subscribes <code>subscriber_id</code> to messages for <code>topic</code>.",13,null],[12,"subscriber_id","pliantdb_core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",20,null],[12,"topic","","The topic to subscribe to.",20,null],[13,"UnsubscribeFrom","pliantdb_core::networking","Unsubscribes <code>subscriber_id</code> from messages for <code>topic</code>.",13,null],[12,"subscriber_id","pliantdb_core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",21,null],[12,"topic","","The topic to unsubscribe from.",21,null],[13,"UnregisterSubscriber","pliantdb_core::networking","Unregisters the subscriber.",13,null],[12,"subscriber_id","pliantdb_core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",22,null],[4,"Response","pliantdb_core::networking","A response from a server.",null,null],[13,"Ok","","A request succeded but provided no output.",23,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",23,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",23,null],[13,"Error","","An error occurred processing a request.",23,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",24,null],[12,"name","pliantdb_core::networking::ServerResponse","The name of the database to create.",25,null],[13,"DatabaseDeleted","pliantdb_core::networking","A database with <code>name</code> was successfully removed.",24,null],[12,"name","pliantdb_core::networking::ServerResponse","The name of the database to remove.",26,null],[13,"Databases","pliantdb_core::networking","A list of available databases.",24,null],[13,"AvailableSchemas","","A list of availble schemas.",24,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",27,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",27,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",27,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",27,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",27,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",27,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",27,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",27,null],[13,"SubscriberCreated","","A new <code>PubSub</code> subscriber was created.",27,null],[12,"subscriber_id","pliantdb_core::networking::DatabaseResponse","The unique ID of the subscriber.",28,null],[13,"MessageReceived","pliantdb_core::networking","A PubSub message was received.",27,null],[12,"subscriber_id","pliantdb_core::networking::DatabaseResponse","The ID of the subscriber receiving the message.",29,null],[12,"message","","The message received.",29,null],[3,"MappedDocument","pliantdb_core::networking","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",30,null],[12,"value","","The serialized value.",30,null],[12,"source","","The source document.",30,null],[11,"deserialized","","Deserialize into a <code>MappedDocument</code>.",30,[[],[["result",4],["error",4],["mappeddocument",3]]]],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",31,null],[12,"schema","","The schema defining the database.",31,null],[8,"ServerConnection","","Functions for interacting with a <code>PliantDB</code> server.",null,null],[10,"create_database","","Creates a database named <code>name</code> using the [<code>SchemaId</code>] <code>schema</code>.",32,[[["schemaid",3],["str",15]],[["box",3],["pin",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",32,[[["str",15]],[["box",3],["pin",3]]]],[10,"list_databases","","Lists the databases on this server.",32,[[],[["pin",3],["box",3]]]],[10,"list_available_schemas","","Lists the [<code>SchemaId</code>]s on this server.",32,[[],[["pin",3],["box",3]]]],[4,"Error","","A networking error.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See […",33,null],[13,"DatabaseNotFound","","The database name given was not found.",33,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",33,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",33,null],[13,"Disconnected","","The connection was interrupted.",33,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",33,null],[12,"database_name","pliantdb_core::networking::Error","The name of the database being accessed.",34,null],[12,"schema","","The schema provided for the database.",34,null],[12,"stored_schema","","The schema stored for the database.",34,null],[13,"SchemaAlreadyRegistered","pliantdb_core::networking","The [<code>SchemaId</code>] returned has already been registered with …",33,null],[13,"SchemaNotRegistered","","The [<code>SchemaId</code>] requested was not registered with this …",33,null],[0,"schema","pliantdb_core","Types for defining database schema.",null,null],[0,"view","pliantdb_core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb_core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb_core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",35,null],[12,"key","","The key used to index the View.",35,null],[12,"value","","An associated value stored in the view.",35,null],[11,"serialized","","Serializes this map.",35,[[],[["error",4],["result",4],["serialized",3]]]],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",36,null],[12,"key","","The key used to index the View.",36,null],[12,"value","","An associated value stored in the view.",36,null],[11,"new","","Creates a new Map entry for the document with id <code>source</code>.",35,[[["u64",15]]]],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",37,null],[12,"key","","The key used to index the View.",37,null],[12,"value","","An associated value stored in the view.",37,null],[11,"deserialized","","Deserializes this map.",37,[[],[["map",3],["error",4],["result",4]]]],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",38,null],[12,"value","","The value generated by the <code>View</code>",38,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",39,[[],[["cow",4],["result",6]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",39,[[],["result",6]]],[8,"EnumKey","","Adds <code>Key</code> support to an enum. Requires implementing …",null,null],[4,"Error","pliantdb_core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",40,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",40,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",40,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",41,null],[16,"Key","","The key for this view.",41,null],[16,"Value","","An associated type that can be stored with each entry in …",41,null],[10,"version","","The version of the view. Changing this value will cause …",41,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",41,[[],[["cow",4],["str",15]]]],[10,"map","","The map function for this view. This function is …",41,[[["document",3]],["mapresult",6]]],[11,"reduce","","The reduce function for this view. If …",41,[[["bool",15]],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",42,null],[13,"Borrowed","","a borrowed value",42,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",43,[[],["collectionid",3]]],[10,"version","","Wraps [<code>View::version</code>]",43,[[],["u64",15]]],[10,"name","","Wraps [<code>View::name</code>]",43,[[],[["cow",4],["str",15]]]],[10,"map","","Wraps [<code>View::map</code>]",43,[[["document",3]],[["error",4],["result",4],["option",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",43,[[["bool",15]],[["result",4],["vec",3],["error",4]]]],[8,"Collection","pliantdb_core::schema","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_id","","The <code>Id</code> of this collection.",44,[[],["collectionid",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",44,[[["schematic",3]]]],[3,"CollectionId","","A unique collection id. Choose collection names that …",null,null],[3,"Schematic","","A collection of defined collections and views.",null,null],[3,"SchemaId","","The unique Id of a [<code>Schema</code>]. Primarily used to try to …",null,null],[11,"new","","Creates a new id.",45,[[["string",3],["into",8]]]],[8,"Schema","","Defines a group of collections that are stored into a …",null,null],[10,"schema_id","","Returns the unique [<code>SchemaId</code>] for this schema.",46,[[],["schemaid",3]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",46,[[["schematic",3]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",46,[[],["schematic",3]]],[0,"transaction","pliantdb_core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb_core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",47,null],[11,"push","","Adds an operation to the transaction.",47,[[["operation",3]]]],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",48,null],[12,"command","","The command being performed.",48,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",49,null],[12,"contents","pliantdb_core::transaction::Command","The initial contents of the document.",50,null],[13,"Update","pliantdb_core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",49,null],[12,"header","pliantdb_core::transaction::Command","The current header of the <code>Document</code>.",51,null],[12,"contents","","The new contents to store within the <code>Document</code>.",51,null],[13,"Delete","pliantdb_core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",49,null],[12,"header","pliantdb_core::transaction::Command","The current header of the <code>Document</code>.",52,null],[4,"OperationResult","pliantdb_core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",53,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",53,null],[12,"collection","pliantdb_core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",54,null],[12,"header","","The header of the updated <code>Document</code>.",54,null],[13,"DocumentDeleted","pliantdb_core::transaction","A <code>Document</code> was deleted.",53,null],[12,"collection","pliantdb_core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",55,null],[12,"id","","The id of the deleted <code>Document</code>.",55,null],[3,"Executed","pliantdb_core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",56,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",56,null],[11,"to_owned","","Convert this structure to be free of borrows.",56,[[],["executed",3]]],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",57,null],[12,"id","","The id of the changed <code>Document</code>.",57,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",57,null],[0,"pubsub","pliantdb_core","Types for Publish/Subscribe (<code>PubSub</code>) messaging.",null,null],[8,"PubSub","pliantdb_core::pubsub","Publishes and Subscribes to messages on topics.",null,null],[16,"Subscriber","","The Subscriber type for this <code>PubSub</code> connection.",58,null],[10,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",58,[[],[["box",3],["pin",3]]]],[10,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",58,[[["into",8],["string",3],["send",8]],[["box",3],["pin",3]]]],[8,"Subscriber","","A subscriber to one or more topics.",null,null],[10,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",59,[[["into",8],["string",3],["send",8]],[["box",3],["pin",3]]]],[10,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",59,[[["str",15]],[["box",3],["pin",3]]]],[10,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",59,[[],["receiver",3]]],[0,"test_util","pliantdb_core","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb_core::test_util","",null,null],[12,"value","","",60,null],[12,"category","","",60,null],[12,"parent_id","","",60,null],[11,"new","","",60,[[]]],[11,"with_category","","",60,[[]]],[11,"with_parent_id","","",60,[[["u64",15]]]],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",61,null],[11,"new","","",61,[[["asref",8],["path",3]]]],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"HarnessTest","","",null,null],[13,"StoreRetrieveUpdate","","",62,null],[13,"NotFound","","",62,null],[13,"Conflict","","",62,null],[13,"BadUpdate","","",62,null],[13,"NoUpdate","","",62,null],[13,"GetMultiple","","",62,null],[13,"ListTransactions","","",62,null],[13,"ViewQuery","","",62,null],[13,"UnassociatedCollection","","",62,null],[13,"ViewUpdate","","",62,null],[13,"ViewAccessPolicies","","",62,null],[13,"PubSubSimple","","",62,null],[13,"PubSubMultipleSubscribers","","",62,null],[13,"PubSubDropAndSend","","",62,null],[13,"PubSubUnsubscribe","","",62,null],[13,"PubSubDropCleanup","","",62,null],[11,"port","","",62,[[["u16",15]],["u16",15]]],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[4,"Error","pliantdb_core","an enumeration of errors that this crate can produce",null,null],[13,"Storage","","An error from interacting with local storage.",63,null],[13,"Server","","An error from interacting with a server.",63,null],[13,"Transport","","An error occurred from the QUIC transport layer.",63,null],[13,"Websocket","","An error occurred from the websocket transport layer.",63,null],[13,"Networking","","An error occurred from networking.",63,null],[13,"Io","","An error occurred from IO.",63,null],[13,"Configuration","","An error occurred with the provided configuration options.",63,null],[13,"Client","","An error occurred inside of the client.",63,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",63,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",63,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",63,null],[14,"define_pubsub_test_suite","","Expands into a suite of pubsub unit tests using the …",null,null],[14,"define_connection_test_suite","","Creates a test suite that tests methods available on […",null,null],[11,"from","pliantdb_core::connection","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","pliantdb_core::document","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"equivalent","","",5,[[],["bool",15]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"equivalent","","",6,[[],["bool",15]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","pliantdb_core::networking","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","pliantdb_core::schema","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"equivalent","","",64,[[],["bool",15]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","pliantdb_core::schema::view::map","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","pliantdb_core::schema::view","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"as_bits","","",42,[[],["bitslice",3]]],[11,"vzip","","",42,[[]]],[11,"from","pliantdb_core::schema","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"equivalent","","",45,[[],["bool",15]]],[11,"from","pliantdb_core::transaction","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"schema_id","pliantdb_core::test_util","",60,[[],["schemaid",3]]],[11,"define_collections","","",60,[[["schematic",3]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"collection","","",66,[[],["collectionid",3]]],[11,"version","","",66,[[],["u64",15]]],[11,"name","","",66,[[],[["cow",4],["str",15]]]],[11,"map","","",66,[[["document",3]],[["error",4],["option",4],["result",4]]]],[11,"reduce","","",66,[[["bool",15]],[["result",4],["error",4],["vec",3]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"collection","","",67,[[],["collectionid",3]]],[11,"version","","",67,[[],["u64",15]]],[11,"name","","",67,[[],[["cow",4],["str",15]]]],[11,"map","","",67,[[["document",3]],[["error",4],["option",4],["result",4]]]],[11,"reduce","","",67,[[["bool",15]],[["result",4],["error",4],["vec",3]]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"collection","","",68,[[],["collectionid",3]]],[11,"version","","",68,[[],["u64",15]]],[11,"name","","",68,[[],[["cow",4],["str",15]]]],[11,"map","","",68,[[["document",3]],[["error",4],["option",4],["result",4]]]],[11,"reduce","","",68,[[["bool",15]],[["result",4],["error",4],["vec",3]]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"collection","","",69,[[],["collectionid",3]]],[11,"version","","",69,[[],["u64",15]]],[11,"name","","",69,[[],[["cow",4],["str",15]]]],[11,"map","","",69,[[["document",3]],[["error",4],["option",4],["result",4]]]],[11,"reduce","","",69,[[["bool",15]],[["result",4],["error",4],["vec",3]]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"schema_id","","",71,[[],["schemaid",3]]],[11,"define_collections","","",71,[[["schematic",3]]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"schema_id","","",72,[[],["schemaid",3]]],[11,"define_collections","","",72,[[["schematic",3]]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"schema_id","","",73,[[],["schemaid",3]]],[11,"define_collections","","",73,[[["schematic",3]]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","pliantdb_core","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"collection_id","pliantdb_core::test_util","",60,[[],["collectionid",3]]],[11,"define_views","","",60,[[["schematic",3]]]],[11,"collection_id","","",71,[[],["collectionid",3]]],[11,"define_views","","",71,[[["schematic",3]]]],[11,"collection_id","","",72,[[],["collectionid",3]]],[11,"define_views","","",72,[[["schematic",3]]]],[11,"collection_id","","",73,[[],["collectionid",3]]],[11,"define_views","","",73,[[["schematic",3]]]],[11,"version","","",66,[[],["u64",15]]],[11,"name","","",66,[[],[["cow",4],["str",15]]]],[11,"map","","",66,[[["document",3]],["mapresult",6]]],[11,"reduce","","",66,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",67,[[],["u64",15]]],[11,"name","","",67,[[],[["cow",4],["str",15]]]],[11,"map","","",67,[[["document",3]],["mapresult",6]]],[11,"reduce","","",67,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",68,[[],["u64",15]]],[11,"name","","",68,[[],[["cow",4],["str",15]]]],[11,"map","","",68,[[["document",3]],["mapresult",6]]],[11,"reduce","","",68,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",69,[[],["u64",15]]],[11,"name","","",69,[[],[["cow",4],["str",15]]]],[11,"map","","",69,[[["document",3]],["mapresult",6]]],[11,"schema_id","","",70,[[],["schemaid",3]]],[11,"define_collections","","",70,[[["schematic",3]]]],[11,"drop","","",61,[[]]],[11,"as_ref","pliantdb_core::schema","",64,[[],["str",15]]],[11,"as_ref","pliantdb_core::schema::view","",42,[[]]],[11,"as_ref","pliantdb_core::schema","",45,[[],["str",15]]],[11,"as_ref","pliantdb_core::test_util","",61,[[],["path",3]]],[11,"from","pliantdb_core::schema","",64,[[["str",15]]]],[11,"from","","",64,[[["string",3]]]],[11,"from","pliantdb_core::schema::view","",40,[[["error",3]]]],[11,"from","","",42,[[],["serializablevalue",4]]],[11,"from","pliantdb_core::schema","",45,[[["str",15]]]],[11,"from","pliantdb_core","",63,[[["error",3]]]],[11,"clone","pliantdb_core::connection","",3,[[],["querykey",4]]],[11,"clone","","",4,[[],["accesspolicy",4]]],[11,"clone","pliantdb_core::document","",5,[[],["revision",3]]],[11,"clone","","",6,[[],["header",3]]],[11,"clone","","",7,[[],["document",3]]],[11,"clone","pliantdb_core::networking","",8,[[],["payload",3]]],[11,"clone","","",9,[[],["request",4]]],[11,"clone","","",11,[[],["serverrequest",4]]],[11,"clone","","",13,[[],["databaserequest",4]]],[11,"clone","","",23,[[],["response",4]]],[11,"clone","","",24,[[],["serverresponse",4]]],[11,"clone","","",27,[[],["databaseresponse",4]]],[11,"clone","","",30,[[],["mappeddocument",3]]],[11,"clone","","",31,[[],["database",3]]],[11,"clone","","",33,[[],["error",4]]],[11,"clone","pliantdb_core::schema","",64,[[],["collectionid",3]]],[11,"clone","pliantdb_core::schema::view::map","",37,[[],["serialized",3]]],[11,"clone","","",38,[[],["mappedvalue",3]]],[11,"clone","pliantdb_core::schema","",45,[[],["schemaid",3]]],[11,"clone","pliantdb_core::transaction","",47,[[],["transaction",3]]],[11,"clone","","",48,[[],["operation",3]]],[11,"clone","","",49,[[],["command",4]]],[11,"clone","","",53,[[],["operationresult",4]]],[11,"clone","","",56,[[],["executed",3]]],[11,"clone","","",57,[[],["changeddocument",3]]],[11,"clone","pliantdb_core","",63,[[],["error",4]]],[11,"clone","pliantdb_core::test_util","",62,[[],["harnesstest",4]]],[11,"default","pliantdb_core::schema","",65,[[],["schematic",3]]],[11,"default","pliantdb_core::transaction","",47,[[],["transaction",3]]],[11,"default","pliantdb_core::test_util","",60,[[],["basic",3]]],[11,"eq","pliantdb_core::document","",5,[[["revision",3]],["bool",15]]],[11,"ne","","",5,[[["revision",3]],["bool",15]]],[11,"eq","","",6,[[["header",3]],["bool",15]]],[11,"ne","","",6,[[["header",3]],["bool",15]]],[11,"eq","pliantdb_core::networking","",31,[[["database",3]],["bool",15]]],[11,"ne","","",31,[[["database",3]],["bool",15]]],[11,"eq","pliantdb_core::schema","",64,[[["collectionid",3]],["bool",15]]],[11,"ne","","",64,[[["collectionid",3]],["bool",15]]],[11,"eq","pliantdb_core::schema::view::map","",35,[[["map",3]],["bool",15]]],[11,"ne","","",35,[[["map",3]],["bool",15]]],[11,"eq","","",38,[[["mappedvalue",3]],["bool",15]]],[11,"ne","","",38,[[["mappedvalue",3]],["bool",15]]],[11,"eq","pliantdb_core::schema","",45,[[["schemaid",3]],["bool",15]]],[11,"ne","","",45,[[["schemaid",3]],["bool",15]]],[11,"eq","pliantdb_core::test_util","",60,[[["basic",3]],["bool",15]]],[11,"ne","","",60,[[["basic",3]],["bool",15]]],[11,"fmt","pliantdb_core::connection","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::document","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::networking","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::view::map","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::view","",40,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema","",45,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::transaction","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core","",63,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::test_util","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::networking","",33,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema","",64,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::view","",40,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema","",45,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core","",63,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::test_util","",62,[[["formatter",3]],["result",6]]],[11,"hash","pliantdb_core::schema","",64,[[]]],[11,"hash","","",45,[[]]],[11,"source","pliantdb_core::schema::view","",40,[[],[["option",4],["error",8]]]],[11,"deserialize","pliantdb_core::connection","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","pliantdb_core::document","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","pliantdb_core::networking","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","pliantdb_core::schema","",64,[[],["result",4]]],[11,"deserialize","pliantdb_core::schema::view::map","",37,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","pliantdb_core::schema","",45,[[],["result",4]]],[11,"deserialize","pliantdb_core::transaction","",47,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","","",49,[[],["result",4]]],[11,"deserialize","","",53,[[],["result",4]]],[11,"deserialize","","",56,[[],["result",4]]],[11,"deserialize","","",57,[[],["result",4]]],[11,"deserialize","pliantdb_core","",63,[[],["result",4]]],[11,"deserialize","pliantdb_core::test_util","",60,[[],["result",4]]],[11,"serialize","pliantdb_core::connection","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","pliantdb_core::document","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","pliantdb_core::networking","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","pliantdb_core::schema","",64,[[],["result",4]]],[11,"serialize","pliantdb_core::schema::view::map","",37,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","pliantdb_core::schema","",45,[[],["result",4]]],[11,"serialize","pliantdb_core::transaction","",47,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",53,[[],["result",4]]],[11,"serialize","","",56,[[],["result",4]]],[11,"serialize","","",57,[[],["result",4]]],[11,"serialize","pliantdb_core","",63,[[],["result",4]]],[11,"serialize","pliantdb_core::test_util","",60,[[],["result",4]]],[11,"new","pliantdb_core::document","Creates the first revision for a document with the SHA256 …",5,[[]]],[11,"with_id","","Creates a revision with <code>id</code> for a document with the SHA256 …",5,[[["u32",15]]]],[11,"next_revision","","Creates the next revision in sequence with an updated …",5,[[],["option",4]]],[11,"define_collection","pliantdb_core::schema","Adds the collection <code>C</code> and its views.",65,[[]]],[11,"define_view","","Adds the view <code>V</code>.",65,[[["view",8]]]],[11,"contains","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",65,[[],["bool",15]]],[11,"contains_collection_id","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",65,[[["collectionid",3]],["bool",15]]],[11,"view_by_name","","Looks up a [<code>view::Serialized</code>] by name.",65,[[["str",15]],[["option",4],["serialized",8]]]],[11,"view","","Looks up a [<code>view::Serialized</code>] through the the type <code>V</code>.",65,[[],[["option",4],["serialized",8]]]],[11,"views","","Iterates over all registered views.",65,[[]]],[11,"views_in_collection","","Iterates over all views that belong to <code>collection</code>.",65,[[["collectionid",3]],[["vec",3],["option",4]]]]],"p":[[8,"Connection"],[3,"Collection"],[3,"View"],[4,"QueryKey"],[4,"AccessPolicy"],[3,"Revision"],[3,"Header"],[3,"Document"],[3,"Payload"],[4,"Request"],[13,"Database"],[4,"ServerRequest"],[13,"DeleteDatabase"],[4,"DatabaseRequest"],[13,"Get"],[13,"GetMultiple"],[13,"Query"],[13,"Reduce"],[13,"ApplyTransaction"],[13,"ListExecutedTransactions"],[13,"SubscribeTo"],[13,"UnsubscribeFrom"],[13,"UnregisterSubscriber"],[4,"Response"],[4,"ServerResponse"],[13,"DatabaseCreated"],[13,"DatabaseDeleted"],[4,"DatabaseResponse"],[13,"SubscriberCreated"],[13,"MessageReceived"],[3,"MappedDocument"],[3,"Database"],[8,"ServerConnection"],[4,"Error"],[13,"SchemaMismatch"],[3,"Map"],[3,"MappedDocument"],[3,"Serialized"],[3,"MappedValue"],[8,"Key"],[4,"Error"],[8,"View"],[4,"SerializableValue"],[8,"Serialized"],[8,"Collection"],[3,"SchemaId"],[8,"Schema"],[3,"Transaction"],[3,"Operation"],[4,"Command"],[13,"Insert"],[13,"Update"],[13,"Delete"],[4,"OperationResult"],[13,"DocumentUpdated"],[13,"DocumentDeleted"],[3,"Executed"],[3,"ChangedDocument"],[8,"PubSub"],[8,"Subscriber"],[3,"Basic"],[3,"TestDirectory"],[4,"HarnessTest"],[4,"Error"],[3,"CollectionId"],[3,"Schematic"],[3,"BasicCount"],[3,"BasicByParentId"],[3,"BasicByCategory"],[3,"BasicByBrokenParentId"],[3,"BasicSchema"],[3,"BasicCollectionWithNoViews"],[3,"BasicCollectionWithOnlyBrokenParentId"],[3,"UnassociatedCollection"]]},\
"pliantdb_jobs":{"doc":"Aysnc jobs management for <code>PliantDB</code>.","i":[[0,"manager","pliantdb_jobs","Types related to the job <code>Manager</code>.",null,null],[3,"Manager","pliantdb_jobs::manager","A background jobs manager.",null,null],[11,"enqueue","","Pushes a <code>job</code> into the queue. Pushing the same job …",0,[[["job",8]]]],[11,"lookup_or_enqueue","","Uses [<code>Keyed::key</code>] to ensure no other job with the same <code>key</code>…",0,[[["keyed",8]]]],[11,"spawn_worker","","Spawns a worker. In general, you shouldn\'t need to call …",0,[[]]],[0,"task","pliantdb_jobs","Types related to defining [<code>Job</code>]s.",null,null],[3,"Id","pliantdb_jobs::task","he <code>Id</code> of an executing task.",null,null],[3,"Handle","","References a background task.",null,null],[12,"id","","The task\'s id.",1,null],[11,"clone","","Returns a copy of this handle. When the job is completed, …",1,[[]]],[11,"receive","","Waits for the job to complete and returns the result.",1,[[]]],[11,"try_receive","","Tries to receive the status of the job. If available, it …",1,[[],[["result",4],["tryrecverror",4],["result",4]]]],[8,"Job","pliantdb_jobs","Defines a background job that can be queued and executed.",null,null],[16,"Output","","The output type of the job.",2,null],[10,"execute","","Executes the job and returns the result.",2,[[],[["pin",3],["box",3]]]],[8,"Keyed","","Defines a background job that has a unique <code>key</code>.",null,null],[10,"key","","The unique <code>key</code> for this <code>Job</code>",3,[[]]],[11,"from","pliantdb_jobs::manager","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","pliantdb_jobs::task","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","pliantdb_jobs::manager","",0,[[]]],[11,"clone","pliantdb_jobs::task","",4,[[],["id",3]]],[11,"default","pliantdb_jobs::manager","",0,[[]]],[11,"eq","pliantdb_jobs::task","",4,[[["id",3]],["bool",15]]],[11,"ne","","",4,[[["id",3]],["bool",15]]],[11,"fmt","pliantdb_jobs::manager","",0,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_jobs::task","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"hash","","",4,[[]]]],"p":[[3,"Manager"],[3,"Handle"],[8,"Job"],[8,"Keyed"],[3,"Id"]]},\
"pliantdb_local":{"doc":"Local storage backend for <code>PliantDB</code>.","i":[[0,"config","pliantdb_local","Configuration options.",null,null],[3,"Configuration","pliantdb_local::config","Configuration options for <code>Storage</code>.",null,null],[12,"workers","","Configuration options related to background tasks.",0,null],[12,"views","","Configuration options related to views.",0,null],[3,"Tasks","","Configujration options for background tasks.",null,null],[12,"worker_count","","Defines how many workers should be spawned to process …",1,null],[3,"Views","","Configuration options for views.",null,null],[12,"check_integrity_on_open","","If true, the database will scan all views during the call …",2,null],[0,"backup","pliantdb_local","Local database tool to save and load databases into plain …",null,null],[3,"Cli","pliantdb_local::backup","The command line interface for <code>pliantdb local-backup</code>.",null,null],[12,"database_path","","The path to the database you wish to operate on.",3,null],[12,"subcommand","","The command to execute on the database.",3,null],[4,"Command","","The command to execute.",null,null],[13,"Save","","Exports all of the data into a straightforward file …",4,null],[12,"output_directory","pliantdb_local::backup::Command","The directory to export the data within. The process will …",5,null],[12,"output_name","","The name of the folder to export the data to. If not …",5,null],[13,"Load","pliantdb_local::backup","Loads all of the data from a previously saved backup. Any …",4,null],[12,"backup","pliantdb_local::backup::Command","The path to the previously saved backup.",6,null],[11,"execute","pliantdb_local::backup","Executes the command.",4,[[["pathbuf",3]]]],[0,"connection","pliantdb_local::core","Types for interacting with a database.",null,null],[8,"Connection","pliantdb_local::core::connection","Defines all interactions with a [<code>schema::Schema</code>], …",null,null],[11,"collection","","Accesses a collection for the connected [<code>schema::Schema</code>].",7,[[],["collection",3]]],[11,"insert","","Inserts a newly created document into the connected […",7,[[["global",3],["vec",3],["u8",15]],[["pin",3],["box",3]]]],[11,"update","","Updates an existing document in the connected […",7,[[["document",3]],[["pin",3],["box",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",7,[[["u64",15]],[["box",3],["pin",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",7,[[],[["box",3],["pin",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",7,[[["document",3]],[["pin",3],["box",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",7,[[],["view",3]]],[10,"query","","Queries for view entries matching [<code>View</code>].",7,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",7,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",7,[[["accesspolicy",4],["option",4],["querykey",4]],[["box",3],["pin",3]]]],[10,"reduce_grouped","","Reduces the view entries matching [<code>View</code>], reducing the …",7,[[["accesspolicy",4],["option",4],["querykey",4]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Schema</code>]. If any …",7,[[["transaction",3]],[["box",3],["pin",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Schema</code>]. …",7,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[10,"last_transaction_id","","Fetches the last transaction id that has been committed, …",7,[[],[["pin",3],["box",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",8,null],[12,"access_policy","","The view\'s data access policy. The default value is […",8,null],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",9,null],[13,"Range","","Matches all entires with keys in the range provided.",9,null],[13,"Multiple","","Matches all entries that have keys that are included in …",9,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",10,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",10,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",10,null],[0,"document","pliantdb_local::core","Types for interacting with <code>Document</code>s.",null,null],[3,"Header","pliantdb_local::core::document","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",11,null],[12,"revision","","The revision of the stored document.",11,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",12,null],[12,"header","","The header of the document, which contains the id and …",12,null],[12,"contents","","The serialized bytes of the stored item.",12,null],[3,"Revision","","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",13,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",13,null],[0,"limits","pliantdb_local::core","Limits used within <code>PliantDB</code>.",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb_local::core::limits","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[0,"networking","pliantdb_local::core","Types for networked communications.",null,null],[3,"Payload","pliantdb_local::core::networking","A payload with an associated id.",null,null],[12,"id","","The unique id for this payload.",14,null],[12,"wrapped","","The wrapped payload.",14,null],[4,"Request","","A request made to a server.",null,null],[13,"Server","","A server-related request.",15,null],[13,"Database","","A database-related request.",15,null],[12,"database","pliantdb_local::core::networking::Request","The name of the database.",16,null],[12,"request","","The request made to the database.",16,null],[4,"ServerRequest","pliantdb_local::core::networking","A server-related request.",null,null],[13,"CreateDatabase","","Creates a database.",17,null],[13,"DeleteDatabase","","Deletes the database named <code>name</code>",17,null],[12,"name","pliantdb_local::core::networking::ServerRequest","The name of the database to delete.",18,null],[13,"ListDatabases","pliantdb_local::core::networking","Lists all databases.",17,null],[13,"ListAvailableSchemas","","Lists available schemas.",17,null],[4,"DatabaseRequest","","A database-related request.",null,null],[13,"Get","","Retrieve a single document.",19,null],[12,"collection","pliantdb_local::core::networking::DatabaseRequest","The collection of the document.",20,null],[12,"id","","The id of the document.",20,null],[13,"GetMultiple","pliantdb_local::core::networking","Retrieve multiple documents.",19,null],[12,"collection","pliantdb_local::core::networking::DatabaseRequest","The collection of the documents.",21,null],[12,"ids","","The ids of the documents.",21,null],[13,"Query","pliantdb_local::core::networking","Queries a view.",19,null],[12,"view","pliantdb_local::core::networking::DatabaseRequest","The name of the view.",22,null],[12,"key","","The filter for the view.",22,null],[12,"access_policy","","The access policy for the query.",22,null],[12,"with_docs","","If true, [<code>DatabaseResponse::ViewMappingsWithDocs</code>] will be …",22,null],[13,"Reduce","pliantdb_local::core::networking","Reduces a view.",19,null],[12,"view","pliantdb_local::core::networking::DatabaseRequest","The name of the view.",23,null],[12,"key","","The filter for the view.",23,null],[12,"access_policy","","The access policy for the query.",23,null],[12,"grouped","","Whether to return a single value or values grouped by …",23,null],[13,"ApplyTransaction","pliantdb_local::core::networking","Applies a transaction.",19,null],[12,"transaction","pliantdb_local::core::networking::DatabaseRequest","The trasnaction to apply.",24,null],[13,"ListExecutedTransactions","pliantdb_local::core::networking","Lists executed transactions.",19,null],[12,"starting_id","pliantdb_local::core::networking::DatabaseRequest","The starting transaction id.",25,null],[12,"result_limit","","The maximum number of results.",25,null],[13,"LastTransactionId","pliantdb_local::core::networking","Queries the last transaction id.",19,null],[13,"CreateSubscriber","","Creates a <code>PubSub</code> <code>Subscriber</code>",19,null],[13,"Publish","","Publishes a <code>PubSub</code> message.",19,null],[13,"SubscribeTo","","Subscribes <code>subscriber_id</code> to messages for <code>topic</code>.",19,null],[12,"subscriber_id","pliantdb_local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",26,null],[12,"topic","","The topic to subscribe to.",26,null],[13,"UnsubscribeFrom","pliantdb_local::core::networking","Unsubscribes <code>subscriber_id</code> from messages for <code>topic</code>.",19,null],[12,"subscriber_id","pliantdb_local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",27,null],[12,"topic","","The topic to unsubscribe from.",27,null],[13,"UnregisterSubscriber","pliantdb_local::core::networking","Unregisters the subscriber.",19,null],[12,"subscriber_id","pliantdb_local::core::networking::DatabaseRequest","The id of the <code>Subscriber</code>.",28,null],[4,"Response","pliantdb_local::core::networking","A response from a server.",null,null],[13,"Ok","","A request succeded but provided no output.",29,null],[13,"Server","","A response to a [<code>ServerRequest</code>].",29,null],[13,"Database","","A response to a [<code>DatabaseRequest</code>].",29,null],[13,"Error","","An error occurred processing a request.",29,null],[4,"ServerResponse","","A response to a [<code>ServerRequest</code>].",null,null],[13,"DatabaseCreated","","A database with <code>name</code> was successfully created.",30,null],[12,"name","pliantdb_local::core::networking::ServerResponse","The name of the database to create.",31,null],[13,"DatabaseDeleted","pliantdb_local::core::networking","A database with <code>name</code> was successfully removed.",30,null],[12,"name","pliantdb_local::core::networking::ServerResponse","The name of the database to remove.",32,null],[13,"Databases","pliantdb_local::core::networking","A list of available databases.",30,null],[13,"AvailableSchemas","","A list of availble schemas.",30,null],[4,"DatabaseResponse","","A response to a [<code>DatabaseRequest</code>].",null,null],[13,"Documents","","One or more documents.",33,null],[13,"TransactionResults","","Results of [<code>DatabaseRequest::ApplyTransaction</code>].",33,null],[13,"ViewMappings","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",33,null],[13,"ViewMappingsWithDocs","","Results of [<code>DatabaseRequest::Query</code>] when <code>with_docs</code> is …",33,null],[13,"ViewReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is false.",33,null],[13,"ViewGroupedReduction","","Result of [<code>DatabaseRequest::Reduce</code>] when <code>grouped</code> is true.",33,null],[13,"ExecutedTransactions","","Results of [<code>DatabaseRequest::ListExecutedTransactions</code>].",33,null],[13,"LastTransactionId","","Result of [<code>DatabaseRequest::LastTransactionId</code>].",33,null],[13,"SubscriberCreated","","A new <code>PubSub</code> subscriber was created.",33,null],[12,"subscriber_id","pliantdb_local::core::networking::DatabaseResponse","The unique ID of the subscriber.",34,null],[13,"MessageReceived","pliantdb_local::core::networking","A PubSub message was received.",33,null],[12,"subscriber_id","pliantdb_local::core::networking::DatabaseResponse","The ID of the subscriber receiving the message.",35,null],[12,"message","","The message received.",35,null],[3,"MappedDocument","pliantdb_local::core::networking","A serialized <code>MappedDocument</code>.",null,null],[12,"key","","The serialized key.",36,null],[12,"value","","The serialized value.",36,null],[12,"source","","The source document.",36,null],[3,"Database","","A database on a server.",null,null],[12,"name","","The name of the database.",37,null],[12,"schema","","The schema defining the database.",37,null],[8,"ServerConnection","","Functions for interacting with a <code>PliantDB</code> server.",null,null],[10,"create_database","","Creates a database named <code>name</code> using the [<code>SchemaId</code>] <code>schema</code>.",38,[[["str",15],["schemaid",3]],[["pin",3],["box",3]]]],[10,"delete_database","","Deletes a database named <code>name</code>.",38,[[["str",15]],[["pin",3],["box",3]]]],[10,"list_databases","","Lists the databases on this server.",38,[[],[["box",3],["pin",3]]]],[10,"list_available_schemas","","Lists the [<code>SchemaId</code>]s on this server.",38,[[],[["pin",3],["box",3]]]],[4,"Error","","A networking error.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See […",39,null],[13,"DatabaseNotFound","","The database name given was not found.",39,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",39,null],[13,"UnexpectedResponse","","The server responded with a message that wasn\'t expected …",39,null],[13,"Disconnected","","The connection was interrupted.",39,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",39,null],[12,"database_name","pliantdb_local::core::networking::Error","The name of the database being accessed.",40,null],[12,"schema","","The schema provided for the database.",40,null],[12,"stored_schema","","The schema stored for the database.",40,null],[13,"SchemaAlreadyRegistered","pliantdb_local::core::networking","The [<code>SchemaId</code>] returned has already been registered with …",39,null],[13,"SchemaNotRegistered","","The [<code>SchemaId</code>] requested was not registered with this …",39,null],[0,"error","pliantdb_local::core::networking::fabruic","<code>Error</code> for this [<code>crate</code>].",null,null],[6,"Result","pliantdb_local::core::networking::fabruic::error","<code>Result</code> type for this [<code>crate</code>].",null,null],[4,"Error","","<code>Error</code> for this [<code>crate</code>].",null,null],[13,"ParseCertificate","","Failed to parse the given certificate.",41,null],[12,"certificate","pliantdb_local::core::networking::fabruic::error::Error","The certificate passed to <code>from_der</code>.",42,null],[12,"error","","The parsing error.",42,null],[13,"DanglingCertificate","pliantdb_local::core::networking::fabruic::error","Data passed to generate <code>Certificate</code> with <code>from_der</code> found …",41,null],[12,"certificate","pliantdb_local::core::networking::fabruic::error::Error","The certificate passed to <code>from_der</code>.",43,null],[12,"dangling","","The dangling bytes.",43,null],[13,"ExpiredCertificate","pliantdb_local::core::networking::fabruic::error","<code>Certificate</code> has expired.",41,null],[13,"DomainCertificate","","<code>Certificate</code> is missing a domain name.",41,null],[13,"ParsePrivateKey","","Failed to parse the given private key.",41,null],[13,"ParseAddress","","Parsing a <code>SocketAddr</code> from a [<code>str</code>] failed.",41,null],[13,"Certificate","","Returned by <code>Endpoint</code> when failing to parse the given …",41,null],[13,"PrivateKey","","Returned by <code>Endpoint</code> when failing to parse the given …",41,null],[13,"InvalidKeyPair","","Returned by <code>Endpoint</code> when failing to pair the given …",41,null],[13,"InvalidCertificate","","Returned by <code>Endpoint</code> when failing to add the given …",41,null],[13,"BindSocket","","Returned by <code>Endpoint</code> when failing to bind the socket on …",41,null],[13,"Resolve","","Failed to resolve domain to IP address.",41,null],[13,"NoIp","","Found no IP address for that domain.",41,null],[13,"LocalAddress","","Returned by <code>Endpoint::local_address</code> when failing to …",41,null],[13,"AlreadyClosed","","Attempting to close something that is already closed.",41,null],[13,"ConnectConfig","","Returned by <code>Endpoint::connect</code> if configuration needed to …",41,null],[13,"Connecting","","Returned by <code>Connecting::accept</code> if connecting to the peer …",41,null],[13,"ReceiveStream","","Returned by <code>Connection</code> <code>Stream</code> when receiving a new stream …",41,null],[13,"OpenStream","","Returned by <code>Connection::open_stream</code> if opening a stream …",41,null],[13,"Write","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to write into …",41,null],[13,"Finish","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to finish a …",41,null],[13,"Send","","Returned by <code>Sender::send</code> if the stream was closed by …",41,null],[13,"Serialize","","Returned by <code>Sender::send</code> if <code>serialization</code> failed.",41,null],[13,"Read","","Returned by <code>Receiver::close</code> if <code>Receiver</code> failed to read …",41,null],[13,"Deserialize","","Returned by <code>Receiver::finish</code> if <code>Receiver</code> failed to …",41,null],[13,"NoType","","Returned by <code>Incoming::type</code> if the peer closed the stream …",41,null],[4,"ParseCertificate","","Possible certificate parsing errors.",null,null],[13,"WebPki","","<code>Error</code> returned by [<code>webpki</code>].",44,null],[13,"X509","","<code>Error</code> returned by [<code>x509_parser</code>].",44,null],[3,"IoError","","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…",null,null],[3,"AddrParseError","","An error which can be returned when parsing an IP address …",null,null],[4,"ErrorKind","","The kind of error that can be produced during a …",null,null],[13,"Io","","If the error stems from the reader/writer that is being …",45,null],[13,"InvalidUtf8Encoding","","Returned if the deserializer attempts to deserialize a …",45,null],[13,"InvalidBoolEncoding","","Returned if the deserializer attempts to deserialize a …",45,null],[13,"InvalidCharEncoding","","Returned if the deserializer attempts to deserialize a …",45,null],[13,"InvalidTagEncoding","","Returned if the deserializer attempts to deserialize the …",45,null],[13,"DeserializeAnyNotSupported","","Serde has a deserialize_any method that lets the format …",45,null],[13,"SizeLimit","","If (de)serializing a message takes more than the provided …",45,null],[13,"SequenceMustHaveLength","","Bincode can not encode sequences of unknown length (like …",45,null],[13,"Custom","","A custom error message from Serde.",45,null],[4,"ConnectError","","Errors in the parameters being used to create a new …",null,null],[13,"EndpointStopping","","The endpoint can no longer create new connections",46,null],[13,"TooManyConnections","","The number of active connections on the local endpoint is …",46,null],[13,"InvalidDnsName","","The domain name supplied was malformed",46,null],[13,"Config","","The transport configuration was invalid",46,null],[13,"InvalidRemoteAddress","","The remote [<code>SocketAddr</code>] supplied was malformed",46,null],[4,"ConnectionError","","Reasons why a connection might be lost",null,null],[13,"VersionMismatch","","The peer doesn\'t implement any supported version",47,null],[13,"TransportError","","The peer violated the QUIC specification as understood by …",47,null],[13,"ConnectionClosed","","The peer\'s QUIC stack aborted the connection automatically",47,null],[13,"ApplicationClosed","","The peer closed the connection",47,null],[13,"Reset","","The peer is unable to continue processing this …",47,null],[13,"TimedOut","","Communication with the peer has lapsed for longer than …",47,null],[13,"LocallyClosed","","The local application closed the connection",47,null],[4,"EndpointError","","Errors that can occur during the construction of an …",null,null],[13,"Socket","","An error during setup of the underlying UDP socket.",48,null],[3,"ParseError","","Errors encountered while parsing a TLS certificate or …",null,null],[4,"ReadError","","Errors that arise from reading from a stream.",null,null],[13,"Reset","","The peer abandoned transmitting data on this stream.",49,null],[13,"ConnectionClosed","","The connection was closed.",49,null],[13,"UnknownStream","","The stream has already been stopped, finished, or reset",49,null],[13,"IllegalOrderedRead","","Attempted an ordered read following an unordered read",49,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",49,null],[4,"WriteError","","Errors that arise from writing to a stream",null,null],[13,"Stopped","","The peer is no longer accepting data on this stream.",50,null],[13,"ConnectionClosed","","The connection was closed.",50,null],[13,"UnknownStream","","The stream has already been finished or reset",50,null],[13,"ZeroRttRejected","","This was a 0-RTT stream and the server rejected it.",50,null],[3,"KeyRejected","","An error parsing or validating a key.",null,null],[4,"TLSError","","rustls reports protocol errors using this type.",null,null],[13,"InappropriateMessage","","We received a TLS message that isn\'t valid right now. …",51,null],[12,"expect_types","pliantdb_local::core::networking::fabruic::error::TLSError","Which types we expected",52,null],[12,"got_type","","What type we received",52,null],[13,"InappropriateHandshakeMessage","pliantdb_local::core::networking::fabruic::error","We received a TLS handshake message that isn\'t valid …",51,null],[12,"expect_types","pliantdb_local::core::networking::fabruic::error::TLSError","Which handshake type we expected",53,null],[12,"got_type","","What handshake type we received",53,null],[13,"CorruptMessage","pliantdb_local::core::networking::fabruic::error","The peer sent us a syntactically incorrect TLS message.",51,null],[13,"CorruptMessagePayload","","The peer sent us a TLS message with invalid contents.",51,null],[13,"NoCertificatesPresented","","The peer didn\'t give us any certificates.",51,null],[13,"DecryptError","","We couldn\'t decrypt a message.  This is invariably fatal.",51,null],[13,"PeerIncompatibleError","","The peer doesn\'t support a protocol version/feature we …",51,null],[13,"PeerMisbehavedError","","The peer deviated from the standard TLS protocol. The …",51,null],[13,"AlertReceived","","We received a fatal alert.  This means the peer is …",51,null],[13,"WebPKIError","","The presented certificate chain is invalid.",51,null],[13,"InvalidSCT","","The presented SCT(s) were invalid.",51,null],[13,"General","","A catch-all error for unlikely errors.",51,null],[13,"FailedToGetCurrentTime","","We failed to figure out what time it currently is.",51,null],[13,"HandshakeNotComplete","","This function doesn\'t work until the TLS handshake is …",51,null],[13,"PeerSentOversizedRecord","","The peer sent an oversized record/fragment.",51,null],[13,"NoApplicationProtocol","","An incoming connection did not support any known …",51,null],[3,"ResolveError","","The error type for errors that get returned in the crate",null,null],[4,"WebPkiError","","An error that occurs during certificate validation or …",null,null],[13,"BadDER","","The encoding of some ASN.1 DER-encoded item is invalid.",54,null],[13,"BadDERTime","","The encoding of an ASN.1 DER-encoded time is invalid.",54,null],[13,"CAUsedAsEndEntity","","A CA certificate is veing used as an end-entity …",54,null],[13,"CertExpired","","The certificate is expired; i.e. the time it is being …",54,null],[13,"CertNotValidForName","","The certificate is not valid for the name it is being …",54,null],[13,"CertNotValidYet","","The certificate is not valid yet; i.e. the time it is …",54,null],[13,"EndEntityUsedAsCA","","An end-entity certificate is being used as a CA …",54,null],[13,"ExtensionValueInvalid","","An X.509 extension is invalid.",54,null],[13,"InvalidCertValidity","","The certificate validity period (notBefore, notAfter) is …",54,null],[13,"InvalidSignatureForPublicKey","","The signature is invalid for the given public key.",54,null],[13,"NameConstraintViolation","","The certificate violates one or more name constraints.",54,null],[13,"PathLenConstraintViolated","","The certificate violates one or more path length …",54,null],[13,"SignatureAlgorithmMismatch","","The algorithm in the TBSCertificate \\\"signature\\\" field of …",54,null],[13,"RequiredEKUNotFound","","The certificate is not valid for the Extended Key Usage …",54,null],[13,"UnknownIssuer","","A valid issuer for the certificate could not be found.",54,null],[13,"UnsupportedCertVersion","","The certificate is not a v3 X.509 certificate.",54,null],[13,"UnsupportedCriticalExtension","","The certificate contains an unsupported critical …",54,null],[13,"UnsupportedSignatureAlgorithmForPublicKey","","The signature\'s algorithm does not match the algorithm of …",54,null],[13,"UnsupportedSignatureAlgorithm","","The signature algorithm for a signature is not in the set …",54,null],[4,"X509Error","","An error that can occur while parsing or validating a …",null,null],[13,"Generic","","",55,null],[13,"InvalidVersion","","",55,null],[13,"InvalidSerial","","",55,null],[13,"InvalidAlgorithmIdentifier","","",55,null],[13,"InvalidX509Name","","",55,null],[13,"InvalidDate","","",55,null],[13,"InvalidSPKI","","",55,null],[13,"InvalidSubjectUID","","",55,null],[13,"InvalidIssuerUID","","",55,null],[13,"InvalidExtensions","","",55,null],[13,"InvalidAttributes","","",55,null],[13,"DuplicateExtensions","","",55,null],[13,"DuplicateAttributes","","",55,null],[13,"InvalidSignatureValue","","",55,null],[13,"InvalidTbsCertificate","","",55,null],[13,"InvalidUserCertificate","","",55,null],[13,"InvalidCertificate","","Top-level certificate structure is invalid",55,null],[13,"SignatureVerificationError","","",55,null],[13,"SignatureUnsupportedAlgorithm","","",55,null],[13,"Der","","",55,null],[13,"NomError","","",55,null],[4,"Err","","The <code>Err</code> enum indicates the parser was not successful",null,null],[13,"Incomplete","","There was not enough data",56,null],[13,"Error","","The parser had an error (recoverable)",56,null],[13,"Failure","","The parser had an unrecoverable error: we got to the right…",56,null],[5,"generate_self_signed","pliantdb_local::core::networking::fabruic","Generate a self signed certificate.",null,[[]]],[3,"Certificate","","A public Certificate. You can distribute it freely to …",null,null],[8,"Dangerous","","Gives read access to the [<code>PrivateKey</code>].",null,null],[10,"as_ref","","Returns a <code>&[u8]</code> to the [<code>PrivateKey</code>].",57,[[]]],[10,"into","","Returns a [<code>Vec<u8></code>] to the [<code>PrivateKey</code>].",57,[[],[["global",3],["vec",3],["u8",15]]]],[10,"serialize","","Serialize with [<code>serde</code>].",57,[[],["result",4]]],[3,"PrivateKey","","A private Key.",null,null],[4,"Error","","<code>Error</code> for this [<code>crate</code>].",null,null],[13,"ParseCertificate","","Failed to parse the given certificate.",41,null],[12,"certificate","pliantdb_local::core::networking::fabruic::Error","The certificate passed to <code>from_der</code>.",42,null],[12,"error","","The parsing error.",42,null],[13,"DanglingCertificate","pliantdb_local::core::networking::fabruic","Data passed to generate <code>Certificate</code> with <code>from_der</code> found …",41,null],[12,"certificate","pliantdb_local::core::networking::fabruic::Error","The certificate passed to <code>from_der</code>.",43,null],[12,"dangling","","The dangling bytes.",43,null],[13,"ExpiredCertificate","pliantdb_local::core::networking::fabruic","<code>Certificate</code> has expired.",41,null],[13,"DomainCertificate","","<code>Certificate</code> is missing a domain name.",41,null],[13,"ParsePrivateKey","","Failed to parse the given private key.",41,null],[13,"ParseAddress","","Parsing a <code>SocketAddr</code> from a [<code>str</code>] failed.",41,null],[13,"Certificate","","Returned by <code>Endpoint</code> when failing to parse the given …",41,null],[13,"PrivateKey","","Returned by <code>Endpoint</code> when failing to parse the given …",41,null],[13,"InvalidKeyPair","","Returned by <code>Endpoint</code> when failing to pair the given …",41,null],[13,"InvalidCertificate","","Returned by <code>Endpoint</code> when failing to add the given …",41,null],[13,"BindSocket","","Returned by <code>Endpoint</code> when failing to bind the socket on …",41,null],[13,"Resolve","","Failed to resolve domain to IP address.",41,null],[13,"NoIp","","Found no IP address for that domain.",41,null],[13,"LocalAddress","","Returned by <code>Endpoint::local_address</code> when failing to …",41,null],[13,"AlreadyClosed","","Attempting to close something that is already closed.",41,null],[13,"ConnectConfig","","Returned by <code>Endpoint::connect</code> if configuration needed to …",41,null],[13,"Connecting","","Returned by <code>Connecting::accept</code> if connecting to the peer …",41,null],[13,"ReceiveStream","","Returned by <code>Connection</code> <code>Stream</code> when receiving a new stream …",41,null],[13,"OpenStream","","Returned by <code>Connection::open_stream</code> if opening a stream …",41,null],[13,"Write","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to write into …",41,null],[13,"Finish","","Returned by <code>Sender::finish</code> if <code>Sender</code> failed to finish a …",41,null],[13,"Send","","Returned by <code>Sender::send</code> if the stream was closed by …",41,null],[13,"Serialize","","Returned by <code>Sender::send</code> if <code>serialization</code> failed.",41,null],[13,"Read","","Returned by <code>Receiver::close</code> if <code>Receiver</code> failed to read …",41,null],[13,"Deserialize","","Returned by <code>Receiver::finish</code> if <code>Receiver</code> failed to …",41,null],[13,"NoType","","Returned by <code>Incoming::type</code> if the peer closed the stream …",41,null],[6,"Result","","<code>Result</code> type for this [<code>crate</code>].",null,null],[3,"Builder","","Holding configuration for [<code>Builder</code>] to build [<code>Endpoint</code>].",null,null],[3,"Connecting","","Represent\'s an intermediate state to build a [<code>Connection</code>].",null,null],[3,"Connection","","Represents an open connection. Receives [<code>Incoming</code>] …",null,null],[3,"Endpoint","","Represents a socket using the QUIC protocol to …",null,null],[3,"Incoming","","An intermediate state to define which type to accept in …",null,null],[3,"Receiver","","Used to receive data from a stream.",null,null],[3,"Sender","","Used to send data to a stream.",null,null],[0,"schema","pliantdb_local::core","Types for defining database schema.",null,null],[0,"view","pliantdb_local::core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb_local::core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb_local::core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",58,null],[12,"key","","The key used to index the View.",58,null],[12,"value","","An associated value stored in the view.",58,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",59,null],[12,"key","","The key used to index the View.",59,null],[12,"value","","An associated value stored in the view.",59,null],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",60,null],[12,"key","","The key used to index the View.",60,null],[12,"value","","An associated value stored in the view.",60,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",61,null],[12,"value","","The value generated by the <code>View</code>",61,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",62,[[],[["error",3],["cow",4],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",62,[[],[["error",3],["result",4]]]],[8,"EnumKey","","Adds <code>Key</code> support to an enum. Requires implementing …",null,null],[4,"Error","pliantdb_local::core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",63,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",63,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",63,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",64,null],[16,"Key","","The key for this view.",64,null],[16,"Value","","An associated type that can be stored with each entry in …",64,null],[10,"version","","The version of the view. Changing this value will cause …",64,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",64,[[],[["cow",4],["str",15]]]],[10,"map","","The map function for this view. This function is …",64,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",64,[[["bool",15]],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",65,null],[13,"Borrowed","","a borrowed value",65,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing …",66,[[],["collectionid",3]]],[10,"version","","Wraps [<code>View::version</code>]",66,[[],["u64",15]]],[10,"name","","Wraps [<code>View::name</code>]",66,[[],[["cow",4],["str",15]]]],[10,"map","","Wraps [<code>View::map</code>]",66,[[["document",3]],[["error",4],["result",4],["option",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",66,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[3,"SchemaId","pliantdb_local::core::schema","The unique Id of a [<code>Schema</code>]. Primarily used to try to …",null,null],[8,"Schema","","Defines a group of collections that are stored into a …",null,null],[10,"schema_id","","Returns the unique [<code>SchemaId</code>] for this schema.",67,[[],["schemaid",3]]],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>.",67,[[["schematic",3]]]],[11,"schematic","","Retrieves the [<code>Schematic</code>] for this schema.",67,[[],["schematic",3]]],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"collection_id","","The <code>Id</code> of this collection.",68,[[],["collectionid",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",68,[[["schematic",3]]]],[3,"CollectionId","","A unique collection id. Choose collection names that …",null,null],[3,"Schematic","","A collection of defined collections and views.",null,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into a <code>Cow<[u8]></code> containing bytes ordered in …",62,[[],[["error",3],["cow",4],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",62,[[],[["error",3],["result",4]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",58,null],[12,"key","","The key used to index the View.",58,null],[12,"value","","An associated value stored in the view.",58,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",59,null],[12,"key","","The key used to index the View.",59,null],[12,"value","","An associated value stored in the view.",59,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",61,null],[12,"value","","The value generated by the <code>View</code>",61,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",64,null],[16,"Key","","The key for this view.",64,null],[16,"Value","","An associated type that can be stored with each entry in …",64,null],[10,"version","","The version of the view. Changing this value will cause …",64,[[],["u64",15]]],[10,"name","","The name of the view. Must be unique per collection.",64,[[],[["cow",4],["str",15]]]],[10,"map","","The map function for this view. This function is …",64,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",64,[[["bool",15]],[["result",4],["error",4]]]],[0,"transaction","pliantdb_local::core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb_local::core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",69,null],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",70,null],[12,"command","","The command being performed.",70,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",71,null],[12,"contents","pliantdb_local::core::transaction::Command","The initial contents of the document.",72,null],[13,"Update","pliantdb_local::core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",71,null],[12,"header","pliantdb_local::core::transaction::Command","The current header of the <code>Document</code>.",73,null],[12,"contents","","The new contents to store within the <code>Document</code>.",73,null],[13,"Delete","pliantdb_local::core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",71,null],[12,"header","pliantdb_local::core::transaction::Command","The current header of the <code>Document</code>.",74,null],[4,"OperationResult","pliantdb_local::core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",75,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",75,null],[12,"collection","pliantdb_local::core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",76,null],[12,"header","","The header of the updated <code>Document</code>.",76,null],[13,"DocumentDeleted","pliantdb_local::core::transaction","A <code>Document</code> was deleted.",75,null],[12,"collection","pliantdb_local::core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",77,null],[12,"id","","The id of the deleted <code>Document</code>.",77,null],[3,"Executed","pliantdb_local::core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",78,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",78,null],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",79,null],[12,"id","","The id of the changed <code>Document</code>.",79,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",79,null],[0,"pubsub","pliantdb_local::core","Types for Publish/Subscribe (<code>PubSub</code>) messaging.",null,null],[8,"PubSub","pliantdb_local::core::pubsub","Publishes and Subscribes to messages on topics.",null,null],[16,"Subscriber","","The Subscriber type for this <code>PubSub</code> connection.",80,null],[10,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",80,[[],[["box",3],["pin",3]]]],[10,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",80,[[],[["pin",3],["box",3]]]],[8,"Subscriber","","A subscriber to one or more topics.",null,null],[10,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",81,[[],[["pin",3],["box",3]]]],[10,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",81,[[["str",15]],[["pin",3],["box",3]]]],[10,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",81,[[],["receiver",3]]],[4,"Error","pliantdb_local::core","an enumeration of errors that this crate can produce",null,null],[13,"Storage","","An error from interacting with local storage.",82,null],[13,"Server","","An error from interacting with a server.",82,null],[13,"Transport","","An error occurred from the QUIC transport layer.",82,null],[13,"Websocket","","An error occurred from the websocket transport layer.",82,null],[13,"Networking","","An error occurred from networking.",82,null],[13,"Io","","An error occurred from IO.",82,null],[13,"Configuration","","An error occurred with the provided configuration options.",82,null],[13,"Client","","An error occurred inside of the client.",82,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",82,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",82,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",82,null],[0,"test_util","","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb_local::core::test_util","",null,null],[12,"value","","",83,null],[12,"category","","",83,null],[12,"parent_id","","",83,null],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicSchema","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",84,null],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"HarnessTest","","",null,null],[13,"StoreRetrieveUpdate","","",85,null],[13,"NotFound","","",85,null],[13,"Conflict","","",85,null],[13,"BadUpdate","","",85,null],[13,"NoUpdate","","",85,null],[13,"GetMultiple","","",85,null],[13,"ListTransactions","","",85,null],[13,"ViewQuery","","",85,null],[13,"UnassociatedCollection","","",85,null],[13,"ViewUpdate","","",85,null],[13,"ViewAccessPolicies","","",85,null],[13,"PubSubSimple","","",85,null],[13,"PubSubMultipleSubscribers","","",85,null],[13,"PubSubDropAndSend","","",85,null],[13,"PubSubUnsubscribe","","",85,null],[13,"PubSubDropCleanup","","",85,null],[5,"store_retrieve_update_delete_tests","","",null,[[]]],[5,"not_found_tests","","",null,[[]]],[5,"conflict_tests","","",null,[[]]],[5,"bad_update_tests","","",null,[[]]],[5,"no_update_tests","","",null,[[]]],[5,"get_multiple_tests","","",null,[[]]],[5,"list_transactions_tests","","",null,[[]]],[5,"view_query_tests","","",null,[[]]],[5,"unassociated_collection_tests","","",null,[[]]],[5,"view_update_tests","","",null,[[]]],[5,"view_access_policy_tests","","",null,[[]]],[3,"Message","pliantdb_local::core::circulate","A <code>PubSub</code> message.",null,null],[12,"topic","","The topic of the message.",86,null],[12,"payload","","The payload of the message.",86,null],[3,"Relay","","Manages subscriptions and notifications for <code>PubSub</code>.",null,null],[3,"Subscriber","","A subscriber for [<code>Message</code>]s published to subscribed …",null,null],[0,"select","pliantdb_local::core::circulate::flume","Types that permit waiting upon multiple blocking …",null,null],[4,"SelectError","pliantdb_local::core::circulate::flume::select","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",87,null],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[0,"async","pliantdb_local::core::circulate::flume","Futures and other types that allow asynchronous …",null,null],[3,"SendFut","pliantdb_local::core::circulate::flume::async","A future that sends a value into a channel.",null,null],[3,"SendSink","","A sink that allows sending values into a channel.",null,null],[3,"RecvFut","","A future which allows asynchronously receiving a message.",null,null],[3,"RecvStream","","A stream which allows asynchronously receiving messages.",null,null],[3,"SendError","pliantdb_local::core::circulate::flume","An error that may be emitted when attempting to send a …",null,null],[12,"0","","",88,null],[4,"TrySendError","","An error that may be emitted when attempting to send a …",null,null],[13,"Full","","",89,null],[13,"Disconnected","","",89,null],[4,"SendTimeoutError","","An error that may be emitted when sending a value into a …",null,null],[13,"Timeout","","",90,null],[13,"Disconnected","","",90,null],[4,"RecvError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Disconnected","","",91,null],[4,"TryRecvError","","An error that may be emitted when attempting to fetch a …",null,null],[13,"Empty","","",92,null],[13,"Disconnected","","",92,null],[4,"RecvTimeoutError","","An error that may be emitted when attempting to wait for …",null,null],[13,"Timeout","","",93,null],[13,"Disconnected","","",93,null],[3,"Sender","","A transmitting end of a channel.",null,null],[3,"Receiver","","The receiving end of a channel.",null,null],[3,"Iter","","An iterator over the msgs received from a channel.",null,null],[3,"TryIter","","An non-blocking iterator over the msgs received from a …",null,null],[3,"Drain","","An fixed-sized iterator over the msgs drained from a …",null,null],[3,"IntoIter","","An owned iterator over the msgs received from a channel.",null,null],[5,"unbounded","","Create a channel with no maximum capacity.",null,[[]]],[5,"bounded","","Create a channel with a maximum capacity.",null,[[["usize",15]]]],[3,"Selector","","A type used to wait upon multiple blocking operations at …",null,null],[0,"bounds","pliantdb_local::core::num_traits","",null,null],[8,"Bounded","pliantdb_local::core::num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",94,[[]]],[10,"max_value","","returns the largest finite number this type can represent",94,[[]]],[0,"cast","pliantdb_local::core::num_traits","",null,null],[8,"ToPrimitive","pliantdb_local::core::num_traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",95,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",95,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",95,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",95,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",95,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",95,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",95,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",95,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",95,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",95,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",95,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",95,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",95,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",95,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",96,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",96,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",96,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",96,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",96,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",96,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",96,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",96,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",96,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",96,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",96,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",96,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",96,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",96,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",97,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",98,[[]]],[0,"float","pliantdb_local::core::num_traits","",null,null],[8,"FloatCore","pliantdb_local::core::num_traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",99,[[]]],[10,"neg_infinity","","Returns negative infinity.",99,[[]]],[10,"nan","","Returns NaN.",99,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",99,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",99,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",99,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",99,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",99,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",99,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",99,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",99,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",99,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",99,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",99,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",99,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",99,[[]]],[11,"trunc","","Return the integer part of a number.",99,[[]]],[11,"fract","","Returns the fractional part of a number.",99,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",99,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",99,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",99,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",99,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",99,[[]]],[11,"max","","Returns the maximum of the two numbers.",99,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",99,[[]]],[11,"powi","","Raise a number to an integer power.",99,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",99,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",99,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",99,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",100,[[]]],[10,"infinity","","Returns the infinite value.",100,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",100,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",100,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",100,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",100,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",100,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",100,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",100,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",100,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",100,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",100,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",100,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",100,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",100,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",100,[[]]],[10,"trunc","","Return the integer part of a number.",100,[[]]],[10,"fract","","Returns the fractional part of a number.",100,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",100,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",100,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",100,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",100,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",100,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",100,[[]]],[10,"powi","","Raise a number to an integer power.",100,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",100,[[]]],[10,"sqrt","","Take the square root of a number.",100,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",100,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",100,[[]]],[10,"ln","","Returns the natural logarithm of the number.",100,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",100,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",100,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",100,[[]]],[11,"to_degrees","","Converts radians to degrees.",100,[[]]],[11,"to_radians","","Converts degrees to radians.",100,[[]]],[10,"max","","Returns the maximum of the two numbers.",100,[[]]],[10,"min","","Returns the minimum of the two numbers.",100,[[]]],[10,"abs_sub","","The positive difference of two numbers.",100,[[]]],[10,"cbrt","","Take the cubic root of a number.",100,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",100,[[]]],[10,"sin","","Computes the sine of a number (in radians).",100,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",100,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",100,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",100,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",100,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",100,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",100,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",100,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",100,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",100,[[]]],[10,"sinh","","Hyperbolic sine function.",100,[[]]],[10,"cosh","","Hyperbolic cosine function.",100,[[]]],[10,"tanh","","Hyperbolic tangent function.",100,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",100,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",100,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",100,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",100,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",101,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",101,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",101,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",101,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",101,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",101,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",101,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",101,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",101,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",101,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",101,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",101,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",101,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",101,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",101,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",101,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",101,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",101,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",101,[[]]],[0,"identities","pliantdb_local::core::num_traits","",null,null],[8,"Zero","pliantdb_local::core::num_traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",102,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",102,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",102,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",103,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",103,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",103,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[0,"int","pliantdb_local::core::num_traits","",null,null],[8,"PrimInt","pliantdb_local::core::num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",104,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",104,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",104,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",104,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",104,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",104,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",104,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",104,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",104,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",104,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",104,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",104,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",104,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",104,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",104,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",104,[[["u32",15]]]],[0,"ops","pliantdb_local::core::num_traits","",null,null],[0,"checked","pliantdb_local::core::num_traits::ops","",null,null],[8,"CheckedAdd","pliantdb_local::core::num_traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",105,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",106,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",107,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",108,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",109,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",110,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",111,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",112,[[["u32",15]],["option",4]]],[0,"inv","pliantdb_local::core::num_traits::ops","",null,null],[8,"Inv","pliantdb_local::core::num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",113,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",113,[[]]],[0,"mul_add","pliantdb_local::core::num_traits::ops","",null,null],[8,"MulAdd","pliantdb_local::core::num_traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",114,null],[10,"mul_add","","Performs the fused multiply-add operation.",114,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",115,[[]]],[0,"overflowing","pliantdb_local::core::num_traits::ops","",null,null],[8,"OverflowingAdd","pliantdb_local::core::num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean …",116,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean …",117,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean …",118,[[]]],[0,"saturating","pliantdb_local::core::num_traits::ops","",null,null],[8,"Saturating","pliantdb_local::core::num_traits::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",119,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",119,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",120,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",121,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",122,[[]]],[0,"wrapping","pliantdb_local::core::num_traits::ops","",null,null],[8,"WrappingAdd","pliantdb_local::core::num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",123,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",124,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",125,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",126,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",127,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",128,[[["u32",15]]]],[0,"pow","pliantdb_local::core::num_traits","",null,null],[8,"Pow","pliantdb_local::core::num_traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",129,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",129,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[0,"real","pliantdb_local::core::num_traits","",null,null],[8,"Real","pliantdb_local::core::num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can …",130,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",130,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",130,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",130,[[]]],[10,"floor","","Returns the largest integer less than or equal to a …",130,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",130,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",130,[[]]],[10,"trunc","","Return the integer part of a number.",130,[[]]],[10,"fract","","Returns the fractional part of a number.",130,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",130,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",130,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",130,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",130,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",130,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",130,[[]]],[10,"powi","","Raise a number to an integer power.",130,[[["i32",15]]]],[10,"powf","","Raise a number to a real number power.",130,[[]]],[10,"sqrt","","Take the square root of a number.",130,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",130,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",130,[[]]],[10,"ln","","Returns the natural logarithm of the number.",130,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",130,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",130,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",130,[[]]],[10,"to_degrees","","Converts radians to degrees.",130,[[]]],[10,"to_radians","","Converts degrees to radians.",130,[[]]],[10,"max","","Returns the maximum of the two numbers.",130,[[]]],[10,"min","","Returns the minimum of the two numbers.",130,[[]]],[10,"abs_sub","","The positive difference of two numbers.",130,[[]]],[10,"cbrt","","Take the cubic root of a number.",130,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",130,[[]]],[10,"sin","","Computes the sine of a number (in radians).",130,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",130,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",130,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",130,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",130,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",130,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",130,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",130,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",130,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",130,[[]]],[10,"sinh","","Hyperbolic sine function.",130,[[]]],[10,"cosh","","Hyperbolic cosine function.",130,[[]]],[10,"tanh","","Hyperbolic tangent function.",130,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",130,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",130,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",130,[[]]],[0,"sign","pliantdb_local::core::num_traits","",null,null],[8,"Signed","pliantdb_local::core::num_traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",131,[[]]],[10,"abs_sub","","The positive difference of two numbers.",131,[[]]],[10,"signum","","Returns the sign of the number.",131,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",131,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",131,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","pliantdb_local::core::num_traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",132,null],[10,"from_str_radix","","Convert from a string and radix (typically <code>2..=36</code>).",132,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",133,null],[13,"Invalid","","",133,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",134,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",94,[[]]],[10,"max_value","","returns the largest finite number this type can represent",94,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",100,[[]]],[10,"infinity","","Returns the infinite value.",100,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",100,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",100,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",100,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",100,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",100,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",100,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",100,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",100,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",100,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",100,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",100,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",100,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",100,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",100,[[]]],[10,"trunc","","Return the integer part of a number.",100,[[]]],[10,"fract","","Returns the fractional part of a number.",100,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",100,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",100,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",100,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",100,[[],["bool",15]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",100,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",100,[[]]],[10,"powi","","Raise a number to an integer power.",100,[[["i32",15]]]],[10,"powf","","Raise a number to a floating point power.",100,[[]]],[10,"sqrt","","Take the square root of a number.",100,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",100,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",100,[[]]],[10,"ln","","Returns the natural logarithm of the number.",100,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",100,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",100,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",100,[[]]],[11,"to_degrees","","Converts radians to degrees.",100,[[]]],[11,"to_radians","","Converts degrees to radians.",100,[[]]],[10,"max","","Returns the maximum of the two numbers.",100,[[]]],[10,"min","","Returns the minimum of the two numbers.",100,[[]]],[10,"abs_sub","","The positive difference of two numbers.",100,[[]]],[10,"cbrt","","Take the cubic root of a number.",100,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",100,[[]]],[10,"sin","","Computes the sine of a number (in radians).",100,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",100,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",100,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",100,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",100,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",100,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",100,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",100,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",100,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",100,[[]]],[10,"sinh","","Hyperbolic sine function.",100,[[]]],[10,"cosh","","Hyperbolic cosine function.",100,[[]]],[10,"tanh","","Hyperbolic tangent function.",100,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",100,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",100,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",100,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",100,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",101,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",101,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",101,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",101,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",101,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",101,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",101,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",101,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",101,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",101,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",101,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",101,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",101,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",101,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",101,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",101,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",101,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",101,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",101,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",98,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",96,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",96,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",96,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",96,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",96,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",96,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",96,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",96,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",96,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",96,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",96,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",96,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",96,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",96,[[["f64",15]],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",97,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",95,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",95,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",95,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",95,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",95,[[],[["option",4],["i64",15]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",95,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",95,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",95,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",95,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",95,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",95,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",95,[[],[["option",4],["u128",15]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",95,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",95,[[],[["f64",15],["option",4]]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",103,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",103,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",103,[[],["bool",15]]],[8,"Zero","","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",102,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",102,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",102,[[],["bool",15]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",104,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",104,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",104,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",104,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",104,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",104,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",104,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",104,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",104,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",104,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",104,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",104,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",104,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",104,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",104,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",104,[[["u32",15]]]],[8,"CheckedAdd","","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",105,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",108,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",107,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",110,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",109,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",111,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",112,[[["u32",15]],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",106,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",113,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",113,[[]]],[8,"MulAdd","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",114,null],[10,"mul_add","","Performs the fused multiply-add operation.",114,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",115,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",119,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",119,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",120,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",122,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",121,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",123,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",125,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",126,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",127,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",128,[[["u32",15]]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",124,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",129,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",129,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",131,[[]]],[10,"abs_sub","","The positive difference of two numbers.",131,[[]]],[10,"signum","","Returns the sign of the number.",131,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",131,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",131,[[],["bool",15]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[14,"define_pubsub_test_suite","pliantdb_local::core","Expands into a suite of pubsub unit tests using the …",null,null],[14,"define_connection_test_suite","","Creates a test suite that tests methods available on […",null,null],[4,"Error","pliantdb_local","Errors that can occur from interacting with storage.",null,null],[13,"Sled","","An error occurred interacting with <code>sled</code>.",135,null],[13,"InternalSerialization","","An error occurred serializing the underlying database …",135,null],[13,"Serialization","","An error occurred serializing the contents of a <code>Document</code> …",135,null],[13,"InternalCommunication","","An internal error occurred while waiting for a message.",135,null],[13,"View","","An error occurred while executing a view",135,null],[13,"Core","","An internal error occurred while waiting for a message.",135,null],[13,"Other","","An internal error occurred while waiting for a message.",135,null],[3,"Storage","","A local, file-based database.",null,null],[11,"from","pliantdb_local::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","pliantdb_local","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_string","","",135,[[],["string",3]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"vzip","","",135,[[]]],[11,"init","","",135,[[],["usize",15]]],[11,"deref","","",135,[[["usize",15]]]],[11,"deref_mut","","",135,[[["usize",15]]]],[11,"drop","","",135,[[["usize",15]]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"vzip","","",136,[[]]],[11,"init","","",136,[[],["usize",15]]],[11,"deref","","",136,[[["usize",15]]]],[11,"deref_mut","","",136,[[["usize",15]]]],[11,"drop","","",136,[[["usize",15]]]],[11,"from","pliantdb_local::backup","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","pliantdb_local::core::connection","",137,[[]]],[11,"into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"vzip","","",137,[[]]],[11,"init","","",137,[[],["usize",15]]],[11,"deref","","",137,[[["usize",15]]]],[11,"deref_mut","","",137,[[["usize",15]]]],[11,"drop","","",137,[[["usize",15]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","pliantdb_local::core::document","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"equivalent","","",11,[[],["bool",15]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"equivalent","","",13,[[],["bool",15]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","pliantdb_local::core::networking","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[],["usize",15]]],[11,"deref","","",17,[[["usize",15]]]],[11,"deref_mut","","",17,[[["usize",15]]]],[11,"drop","","",17,[[["usize",15]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[],["usize",15]]],[11,"deref","","",19,[[["usize",15]]]],[11,"deref_mut","","",19,[[["usize",15]]]],[11,"drop","","",19,[[["usize",15]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[],["usize",15]]],[11,"deref","","",29,[[["usize",15]]]],[11,"deref_mut","","",29,[[["usize",15]]]],[11,"drop","","",29,[[["usize",15]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[],["usize",15]]],[11,"deref","","",33,[[["usize",15]]]],[11,"deref_mut","","",33,[[["usize",15]]]],[11,"drop","","",33,[[["usize",15]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[],["usize",15]]],[11,"deref","","",36,[[["usize",15]]]],[11,"deref_mut","","",36,[[["usize",15]]]],[11,"drop","","",36,[[["usize",15]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[],["usize",15]]],[11,"deref","","",37,[[["usize",15]]]],[11,"deref_mut","","",37,[[["usize",15]]]],[11,"drop","","",37,[[["usize",15]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[],["usize",15]]],[11,"deref","","",39,[[["usize",15]]]],[11,"deref_mut","","",39,[[["usize",15]]]],[11,"drop","","",39,[[["usize",15]]]],[11,"from","pliantdb_local::core::networking::fabruic","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[],["usize",15]]],[11,"deref","","",41,[[["usize",15]]]],[11,"deref_mut","","",41,[[["usize",15]]]],[11,"drop","","",41,[[["usize",15]]]],[11,"from","pliantdb_local::core::networking::fabruic::error","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[],["usize",15]]],[11,"deref","","",44,[[["usize",15]]]],[11,"deref_mut","","",44,[[["usize",15]]]],[11,"drop","","",44,[[["usize",15]]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_string","","",138,[[],["string",3]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"vzip","","",138,[[]]],[11,"init","","",138,[[],["usize",15]]],[11,"deref","","",138,[[["usize",15]]]],[11,"deref_mut","","",138,[[["usize",15]]]],[11,"drop","","",138,[[["usize",15]]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"to_string","","",139,[[],["string",3]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"vzip","","",139,[[]]],[11,"equivalent","","",139,[[],["bool",15]]],[11,"init","","",139,[[],["usize",15]]],[11,"deref","","",139,[[["usize",15]]]],[11,"deref_mut","","",139,[[["usize",15]]]],[11,"drop","","",139,[[["usize",15]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[],["usize",15]]],[11,"deref","","",45,[[["usize",15]]]],[11,"deref_mut","","",45,[[["usize",15]]]],[11,"drop","","",45,[[["usize",15]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"equivalent","","",46,[[],["bool",15]]],[11,"init","","",46,[[],["usize",15]]],[11,"deref","","",46,[[["usize",15]]]],[11,"deref_mut","","",46,[[["usize",15]]]],[11,"drop","","",46,[[["usize",15]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"equivalent","","",47,[[],["bool",15]]],[11,"init","","",47,[[],["usize",15]]],[11,"deref","","",47,[[["usize",15]]]],[11,"deref_mut","","",47,[[["usize",15]]]],[11,"drop","","",47,[[["usize",15]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[],["usize",15]]],[11,"deref","","",48,[[["usize",15]]]],[11,"deref_mut","","",48,[[["usize",15]]]],[11,"drop","","",48,[[["usize",15]]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"to_string","","",140,[[],["string",3]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"vzip","","",140,[[]]],[11,"init","","",140,[[],["usize",15]]],[11,"deref","","",140,[[["usize",15]]]],[11,"deref_mut","","",140,[[["usize",15]]]],[11,"drop","","",140,[[["usize",15]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"equivalent","","",49,[[],["bool",15]]],[11,"init","","",49,[[],["usize",15]]],[11,"deref","","",49,[[["usize",15]]]],[11,"deref_mut","","",49,[[["usize",15]]]],[11,"drop","","",49,[[["usize",15]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"equivalent","","",50,[[],["bool",15]]],[11,"init","","",50,[[],["usize",15]]],[11,"deref","","",50,[[["usize",15]]]],[11,"deref_mut","","",50,[[["usize",15]]]],[11,"drop","","",50,[[["usize",15]]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"to_string","","",141,[[],["string",3]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"vzip","","",141,[[]]],[11,"init","","",141,[[],["usize",15]]],[11,"deref","","",141,[[["usize",15]]]],[11,"deref_mut","","",141,[[["usize",15]]]],[11,"drop","","",141,[[["usize",15]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[],["usize",15]]],[11,"deref","","",51,[[["usize",15]]]],[11,"deref_mut","","",51,[[["usize",15]]]],[11,"drop","","",51,[[["usize",15]]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"to_string","","",142,[[],["string",3]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"vzip","","",142,[[]]],[11,"init","","",142,[[],["usize",15]]],[11,"deref","","",142,[[["usize",15]]]],[11,"deref_mut","","",142,[[["usize",15]]]],[11,"drop","","",142,[[["usize",15]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[],["usize",15]]],[11,"deref","","",54,[[["usize",15]]]],[11,"deref_mut","","",54,[[["usize",15]]]],[11,"drop","","",54,[[["usize",15]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[],["usize",15]]],[11,"deref","","",55,[[["usize",15]]]],[11,"deref_mut","","",55,[[["usize",15]]]],[11,"drop","","",55,[[["usize",15]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"equivalent","","",56,[[],["bool",15]]],[11,"init","","",56,[[],["usize",15]]],[11,"deref","","",56,[[["usize",15]]]],[11,"deref_mut","","",56,[[["usize",15]]]],[11,"drop","","",56,[[["usize",15]]]],[11,"from","pliantdb_local::core::networking::fabruic","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"as_bits","","",143,[[],["bitslice",3]]],[11,"vzip","","",143,[[]]],[11,"equivalent","","",143,[[],["bool",15]]],[11,"init","","",143,[[],["usize",15]]],[11,"deref","","",143,[[["usize",15]]]],[11,"deref_mut","","",143,[[["usize",15]]]],[11,"drop","","",143,[[["usize",15]]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"vzip","","",144,[[]]],[11,"equivalent","","",144,[[],["bool",15]]],[11,"init","","",144,[[],["usize",15]]],[11,"deref","","",144,[[["usize",15]]]],[11,"deref_mut","","",144,[[["usize",15]]]],[11,"drop","","",144,[[["usize",15]]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"vzip","","",145,[[]]],[11,"init","","",145,[[],["usize",15]]],[11,"deref","","",145,[[["usize",15]]]],[11,"deref_mut","","",145,[[["usize",15]]]],[11,"drop","","",145,[[["usize",15]]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"vzip","","",146,[[]]],[11,"init","","",146,[[],["usize",15]]],[11,"deref","","",146,[[["usize",15]]]],[11,"deref_mut","","",146,[[["usize",15]]]],[11,"drop","","",146,[[["usize",15]]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"vzip","","",147,[[]]],[11,"init","","",147,[[],["usize",15]]],[11,"deref","","",147,[[["usize",15]]]],[11,"deref_mut","","",147,[[["usize",15]]]],[11,"drop","","",147,[[["usize",15]]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"vzip","","",148,[[]]],[11,"init","","",148,[[],["usize",15]]],[11,"deref","","",148,[[["usize",15]]]],[11,"deref_mut","","",148,[[["usize",15]]]],[11,"drop","","",148,[[["usize",15]]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"vzip","","",149,[[]]],[11,"init","","",149,[[],["usize",15]]],[11,"deref","","",149,[[["usize",15]]]],[11,"deref_mut","","",149,[[["usize",15]]]],[11,"drop","","",149,[[["usize",15]]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"try_poll_next","","",150,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"vzip","","",150,[[]]],[11,"init","","",150,[[],["usize",15]]],[11,"deref","","",150,[[["usize",15]]]],[11,"deref_mut","","",150,[[["usize",15]]]],[11,"drop","","",150,[[["usize",15]]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"vzip","","",151,[[]]],[11,"init","","",151,[[],["usize",15]]],[11,"deref","","",151,[[["usize",15]]]],[11,"deref_mut","","",151,[[["usize",15]]]],[11,"drop","","",151,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[],["usize",15]]],[11,"deref","","",58,[[["usize",15]]]],[11,"deref_mut","","",58,[[["usize",15]]]],[11,"drop","","",58,[[["usize",15]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[],["usize",15]]],[11,"deref","","",59,[[["usize",15]]]],[11,"deref_mut","","",59,[[["usize",15]]]],[11,"drop","","",59,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema::view::map","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[],["usize",15]]],[11,"deref","","",60,[[["usize",15]]]],[11,"deref_mut","","",60,[[["usize",15]]]],[11,"drop","","",60,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[],["usize",15]]],[11,"deref","","",61,[[["usize",15]]]],[11,"deref_mut","","",61,[[["usize",15]]]],[11,"drop","","",61,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema::view","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"init","","",63,[[],["usize",15]]],[11,"deref","","",63,[[["usize",15]]]],[11,"deref_mut","","",63,[[["usize",15]]]],[11,"drop","","",63,[[["usize",15]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"as_bits","","",65,[[],["bitslice",3]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[],["usize",15]]],[11,"deref","","",65,[[["usize",15]]]],[11,"deref_mut","","",65,[[["usize",15]]]],[11,"drop","","",65,[[["usize",15]]]],[11,"from","pliantdb_local::core::schema","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"to_string","","",152,[[],["string",3]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"vzip","","",152,[[]]],[11,"equivalent","","",152,[[],["bool",15]]],[11,"init","","",152,[[],["usize",15]]],[11,"deref","","",152,[[["usize",15]]]],[11,"deref_mut","","",152,[[["usize",15]]]],[11,"drop","","",152,[[["usize",15]]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"to_string","","",153,[[],["string",3]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"vzip","","",153,[[]]],[11,"equivalent","","",153,[[],["bool",15]]],[11,"init","","",153,[[],["usize",15]]],[11,"deref","","",153,[[["usize",15]]]],[11,"deref_mut","","",153,[[["usize",15]]]],[11,"drop","","",153,[[["usize",15]]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"vzip","","",154,[[]]],[11,"init","","",154,[[],["usize",15]]],[11,"deref","","",154,[[["usize",15]]]],[11,"deref_mut","","",154,[[["usize",15]]]],[11,"drop","","",154,[[["usize",15]]]],[11,"from","pliantdb_local::core::transaction","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"init","","",69,[[],["usize",15]]],[11,"deref","","",69,[[["usize",15]]]],[11,"deref_mut","","",69,[[["usize",15]]]],[11,"drop","","",69,[[["usize",15]]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"init","","",70,[[],["usize",15]]],[11,"deref","","",70,[[["usize",15]]]],[11,"deref_mut","","",70,[[["usize",15]]]],[11,"drop","","",70,[[["usize",15]]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"init","","",71,[[],["usize",15]]],[11,"deref","","",71,[[["usize",15]]]],[11,"deref_mut","","",71,[[["usize",15]]]],[11,"drop","","",71,[[["usize",15]]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"init","","",75,[[],["usize",15]]],[11,"deref","","",75,[[["usize",15]]]],[11,"deref_mut","","",75,[[["usize",15]]]],[11,"drop","","",75,[[["usize",15]]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"init","","",78,[[],["usize",15]]],[11,"deref","","",78,[[["usize",15]]]],[11,"deref_mut","","",78,[[["usize",15]]]],[11,"drop","","",78,[[["usize",15]]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"init","","",79,[[],["usize",15]]],[11,"deref","","",79,[[["usize",15]]]],[11,"deref_mut","","",79,[[["usize",15]]]],[11,"drop","","",79,[[["usize",15]]]],[11,"from","pliantdb_local::core","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"to_string","","",82,[[],["string",3]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"init","","",82,[[],["usize",15]]],[11,"deref","","",82,[[["usize",15]]]],[11,"deref_mut","","",82,[[["usize",15]]]],[11,"drop","","",82,[[["usize",15]]]],[11,"from","pliantdb_local::core::test_util","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"schema_id","","",83,[[],["schemaid",3]]],[11,"define_collections","","",83,[[["schematic",3]]]],[11,"vzip","","",83,[[]]],[11,"init","","",83,[[],["usize",15]]],[11,"deref","","",83,[[["usize",15]]]],[11,"deref_mut","","",83,[[["usize",15]]]],[11,"drop","","",83,[[["usize",15]]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"collection","","",155,[[],["collectionid",3]]],[11,"version","","",155,[[],["u64",15]]],[11,"name","","",155,[[],[["cow",4],["str",15]]]],[11,"map","","",155,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",155,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[11,"vzip","","",155,[[]]],[11,"init","","",155,[[],["usize",15]]],[11,"deref","","",155,[[["usize",15]]]],[11,"deref_mut","","",155,[[["usize",15]]]],[11,"drop","","",155,[[["usize",15]]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"collection","","",156,[[],["collectionid",3]]],[11,"version","","",156,[[],["u64",15]]],[11,"name","","",156,[[],[["cow",4],["str",15]]]],[11,"map","","",156,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",156,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[11,"vzip","","",156,[[]]],[11,"init","","",156,[[],["usize",15]]],[11,"deref","","",156,[[["usize",15]]]],[11,"deref_mut","","",156,[[["usize",15]]]],[11,"drop","","",156,[[["usize",15]]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"collection","","",157,[[],["collectionid",3]]],[11,"version","","",157,[[],["u64",15]]],[11,"name","","",157,[[],[["cow",4],["str",15]]]],[11,"map","","",157,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",157,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[11,"vzip","","",157,[[]]],[11,"init","","",157,[[],["usize",15]]],[11,"deref","","",157,[[["usize",15]]]],[11,"deref_mut","","",157,[[["usize",15]]]],[11,"drop","","",157,[[["usize",15]]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"collection","","",158,[[],["collectionid",3]]],[11,"version","","",158,[[],["u64",15]]],[11,"name","","",158,[[],[["cow",4],["str",15]]]],[11,"map","","",158,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",158,[[["bool",15]],[["error",4],["result",4],["vec",3]]]],[11,"vzip","","",158,[[]]],[11,"init","","",158,[[],["usize",15]]],[11,"deref","","",158,[[["usize",15]]]],[11,"deref_mut","","",158,[[["usize",15]]]],[11,"drop","","",158,[[["usize",15]]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"vzip","","",159,[[]]],[11,"init","","",159,[[],["usize",15]]],[11,"deref","","",159,[[["usize",15]]]],[11,"deref_mut","","",159,[[["usize",15]]]],[11,"drop","","",159,[[["usize",15]]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"init","","",84,[[],["usize",15]]],[11,"deref","","",84,[[["usize",15]]]],[11,"deref_mut","","",84,[[["usize",15]]]],[11,"drop","","",84,[[["usize",15]]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"schema_id","","",160,[[],["schemaid",3]]],[11,"define_collections","","",160,[[["schematic",3]]]],[11,"vzip","","",160,[[]]],[11,"init","","",160,[[],["usize",15]]],[11,"deref","","",160,[[["usize",15]]]],[11,"deref_mut","","",160,[[["usize",15]]]],[11,"drop","","",160,[[["usize",15]]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"schema_id","","",161,[[],["schemaid",3]]],[11,"define_collections","","",161,[[["schematic",3]]]],[11,"vzip","","",161,[[]]],[11,"init","","",161,[[],["usize",15]]],[11,"deref","","",161,[[["usize",15]]]],[11,"deref_mut","","",161,[[["usize",15]]]],[11,"drop","","",161,[[["usize",15]]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"schema_id","","",162,[[],["schemaid",3]]],[11,"define_collections","","",162,[[["schematic",3]]]],[11,"vzip","","",162,[[]]],[11,"init","","",162,[[],["usize",15]]],[11,"deref","","",162,[[["usize",15]]]],[11,"deref_mut","","",162,[[["usize",15]]]],[11,"drop","","",162,[[["usize",15]]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"to_string","","",85,[[],["string",3]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"init","","",85,[[],["usize",15]]],[11,"deref","","",85,[[["usize",15]]]],[11,"deref_mut","","",85,[[["usize",15]]]],[11,"drop","","",85,[[["usize",15]]]],[11,"from","pliantdb_local::core::circulate","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"init","","",86,[[],["usize",15]]],[11,"deref","","",86,[[["usize",15]]]],[11,"deref_mut","","",86,[[["usize",15]]]],[11,"drop","","",86,[[["usize",15]]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"vzip","","",163,[[]]],[11,"init","","",163,[[],["usize",15]]],[11,"deref","","",163,[[["usize",15]]]],[11,"deref_mut","","",163,[[["usize",15]]]],[11,"drop","","",163,[[["usize",15]]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"vzip","","",164,[[]]],[11,"init","","",164,[[],["usize",15]]],[11,"deref","","",164,[[["usize",15]]]],[11,"deref_mut","","",164,[[["usize",15]]]],[11,"drop","","",164,[[["usize",15]]]],[11,"from","pliantdb_local::core::circulate::flume::select","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"to_string","","",87,[[],["string",3]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"equivalent","","",87,[[],["bool",15]]],[11,"init","","",87,[[],["usize",15]]],[11,"deref","","",87,[[["usize",15]]]],[11,"deref_mut","","",87,[[["usize",15]]]],[11,"drop","","",87,[[["usize",15]]]],[11,"from","pliantdb_local::core::circulate::flume","",165,[[]]],[11,"into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"vzip","","",165,[[]]],[11,"init","","",165,[[],["usize",15]]],[11,"deref","","",165,[[["usize",15]]]],[11,"deref_mut","","",165,[[["usize",15]]]],[11,"drop","","",165,[[["usize",15]]]],[11,"from","pliantdb_local::core::circulate::flume::async","",166,[[]]],[11,"into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"into_future","","",166,[[]]],[11,"try_poll","","",166,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",166,[[]]],[11,"init","","",166,[[],["usize",15]]],[11,"deref","","",166,[[["usize",15]]]],[11,"deref_mut","","",166,[[["usize",15]]]],[11,"drop","","",166,[[["usize",15]]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"vzip","","",167,[[]]],[11,"init","","",167,[[],["usize",15]]],[11,"deref","","",167,[[["usize",15]]]],[11,"deref_mut","","",167,[[["usize",15]]]],[11,"drop","","",167,[[["usize",15]]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"into_future","","",168,[[]]],[11,"try_poll","","",168,[[["context",3],["pin",3]],["poll",4]]],[11,"vzip","","",168,[[]]],[11,"init","","",168,[[],["usize",15]]],[11,"deref","","",168,[[["usize",15]]]],[11,"deref_mut","","",168,[[["usize",15]]]],[11,"drop","","",168,[[["usize",15]]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"try_poll_next","","",169,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"vzip","","",169,[[]]],[11,"init","","",169,[[],["usize",15]]],[11,"deref","","",169,[[["usize",15]]]],[11,"deref_mut","","",169,[[["usize",15]]]],[11,"drop","","",169,[[["usize",15]]]],[11,"from","pliantdb_local::core::circulate::flume","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"to_string","","",88,[[],["string",3]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"equivalent","","",88,[[],["bool",15]]],[11,"init","","",88,[[],["usize",15]]],[11,"deref","","",88,[[["usize",15]]]],[11,"deref_mut","","",88,[[["usize",15]]]],[11,"drop","","",88,[[["usize",15]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"to_string","","",89,[[],["string",3]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"equivalent","","",89,[[],["bool",15]]],[11,"init","","",89,[[],["usize",15]]],[11,"deref","","",89,[[["usize",15]]]],[11,"deref_mut","","",89,[[["usize",15]]]],[11,"drop","","",89,[[["usize",15]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"to_string","","",90,[[],["string",3]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"equivalent","","",90,[[],["bool",15]]],[11,"init","","",90,[[],["usize",15]]],[11,"deref","","",90,[[["usize",15]]]],[11,"deref_mut","","",90,[[["usize",15]]]],[11,"drop","","",90,[[["usize",15]]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"to_string","","",91,[[],["string",3]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"equivalent","","",91,[[],["bool",15]]],[11,"init","","",91,[[],["usize",15]]],[11,"deref","","",91,[[["usize",15]]]],[11,"deref_mut","","",91,[[["usize",15]]]],[11,"drop","","",91,[[["usize",15]]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"to_string","","",92,[[],["string",3]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"equivalent","","",92,[[],["bool",15]]],[11,"init","","",92,[[],["usize",15]]],[11,"deref","","",92,[[["usize",15]]]],[11,"deref_mut","","",92,[[["usize",15]]]],[11,"drop","","",92,[[["usize",15]]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"to_string","","",93,[[],["string",3]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"equivalent","","",93,[[],["bool",15]]],[11,"init","","",93,[[],["usize",15]]],[11,"deref","","",93,[[["usize",15]]]],[11,"deref_mut","","",93,[[["usize",15]]]],[11,"drop","","",93,[[["usize",15]]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"vzip","","",170,[[]]],[11,"init","","",170,[[],["usize",15]]],[11,"deref","","",170,[[["usize",15]]]],[11,"deref_mut","","",170,[[["usize",15]]]],[11,"drop","","",170,[[["usize",15]]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"vzip","","",171,[[]]],[11,"init","","",171,[[],["usize",15]]],[11,"deref","","",171,[[["usize",15]]]],[11,"deref_mut","","",171,[[["usize",15]]]],[11,"drop","","",171,[[["usize",15]]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"into_iter","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"vzip","","",172,[[]]],[11,"emit","","",172,[[["binencoder",3]],[["result",4],["usize",15],["protoerror",3]]]],[11,"nfd","","",172,[[],["decompositions",3]]],[11,"nfkd","","",172,[[],["decompositions",3]]],[11,"nfc","","",172,[[],["recompositions",3]]],[11,"nfkc","","",172,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",172,[[],["replacements",3]]],[11,"stream_safe","","",172,[[],["streamsafe",3]]],[11,"init","","",172,[[],["usize",15]]],[11,"deref","","",172,[[["usize",15]]]],[11,"deref_mut","","",172,[[["usize",15]]]],[11,"drop","","",172,[[["usize",15]]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"into_iter","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"vzip","","",173,[[]]],[11,"emit","","",173,[[["binencoder",3]],[["result",4],["usize",15],["protoerror",3]]]],[11,"nfd","","",173,[[],["decompositions",3]]],[11,"nfkd","","",173,[[],["decompositions",3]]],[11,"nfc","","",173,[[],["recompositions",3]]],[11,"nfkc","","",173,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",173,[[],["replacements",3]]],[11,"stream_safe","","",173,[[],["streamsafe",3]]],[11,"init","","",173,[[],["usize",15]]],[11,"deref","","",173,[[["usize",15]]]],[11,"deref_mut","","",173,[[["usize",15]]]],[11,"drop","","",173,[[["usize",15]]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"into_iter","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"vzip","","",174,[[]]],[11,"emit","","",174,[[["binencoder",3]],[["result",4],["usize",15],["protoerror",3]]]],[11,"nfd","","",174,[[],["decompositions",3]]],[11,"nfkd","","",174,[[],["decompositions",3]]],[11,"nfc","","",174,[[],["recompositions",3]]],[11,"nfkc","","",174,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",174,[[],["replacements",3]]],[11,"stream_safe","","",174,[[],["streamsafe",3]]],[11,"init","","",174,[[],["usize",15]]],[11,"deref","","",174,[[["usize",15]]]],[11,"deref_mut","","",174,[[["usize",15]]]],[11,"drop","","",174,[[["usize",15]]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"into_iter","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"vzip","","",175,[[]]],[11,"emit","","",175,[[["binencoder",3]],[["result",4],["usize",15],["protoerror",3]]]],[11,"nfd","","",175,[[],["decompositions",3]]],[11,"nfkd","","",175,[[],["decompositions",3]]],[11,"nfc","","",175,[[],["recompositions",3]]],[11,"nfkc","","",175,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",175,[[],["replacements",3]]],[11,"stream_safe","","",175,[[],["streamsafe",3]]],[11,"init","","",175,[[],["usize",15]]],[11,"deref","","",175,[[["usize",15]]]],[11,"deref_mut","","",175,[[["usize",15]]]],[11,"drop","","",175,[[["usize",15]]]],[11,"from","pliantdb_local::core::num_traits","",133,[[]]],[11,"into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"vzip","","",133,[[]]],[11,"init","","",133,[[],["usize",15]]],[11,"deref","","",133,[[["usize",15]]]],[11,"deref_mut","","",133,[[["usize",15]]]],[11,"drop","","",133,[[["usize",15]]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_string","","",134,[[],["string",3]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"vzip","","",134,[[]]],[11,"init","","",134,[[],["usize",15]]],[11,"deref","","",134,[[["usize",15]]]],[11,"deref_mut","","",134,[[["usize",15]]]],[11,"drop","","",134,[[["usize",15]]]],[11,"description","pliantdb_local::core::networking::fabruic::error","",139,[[],["str",15]]],[11,"description","","",138,[[],["str",15]]],[11,"cause","","",138,[[],[["option",4],["error",8]]]],[11,"source","","",138,[[],[["option",4],["error",8]]]],[11,"eq","","",139,[[["addrparseerror",3]],["bool",15]]],[11,"ne","","",139,[[["addrparseerror",3]],["bool",15]]],[11,"fmt","","",139,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",138,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",139,[[],["addrparseerror",3]]],[11,"fmt","","",138,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",139,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",138,[[["intoinnererror",3]],["error",3]]],[11,"from","","Converts an [<code>ErrorKind</code>] into an [<code>Error</code>].",138,[[["errorkind",4]],["error",3]]],[11,"from","","Converts a [<code>NulError</code>] into a [<code>io::Error</code>].",138,[[["nulerror",3]],["error",3]]],[11,"create_subscriber","pliantdb_local::core::circulate","",163,[[],[["pin",3],["box",3]]]],[11,"publish","","",163,[[],[["pin",3],["box",3]]]],[11,"fmt","pliantdb_local::core::networking","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",157,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",156,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::connection","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::document","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::connection","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::transaction","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema::view::map","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",155,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",152,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::document","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::document","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema::view","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",152,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::test_util","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::schema::view","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"version","pliantdb_local::core::test_util","",155,[[],["u64",15]]],[11,"name","","",155,[[],[["cow",4],["str",15]]]],[11,"map","","",155,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",155,[[["bool",15]],[["error",4],["result",4]]]],[11,"version","","",158,[[],["u64",15]]],[11,"name","","",158,[[],[["cow",4],["str",15]]]],[11,"map","","",158,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"version","","",156,[[],["u64",15]]],[11,"name","","",156,[[],[["cow",4],["str",15]]]],[11,"map","","",156,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",156,[[["bool",15]],[["result",4],["error",4]]]],[11,"version","","",157,[[],["u64",15]]],[11,"name","","",157,[[],[["cow",4],["str",15]]]],[11,"map","","",157,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",157,[[["bool",15]],[["result",4],["error",4]]]],[11,"subscribe_to","pliantdb_local::core::circulate","",164,[[],[["pin",3],["box",3]]]],[11,"unsubscribe_from","","",164,[[["str",15]],[["pin",3],["box",3]]]],[11,"receiver","","",164,[[],["receiver",3]]],[11,"hash","pliantdb_local::core::schema","",153,[[]]],[11,"hash","","",152,[[]]],[11,"from","","",152,[[["str",15]],["schemaid",3]]],[11,"from","pliantdb_local::core::schema::view","",63,[[["error",3]],["error",4]]],[11,"from","pliantdb_local::core::schema","",153,[[["string",3]],["collectionid",3]]],[11,"from","pliantdb_local::core::schema::view","",65,[[],["serializablevalue",4]]],[11,"from","pliantdb_local::core::schema","",153,[[["str",15]],["collectionid",3]]],[11,"from","pliantdb_local::core","",82,[[["error",3]],["error",4]]],[11,"source","pliantdb_local::core::schema::view","",63,[[],[["option",4],["error",8]]]],[11,"serialize","pliantdb_local::core::networking","",37,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",69,[[],["result",4]]],[11,"serialize","pliantdb_local::core","",82,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",70,[[],["result",4]]],[11,"serialize","pliantdb_local::core::connection","",9,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema::view::map","",60,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",78,[[],["result",4]]],[11,"serialize","pliantdb_local::core::test_util","",83,[[],["result",4]]],[11,"serialize","pliantdb_local::core::document","",13,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",61,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",39,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",71,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",30,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","pliantdb_local::core::document","",12,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",17,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",75,[[],["result",4]]],[11,"serialize","","",79,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",14,[[],["result",4]]],[11,"serialize","pliantdb_local::core::connection","",10,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",19,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",152,[[],["result",4]]],[11,"serialize","pliantdb_local::core::document","",11,[[],["result",4]]],[11,"serialize","pliantdb_local::core::networking","",29,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",153,[[],["result",4]]],[11,"as_ref","","",153,[[],["str",15]]],[11,"as_ref","","",152,[[],["str",15]]],[11,"as_ref","pliantdb_local::core::test_util","",84,[[],["path",3]]],[11,"as_ref","pliantdb_local::core::schema::view","",65,[[]]],[11,"default","pliantdb_local::core::test_util","",83,[[],["basic",3]]],[11,"default","pliantdb_local::core::schema","",154,[[],["schematic",3]]],[11,"default","pliantdb_local::core::transaction","",69,[[],["transaction",3]]],[11,"schema_id","pliantdb_local::core::test_util","",159,[[],["schemaid",3]]],[11,"define_collections","","",159,[[["schematic",3]]]],[11,"clone","pliantdb_local::core::connection","",10,[[],["accesspolicy",4]]],[11,"clone","pliantdb_local::core::transaction","",70,[[],["operation",3]]],[11,"clone","pliantdb_local::core::schema","",152,[[],["schemaid",3]]],[11,"clone","pliantdb_local::core::document","",11,[[],["header",3]]],[11,"clone","pliantdb_local::core::networking","",30,[[],["serverresponse",4]]],[11,"clone","pliantdb_local::core::transaction","",69,[[],["transaction",3]]],[11,"clone","pliantdb_local::core::connection","",9,[[],["querykey",4]]],[11,"clone","pliantdb_local::core","",82,[[],["error",4]]],[11,"clone","pliantdb_local::core::networking","",39,[[],["error",4]]],[11,"clone","pliantdb_local::core::transaction","",78,[[],["executed",3]]],[11,"clone","pliantdb_local::core::test_util","",85,[[],["harnesstest",4]]],[11,"clone","pliantdb_local::core::transaction","",75,[[],["operationresult",4]]],[11,"clone","","",71,[[],["command",4]]],[11,"clone","pliantdb_local::core::networking","",19,[[],["databaserequest",4]]],[11,"clone","pliantdb_local::core::schema","",61,[[],["mappedvalue",3]]],[11,"clone","pliantdb_local::core::networking","",15,[[],["request",4]]],[11,"clone","pliantdb_local::core::schema::view::map","",60,[[],["serialized",3]]],[11,"clone","pliantdb_local::core::networking","",29,[[],["response",4]]],[11,"clone","pliantdb_local::core::document","",12,[[],["document",3]]],[11,"clone","","",13,[[],["revision",3]]],[11,"clone","pliantdb_local::core::networking","",14,[[],["payload",3]]],[11,"clone","","",17,[[],["serverrequest",4]]],[11,"clone","","",33,[[],["databaseresponse",4]]],[11,"clone","pliantdb_local::core::schema","",153,[[],["collectionid",3]]],[11,"clone","pliantdb_local::core::networking","",36,[[],["mappeddocument",3]]],[11,"clone","pliantdb_local::core::transaction","",79,[[],["changeddocument",3]]],[11,"clone","pliantdb_local::core::networking","",37,[[],["database",3]]],[11,"drop","pliantdb_local::core::test_util","",84,[[]]],[11,"eq","pliantdb_local::core::document","",13,[[["revision",3]],["bool",15]]],[11,"ne","","",13,[[["revision",3]],["bool",15]]],[11,"eq","pliantdb_local::core::test_util","",83,[[["basic",3]],["bool",15]]],[11,"ne","","",83,[[["basic",3]],["bool",15]]],[11,"eq","pliantdb_local::core::schema","",152,[[["schemaid",3]],["bool",15]]],[11,"ne","","",152,[[["schemaid",3]],["bool",15]]],[11,"eq","","",61,[[["mappedvalue",3]],["bool",15]]],[11,"ne","","",61,[[["mappedvalue",3]],["bool",15]]],[11,"eq","","",58,[[["map",3]],["bool",15]]],[11,"ne","","",58,[[["map",3]],["bool",15]]],[11,"eq","","",153,[[["collectionid",3]],["bool",15]]],[11,"ne","","",153,[[["collectionid",3]],["bool",15]]],[11,"eq","pliantdb_local::core::document","",11,[[["header",3]],["bool",15]]],[11,"ne","","",11,[[["header",3]],["bool",15]]],[11,"eq","pliantdb_local::core::networking","",37,[[["database",3]],["bool",15]]],[11,"ne","","",37,[[["database",3]],["bool",15]]],[11,"deserialize","pliantdb_local::core::document","",11,[[],[["result",4],["header",3]]]],[11,"deserialize","","",12,[[],[["result",4],["document",3]]]],[11,"deserialize","pliantdb_local::core::transaction","",69,[[],[["transaction",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::networking","",15,[[],[["result",4],["request",4]]]],[11,"deserialize","","",30,[[],[["serverresponse",4],["result",4]]]],[11,"deserialize","pliantdb_local::core","",82,[[],[["result",4],["error",4]]]],[11,"deserialize","pliantdb_local::core::transaction","",79,[[],[["changeddocument",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::networking","",36,[[],[["mappeddocument",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::schema","",152,[[],[["result",4],["schemaid",3]]]],[11,"deserialize","pliantdb_local::core::schema::view::map","",60,[[],[["result",4],["serialized",3]]]],[11,"deserialize","pliantdb_local::core::test_util","",83,[[],[["result",4],["basic",3]]]],[11,"deserialize","pliantdb_local::core::transaction","",75,[[],[["operationresult",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::schema","",153,[[],[["collectionid",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::connection","",10,[[],[["accesspolicy",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::schema","",61,[[],[["result",4],["mappedvalue",3]]]],[11,"deserialize","pliantdb_local::core::transaction","",70,[[],[["operation",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::networking","",19,[[],[["databaserequest",4],["result",4]]]],[11,"deserialize","","",33,[[],[["databaseresponse",4],["result",4]]]],[11,"deserialize","","",17,[[],[["result",4],["serverrequest",4]]]],[11,"deserialize","pliantdb_local::core::document","",13,[[],[["result",4],["revision",3]]]],[11,"deserialize","pliantdb_local::core::transaction","",71,[[],[["command",4],["result",4]]]],[11,"deserialize","pliantdb_local::core::networking","",39,[[],[["error",4],["result",4]]]],[11,"deserialize","","",14,[[],[["result",4],["payload",3]]]],[11,"deserialize","pliantdb_local::core::transaction","",78,[[],[["executed",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::connection","",9,[[],[["result",4],["querykey",4]]]],[11,"deserialize","pliantdb_local::core::networking","",37,[[],[["result",4],["database",3]]]],[11,"deserialize","","",29,[[],[["response",4],["result",4]]]],[11,"collection_id","pliantdb_local::core::test_util","",160,[[],["collectionid",3]]],[11,"define_views","","",160,[[["schematic",3]]]],[11,"collection_id","","",83,[[],["collectionid",3]]],[11,"define_views","","",83,[[["schematic",3]]]],[11,"collection_id","","",161,[[],["collectionid",3]]],[11,"define_views","","",161,[[["schematic",3]]]],[11,"collection_id","","",162,[[],["collectionid",3]]],[11,"define_views","","",162,[[["schematic",3]]]],[11,"fmt","pliantdb_local::core::circulate","",164,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",163,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","","",86,[[],[["message",3],["result",4]]]],[11,"default","","",163,[[],["relay",3]]],[11,"serialize","","",86,[[],["result",4]]],[11,"clone","","",163,[[],["relay",3]]],[11,"clone","","",86,[[],["message",3]]],[11,"clone","","",164,[[],["subscriber",3]]],[11,"fmt","pliantdb_local::core::circulate::flume","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::circulate::flume::select","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::circulate::flume","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"len","","",174,[[],["usize",15]]],[11,"fmt","","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::circulate::flume::select","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::circulate::flume","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"is_terminated","pliantdb_local::core::circulate::flume::async","",168,[[],["bool",15]]],[11,"is_terminated","","",166,[[],["bool",15]]],[11,"into_iter","pliantdb_local::core::circulate::flume","",171,[[]]],[11,"next","","",175,[[],["option",4]]],[11,"next","","",172,[[],["option",4]]],[11,"next","","",173,[[],["option",4]]],[11,"next","","",174,[[],["option",4]]],[11,"poll_next","pliantdb_local::core::circulate::flume::async","",169,[[["pin",3],["recvstream",3],["context",3]],[["option",4],["poll",4]]]],[11,"default","pliantdb_local::core::circulate::flume","",165,[[],["selector",3]]],[11,"poll","pliantdb_local::core::circulate::flume::async","",168,[[["pin",3],["recvfut",3],["context",3]],["poll",4]]],[11,"poll","","",166,[[["context",3],["pin",3],["sendfut",3]],["poll",4]]],[11,"clone","pliantdb_local::core::circulate::flume","",89,[[],["trysenderror",4]]],[11,"clone","","",93,[[],["recvtimeouterror",4]]],[11,"clone","","",88,[[],["senderror",3]]],[11,"clone","pliantdb_local::core::circulate::flume::async","",169,[[],["recvstream",3]]],[11,"clone","pliantdb_local::core::circulate::flume::select","",87,[[],["selecterror",4]]],[11,"clone","pliantdb_local::core::circulate::flume","",91,[[],["recverror",4]]],[11,"clone","","",90,[[],["sendtimeouterror",4]]],[11,"clone","","Clone this sender. [<code>Sender</code>] acts as a handle to the …",170,[[],["sender",3]]],[11,"clone","pliantdb_local::core::circulate::flume::async","",167,[[],["sendsink",3]]],[11,"clone","pliantdb_local::core::circulate::flume","",92,[[],["tryrecverror",4]]],[11,"clone","","Clone this receiver. [<code>Receiver</code>] acts as a handle to the …",171,[[],["receiver",3]]],[11,"drop","pliantdb_local::core::circulate::flume::async","",168,[[]]],[11,"drop","","",166,[[]]],[11,"drop","pliantdb_local::core::circulate::flume","",171,[[]]],[11,"drop","","",170,[[]]],[11,"is_terminated","pliantdb_local::core::circulate::flume::async","",169,[[],["bool",15]]],[11,"eq","pliantdb_local::core::circulate::flume","",88,[[["senderror",3]],["bool",15]]],[11,"ne","","",88,[[["senderror",3]],["bool",15]]],[11,"eq","","",90,[[["sendtimeouterror",4]],["bool",15]]],[11,"ne","","",90,[[["sendtimeouterror",4]],["bool",15]]],[11,"eq","pliantdb_local::core::circulate::flume::select","",87,[[["selecterror",4]],["bool",15]]],[11,"eq","pliantdb_local::core::circulate::flume","",91,[[["recverror",4]],["bool",15]]],[11,"eq","","",92,[[["tryrecverror",4]],["bool",15]]],[11,"eq","","",89,[[["trysenderror",4]],["bool",15]]],[11,"ne","","",89,[[["trysenderror",4]],["bool",15]]],[11,"eq","","",93,[[["recvtimeouterror",4]],["bool",15]]],[11,"poll_ready","pliantdb_local::core::circulate::flume::async","",167,[[["sendsink",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",167,[[["sendsink",3],["pin",3]],["result",4]]],[11,"poll_flush","","",167,[[["sendsink",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",167,[[["sendsink",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"from","pliantdb_local::core::networking::fabruic::error","",138,[[["error",3]],["error",3]]],[11,"from","","",138,[[["elapsed",3]],["error",3]]],[11,"from","","",138,[[["joinerror",3]],["error",3]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",149,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",148,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",146,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",143,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",147,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",144,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",150,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deserialize","","",144,[[],[["privatekey",3],["result",4]]]],[11,"deserialize","","",143,[[],[["certificate",3],["result",4]]]],[11,"is_terminated","","",148,[[],["bool",15]]],[11,"is_terminated","","",147,[[],["bool",15]]],[11,"zeroize","","",144,[[]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",143,[[]]],[11,"hash","","",144,[[]]],[11,"partial_cmp","","",143,[[["certificate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",143,[[["certificate",3]],["bool",15]]],[11,"le","","",143,[[["certificate",3]],["bool",15]]],[11,"gt","","",143,[[["certificate",3]],["bool",15]]],[11,"ge","","",143,[[["certificate",3]],["bool",15]]],[11,"partial_cmp","","",144,[[["privatekey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",144,[[["privatekey",3]],["bool",15]]],[11,"le","","",144,[[["privatekey",3]],["bool",15]]],[11,"gt","","",144,[[["privatekey",3]],["bool",15]]],[11,"ge","","",144,[[["privatekey",3]],["bool",15]]],[11,"poll_next","","",148,[[["endpoint",3],["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",147,[[["pin",3],["context",3],["connection",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",150,[[["context",3],["pin",3],["receiver",3]],[["poll",4],["option",4]]]],[11,"source","pliantdb_local::core::networking::fabruic::error","",44,[[],[["option",4],["error",8]]]],[11,"as_ref","pliantdb_local::core::networking::fabruic","",143,[[]]],[11,"default","","",145,[[],["builder",3]]],[11,"clone","","",148,[[],["endpoint",3]]],[11,"clone","","",151,[[],["sender",3]]],[11,"clone","","",147,[[],["connection",3]]],[11,"clone","","",144,[[],["privatekey",3]]],[11,"clone","","",150,[[],["receiver",3]]],[11,"clone","","",143,[[],["certificate",3]]],[11,"drop","","",144,[[]]],[11,"cmp","","",143,[[["certificate",3]],["ordering",4]]],[11,"cmp","","",144,[[["privatekey",3]],["ordering",4]]],[11,"serialize","","",144,[[],["result",4]]],[11,"serialize","","",143,[[],["result",4]]],[11,"eq","","",143,[[["certificate",3]],["bool",15]]],[11,"ne","","",143,[[["certificate",3]],["bool",15]]],[11,"eq","","",144,[[["privatekey",3]],["bool",15]]],[11,"ne","","",144,[[["privatekey",3]],["bool",15]]],[11,"as_ref","","",144,[[["privatekey",3]]]],[11,"into","","",144,[[["privatekey",3]],[["global",3],["vec",3],["u8",15]]]],[11,"serialize","","",144,[[["privatekey",3]],["result",4]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",51,[[],["tlserror",4]]],[11,"eq","","",51,[[["tlserror",4]],["bool",15]]],[11,"ne","","",51,[[["tlserror",4]],["bool",15]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",54,[[],["error",4]]],[11,"eq","","",54,[[["error",4]],["bool",15]]],[11,"fmt","","",141,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",141,[[],["keyrejected",3]]],[11,"fmt","","",141,[[["formatter",3]],[["error",3],["result",4]]]],[11,"cause","","",141,[[],[["option",4],["error",8]]]],[11,"description","","",141,[[],["str",15]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_error_kind","","",55,[[["errorkind",4]],["x509error",4]]],[11,"append","","",55,[[["errorkind",4],["x509error",4]],["x509error",4]]],[11,"from","","",56,[[["x509error",4]],[["x509error",4],["err",4]]]],[11,"from","","",55,[[["bererror",4]],["x509error",4]]],[11,"from","","",55,[[["errorkind",4]],["x509error",4]]],[11,"source","","",55,[[],[["option",4],["error",8]]]],[11,"eq","","",55,[[["x509error",4]],["bool",15]]],[11,"ne","","",55,[[["x509error",4]],["bool",15]]],[11,"from","","",56,[[["bererror",4]],[["err",4],["bererror",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",56,[[],["err",4]]],[11,"source","","",56,[[],[["option",4],["error",8]]]],[11,"eq","","",56,[[["err",4]],["bool",15]]],[11,"ne","","",56,[[["err",4]],["bool",15]]],[11,"fmt","pliantdb_local::core::num_traits","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","pliantdb_local::core::networking::fabruic::error","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"description","","",45,[[],["str",15]]],[11,"cause","","",45,[[],[["option",4],["error",8]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",138,[[["readerror",4]],["error",3]]],[11,"from","","",49,[[["readableerror",4]],["readerror",4]]],[11,"from","","",138,[[["writeerror",4]],["error",3]]],[11,"source","","",50,[[],[["option",4],["error",8]]]],[11,"clone","","",49,[[],["readerror",4]]],[11,"clone","","",50,[[],["writeerror",4]]],[11,"eq","","",49,[[["readerror",4]],["bool",15]]],[11,"ne","","",49,[[["readerror",4]],["bool",15]]],[11,"eq","","",50,[[["writeerror",4]],["bool",15]]],[11,"ne","","",50,[[["writeerror",4]],["bool",15]]],[11,"fmt","","",140,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",140,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",138,[[["connectionerror",4]],["error",3]]],[11,"from","","",47,[[["close",4]],["connectionerror",4]]],[11,"from","","",47,[[["error",3]],["connectionerror",4]]],[11,"clone","","",46,[[],["connecterror",4]]],[11,"clone","","",140,[[],["parseerror",3]]],[11,"clone","","",47,[[],["connectionerror",4]]],[11,"source","","",47,[[],[["option",4],["error",8]]]],[11,"source","","",46,[[],[["option",4],["error",8]]]],[11,"eq","","",47,[[["connectionerror",4]],["bool",15]]],[11,"ne","","",47,[[["connectionerror",4]],["bool",15]]],[11,"eq","","",46,[[["connecterror",4]],["bool",15]]],[11,"ne","","",46,[[["connecterror",4]],["bool",15]]],[11,"from","","",138,[[["error",3]],["error",3]]],[11,"fmt","","",142,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",142,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",142,[[["protoerror",3]],["resolveerror",3]]],[11,"from","","",142,[[["str",15]],["resolveerror",3]]],[11,"from","","",142,[[["poisonerror",3]],["resolveerror",3]]],[11,"from","","",142,[[["resolveerrorkind",4]],["resolveerror",3]]],[11,"from","","",142,[[["string",3]],["resolveerror",3]]],[11,"from","","",142,[[["error",3]],["resolveerror",3]]],[11,"from","","",138,[[["resolveerror",3]],["error",3]]],[11,"should_retry","","",142,[[],["bool",15]]],[11,"attempted","","",142,[[],["bool",15]]],[11,"clone","","",142,[[],["resolveerror",3]]],[11,"from","","",138,[[["protoerror",3]],["error",3]]],[11,"from","","",138,[[["error",3]],["error",3]]],[11,"from","","",138,[[["asn1error",3]],["error",3]]],[11,"from","","",138,[[["error",4]],["error",3]]],[11,"from","pliantdb_local","",135,[[["error",4]]]],[11,"from","","",135,[[["error",6]]]],[11,"from","","",135,[[["error",3]]]],[11,"from","","",135,[[["recverror",4]]]],[11,"from","","",135,[[["error",4]]]],[11,"from","","",135,[[["error",4]]]],[11,"from","","",135,[[["arc",3],["error",3]]]],[11,"from","pliantdb_local::core","",82,[[["error",4]]]],[11,"clone","pliantdb_local::config","",0,[[],["configuration",3]]],[11,"clone","","",1,[[],["tasks",3]]],[11,"clone","","",2,[[],["views",3]]],[11,"clone","pliantdb_local","",136,[[]]],[11,"default","pliantdb_local::config","",0,[[],["configuration",3]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_local","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_local::backup","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_local","",135,[[["formatter",3]],["result",6]]],[11,"source","","",135,[[],[["option",4],["error",8]]]],[11,"apply_transaction","","",136,[[["transaction",3]],[["box",3],["pin",3]]]],[11,"get","","",136,[[["u64",15]],[["box",3],["pin",3]]]],[11,"get_multiple","","",136,[[],[["pin",3],["box",3]]]],[11,"list_executed_transactions","","",136,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[11,"query","","",136,[[["querykey",4],["accesspolicy",4],["option",4]],[["box",3],["pin",3]]]],[11,"query_with_docs","","",136,[[["querykey",4],["accesspolicy",4],["option",4]],[["pin",3],["box",3]]]],[11,"reduce","","",136,[[["querykey",4],["accesspolicy",4],["option",4]],[["pin",3],["box",3]]]],[11,"reduce_grouped","","",136,[[["querykey",4],["accesspolicy",4],["option",4]],[["pin",3],["box",3]]]],[11,"last_transaction_id","","",136,[[],[["pin",3],["box",3]]]],[11,"create_subscriber","","",136,[[],[["box",3],["pin",3]]]],[11,"publish","","",136,[[["into",8],["string",3],["send",8]],[["pin",3],["box",3]]]],[11,"clap","pliantdb_local::backup","",3,[[],["app",3]]],[11,"from_clap","","",3,[[["argmatches",3]]]],[11,"clap","","",4,[[],["app",3]]],[11,"from_clap","","",4,[[["argmatches",3]]]],[11,"augment_clap","","",3,[[["app",3]],["app",3]]],[11,"is_subcommand","","",3,[[],["bool",15]]],[11,"augment_clap","","",4,[[["app",3]],["app",3]]],[11,"from_subcommand","","",4,[[],["option",4]]],[11,"is_subcommand","","",4,[[],["bool",15]]],[11,"open_local","pliantdb_local","Opens a local file as a pliantdb.",136,[[["path",3],["asref",8],["configuration",3],["send",8]]]],[11,"schematic","","Returns the [<code>Schematic</code>] for <code>DB</code>.",136,[[],["schematic",3]]],[11,"new","pliantdb_local::core::connection","Creates a new instance using <code>connection</code>.",137,[[],["collection",3]]],[11,"push","","Adds a new <code>Document<Cl></code> with the contents <code>item</code>.",137,[[]]],[11,"get","","Retrieves a <code>Document<Cl></code> with <code>id</code> from the connection.",137,[[["u64",15]]]],[11,"with_key","","Filters for entries in the view with <code>key</code>.",8,[[],["view",3]]],[11,"with_keys","","Filters for entries in the view with <code>keys</code>.",8,[[["vec",3],["global",3]],["view",3]]],[11,"with_key_range","","Filters for entries in the view with the range <code>keys</code>.",8,[[["range",3]],["view",3]]],[11,"with_access_policy","","Sets the access policy for queries.",8,[[["accesspolicy",4]],["view",3]]],[11,"query","","Executes the query and retrieves the results.",8,[[]]],[11,"query_with_docs","","Executes the query and retrieves the results with the …",8,[[]]],[11,"reduce","","Executes a reduce over the results of the query",8,[[]]],[11,"reduce_grouped","","Executes a reduce over the results of the query",8,[[]]],[11,"serialized","","Converts this key to a serialized format using the [<code>Key</code>] …",9,[[],[["error",4],["result",4],["querykey",4]]]],[11,"deserialized","","Deserializes the bytes into <code>K</code> via the [<code>Key</code>] trait.",9,[[],[["error",4],["result",4],["querykey",4]]]],[11,"new","pliantdb_local::core::document","Creates a new document with <code>contents</code>.",12,[[["cow",4],["collectionid",3],["u64",15]],["document",3]]],[11,"with_contents","","Creates a new document with serialized bytes from <code>contents</code>…",12,[[["collectionid",3],["u64",15]],[["error",3],["result",4],["document",3]]]],[11,"contents","","Retrieves <code>contents</code> through deserialization into the type <code>D</code>…",12,[[],[["result",4],["error",3]]]],[11,"set_contents","","Serializes and stores <code>contents</code> into this document.",12,[[],[["result",4],["error",3]]]],[11,"create_new_revision","","Creates a new revision.",12,[[["cow",4]],[["option",4],["document",3]]]],[11,"emit","","Creates a <code>Map</code> result with an empty key and value.",12,[[],["map",3]]],[11,"emit_key","","Creates a <code>Map</code> result with a <code>key</code> and an empty value.",12,[[],["map",3]]],[11,"emit_value","","Creates a <code>Map</code> result with <code>value</code> and an empty key.",12,[[],["map",3]]],[11,"emit_key_and_value","","Creates a <code>Map</code> result with a <code>key</code> and <code>value</code>.",12,[[],["map",3]]],[11,"to_owned","","Clone the document\'s data so that it\'s no longer borrowed …",12,[[],["document",3]]],[11,"new","","Creates the first revision for a document with the SHA256 …",13,[[],["revision",3]]],[11,"with_id","","Creates a revision with <code>id</code> for a document with the SHA256 …",13,[[["u32",15]],["revision",3]]],[11,"next_revision","","Creates the next revision in sequence with an updated …",13,[[],[["revision",3],["option",4]]]],[11,"deserialized","pliantdb_local::core::networking","Deserialize into a <code>MappedDocument</code>.",36,[[],[["result",4],["mappeddocument",3],["error",4]]]],[11,"new","pliantdb_local::core::networking::fabruic::error","Creates a new I/O error from a known kind of error as …",138,[[["errorkind",4]],["error",3]]],[11,"last_os_error","","Returns an error representing the last OS error which …",138,[[],["error",3]]],[11,"from_raw_os_error","","Creates a new instance of an [<code>Error</code>] from a particular OS …",138,[[["i32",15]],["error",3]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",138,[[],[["option",4],["i32",15]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this …",138,[[],[["option",4],["error",8]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by …",138,[[],[["error",8],["option",4]]]],[11,"into_inner","","Consumes the <code>Error</code>, returning its inner error (if any).",138,[[],[["box",3],["option",4]]]],[11,"kind","","Returns the corresponding [<code>ErrorKind</code>] for this error.",138,[[],["errorkind",4]]],[11,"description_","","The value returned from ::description()",141,[[],["str",15]]],[11,"kind","","Get the kind of the error",142,[[],["resolveerrorkind",4]]],[11,"from_response","","A conversion to determine if the response is an error",142,[[["bool",15],["dnsresponse",3]],[["result",4],["dnsresponse",3],["resolveerror",3]]]],[11,"is_incomplete","","Tests if the result is Incomplete",56,[[],["bool",15]]],[11,"map","","Applies the given function to the inner error",56,[[],["err",4]]],[11,"convert","","Automatically converts between errors if the underlying …",56,[[["err",4]],["err",4]]],[11,"map_input","","Maps <code>Err<(T, ErrorKind)></code> to <code>Err<(U, ErrorKind)></code> with the …",56,[[],["err",4]]],[11,"to_owned","","Obtaining ownership",56,[[],["err",4]]],[11,"to_owned","","Automatically converts between errors if the underlying …",56,[[],["err",4]]],[11,"from_der","pliantdb_local::core::networking::fabruic","Build [<code>Certificate</code>] from DER-format. This is not meant as …",143,[[["global",3],["vec",3],["u8",15]],[["error",4],["certificate",3],["result",4]]]],[11,"unchecked_from_der","","Build [<code>Certificate</code>] from DER-format. This skips the …",143,[[["global",3],["vec",3],["u8",15]],["certificate",3]]],[11,"from_der","","Build [<code>PrivateKey</code>] from DER-format. This is not meant as …",144,[[["global",3],["vec",3],["u8",15]],[["privatekey",3],["result",4],["error",4]]]],[11,"unchecked_from_der","","Build [<code>PrivateKey</code>] from DER-format. This skips the …",144,[[["global",3],["vec",3],["u8",15]],["privatekey",3]]],[11,"new","","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …",145,[[],["builder",3]]],[11,"set_address","","Set\'s the [<code>SocketAddr</code>]. Default is \\\"[::]:0\\\".",145,[[["socketaddr",4]],["builder",3]]],[11,"set_address_str","","Set\'s the [<code>SocketAddr</code>]. Default is \\\"[::]:0\\\".",145,[[["str",15]],[["error",4],["result",4],["builder",3]]]],[11,"add_ca","","Adds a [<code>Certificate</code>] as a certificate authority for client…",145,[[["certificate",3]],[["error",4],["result",4],["builder",3]]]],[11,"add_key_pair","","Add a [<code>Certificate</code>] and [<code>PrivateKey</code>] for the server. This …",145,[[["certificate",3],["privatekey",3]],[["error",4],["result",4],["builder",3]]]],[11,"set_protocols","","Set the application-layer protocols to accept, in order …",145,[[],["builder",3]]],[11,"build","","Consumes [<code>Builder</code>] to build [<code>Endpoint</code>]. Must be called …",145,[[],[["endpoint",3],["result",4]]]],[11,"protocol","","The negotiated application protocol. See …",146,[[]]],[11,"accept","","Accept the [<code>Connection</code>] with the given <code>T</code> as the type …",146,[[]]],[11,"open_stream","","Open a stream on this [<code>Connection</code>], allowing to send data …",147,[[]]],[11,"protocol","","The negotiated application protocol. See …",147,[[],[["vec",3],["option",4]]]],[11,"remote_address","","The peer\'s address. Clients may change addresses at will, …",147,[[],["socketaddr",4]]],[11,"close_incoming","","Prevents any new incoming streams. Already incoming …",147,[[]]],[11,"close","","Close the [<code>Connection</code>] immediately.",147,[[]]],[11,"builder","","Builds a new [<code>Builder</code>]. See [<code>Builder</code>] methods for …",148,[[],["builder",3]]],[11,"new_client","","Simplified version of creating a client. See [<code>Builder</code>] …",148,[[["certificate",3]],[["result",4],["endpoint",3],["error",4]]]],[11,"new_server","","Simplified version of creating a server. See [<code>Builder</code>] …",148,[[["certificate",3],["u16",15],["privatekey",3]],[["result",4],["endpoint",3],["error",4]]]],[11,"connect","","Establish a new <code>Connection</code> to a client. The <code>domain</code> …",148,[[["socketaddr",4]],[["result",4],["connecting",3],["error",4]]]],[11,"connect_with","","Attempts to resolve the IP with the given domain name. …",148,[[["u16",15]]]],[11,"local_address","","Get the local [<code>SocketAddr</code>] the underlying socket is bound …",148,[[],[["error",4],["result",4],["socketaddr",4]]]],[11,"close","","Close all of this [<code>Endpoint</code>]\'s <code>Connection</code>s immediately …",148,[[]]],[11,"close_incoming","","Prevents any new incoming connections. Already incoming …",148,[[]]],[11,"wait_idle","","Wait for all <code>Connection</code>s to the [<code>Endpoint</code>] to be cleanly …",148,[[]]],[11,"type","","Returns the type information for that stream.",149,[[]]],[11,"accept","","Accept the incoming stream with the given types.",149,[[]]],[11,"finish","","Wait for the [<code>Receiver</code>] part of the stream to finish …",150,[[]]],[11,"close","","Close the [<code>Receiver</code>] immediately. To close a [<code>Receiver</code>] …",150,[[]]],[11,"send","","Send <code>data</code> into the stream.",151,[[],[["error",4],["result",4]]]],[11,"finish","","Shut down the [<code>Send</code>] part of the stream gracefully.",151,[[]]],[11,"close","","Close the [<code>Sender</code>] immediately.",151,[[]]],[11,"serialized","pliantdb_local::core::schema","Serializes this map.",58,[[],[["serialized",3],["error",4],["result",4]]]],[11,"new","","Creates a new Map entry for the document with id <code>source</code>.",58,[[["u64",15]],["map",3]]],[11,"deserialized","pliantdb_local::core::schema::view::map","Deserializes this map.",60,[[],[["error",4],["map",3],["result",4]]]],[11,"new","pliantdb_local::core::schema","Creates a new id.",152,[[],["schemaid",3]]],[11,"define_collection","","Adds the collection <code>C</code> and its views.",154,[[]]],[11,"define_view","","Adds the view <code>V</code>.",154,[[]]],[11,"contains","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",154,[[],["bool",15]]],[11,"contains_collection_id","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",154,[[["collectionid",3]],["bool",15]]],[11,"view_by_name","","Looks up a [<code>view::Serialized</code>] by name.",154,[[["str",15]],[["option",4],["serialized",8]]]],[11,"view","","Looks up a [<code>view::Serialized</code>] through the the type <code>V</code>.",154,[[],[["option",4],["serialized",8]]]],[11,"views","","Iterates over all registered views.",154,[[]]],[11,"views_in_collection","","Iterates over all views that belong to <code>collection</code>.",154,[[["collectionid",3]],[["vec",3],["option",4]]]],[11,"push","pliantdb_local::core::transaction","Adds an operation to the transaction.",69,[[["operation",3]]]],[11,"to_owned","","Convert this structure to be free of borrows.",78,[[],["executed",3]]],[11,"new","pliantdb_local::core::test_util","",83,[[],["basic",3]]],[11,"with_category","","",83,[[],["basic",3]]],[11,"with_parent_id","","",83,[[["u64",15]],["basic",3]]],[11,"new","","",84,[[],["testdirectory",3]]],[11,"port","","",85,[[["u16",15]],["u16",15]]],[11,"new","pliantdb_local::core::circulate","Creates a new message.",86,[[],[["message",3],["error",3],["result",4]]]],[11,"payload","","Deserialize the payload as <code>P</code> using CBOR.",86,[[],[["result",4],["error",3]]]],[11,"create_subscriber","","Create a new [<code>Subscriber</code>] for this relay.",163,[[]]],[11,"publish","","Publishes a <code>payload</code> to all subscribers of <code>topic</code>.",163,[[]]],[11,"publish_message","","Publishes a message to all subscribers of its topic.",163,[[["message",3]]]],[11,"subscribe_to","","Subscribe to [<code>Message</code>]s published to <code>topic</code>.",164,[[]]],[11,"unsubscribe_from","","Unsubscribe from [<code>Message</code>]s published to <code>topic</code>.",164,[[["str",15]]]],[11,"receiver","","Returns the receiver to receive [<code>Message</code>]s.",164,[[],["receiver",3]]],[11,"id","","Returns the unique ID of the subscriber.",164,[[],["u64",15]]],[11,"new","pliantdb_local::core::circulate::flume","Create a new selector.",165,[[],["selector",3]]],[11,"send","","Add a send operation to the selector that sends the …",165,[[["sender",3]],["selector",3]]],[11,"recv","","Add a receive operation to the selector.",165,[[["receiver",3]],["selector",3]]],[11,"wait","","Wait until one of the events associated with this […",165,[[]]],[11,"wait_timeout","","Wait until one of the events associated with this […",165,[[["duration",3]],[["selecterror",4],["result",4]]]],[11,"wait_deadline","","Wait until one of the events associated with this […",165,[[["instant",3]],[["selecterror",4],["result",4]]]],[11,"is_disconnected","pliantdb_local::core::circulate::flume::async","",167,[[],["bool",15]]],[11,"send_async","pliantdb_local::core::circulate::flume","Asynchronously send a value into the channel, returning …",170,[[],["sendfut",3]]],[11,"into_send_async","","Convert this sender into a future that asynchronously …",170,[[],["sendfut",3]]],[11,"sink","","Create an asynchronous sink that uses this sender to …",170,[[],["sendsink",3]]],[11,"into_sink","","Convert this sender into a sink that allows …",170,[[],["sendsink",3]]],[11,"try_send","","Attempt to send a value into the channel. If the channel …",170,[[],[["result",4],["trysenderror",4]]]],[11,"send","","Send a value into the channel, returning an error if all …",170,[[],[["result",4],["senderror",3]]]],[11,"send_deadline","","Send a value into the channel, returning an error if all …",170,[[["instant",3]],[["sendtimeouterror",4],["result",4]]]],[11,"send_timeout","","Send a value into the channel, returning an error if all …",170,[[["duration",3]],[["sendtimeouterror",4],["result",4]]]],[11,"is_disconnected","","Returns true if all receivers for this channel have been …",170,[[],["bool",15]]],[11,"is_empty","","Returns true if the channel is empty. Note: Zero-capacity …",170,[[],["bool",15]]],[11,"is_full","","Returns true if the channel is full. Note: Zero-capacity …",170,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel",170,[[],["usize",15]]],[11,"capacity","","If the channel is bounded, returns its capacity.",170,[[],[["usize",15],["option",4]]]],[11,"recv_async","","Asynchronously receive a value from the channel, …",171,[[],["recvfut",3]]],[11,"into_recv_async","","Convert this receiver into a future that asynchronously …",171,[[],["recvfut",3]]],[11,"stream","","Create an asynchronous stream that uses this receiver to …",171,[[],["recvstream",3]]],[11,"into_stream","","Convert this receiver into a stream that allows …",171,[[],["recvstream",3]]],[11,"try_recv","","Attempt to fetch an incoming value from the channel …",171,[[],[["tryrecverror",4],["result",4]]]],[11,"recv","","Wait for an incoming value from the channel associated …",171,[[],[["recverror",4],["result",4]]]],[11,"recv_deadline","","Wait for an incoming value from the channel associated …",171,[[["instant",3]],[["recvtimeouterror",4],["result",4]]]],[11,"recv_timeout","","Wait for an incoming value from the channel associated …",171,[[["duration",3]],[["recvtimeouterror",4],["result",4]]]],[11,"iter","","Create a blocking iterator over the values received on …",171,[[],["iter",3]]],[11,"try_iter","","A non-blocking iterator over the values received on the …",171,[[],["tryiter",3]]],[11,"drain","","Take all msgs currently sitting in the channel and …",171,[[],["drain",3]]],[11,"is_disconnected","","Returns true if all senders for this channel have been …",171,[[],["bool",15]]],[11,"is_empty","","Returns true if the channel is empty. Note: Zero-capacity …",171,[[],["bool",15]]],[11,"is_full","","Returns true if the channel is full. Note: Zero-capacity …",171,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel.",171,[[],["usize",15]]],[11,"capacity","","If the channel is bounded, returns its capacity.",171,[[],[["usize",15],["option",4]]]]],"p":[[3,"Configuration"],[3,"Tasks"],[3,"Views"],[3,"Cli"],[4,"Command"],[13,"Save"],[13,"Load"],[8,"Connection"],[3,"View"],[4,"QueryKey"],[4,"AccessPolicy"],[3,"Header"],[3,"Document"],[3,"Revision"],[3,"Payload"],[4,"Request"],[13,"Database"],[4,"ServerRequest"],[13,"DeleteDatabase"],[4,"DatabaseRequest"],[13,"Get"],[13,"GetMultiple"],[13,"Query"],[13,"Reduce"],[13,"ApplyTransaction"],[13,"ListExecutedTransactions"],[13,"SubscribeTo"],[13,"UnsubscribeFrom"],[13,"UnregisterSubscriber"],[4,"Response"],[4,"ServerResponse"],[13,"DatabaseCreated"],[13,"DatabaseDeleted"],[4,"DatabaseResponse"],[13,"SubscriberCreated"],[13,"MessageReceived"],[3,"MappedDocument"],[3,"Database"],[8,"ServerConnection"],[4,"Error"],[13,"SchemaMismatch"],[4,"Error"],[13,"ParseCertificate"],[13,"DanglingCertificate"],[4,"ParseCertificate"],[4,"ErrorKind"],[4,"ConnectError"],[4,"ConnectionError"],[4,"EndpointError"],[4,"ReadError"],[4,"WriteError"],[4,"TLSError"],[13,"InappropriateMessage"],[13,"InappropriateHandshakeMessage"],[4,"WebPkiError"],[4,"X509Error"],[4,"Err"],[8,"Dangerous"],[3,"Map"],[3,"MappedDocument"],[3,"Serialized"],[3,"MappedValue"],[8,"Key"],[4,"Error"],[8,"View"],[4,"SerializableValue"],[8,"Serialized"],[8,"Schema"],[8,"Collection"],[3,"Transaction"],[3,"Operation"],[4,"Command"],[13,"Insert"],[13,"Update"],[13,"Delete"],[4,"OperationResult"],[13,"DocumentUpdated"],[13,"DocumentDeleted"],[3,"Executed"],[3,"ChangedDocument"],[8,"PubSub"],[8,"Subscriber"],[4,"Error"],[3,"Basic"],[3,"TestDirectory"],[4,"HarnessTest"],[3,"Message"],[4,"SelectError"],[3,"SendError"],[4,"TrySendError"],[4,"SendTimeoutError"],[4,"RecvError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[4,"Error"],[3,"Storage"],[3,"Collection"],[3,"IoError"],[3,"AddrParseError"],[3,"ParseError"],[3,"KeyRejected"],[3,"ResolveError"],[3,"Certificate"],[3,"PrivateKey"],[3,"Builder"],[3,"Connecting"],[3,"Connection"],[3,"Endpoint"],[3,"Incoming"],[3,"Receiver"],[3,"Sender"],[3,"SchemaId"],[3,"CollectionId"],[3,"Schematic"],[3,"BasicCount"],[3,"BasicByParentId"],[3,"BasicByCategory"],[3,"BasicByBrokenParentId"],[3,"BasicSchema"],[3,"BasicCollectionWithNoViews"],[3,"BasicCollectionWithOnlyBrokenParentId"],[3,"UnassociatedCollection"],[3,"Relay"],[3,"Subscriber"],[3,"Selector"],[3,"SendFut"],[3,"SendSink"],[3,"RecvFut"],[3,"RecvStream"],[3,"Sender"],[3,"Receiver"],[3,"Iter"],[3,"TryIter"],[3,"Drain"],[3,"IntoIter"]]},\
"pliantdb_server":{"doc":"The <code>PliantDB</code> Server.","i":[[0,"cli","pliantdb_server","Command-line interface for the server.",null,null],[0,"certificate","pliantdb_server::cli","Command-line interface for managing the root certificate.",null,null],[4,"Command","pliantdb_server::cli::certificate","Command to manage the server\'s certificates.",null,null],[13,"InstallSelfSigned","","Installs a self-signed certificate into the server. The …",0,null],[12,"server_name","pliantdb_server::cli::certificate::Command","The name of the server. If this server has a DNS name, …",1,null],[12,"overwrite","","If an existing certificate exists, an error will be …",1,null],[13,"Install","pliantdb_server::cli::certificate","Installs a X.509 certificate and associated private key …",0,null],[12,"private_key","pliantdb_server::cli::certificate::Command","A private key used to generate <code>certificate</code> in binary DER …",2,null],[12,"certificate","","The X.509 certificate in binary DER format.",2,null],[11,"execute","pliantdb_server::cli::certificate","Executes the command.",0,[[["server",3]]]],[0,"serve","pliantdb_server::cli","Command-line interface for hosting a server.",null,null],[3,"Serve","pliantdb_server::cli::serve","Execute the server",null,null],[12,"listen_on","","The bind address and port. Defaults to 5645",3,null],[11,"execute","","Starts the server.",3,[[["server",3]]]],[3,"Cli","pliantdb_server::cli","Command-line interface for <code>pliantdb server</code>.",null,null],[12,"server_data_directory","","The path to the directory where the server should store …",4,null],[12,"subcommand","","The command to execute.",4,null],[4,"Command","","Available commands for <code>pliantdb server</code>.",null,null],[13,"Certificate","","Manage the server\'s root certificate.",5,null],[13,"Serve","","Execute the server.",5,null],[11,"execute","","Executes the command.",5,[[["fn",8],["path",3],["send",8]]]],[0,"test_util","pliantdb_server","",null,null],[17,"BASIC_SERVER_NAME","pliantdb_server::test_util","",null,null],[5,"initialize_basic_server","","",null,[[["path",3]]]],[5,"basic_server_connection_tests","","",null,[[["serverconnection",8]]]],[3,"Configuration","pliantdb_server","Configuration options for <code>Server</code>",null,null],[12,"request_workers","","Number of simultaneous requests to be processed. Default …",6,null],[12,"storage","","Configuration options for individual databases.",6,null],[4,"Error","","An error occurred while interacting with a <code>Server</code>.",null,null],[13,"InvalidDatabaseName","","An invalid database name was specified. See …",7,null],[13,"DatabaseNotFound","","The database name given was not found.",7,null],[13,"DatabaseNameAlreadyTaken","","The database name already exists.",7,null],[13,"Transport","","An error occurred from the QUIC transport layer.",7,null],[13,"Websocket","","An error occurred from the Websocket transport layer.",7,null],[13,"Io","","An error occurred from IO",7,null],[13,"Request","","An error occurred while processing a request",7,null],[13,"SchemaMismatch","","The database named <code>database_name</code> was created with a …",7,null],[12,"database_name","pliantdb_server::Error","The name of the database being accessed.",8,null],[12,"schema","","The schema provided for the database.",8,null],[12,"stored_schema","","The schema stored for the database.",8,null],[13,"SchemaAlreadyRegistered","pliantdb_server","The [<code>SchemaId</code>] returned has already been registered with …",7,null],[13,"Core","","An error occurred from within the schema.",7,null],[13,"Storage","","An error occurred while interacting with a local database.",7,null],[3,"Database","","A database hosted on a server.",null,null],[3,"Server","","A <code>PliantDB</code> server.",null,null],[11,"from","pliantdb_server::cli::certificate","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","pliantdb_server::cli::serve","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","pliantdb_server::cli","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","pliantdb_server","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["error",3]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","","",7,[[["error",6]]]],[11,"clone","","",10,[[],["server",3]]],[11,"default","","",6,[[]]],[11,"fmt","pliantdb_server::cli::certificate","",0,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_server::cli::serve","",3,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_server::cli","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_server","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"get","","",9,[[["u64",15]],[["box",3],["pin",3]]]],[11,"get_multiple","","",9,[[],[["pin",3],["box",3]]]],[11,"query","","",9,[[["accesspolicy",4],["querykey",4],["option",4]],[["box",3],["pin",3]]]],[11,"query_with_docs","","",9,[[["accesspolicy",4],["querykey",4],["option",4]],[["pin",3],["box",3]]]],[11,"reduce","","",9,[[["accesspolicy",4],["querykey",4],["option",4]],[["pin",3],["box",3]]]],[11,"reduce_grouped","","",9,[[["accesspolicy",4],["querykey",4],["option",4]],[["box",3],["pin",3]]]],[11,"apply_transaction","","",9,[[["transaction",3]],[["box",3],["pin",3]]]],[11,"list_executed_transactions","","",9,[[["usize",15],["option",4],["u64",15],["option",4]],[["box",3],["pin",3]]]],[11,"last_transaction_id","","",9,[[],[["box",3],["pin",3]]]],[11,"create_database","","",10,[[["schemaid",3],["str",15]],[["pin",3],["box",3]]]],[11,"delete_database","","",10,[[["str",15]],[["pin",3],["box",3]]]],[11,"list_databases","","",10,[[],[["box",3],["pin",3]]]],[11,"list_available_schemas","","",10,[[],[["pin",3],["box",3]]]],[11,"create_subscriber","","",9,[[],[["pin",3],["box",3]]]],[11,"publish","","",9,[[["into",8],["string",3],["send",8]],[["box",3],["pin",3]]]],[11,"clap","pliantdb_server::cli::certificate","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"clap","pliantdb_server::cli::serve","",3,[[],["app",3]]],[11,"from_clap","","",3,[[["argmatches",3]]]],[11,"clap","pliantdb_server::cli","",4,[[],["app",3]]],[11,"from_clap","","",4,[[["argmatches",3]]]],[11,"clap","","",5,[[],["app",3]]],[11,"from_clap","","",5,[[["argmatches",3]]]],[11,"augment_clap","pliantdb_server::cli::certificate","",0,[[["app",3]],["app",3]]],[11,"from_subcommand","","",0,[[],["option",4]]],[11,"is_subcommand","","",0,[[],["bool",15]]],[11,"augment_clap","pliantdb_server::cli::serve","",3,[[["app",3]],["app",3]]],[11,"is_subcommand","","",3,[[],["bool",15]]],[11,"augment_clap","pliantdb_server::cli","",4,[[["app",3]],["app",3]]],[11,"is_subcommand","","",4,[[],["bool",15]]],[11,"augment_clap","","",5,[[["app",3]],["app",3]]],[11,"from_subcommand","","",5,[[],["option",4]]],[11,"is_subcommand","","",5,[[],["bool",15]]],[11,"open","pliantdb_server","Creates or opens a [<code>Server</code>] with its data stored in …",10,[[["configuration",3],["path",3]]]],[11,"register_schema","","Registers a schema for use within the server.",10,[[]]],[11,"database","","Retrieves a database. This function only verifies that …",10,[[["str",15]]]],[11,"install_self_signed_certificate","","Installs an X.509 certificate used for general purpose …",10,[[["bool",15],["str",15]]]],[11,"install_certificate","","Installs an X.509 certificate used for general purpose …",10,[[["certificate",3],["privatekey",3]]]],[11,"certificate","","Returns the current certificate.",10,[[]]],[11,"listen_on","","Listens for incoming client connections. Does not return …",10,[[["u16",15]]]],[11,"listen_for_websockets_on","","Listens for <code>WebSocket</code> traffic on <code>port</code>.",10,[[["send",8],["tosocketaddrs",8],["sync",8]]]],[11,"shutdown","","Shuts the server down. If a <code>timeout</code> is provided, the …",10,[[["duration",3],["option",4]]]]],"p":[[4,"Command"],[13,"InstallSelfSigned"],[13,"Install"],[3,"Serve"],[3,"Cli"],[4,"Command"],[3,"Configuration"],[4,"Error"],[13,"SchemaMismatch"],[3,"Database"],[3,"Server"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);
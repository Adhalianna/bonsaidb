var searchIndex = JSON.parse('{\
"pliantdb":{"doc":"A programmable document database inspired by <code>CouchDB</code> …","i":[[0,"connection","pliantdb::core","Types for interacting with a database.",null,null],[8,"Connection","pliantdb::core::connection","Defines all interactions with a [<code>schema::Database</code>], …",null,null],[10,"collection","","Accesses a collection for the connected [<code>schema::Database</code>]…",0,[[],[["collection",3],["result",4],["error",4]]]],[11,"insert","","Inserts a newly created document into the connected […",0,[[["global",3],["vec",3]],[["box",3],["pin",3]]]],[11,"update","","Updates an existing document in the connected […",0,[[["document",3]],[["box",3],["pin",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",0,[[],[["box",3],["pin",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",0,[[],[["pin",3],["box",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",0,[[["document",3]],[["box",3],["pin",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",0,[[],["view",3]]],[10,"query","","Queries for view entries matching [<code>View</code>].",0,[[["view",3]],[["pin",3],["box",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",0,[[["view",3]],[["box",3],["pin",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",0,[[["view",3]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Database</code>]. If any …",0,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Database</code>]…",0,[[["option",4],["option",4]],[["box",3],["pin",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",1,null],[12,"access_policy","","The view\'s data access policy. The default value is […",1,null],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",2,null],[13,"Range","","Matches all entires with keys in the range provided.",2,null],[13,"Multiple","","Matches all entries that have keys that are included in …",2,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",3,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",3,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",3,null],[0,"document","pliantdb::core","Types for interacting with <code>Document</code>s.",null,null],[3,"Header","pliantdb::core::document","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",4,null],[12,"revision","","The revision of the stored document.",4,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",5,null],[12,"header","","The header of the document, which contains the id and …",5,null],[12,"contents","","The serialized bytes of the stored item.",5,null],[3,"Revision","","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",6,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",6,null],[0,"schema","pliantdb::core","Types for defining database schema.",null,null],[0,"collection","pliantdb::core::schema","Types for defining a <code>Collection</code>.",null,null],[3,"Id","pliantdb::core::schema::collection","A unique collection id. Choose collection names that …",null,null],[12,"0","","",7,null],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"id","","The <code>Id</code> of this collection.",8,[[],["id",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",8,[[["schema",3]]]],[0,"view","pliantdb::core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb::core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb::core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",9,null],[12,"key","","The key used to index the View.",9,null],[12,"value","","An associated value stored in the view.",9,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",10,null],[12,"key","","The key used to index the View.",10,null],[12,"value","","An associated value stored in the view.",10,null],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",11,null],[12,"key","","The key used to index the View.",11,null],[12,"value","","An associated value stored in the view.",11,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",12,null],[12,"value","","The value generated by the <code>View</code>",12,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",13,[[],[["cow",4],["error",3],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",13,[[],[["result",4],["error",3]]]],[4,"Error","pliantdb::core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",14,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",14,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",14,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",15,null],[16,"Key","","The key for this view.",15,null],[16,"Value","","An associated type that can be stored with each entry in …",15,null],[10,"version","","The version of the view. Changing this value will cause …",15,[[]]],[10,"name","","The name of the view. Must be unique per collection.",15,[[],["cow",4]]],[10,"map","","The map function for this view. This function is …",15,[[["document",3]],[["result",4],["error",4],["option",4]]]],[11,"reduce","","The reduce function for this view. If …",15,[[],[["error",4],["result",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",16,null],[13,"Borrowed","","a borrowed value",16,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing <code><View::Collection as Collection>::id()</code>",17,[[],["id",3]]],[10,"version","","Wraps [<code>View::version</code>]",17,[[]]],[10,"name","","Wraps [<code>View::name</code>]",17,[[],["cow",4]]],[10,"map","","Wraps [<code>View::map</code>]",17,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",17,[[],[["result",4],["error",4],["vec",3]]]],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",13,[[],[["cow",4],["error",3],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",13,[[],[["result",4],["error",3]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",9,null],[12,"key","","The key used to index the View.",9,null],[12,"value","","An associated value stored in the view.",9,null],[3,"Map","pliantdb::core::schema","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",9,null],[12,"key","","The key used to index the View.",9,null],[12,"value","","An associated value stored in the view.",9,null],[3,"Schema","","A collection of defined collections and views.",null,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing <code><View::Collection as Collection>::id()</code>",17,[[],["id",3]]],[10,"version","","Wraps [<code>View::version</code>]",17,[[]]],[10,"name","","Wraps [<code>View::name</code>]",17,[[],["cow",4]]],[10,"map","","Wraps [<code>View::map</code>]",17,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",17,[[],[["result",4],["error",4],["vec",3]]]],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",15,null],[16,"Key","","The key for this view.",15,null],[16,"Value","","An associated type that can be stored with each entry in …",15,null],[10,"version","","The version of the view. Changing this value will cause …",15,[[]]],[10,"name","","The name of the view. Must be unique per collection.",15,[[],["cow",4]]],[10,"map","","The map function for this view. This function is …",15,[[["document",3]],[["result",4],["error",4],["option",4]]]],[11,"reduce","","The reduce function for this view. If …",15,[[],[["error",4],["result",4]]]],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"id","","The <code>Id</code> of this collection.",8,[[],["id",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",8,[[["schema",3]]]],[8,"Database","","Defines a group of collections that are stored into a …",null,null],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>",18,[[["schema",3]]]],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",13,[[],[["cow",4],["error",3],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",13,[[],[["result",4],["error",3]]]],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",16,null],[13,"Borrowed","","a borrowed value",16,null],[3,"Id","","A unique collection id. Choose collection names that …",null,null],[12,"0","","",7,null],[4,"Error","","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",14,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",14,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",14,null],[0,"transaction","pliantdb::core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb::core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",19,null],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",20,null],[12,"command","","The command being performed.",20,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",21,null],[12,"contents","pliantdb::core::transaction::Command","The initial contents of the document.",22,null],[13,"Update","pliantdb::core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",21,null],[12,"header","pliantdb::core::transaction::Command","The current header of the <code>Document</code>.",23,null],[12,"contents","","The new contents to store within the <code>Document</code>.",23,null],[13,"Delete","pliantdb::core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",21,null],[12,"header","pliantdb::core::transaction::Command","The current header of the <code>Document</code>.",24,null],[4,"OperationResult","pliantdb::core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",25,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",25,null],[12,"collection","pliantdb::core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",26,null],[12,"header","","The header of the updated <code>Document</code>.",26,null],[13,"DocumentDeleted","pliantdb::core::transaction","A <code>Document</code> was deleted.",25,null],[12,"collection","pliantdb::core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",27,null],[12,"id","","The id of the deleted <code>Document</code>.",27,null],[3,"Executed","pliantdb::core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",28,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",28,null],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",29,null],[12,"id","","The id of the changed <code>Document</code>.",29,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",29,null],[4,"Error","pliantdb::core","an enumeration of errors that this crate can produce",null,null],[13,"Storage","","An error from serializing or deserializing from a <code>Document</code>…",30,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",30,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",30,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",30,null],[0,"test_util","","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb::core::test_util","",null,null],[12,"value","","",31,null],[12,"category","","",31,null],[12,"parent_id","","",31,null],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicDatabase","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",32,null],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[0,"config","pliantdb::local","Configuration options.",null,null],[3,"Configuration","pliantdb::local::config","Configuration options for <code>Storage</code>.",null,null],[12,"workers","","Configuration options related to background tasks.",33,null],[12,"views","","Configuration options related to views.",33,null],[3,"Tasks","","Configujration options for background tasks.",null,null],[12,"worker_count","","Defines how many workers should be spawned to process …",34,null],[3,"Views","","Configuration options for views.",null,null],[12,"check_integrity_on_open","","If true, the database will scan all views during the call …",35,null],[0,"connection","pliantdb::local::core","Types for interacting with a database.",null,null],[8,"Connection","pliantdb::local::core::connection","Defines all interactions with a [<code>schema::Database</code>], …",null,null],[10,"collection","","Accesses a collection for the connected [<code>schema::Database</code>]…",0,[[],[["collection",3],["result",4],["error",4]]]],[11,"insert","","Inserts a newly created document into the connected […",0,[[["global",3],["vec",3]],[["box",3],["pin",3]]]],[11,"update","","Updates an existing document in the connected […",0,[[["document",3]],[["box",3],["pin",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",0,[[],[["box",3],["pin",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",0,[[],[["pin",3],["box",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",0,[[["document",3]],[["box",3],["pin",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",0,[[],["view",3]]],[10,"query","","Queries for view entries matching [<code>View</code>].",0,[[["view",3]],[["pin",3],["box",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",0,[[["view",3]],[["box",3],["pin",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",0,[[["view",3]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Database</code>]. If any …",0,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Database</code>]…",0,[[["option",4],["option",4]],[["box",3],["pin",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",1,null],[12,"access_policy","","The view\'s data access policy. The default value is […",1,null],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",2,null],[13,"Range","","Matches all entires with keys in the range provided.",2,null],[13,"Multiple","","Matches all entries that have keys that are included in …",2,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",3,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",3,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",3,null],[0,"document","pliantdb::local::core","Types for interacting with <code>Document</code>s.",null,null],[3,"Header","pliantdb::local::core::document","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",4,null],[12,"revision","","The revision of the stored document.",4,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",5,null],[12,"header","","The header of the document, which contains the id and …",5,null],[12,"contents","","The serialized bytes of the stored item.",5,null],[3,"Revision","","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",6,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",6,null],[0,"schema","pliantdb::local::core","Types for defining database schema.",null,null],[0,"collection","pliantdb::local::core::schema","Types for defining a <code>Collection</code>.",null,null],[3,"Id","pliantdb::local::core::schema::collection","A unique collection id. Choose collection names that …",null,null],[12,"0","","",7,null],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"id","","The <code>Id</code> of this collection.",8,[[],["id",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",8,[[["schema",3]]]],[0,"view","pliantdb::local::core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb::local::core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb::local::core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",9,null],[12,"key","","The key used to index the View.",9,null],[12,"value","","An associated value stored in the view.",9,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",10,null],[12,"key","","The key used to index the View.",10,null],[12,"value","","An associated value stored in the view.",10,null],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",11,null],[12,"key","","The key used to index the View.",11,null],[12,"value","","An associated value stored in the view.",11,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",12,null],[12,"value","","The value generated by the <code>View</code>",12,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",13,[[],[["cow",4],["error",3],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",13,[[],[["result",4],["error",3]]]],[4,"Error","pliantdb::local::core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",14,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",14,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",14,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",15,null],[16,"Key","","The key for this view.",15,null],[16,"Value","","An associated type that can be stored with each entry in …",15,null],[10,"version","","The version of the view. Changing this value will cause …",15,[[]]],[10,"name","","The name of the view. Must be unique per collection.",15,[[],["cow",4]]],[10,"map","","The map function for this view. This function is …",15,[[["document",3]],[["result",4],["error",4],["option",4]]]],[11,"reduce","","The reduce function for this view. If …",15,[[],[["error",4],["result",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",16,null],[13,"Borrowed","","a borrowed value",16,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing <code><View::Collection as Collection>::id()</code>",17,[[],["id",3]]],[10,"version","","Wraps [<code>View::version</code>]",17,[[]]],[10,"name","","Wraps [<code>View::name</code>]",17,[[],["cow",4]]],[10,"map","","Wraps [<code>View::map</code>]",17,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",17,[[],[["result",4],["error",4],["vec",3]]]],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",13,[[],[["cow",4],["error",3],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",13,[[],[["result",4],["error",3]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",9,null],[12,"key","","The key used to index the View.",9,null],[12,"value","","An associated value stored in the view.",9,null],[3,"Map","pliantdb::local::core::schema","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",9,null],[12,"key","","The key used to index the View.",9,null],[12,"value","","An associated value stored in the view.",9,null],[3,"Schema","","A collection of defined collections and views.",null,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing <code><View::Collection as Collection>::id()</code>",17,[[],["id",3]]],[10,"version","","Wraps [<code>View::version</code>]",17,[[]]],[10,"name","","Wraps [<code>View::name</code>]",17,[[],["cow",4]]],[10,"map","","Wraps [<code>View::map</code>]",17,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",17,[[],[["result",4],["error",4],["vec",3]]]],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",15,null],[16,"Key","","The key for this view.",15,null],[16,"Value","","An associated type that can be stored with each entry in …",15,null],[10,"version","","The version of the view. Changing this value will cause …",15,[[]]],[10,"name","","The name of the view. Must be unique per collection.",15,[[],["cow",4]]],[10,"map","","The map function for this view. This function is …",15,[[["document",3]],[["result",4],["error",4],["option",4]]]],[11,"reduce","","The reduce function for this view. If …",15,[[],[["error",4],["result",4]]]],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"id","","The <code>Id</code> of this collection.",8,[[],["id",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",8,[[["schema",3]]]],[8,"Database","","Defines a group of collections that are stored into a …",null,null],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>",18,[[["schema",3]]]],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",13,[[],[["cow",4],["error",3],["result",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",13,[[],[["result",4],["error",3]]]],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",16,null],[13,"Borrowed","","a borrowed value",16,null],[3,"Id","","A unique collection id. Choose collection names that …",null,null],[12,"0","","",7,null],[4,"Error","","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",14,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",14,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",14,null],[0,"transaction","pliantdb::local::core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb::local::core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",19,null],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",20,null],[12,"command","","The command being performed.",20,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",21,null],[12,"contents","pliantdb::local::core::transaction::Command","The initial contents of the document.",22,null],[13,"Update","pliantdb::local::core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",21,null],[12,"header","pliantdb::local::core::transaction::Command","The current header of the <code>Document</code>.",23,null],[12,"contents","","The new contents to store within the <code>Document</code>.",23,null],[13,"Delete","pliantdb::local::core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",21,null],[12,"header","pliantdb::local::core::transaction::Command","The current header of the <code>Document</code>.",24,null],[4,"OperationResult","pliantdb::local::core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",25,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",25,null],[12,"collection","pliantdb::local::core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",26,null],[12,"header","","The header of the updated <code>Document</code>.",26,null],[13,"DocumentDeleted","pliantdb::local::core::transaction","A <code>Document</code> was deleted.",25,null],[12,"collection","pliantdb::local::core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",27,null],[12,"id","","The id of the deleted <code>Document</code>.",27,null],[3,"Executed","pliantdb::local::core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",28,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",28,null],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",29,null],[12,"id","","The id of the changed <code>Document</code>.",29,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",29,null],[4,"Error","pliantdb::local::core","an enumeration of errors that this crate can produce",null,null],[13,"Storage","","An error from serializing or deserializing from a <code>Document</code>…",30,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",30,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",30,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",30,null],[0,"test_util","","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb::local::core::test_util","",null,null],[12,"value","","",31,null],[12,"category","","",31,null],[12,"parent_id","","",31,null],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicDatabase","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",32,null],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[3,"Configuration","pliantdb::local","Configuration options for <code>Storage</code>.",null,null],[12,"workers","","Configuration options related to background tasks.",33,null],[12,"views","","Configuration options related to views.",33,null],[4,"Error","","Errors that can occur from interacting with storage.",null,null],[13,"Sled","","An error occurred interacting with <code>sled</code>.",36,null],[13,"InternalSerialization","","An error occurred serializing the underlying database …",36,null],[13,"Serialization","","An error occurred serializing the contents of a <code>Document</code> …",36,null],[13,"InternalCommunication","","An internal error occurred while waiting for a message.",36,null],[13,"View","","An internal error occurred while waiting for a message.",36,null],[13,"Other","","An internal error occurred while waiting for a message.",36,null],[3,"Storage","","A local, file-based database.",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","","The maximum number of results allowed to be returned from …",null,null],[11,"from","pliantdb::local::core::connection","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","pliantdb::local::core::document","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","pliantdb::local::core::schema","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","pliantdb::local::core::schema::view::map","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","pliantdb::local::core::schema","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","pliantdb::local::core::transaction","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","pliantdb::local::core","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","pliantdb::local::core::test_util","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"define_collections","","",31,[[["schema",3]]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"collection","","",39,[[],["id",3]]],[11,"version","","",39,[[]]],[11,"name","","",39,[[],["cow",4]]],[11,"map","","",39,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",39,[[],[["result",4],["error",4],["vec",3]]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"collection","","",40,[[],["id",3]]],[11,"version","","",40,[[]]],[11,"name","","",40,[[],["cow",4]]],[11,"map","","",40,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",40,[[],[["result",4],["error",4],["vec",3]]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"collection","","",41,[[],["id",3]]],[11,"version","","",41,[[]]],[11,"name","","",41,[[],["cow",4]]],[11,"map","","",41,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",41,[[],[["result",4],["error",4],["vec",3]]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"collection","","",42,[[],["id",3]]],[11,"version","","",42,[[]]],[11,"name","","",42,[[],["cow",4]]],[11,"map","","",42,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",42,[[],[["result",4],["error",4],["vec",3]]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"define_collections","","",44,[[["schema",3]]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"define_collections","","",45,[[["schema",3]]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"define_collections","","",46,[[["schema",3]]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","pliantdb::local","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","pliantdb::local::config","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","pliantdb::local","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"fmt","pliantdb::local::core","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::schema","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",14,[[["formatter",3]],[["result",4],["error",3]]]],[11,"define_collections","pliantdb::local::core::test_util","",43,[[["schema",3]]]],[11,"from","pliantdb::local::core::schema","",14,[[["error",3]],["error",4]]],[11,"from","pliantdb::local::core","",30,[[["error",3]],["error",4]]],[11,"from","pliantdb::local::core::schema","",7,[[],["id",3]]],[11,"from","","",16,[[],["serializablevalue",4]]],[11,"from","","",7,[[["string",3]],["id",3]]],[11,"version","pliantdb::local::core::test_util","",42,[[]]],[11,"name","","",42,[[],["cow",4]]],[11,"map","","",42,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"version","","",39,[[]]],[11,"name","","",39,[[],["cow",4]]],[11,"map","","",39,[[["document",3]],[["error",4],["option",4],["result",4]]]],[11,"reduce","","",39,[[],[["error",4],["result",4]]]],[11,"version","","",41,[[]]],[11,"name","","",41,[[],["cow",4]]],[11,"map","","",41,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",41,[[],[["result",4],["error",4]]]],[11,"version","","",40,[[]]],[11,"name","","",40,[[],["cow",4]]],[11,"map","","",40,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",40,[[],[["result",4],["error",4]]]],[11,"as_ref","","",32,[[],["path",3]]],[11,"as_ref","pliantdb::local::core::schema","",16,[[]]],[11,"hash","","",7,[[]]],[11,"default","pliantdb::local::core::transaction","",19,[[],["transaction",3]]],[11,"default","pliantdb::local::core::test_util","",31,[[],["basic",3]]],[11,"default","pliantdb::local::core::schema","",38,[[],["schema",3]]],[11,"deserialize","pliantdb::local::core::test_util","",31,[[],[["result",4],["basic",3]]]],[11,"deserialize","pliantdb::local::core::document","",5,[[],[["document",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::schema","",7,[[],[["id",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::schema::view::map","",11,[[],[["serialized",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::document","",4,[[],[["header",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::transaction","",25,[[],[["operationresult",4],["result",4]]]],[11,"deserialize","","",29,[[],[["result",4],["changeddocument",3]]]],[11,"deserialize","","",21,[[],[["result",4],["command",4]]]],[11,"deserialize","","",28,[[],[["executed",3],["result",4]]]],[11,"deserialize","pliantdb::local::core::document","",6,[[],[["revision",3],["result",4]]]],[11,"source","pliantdb::local::core::schema","",14,[[],[["error",8],["option",4]]]],[11,"clone","pliantdb::local::core::schema::view::map","",11,[[],["serialized",3]]],[11,"clone","pliantdb::local::core::document","",4,[[],["header",3]]],[11,"clone","pliantdb::local::core::schema","",7,[[],["id",3]]],[11,"clone","pliantdb::local::core::transaction","",29,[[],["changeddocument",3]]],[11,"clone","pliantdb::local::core::document","",6,[[],["revision",3]]],[11,"eq","","",4,[[["header",3]]]],[11,"ne","","",4,[[["header",3]]]],[11,"eq","","",6,[[["revision",3]]]],[11,"ne","","",6,[[["revision",3]]]],[11,"eq","pliantdb::local::core::schema","",7,[[["id",3]]]],[11,"ne","","",7,[[["id",3]]]],[11,"eq","pliantdb::local::core::test_util","",31,[[["basic",3]]]],[11,"ne","","",31,[[["basic",3]]]],[11,"eq","pliantdb::local::core::schema::view::map","",12,[[["mappedvalue",3]]]],[11,"ne","","",12,[[["mappedvalue",3]]]],[11,"eq","pliantdb::local::core::schema","",9,[[["map",3]]]],[11,"ne","","",9,[[["map",3]]]],[11,"fmt","pliantdb::local::core::schema::view::map","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::transaction","",20,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",21,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::schema","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::test_util","",39,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::transaction","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::test_util","",44,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",46,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::test_util","",43,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::schema","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",14,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::transaction","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::schema::view::map","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::document","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::schema::view::map","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::test_util","",40,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::schema","",38,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::document","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::transaction","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::test_util","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",45,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::document","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::test_util","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::core::transaction","",25,[[["formatter",3]],[["result",4],["error",3]]]],[11,"id","pliantdb::local::core::test_util","",44,[[],["id",3]]],[11,"define_views","","",44,[[["schema",3]]]],[11,"id","","",46,[[],["id",3]]],[11,"define_views","","",46,[[["schema",3]]]],[11,"id","","",31,[[],["id",3]]],[11,"define_views","","",31,[[["schema",3]]]],[11,"id","","",45,[[],["id",3]]],[11,"define_views","","",45,[[["schema",3]]]],[11,"serialize","pliantdb::local::core::transaction","",29,[[],["result",4]]],[11,"serialize","pliantdb::local::core::document","",5,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",21,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema::view::map","",11,[[],["result",4]]],[11,"serialize","pliantdb::local::core::transaction","",25,[[],["result",4]]],[11,"serialize","pliantdb::local::core::test_util","",31,[[],["result",4]]],[11,"serialize","pliantdb::local::core::document","",4,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","pliantdb::local::core::schema","",7,[[],["result",4]]],[11,"drop","pliantdb::local::core::test_util","",32,[[]]],[11,"fmt","pliantdb::local","",36,[[["formatter",3]],[["result",4],["error",3]]]],[11,"collection","","",47,[[],[["error",4],["result",4],["collection",3]]]],[11,"apply_transaction","","",47,[[["transaction",3]],[["pin",3],["box",3]]]],[11,"get","","",47,[[],[["box",3],["pin",3]]]],[11,"get_multiple","","",47,[[],[["pin",3],["box",3]]]],[11,"list_executed_transactions","","",47,[[["option",4],["option",4]],[["box",3],["pin",3]]]],[11,"query","","",47,[[["view",3],["storage",3]],[["pin",3],["box",3]]]],[11,"query_with_docs","","",47,[[["view",3],["storage",3]],[["box",3],["pin",3]]]],[11,"reduce","","",47,[[["view",3],["storage",3]],[["pin",3],["box",3]]]],[11,"from","","",36,[[["error",3]],["error",4]]],[11,"from","pliantdb::local::core","",30,[[["error",4]],["error",4]]],[11,"from","pliantdb::local","",36,[[["recverror",4]],["error",4]]],[11,"from","","",36,[[["global",3],["box",3],["errorkind",4]],["error",4]]],[11,"from","","",36,[[["error",4]],["error",4]]],[11,"from","","",36,[[["error",3]],["error",4]]],[11,"from","","",36,[[["error",4]],["error",4]]],[11,"default","","",33,[[],["configuration",3]]],[11,"default","pliantdb::local::config","",35,[[],["views",3]]],[11,"default","","",34,[[],["tasks",3]]],[11,"source","pliantdb::local","",36,[[],[["error",8],["option",4]]]],[11,"clone","","",47,[[],["storage",3]]],[11,"fmt","","",36,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::config","",34,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local","",33,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local::config","",35,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb::local","",47,[[["formatter",3]],[["result",4],["error",3]]]],[11,"new","pliantdb::local::core::connection","Creates a new instance using <code>connection</code>.",37,[[],["collection",3]]],[11,"push","","Adds a new <code>Document<Cl></code> with the contents <code>item</code>.",37,[[]]],[11,"get","","Retrieves a <code>Document<Cl></code> with <code>id</code> from the connection.",37,[[]]],[11,"with_key","","Filters for entries in the view with <code>key</code>.",1,[[],["view",3]]],[11,"with_keys","","Filters for entries in the view with <code>keys</code>.",1,[[["vec",3],["global",3]],["view",3]]],[11,"with_key_range","","Filters for entries in the view with the range <code>keys</code>.",1,[[["range",3]],["view",3]]],[11,"with_access_policy","","Sets the access policy for queries.",1,[[["accesspolicy",4]],["view",3]]],[11,"query","","Executes the query and retrieves the results.",1,[[]]],[11,"query_with_docs","","Executes the query and retrieves the results with the …",1,[[]]],[11,"reduce","","Executes a reduce over the results of the query",1,[[]]],[11,"new","pliantdb::local::core::document","Creates a new document with <code>contents</code>.",5,[[["cow",4],["id",3]],["document",3]]],[11,"with_contents","","Creates a new document with serialized bytes from <code>contents</code>…",5,[[["id",3]],[["result",4],["document",3],["error",3]]]],[11,"contents","","Retrieves <code>contents</code> through deserialization into the type <code>D</code>…",5,[[],[["error",3],["result",4]]]],[11,"set_contents","","Serializes and stores <code>contents</code> into this document.",5,[[],[["result",4],["error",3]]]],[11,"create_new_revision","","Creates a new revision.",5,[[["cow",4]],[["option",4],["document",3]]]],[11,"emit","","Creates a <code>Map</code> result with an empty key and value.",5,[[],["map",3]]],[11,"emit_key","","Creates a <code>Map</code> result with a <code>key</code> and an empty value.",5,[[],["map",3]]],[11,"emit_value","","Creates a <code>Map</code> result with <code>value</code> and an empty key.",5,[[],["map",3]]],[11,"emit_key_and_value","","Creates a <code>Map</code> result with a <code>key</code> and <code>value</code>.",5,[[],["map",3]]],[11,"to_owned","","Clone the document\'s data so that it\'s no longer borrowed …",5,[[],["document",3]]],[11,"new","","Creates the first revision for a document with the SHA256 …",6,[[],["revision",3]]],[11,"with_id","","Creates a revision with <code>id</code> for a document with the SHA256 …",6,[[],["revision",3]]],[11,"next_revision","","Creates the next revision in sequence with an updated …",6,[[],[["revision",3],["option",4]]]],[11,"new","pliantdb::local::core::schema","Creates a new Map entry for the document with id <code>source</code>.",9,[[],["map",3]]],[11,"define_collection","","Adds the collection <code>C</code> and its views.",38,[[]]],[11,"define_view","","Adds the view <code>V</code>.",38,[[]]],[11,"contains","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",38,[[]]],[11,"view_by_name","","Looks up a [<code>view::Serialized</code>] by name.",38,[[],[["option",4],["serialized",8]]]],[11,"view","","Looks up a [<code>view::Serialized</code>] through the the type <code>V</code>.",38,[[],[["option",4],["serialized",8]]]],[11,"views","","Iterates over all registered views.",38,[[]]],[11,"views_in_collection","","Iterates over all views that belong to <code>collection</code>.",38,[[["id",3]],[["vec",3],["option",4]]]],[11,"push","pliantdb::local::core::transaction","Adds an operation to the transaction.",19,[[["operation",3]]]],[11,"to_owned","","Convert this structure to be free of borrows.",28,[[],["executed",3]]],[11,"new","pliantdb::local::core::test_util","",31,[[],["basic",3]]],[11,"with_category","","",31,[[],["basic",3]]],[11,"with_parent_id","","",31,[[],["basic",3]]],[11,"new","","",32,[[],["testdirectory",3]]],[11,"open_local","pliantdb::local","Opens a local file as a pliantdb.",47,[[["configuration",3]]]],[11,"last_transaction_id","","Fetches the last transaction id that has been committed, …",47,[[]]]],"p":[[8,"Connection"],[3,"View"],[4,"QueryKey"],[4,"AccessPolicy"],[3,"Header"],[3,"Document"],[3,"Revision"],[3,"Id"],[8,"Collection"],[3,"Map"],[3,"MappedDocument"],[3,"Serialized"],[3,"MappedValue"],[8,"Key"],[4,"Error"],[8,"View"],[4,"SerializableValue"],[8,"Serialized"],[8,"Database"],[3,"Transaction"],[3,"Operation"],[4,"Command"],[13,"Insert"],[13,"Update"],[13,"Delete"],[4,"OperationResult"],[13,"DocumentUpdated"],[13,"DocumentDeleted"],[3,"Executed"],[3,"ChangedDocument"],[4,"Error"],[3,"Basic"],[3,"TestDirectory"],[3,"Configuration"],[3,"Tasks"],[3,"Views"],[4,"Error"],[3,"Collection"],[3,"Schema"],[3,"BasicCount"],[3,"BasicByParentId"],[3,"BasicByCategory"],[3,"BasicByBrokenParentId"],[3,"BasicDatabase"],[3,"BasicCollectionWithNoViews"],[3,"BasicCollectionWithOnlyBrokenParentId"],[3,"UnassociatedCollection"],[3,"Storage"]]},\
"pliantdb_core":{"doc":"Core functionality and types for <code>PliantDB</code>.","i":[[0,"connection","pliantdb_core","Types for interacting with a database.",null,null],[8,"Connection","pliantdb_core::connection","Defines all interactions with a [<code>schema::Database</code>], …",null,null],[10,"collection","","Accesses a collection for the connected [<code>schema::Database</code>]…",0,[[],[["result",4],["collection",3],["error",4]]]],[11,"insert","","Inserts a newly created document into the connected […",0,[[["vec",3]],[["pin",3],["box",3]]]],[11,"update","","Updates an existing document in the connected […",0,[[["document",3]],[["box",3],["pin",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",0,[[],[["pin",3],["box",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",0,[[],[["pin",3],["box",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",0,[[["document",3]],[["box",3],["pin",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",0,[[],[["view",3],["view",8]]]],[10,"query","","Queries for view entries matching [<code>View</code>].",0,[[["view",3],["view",8]],[["box",3],["pin",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",0,[[["view",3],["view",8]],[["pin",3],["box",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",0,[[["view",3],["view",8]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Database</code>]. If any …",0,[[["transaction",3]],[["pin",3],["box",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Database</code>]…",0,[[["option",4],["option",4]],[["box",3],["pin",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[11,"new","","Creates a new instance using <code>connection</code>.",1,[[]]],[11,"push","","Adds a new <code>Document<Cl></code> with the contents <code>item</code>.",1,[[]]],[11,"get","","Retrieves a <code>Document<Cl></code> with <code>id</code> from the connection.",1,[[]]],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",2,null],[12,"access_policy","","The view\'s data access policy. The default value is […",2,null],[11,"with_key","","Filters for entries in the view with <code>key</code>.",2,[[]]],[11,"with_keys","","Filters for entries in the view with <code>keys</code>.",2,[[["vec",3]]]],[11,"with_key_range","","Filters for entries in the view with the range <code>keys</code>.",2,[[["range",3]]]],[11,"with_access_policy","","Sets the access policy for queries.",2,[[["accesspolicy",4]]]],[11,"query","","Executes the query and retrieves the results.",2,[[]]],[11,"query_with_docs","","Executes the query and retrieves the results with the …",2,[[]]],[11,"reduce","","Executes a reduce over the results of the query",2,[[]]],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",3,null],[13,"Range","","Matches all entires with keys in the range provided.",3,null],[13,"Multiple","","Matches all entries that have keys that are included in …",3,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",4,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",4,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",4,null],[0,"document","pliantdb_core","Types for interacting with <code>Document</code>s.",null,null],[3,"Revision","pliantdb_core::document","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",5,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",5,null],[3,"Header","","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",6,null],[12,"revision","","The revision of the stored document.",6,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",7,null],[12,"header","","The header of the document, which contains the id and …",7,null],[12,"contents","","The serialized bytes of the stored item.",7,null],[11,"new","","Creates a new document with <code>contents</code>.",7,[[["id",3],["cow",4]]]],[11,"with_contents","","Creates a new document with serialized bytes from <code>contents</code>…",7,[[["id",3]],[["result",4],["error",3]]]],[11,"contents","","Retrieves <code>contents</code> through deserialization into the type <code>D</code>…",7,[[],[["error",3],["result",4],["deserialize",8]]]],[11,"set_contents","","Serializes and stores <code>contents</code> into this document.",7,[[],[["error",3],["result",4]]]],[11,"create_new_revision","","Creates a new revision.",7,[[["cow",4]],["option",4]]],[11,"emit","","Creates a <code>Map</code> result with an empty key and value.",7,[[],["map",3]]],[11,"emit_key","","Creates a <code>Map</code> result with a <code>key</code> and an empty value.",7,[[["key",8]],[["map",3],["key",8]]]],[11,"emit_value","","Creates a <code>Map</code> result with <code>value</code> and an empty key.",7,[[["serialize",8]],[["map",3],["serialize",8]]]],[11,"emit_key_and_value","","Creates a <code>Map</code> result with a <code>key</code> and <code>value</code>.",7,[[["key",8],["serialize",8]],[["key",8],["map",3],["serialize",8]]]],[11,"to_owned","","Clone the document\'s data so that it\'s no longer borrowed …",7,[[],["document",3]]],[0,"schema","pliantdb_core","Types for defining database schema.",null,null],[0,"collection","pliantdb_core::schema","Types for defining a <code>Collection</code>.",null,null],[3,"Id","pliantdb_core::schema::collection","A unique collection id. Choose collection names that …",null,null],[12,"0","","",8,null],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"id","","The <code>Id</code> of this collection.",9,[[],["id",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",9,[[["schema",3]]]],[0,"view","pliantdb_core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb_core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb_core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",10,null],[12,"key","","The key used to index the View.",10,null],[12,"value","","An associated value stored in the view.",10,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",11,null],[12,"key","","The key used to index the View.",11,null],[12,"value","","An associated value stored in the view.",11,null],[11,"new","","Creates a new Map entry for the document with id <code>source</code>.",10,[[]]],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",12,null],[12,"key","","The key used to index the View.",12,null],[12,"value","","An associated value stored in the view.",12,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",13,null],[12,"value","","The value generated by the <code>View</code>",13,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",14,[[],[["result",6],["cow",4]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",14,[[],["result",6]]],[4,"Error","pliantdb_core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",15,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",15,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",15,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",16,null],[16,"Key","","The key for this view.",16,null],[16,"Value","","An associated type that can be stored with each entry in …",16,null],[10,"version","","The version of the view. Changing this value will cause …",16,[[]]],[10,"name","","The name of the view. Must be unique per collection.",16,[[],["cow",4]]],[10,"map","","The map function for this view. This function is …",16,[[["document",3]],["mapresult",6]]],[11,"reduce","","The reduce function for this view. If …",16,[[],[["result",4],["error",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",17,null],[13,"Borrowed","","a borrowed value",17,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing <code><View::Collection as Collection>::id()</code>",18,[[],["id",3]]],[10,"version","","Wraps [<code>View::version</code>]",18,[[]]],[10,"name","","Wraps [<code>View::name</code>]",18,[[],["cow",4]]],[10,"map","","Wraps [<code>View::map</code>]",18,[[["document",3]],[["result",4],["option",4],["error",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",18,[[],[["vec",3],["error",4],["result",4]]]],[8,"Database","pliantdb_core::schema","Defines a group of collections that are stored into a …",null,null],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>",19,[[["schema",3]]]],[3,"Schema","","A collection of defined collections and views.",null,null],[0,"transaction","pliantdb_core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb_core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",20,null],[11,"push","","Adds an operation to the transaction.",20,[[["operation",3]]]],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",21,null],[12,"command","","The command being performed.",21,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",22,null],[12,"contents","pliantdb_core::transaction::Command","The initial contents of the document.",23,null],[13,"Update","pliantdb_core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",22,null],[12,"header","pliantdb_core::transaction::Command","The current header of the <code>Document</code>.",24,null],[12,"contents","","The new contents to store within the <code>Document</code>.",24,null],[13,"Delete","pliantdb_core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",22,null],[12,"header","pliantdb_core::transaction::Command","The current header of the <code>Document</code>.",25,null],[4,"OperationResult","pliantdb_core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",26,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",26,null],[12,"collection","pliantdb_core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",27,null],[12,"header","","The header of the updated <code>Document</code>.",27,null],[13,"DocumentDeleted","pliantdb_core::transaction","A <code>Document</code> was deleted.",26,null],[12,"collection","pliantdb_core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",28,null],[12,"id","","The id of the deleted <code>Document</code>.",28,null],[3,"Executed","pliantdb_core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",29,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",29,null],[11,"to_owned","","Convert this structure to be free of borrows.",29,[[],["executed",3]]],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",30,null],[12,"id","","The id of the changed <code>Document</code>.",30,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",30,null],[0,"test_util","pliantdb_core","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb_core::test_util","",null,null],[12,"value","","",31,null],[12,"category","","",31,null],[12,"parent_id","","",31,null],[11,"new","","",31,[[]]],[11,"with_category","","",31,[[]]],[11,"with_parent_id","","",31,[[]]],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicDatabase","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",32,null],[11,"new","","",32,[[["asref",8],["path",3]]]],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[4,"Error","pliantdb_core","an enumeration of errors that this crate can produce",null,null],[13,"Storage","","An error from serializing or deserializing from a <code>Document</code>…",33,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",33,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",33,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",33,null],[11,"from","pliantdb_core::connection","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","pliantdb_core::document","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","pliantdb_core::schema::collection","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","pliantdb_core::schema","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","pliantdb_core::schema::view::map","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","pliantdb_core::schema::view","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","pliantdb_core::transaction","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","pliantdb_core::test_util","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"collection","","",35,[[],["id",3]]],[11,"version","","",35,[[]]],[11,"name","","",35,[[],["cow",4]]],[11,"map","","",35,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",35,[[],[["vec",3],["error",4],["result",4]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"collection","","",36,[[],["id",3]]],[11,"version","","",36,[[]]],[11,"name","","",36,[[],["cow",4]]],[11,"map","","",36,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",36,[[],[["vec",3],["error",4],["result",4]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"collection","","",37,[[],["id",3]]],[11,"version","","",37,[[]]],[11,"name","","",37,[[],["cow",4]]],[11,"map","","",37,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",37,[[],[["vec",3],["error",4],["result",4]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"collection","","",38,[[],["id",3]]],[11,"version","","",38,[[]]],[11,"name","","",38,[[],["cow",4]]],[11,"map","","",38,[[["document",3]],[["error",4],["result",4],["option",4]]]],[11,"reduce","","",38,[[],[["vec",3],["error",4],["result",4]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","pliantdb_core","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"id","pliantdb_core::test_util","",31,[[],["id",3]]],[11,"define_views","","",31,[[["schema",3]]]],[11,"id","","",40,[[],["id",3]]],[11,"define_views","","",40,[[["schema",3]]]],[11,"id","","",41,[[],["id",3]]],[11,"define_views","","",41,[[["schema",3]]]],[11,"id","","",42,[[],["id",3]]],[11,"define_views","","",42,[[["schema",3]]]],[11,"define_collections","","",39,[[["schema",3]]]],[11,"version","","",35,[[]]],[11,"name","","",35,[[],["cow",4]]],[11,"map","","",35,[[["document",3]],["mapresult",6]]],[11,"reduce","","",35,[[],[["error",4],["result",4]]]],[11,"version","","",36,[[]]],[11,"name","","",36,[[],["cow",4]]],[11,"map","","",36,[[["document",3]],["mapresult",6]]],[11,"reduce","","",36,[[],[["error",4],["result",4]]]],[11,"version","","",37,[[]]],[11,"name","","",37,[[],["cow",4]]],[11,"map","","",37,[[["document",3]],["mapresult",6]]],[11,"reduce","","",37,[[],[["error",4],["result",4]]]],[11,"version","","",38,[[]]],[11,"name","","",38,[[],["cow",4]]],[11,"map","","",38,[[["document",3]],["mapresult",6]]],[11,"drop","","",32,[[]]],[11,"as_ref","pliantdb_core::schema::view","",17,[[]]],[11,"as_ref","pliantdb_core::test_util","",32,[[],["path",3]]],[11,"from","pliantdb_core::schema::collection","",8,[[]]],[11,"from","","",8,[[["string",3]]]],[11,"from","pliantdb_core::schema::view","",15,[[["error",3]]]],[11,"from","","",17,[[],["serializablevalue",4]]],[11,"from","pliantdb_core","",33,[[["error",3]]]],[11,"clone","pliantdb_core::document","",5,[[],["revision",3]]],[11,"clone","","",6,[[],["header",3]]],[11,"clone","pliantdb_core::schema::collection","",8,[[],["id",3]]],[11,"clone","pliantdb_core::schema::view::map","",12,[[],["serialized",3]]],[11,"clone","pliantdb_core::transaction","",30,[[],["changeddocument",3]]],[11,"default","pliantdb_core::schema","",34,[[],["schema",3]]],[11,"default","pliantdb_core::transaction","",20,[[],["transaction",3]]],[11,"default","pliantdb_core::test_util","",31,[[],["basic",3]]],[11,"eq","pliantdb_core::document","",5,[[["revision",3]]]],[11,"ne","","",5,[[["revision",3]]]],[11,"eq","","",6,[[["header",3]]]],[11,"ne","","",6,[[["header",3]]]],[11,"eq","pliantdb_core::schema::collection","",8,[[["id",3]]]],[11,"ne","","",8,[[["id",3]]]],[11,"eq","pliantdb_core::schema::view::map","",10,[[["map",3]]]],[11,"ne","","",10,[[["map",3]]]],[11,"eq","","",13,[[["mappedvalue",3]]]],[11,"ne","","",13,[[["mappedvalue",3]]]],[11,"eq","pliantdb_core::test_util","",31,[[["basic",3]]]],[11,"ne","","",31,[[["basic",3]]]],[11,"fmt","pliantdb_core::document","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::collection","",8,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema","",34,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::view::map","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::view","",15,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::transaction","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core","",33,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::test_util","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::collection","",8,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core::schema::view","",15,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_core","",33,[[["formatter",3]],["result",6]]],[11,"hash","pliantdb_core::schema::collection","",8,[[]]],[11,"source","pliantdb_core::schema::view","",15,[[],[["option",4],["error",8]]]],[11,"serialize","pliantdb_core::document","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","pliantdb_core::schema::collection","",8,[[],["result",4]]],[11,"serialize","pliantdb_core::schema::view::map","",12,[[],["result",4]]],[11,"serialize","pliantdb_core::transaction","",22,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","pliantdb_core::test_util","",31,[[],["result",4]]],[11,"deserialize","pliantdb_core::document","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","pliantdb_core::schema::collection","",8,[[],["result",4]]],[11,"deserialize","pliantdb_core::schema::view::map","",12,[[],["result",4]]],[11,"deserialize","pliantdb_core::transaction","",22,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","pliantdb_core::test_util","",31,[[],["result",4]]],[11,"new","pliantdb_core::document","Creates the first revision for a document with the SHA256 …",5,[[]]],[11,"with_id","","Creates a revision with <code>id</code> for a document with the SHA256 …",5,[[]]],[11,"next_revision","","Creates the next revision in sequence with an updated …",5,[[],["option",4]]],[11,"define_collection","pliantdb_core::schema","Adds the collection <code>C</code> and its views.",34,[[]]],[11,"define_view","","Adds the view <code>V</code>.",34,[[["view",8]]]],[11,"contains","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",34,[[]]],[11,"view_by_name","","Looks up a [<code>view::Serialized</code>] by name.",34,[[],[["serialized",8],["option",4]]]],[11,"view","","Looks up a [<code>view::Serialized</code>] through the the type <code>V</code>.",34,[[],[["serialized",8],["option",4]]]],[11,"views","","Iterates over all registered views.",34,[[]]],[11,"views_in_collection","","Iterates over all views that belong to <code>collection</code>.",34,[[["id",3]],[["vec",3],["option",4]]]]],"p":[[8,"Connection"],[3,"Collection"],[3,"View"],[4,"QueryKey"],[4,"AccessPolicy"],[3,"Revision"],[3,"Header"],[3,"Document"],[3,"Id"],[8,"Collection"],[3,"Map"],[3,"MappedDocument"],[3,"Serialized"],[3,"MappedValue"],[8,"Key"],[4,"Error"],[8,"View"],[4,"SerializableValue"],[8,"Serialized"],[8,"Database"],[3,"Transaction"],[3,"Operation"],[4,"Command"],[13,"Insert"],[13,"Update"],[13,"Delete"],[4,"OperationResult"],[13,"DocumentUpdated"],[13,"DocumentDeleted"],[3,"Executed"],[3,"ChangedDocument"],[3,"Basic"],[3,"TestDirectory"],[4,"Error"],[3,"Schema"],[3,"BasicCount"],[3,"BasicByParentId"],[3,"BasicByCategory"],[3,"BasicByBrokenParentId"],[3,"BasicDatabase"],[3,"BasicCollectionWithNoViews"],[3,"BasicCollectionWithOnlyBrokenParentId"],[3,"UnassociatedCollection"]]},\
"pliantdb_dump":{"doc":"Local database tool to dump and load databases into plain …","i":[[0,"config","pliantdb_dump","",null,null],[3,"Configuration","pliantdb_dump::config","Configuration options for <code>Storage</code>.",null,null],[12,"workers","","Configuration options related to background tasks.",0,null],[12,"views","","Configuration options related to views.",0,null],[3,"Tasks","","Configujration options for background tasks.",null,null],[12,"worker_count","","Defines how many workers should be spawned to process …",1,null],[3,"Views","","Configuration options for views.",null,null],[12,"check_integrity_on_open","","If true, the database will scan all views during the call …",2,null],[0,"error","pliantdb_dump","",null,null],[4,"Error","pliantdb_dump::error","Errors that can occur from interacting with storage.",null,null],[13,"Sled","","An error occurred interacting with <code>sled</code>.",3,null],[13,"InternalSerialization","","An error occurred serializing the underlying database …",3,null],[13,"Serialization","","An error occurred serializing the contents of a <code>Document</code> …",3,null],[13,"InternalCommunication","","An internal error occurred while waiting for a message.",3,null],[13,"View","","An internal error occurred while waiting for a message.",3,null],[13,"Other","","An internal error occurred while waiting for a message.",3,null],[8,"ResultExt","","",null,null],[16,"Output","","",4,null],[10,"map_err_to_core","","",4,[[],[["error",4],["result",4]]]],[0,"open_trees","pliantdb_dump","",null,null],[3,"OpenTrees","pliantdb_dump::open_trees","",null,null],[12,"trees","","",5,null],[12,"trees_index_by_name","","",5,null],[11,"open_tree","","",5,[[["db",3]],[["result",4],["error",4]]]],[11,"open_trees_for_document_change","","",5,[[["db",3],["id",3],["schema",3]],[["result",4],["error",4]]]],[0,"storage","pliantdb_dump","",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","pliantdb_dump::storage","The maximum number of results allowed to be returned from …",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[3,"Storage","","A local, file-based database.",null,null],[12,"sled","","",6,null],[12,"schema","","",6,null],[12,"tasks","","",6,null],[12,"_schema","","",6,null],[11,"open_local","","Opens a local file as a pliantdb.",6,[[["configuration",3],["asref",8],["send",8],["path",3]]]],[11,"last_transaction_id","","Fetches the last transaction id that has been committed, …",6,[[]]],[11,"for_each_view_entry","","",6,[[["querykey",4],["accesspolicy",4],["fnmut",8],["send",8],["sync",8],["option",4]]]],[6,"ViewIterator","","",null,null],[5,"create_view_iterator","","",null,[[["option",4],["tree",3],["querykey",4]],[["result",4],["box",3],["error",4]]]],[5,"execute_operation","","",null,[[["operation",3],["hashmap",3]],[["result",4],["operationresult",4],["conflictabletransactionerror",4]]]],[5,"save_doc","","",null,[[["transactionaltree",3],["document",3]],[["conflictabletransactionerror",4],["result",4]]]],[17,"TRANSACTION_TREE_NAME","","",null,null],[5,"document_tree_name","","",null,[[["id",3]],["string",3]]],[0,"tasks","pliantdb_dump","",null,null],[3,"TaskManager","pliantdb_dump::tasks","",null,null],[12,"jobs","","",7,null],[12,"statuses","","",7,null],[3,"Statuses","","",null,null],[12,"completed_integrity_checks","","",8,null],[12,"view_update_last_status","","",8,null],[11,"new","","",7,[[["manager",3],["task",4]]]],[11,"update_view_if_needed","","",7,[[["serialized",8],["storage",3]]]],[11,"view_integrity_checked","","",7,[[["id",3],["cow",4]]]],[11,"spawn_integrity_check","","",7,[[["serialized",8],["storage",3]]]],[11,"mark_integrity_check_complete","","",7,[[["id",3],["cow",4]]]],[11,"mark_view_updated","","",7,[[["id",3],["cow",4]]]],[0,"views","pliantdb_dump","",null,null],[0,"integrity_scanner","pliantdb_dump::views","",null,null],[3,"IntegrityScanner","pliantdb_dump::views::integrity_scanner","",null,null],[12,"storage","","",9,null],[12,"scan","","",9,null],[3,"IntegrityScan","","",null,null],[12,"view_version","","",10,null],[12,"collection","","",10,null],[12,"view_name","","",10,null],[5,"tree_keys","","",null,[[["tree",3]],[["error",3],["result",4],["hashset",3]]]],[0,"mapper","pliantdb_dump::views","",null,null],[3,"Mapper","pliantdb_dump::views::mapper","",null,null],[12,"storage","","",11,null],[12,"map","","",11,null],[3,"Map","","",null,null],[12,"collection","","",12,null],[12,"view_name","","",12,null],[5,"map_view","","",null,[[["tree",3],["map",3],["storage",3]],["result",6]]],[3,"DocumentRequest","","",null,null],[12,"document_id","","",13,null],[12,"map_request","","",13,null],[12,"invalidated_entries","","",13,null],[12,"document_map","","",13,null],[12,"documents","","",13,null],[12,"omitted_entries","","",13,null],[12,"view_entries","","",13,null],[12,"storage","","",13,null],[11,"map","","",13,[[],[["conflictabletransactionerror",4],["result",4]]]],[8,"ToTransactionResult","","",null,null],[10,"map_to_transaction_error","","",14,[[],[["result",4],["conflictabletransactionerror",4]]]],[5,"remove_existing_view_entries_for_keys","","",null,[[["transactionaltree",3],["serialized",8]],[["conflictabletransactionerror",4],["result",4]]]],[3,"ViewEntry","pliantdb_dump::views","",null,null],[12,"view_version","","",15,null],[12,"mappings","","",15,null],[12,"reduced_value","","",15,null],[3,"EntryMapping","","",null,null],[12,"source","","",16,null],[12,"value","","",16,null],[5,"view_entries_tree_name","","",null,[[["id",3]],["string",3]]],[5,"view_document_map_tree_name","","Used to store Document ID -> Key mappings, so that when a …",null,[[["id",3]],["string",3]]],[5,"view_invalidated_docs_tree_name","","",null,[[["id",3]],["string",3]]],[5,"view_omitted_docs_tree_name","","",null,[[["id",3]],["string",3]]],[5,"view_versions","","",null,[[["id",3]],["string",3]]],[4,"Task","","",null,null],[13,"IntegrityScan","","",17,null],[13,"ViewMap","","",17,null],[4,"Error","pliantdb_dump","Errors that can occur from interacting with storage.",null,null],[13,"Sled","","An error occurred interacting with <code>sled</code>.",3,null],[13,"InternalSerialization","","An error occurred serializing the underlying database …",3,null],[13,"Serialization","","An error occurred serializing the contents of a <code>Document</code> …",3,null],[13,"InternalCommunication","","An internal error occurred while waiting for a message.",3,null],[13,"View","","An internal error occurred while waiting for a message.",3,null],[13,"Other","","An internal error occurred while waiting for a message.",3,null],[3,"Cli","","The command line interface for <code>pliantdb-dump</code>.",null,null],[12,"database_path","","The path to the database you wish to operate on.",18,null],[12,"command","","The command to execute on the database.",18,null],[4,"Command","","The command to execute.",null,null],[13,"Dump","","Dumps all of the data into a straightforward file …",19,null],[12,"output_directory","pliantdb_dump::Command","The directory to export the data within. The process will …",20,null],[12,"output_name","","The name of the folder to export the data to. If not …",20,null],[13,"Load","pliantdb_dump","Loads all of the data from a previously dumped database. …",19,null],[12,"dumped_database","pliantdb_dump::Command","The path to the previously dumped database.",21,null],[5,"main","pliantdb_dump","",null,[[],["result",6]]],[11,"execute","","",19,[[["pathbuf",3]]]],[11,"dump","","",19,[[["option",4],["option",4],["pathbuf",3]]]],[11,"load","","",19,[[["path",3]]]],[5,"write_documents","","",null,[[["pathbuf",3],["receiver",3],["document",3]]]],[5,"restore_documents","","",null,[[["storage",3],["receiver",3],["document",3]],["result",6]]],[11,"from","pliantdb_dump::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","pliantdb_dump::error","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","pliantdb_dump::open_trees","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","pliantdb_dump::storage","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","pliantdb_dump::tasks","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","pliantdb_dump::views::integrity_scanner","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","pliantdb_dump::views::mapper","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","pliantdb_dump::views","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","pliantdb_dump","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","pliantdb_dump::error","",3,[[["error",4]]]],[11,"from","","",3,[[["error",6]]]],[11,"from","","",3,[[["error",3]]]],[11,"from","","",3,[[["recverror",4]]]],[11,"from","","",3,[[["error",4]]]],[11,"from","","",3,[[["error",3]]]],[11,"clone","pliantdb_dump::storage","",6,[[]]],[11,"clone","pliantdb_dump::tasks","",7,[[],["taskmanager",3]]],[11,"clone","pliantdb_dump::views::integrity_scanner","",10,[[],["integrityscan",3]]],[11,"clone","pliantdb_dump::views::mapper","",12,[[],["map",3]]],[11,"clone","pliantdb_dump::views","",17,[[],["task",4]]],[11,"default","pliantdb_dump::config","",0,[[],["configuration",3]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","pliantdb_dump::open_trees","",5,[[],["opentrees",3]]],[11,"default","pliantdb_dump::tasks","",8,[[],["statuses",3]]],[11,"eq","pliantdb_dump::views::integrity_scanner","",10,[[["integrityscan",3]]]],[11,"ne","","",10,[[["integrityscan",3]]]],[11,"eq","pliantdb_dump::views::mapper","",12,[[["map",3]]]],[11,"ne","","",12,[[["map",3]]]],[11,"eq","pliantdb_dump::views","",17,[[["task",4]]]],[11,"ne","","",17,[[["task",4]]]],[11,"fmt","pliantdb_dump::config","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_dump::error","",3,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_dump::storage","",6,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_dump::tasks","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_dump::views::integrity_scanner","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_dump::views::mapper","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_dump::views","",17,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_dump","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_dump::error","",3,[[["formatter",3]],["result",6]]],[11,"hash","pliantdb_dump::views::integrity_scanner","",10,[[]]],[11,"hash","pliantdb_dump::views::mapper","",12,[[]]],[11,"hash","pliantdb_dump::views","",17,[[]]],[11,"source","pliantdb_dump::error","",3,[[],[["option",4],["error",8]]]],[11,"collection","pliantdb_dump::storage","",6,[[],[["result",4],["error",4],["collection",3]]]],[11,"apply_transaction","","",6,[[["transaction",3]],[["box",3],["pin",3]]]],[11,"get","","",6,[[],[["box",3],["pin",3]]]],[11,"get_multiple","","",6,[[],[["pin",3],["box",3]]]],[11,"list_executed_transactions","","",6,[[["option",4],["option",4]],[["pin",3],["box",3]]]],[11,"query","","",6,[[["view",3],["view",8]],[["pin",3],["box",3]]]],[11,"query_with_docs","","",6,[[["view",3],["view",8]],[["box",3],["pin",3]]]],[11,"reduce","","",6,[[["view",3],["view",8]],[["box",3],["pin",3]]]],[11,"serialize","pliantdb_dump::views","",15,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"clap","pliantdb_dump","",18,[[],["app",3]]],[11,"from_clap","","",18,[[["argmatches",3]]]],[11,"clap","","",19,[[],["app",3]]],[11,"from_clap","","",19,[[["argmatches",3]]]],[11,"augment_clap","","",18,[[["app",3]],["app",3]]],[11,"is_subcommand","","",18,[[]]],[11,"augment_clap","","",19,[[["app",3]],["app",3]]],[11,"from_subcommand","","",19,[[],["option",4]]],[11,"is_subcommand","","",19,[[]]],[11,"execute","pliantdb_dump::views::integrity_scanner","",9,[[],[["box",3],["pin",3]]]],[11,"execute","pliantdb_dump::views::mapper","",11,[[],[["box",3],["pin",3]]]],[11,"key","pliantdb_dump::views::integrity_scanner","",9,[[],["task",4]]],[11,"key","pliantdb_dump::views::mapper","",11,[[],["task",4]]]],"p":[[3,"Configuration"],[3,"Tasks"],[3,"Views"],[4,"Error"],[8,"ResultExt"],[3,"OpenTrees"],[3,"Storage"],[3,"TaskManager"],[3,"Statuses"],[3,"IntegrityScanner"],[3,"IntegrityScan"],[3,"Mapper"],[3,"Map"],[3,"DocumentRequest"],[8,"ToTransactionResult"],[3,"ViewEntry"],[3,"EntryMapping"],[4,"Task"],[3,"Cli"],[4,"Command"],[13,"Dump"],[13,"Load"]]},\
"pliantdb_jobs":{"doc":"Aysnc jobs management for <code>PliantDB</code>.","i":[[0,"manager","pliantdb_jobs","Types related to the job <code>Manager</code>.",null,null],[3,"Manager","pliantdb_jobs::manager","A background jobs manager.",null,null],[11,"enqueue","","Pushes a <code>job</code> into the queue. Pushing the same job …",0,[[["job",8]]]],[11,"lookup_or_enqueue","","Uses [<code>Keyed::key</code>] to ensure no other job with the same <code>key</code>…",0,[[["keyed",8]]]],[11,"spawn_worker","","Spawns a worker. In general, you shouldn\'t need to call …",0,[[]]],[0,"task","pliantdb_jobs","Types related to defining [<code>Job</code>]s.",null,null],[3,"Id","pliantdb_jobs::task","he <code>Id</code> of an executing task.",null,null],[3,"Handle","","References a background task.",null,null],[12,"id","","The task\'s id.",1,null],[11,"clone","","Returns a copy of this handle. When the job is completed, …",1,[[]]],[11,"receive","","Waits for the job to complete and returns the result.",1,[[]]],[11,"try_receive","","Tries to receive the status of the job. If available, it …",1,[[],[["result",4],["arc",3],["tryrecverror",4]]]],[8,"Job","pliantdb_jobs","Defines a background job that can be queued and executed.",null,null],[16,"Output","","The output type of the job.",2,null],[10,"execute","","Executes the job and returns the result.",2,[[],[["pin",3],["box",3]]]],[8,"Keyed","","Defines a background job that has a unique <code>key</code>.",null,null],[10,"key","","The unique <code>key</code> for this <code>Job</code>",3,[[]]],[11,"from","pliantdb_jobs::manager","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","pliantdb_jobs::task","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","pliantdb_jobs::manager","",0,[[]]],[11,"clone","pliantdb_jobs::task","",4,[[],["id",3]]],[11,"default","pliantdb_jobs::manager","",0,[[]]],[11,"eq","pliantdb_jobs::task","",4,[[["id",3]]]],[11,"ne","","",4,[[["id",3]]]],[11,"fmt","pliantdb_jobs::manager","",0,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_jobs::task","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"hash","","",4,[[]]]],"p":[[3,"Manager"],[3,"Handle"],[8,"Job"],[8,"Keyed"],[3,"Id"]]},\
"pliantdb_local":{"doc":"Local storage backend for <code>PliantDB</code>.","i":[[0,"connection","pliantdb_local::core","Types for interacting with a database.",null,null],[8,"Connection","pliantdb_local::core::connection","Defines all interactions with a [<code>schema::Database</code>], …",null,null],[10,"collection","","Accesses a collection for the connected [<code>schema::Database</code>]…",0,[[],[["result",4],["collection",3],["error",4]]]],[11,"insert","","Inserts a newly created document into the connected […",0,[[["vec",3],["global",3]],[["box",3],["pin",3]]]],[11,"update","","Updates an existing document in the connected […",0,[[["document",3]],[["box",3],["pin",3]]]],[10,"get","","Retrieves a stored document from [<code>Collection</code>] <code>C</code> …",0,[[],[["box",3],["pin",3]]]],[10,"get_multiple","","Retrieves all documents matching <code>ids</code>. Documents that are …",0,[[],[["box",3],["pin",3]]]],[11,"delete","","Removes a <code>Document</code> from the database.",0,[[["document",3]],[["box",3],["pin",3]]]],[11,"view","","Initializes [<code>View</code>] for [<code>schema::View</code>] <code>V</code>.",0,[[],["view",3]]],[10,"query","","Queries for view entries matching [<code>View</code>].",0,[[["view",3]],[["pin",3],["box",3]]]],[10,"query_with_docs","","Queries for view entries matching [<code>View</code>].",0,[[["view",3]],[["box",3],["pin",3]]]],[10,"reduce","","Reduces the view entries matching [<code>View</code>].",0,[[["view",3]],[["pin",3],["box",3]]]],[10,"apply_transaction","","Applies a [<code>Transaction</code>] to the [<code>schema::Database</code>]. If any …",0,[[["transaction",3]],[["box",3],["pin",3]]]],[10,"list_executed_transactions","","Lists executed [<code>Transaction</code>]s from this [<code>schema::Database</code>]…",0,[[["option",4],["option",4]],[["pin",3],["box",3]]]],[3,"Collection","","Interacts with a collection over a <code>Connection</code>.",null,null],[3,"View","","Parameters to query a <code>schema::View</code>.",null,null],[12,"key","","Key filtering criteria.",1,null],[12,"access_policy","","The view\'s data access policy. The default value is […",1,null],[4,"QueryKey","","Filters a [<code>View</code>] by key.",null,null],[13,"Matches","","Matches all entries with the key provided.",2,null],[13,"Range","","Matches all entires with keys in the range provided.",2,null],[13,"Multiple","","Matches all entries that have keys that are included in …",2,null],[4,"AccessPolicy","","Changes how the view\'s outdated data will be treated.",null,null],[13,"UpdateBefore","","Update any changed documents before returning a response.",3,null],[13,"UpdateAfter","","Return the results, which may be out-of-date, and start …",3,null],[13,"NoUpdate","","Returns the restuls, which may be out-of-date, and do not …",3,null],[0,"document","pliantdb_local::core","Types for interacting with <code>Document</code>s.",null,null],[3,"Header","pliantdb_local::core::document","The header of a <code>Document</code>.",null,null],[12,"id","","The id of the Document. Unique across the collection <code>C</code>",4,null],[12,"revision","","The revision of the stored document.",4,null],[3,"Document","","Contains a serialized document in the database.",null,null],[12,"collection","","The <code>Id</code> of the <code>Collection</code> this document belongs to.",5,null],[12,"header","","The header of the document, which contains the id and …",5,null],[12,"contents","","The serialized bytes of the stored item.",5,null],[3,"Revision","","Information about a <code>Document</code>\'s revision history.",null,null],[12,"id","","The current revision id of the document. This value is …",6,null],[12,"sha256","","The SHA256 digest of the bytes contained within the …",6,null],[0,"schema","pliantdb_local::core","Types for defining database schema.",null,null],[0,"collection","pliantdb_local::core::schema","Types for defining a <code>Collection</code>.",null,null],[3,"Id","pliantdb_local::core::schema::collection","A unique collection id. Choose collection names that …",null,null],[12,"0","","",7,null],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"id","","The <code>Id</code> of this collection.",8,[[],["id",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",8,[[["schema",3]]]],[0,"view","pliantdb_local::core::schema","Types for defining map/reduce-powered <code>View</code>s.",null,null],[0,"map","pliantdb_local::core::schema::view","Types for defining a <code>Map</code> within a <code>View</code>.",null,null],[3,"Map","pliantdb_local::core::schema::view::map","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",9,null],[12,"key","","The key used to index the View.",9,null],[12,"value","","An associated value stored in the view.",9,null],[3,"MappedDocument","","A document\'s entry in a View\'s mappings.",null,null],[12,"document","","The id of the document that emitted this entry.",10,null],[12,"key","","The key used to index the View.",10,null],[12,"value","","An associated value stored in the view.",10,null],[3,"Serialized","","Represents a document\'s entry in a View\'s mappings, …",null,null],[12,"source","","The id of the document that emitted this entry.",11,null],[12,"key","","The key used to index the View.",11,null],[12,"value","","An associated value stored in the view.",11,null],[3,"MappedValue","","A key value pair",null,null],[12,"key","","The key responsible for generating the value",12,null],[12,"value","","The value generated by the <code>View</code>",12,null],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",13,[[],[["result",4],["cow",4],["error",3]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",13,[[],[["result",4],["error",3]]]],[4,"Error","pliantdb_local::core::schema::view","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",14,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",14,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",14,null],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",15,null],[16,"Key","","The key for this view.",15,null],[16,"Value","","An associated type that can be stored with each entry in …",15,null],[10,"version","","The version of the view. Changing this value will cause …",15,[[]]],[10,"name","","The name of the view. Must be unique per collection.",15,[[],["cow",4]]],[10,"map","","The map function for this view. This function is …",15,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",15,[[],[["error",4],["result",4]]]],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",16,null],[13,"Borrowed","","a borrowed value",16,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing <code><View::Collection as Collection>::id()</code>",17,[[],["id",3]]],[10,"version","","Wraps [<code>View::version</code>]",17,[[]]],[10,"name","","Wraps [<code>View::name</code>]",17,[[],["cow",4]]],[10,"map","","Wraps [<code>View::map</code>]",17,[[["document",3]],[["option",4],["error",4],["result",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",17,[[],[["vec",3],["error",4],["result",4]]]],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",13,[[],[["result",4],["cow",4],["error",3]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",13,[[],[["result",4],["error",3]]]],[3,"Map","","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",9,null],[12,"key","","The key used to index the View.",9,null],[12,"value","","An associated value stored in the view.",9,null],[3,"Map","pliantdb_local::core::schema","A document\'s entry in a View\'s mappings.",null,null],[12,"source","","The id of the document that emitted this entry.",9,null],[12,"key","","The key used to index the View.",9,null],[12,"value","","An associated value stored in the view.",9,null],[3,"Schema","","A collection of defined collections and views.",null,null],[8,"Serialized","","Wraps a [<code>View</code>] with serialization to erase the associated …",null,null],[10,"collection","","Wraps returing <code><View::Collection as Collection>::id()</code>",17,[[],["id",3]]],[10,"version","","Wraps [<code>View::version</code>]",17,[[]]],[10,"name","","Wraps [<code>View::name</code>]",17,[[],["cow",4]]],[10,"map","","Wraps [<code>View::map</code>]",17,[[["document",3]],[["option",4],["error",4],["result",4]]]],[10,"reduce","","Wraps [<code>View::reduce</code>]",17,[[],[["vec",3],["error",4],["result",4]]]],[8,"View","","A map/reduce powered indexing and aggregation schema.",null,null],[16,"Collection","","The collection this view belongs to",15,null],[16,"Key","","The key for this view.",15,null],[16,"Value","","An associated type that can be stored with each entry in …",15,null],[10,"version","","The version of the view. Changing this value will cause …",15,[[]]],[10,"name","","The name of the view. Must be unique per collection.",15,[[],["cow",4]]],[10,"map","","The map function for this view. This function is …",15,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","The reduce function for this view. If …",15,[[],[["error",4],["result",4]]]],[8,"Collection","","A namespaced collection of <code>Document<Self></code> items and views.",null,null],[10,"id","","The <code>Id</code> of this collection.",8,[[],["id",3]]],[10,"define_views","","Defines all <code>View</code>s in this collection in <code>schema</code>.",8,[[["schema",3]]]],[8,"Database","","Defines a group of collections that are stored into a …",null,null],[10,"define_collections","","Defines the <code>Collection</code>s into <code>schema</code>",18,[[["schema",3]]]],[8,"Key","","A trait that enables a type to convert itself to a …",null,null],[10,"as_big_endian_bytes","","Convert <code>self</code> into an <code>IVec</code> containing bytes ordered in …",13,[[],[["result",4],["cow",4],["error",3]]]],[10,"from_big_endian_bytes","","Convert a slice of bytes into <code>Self</code> by interpretting <code>bytes</code> …",13,[[],[["result",4],["error",3]]]],[6,"MapResult","","A type alias for the result of <code>View::map()</code>.",null,null],[4,"SerializableValue","","Represents either an owned value or a borrowed value. …",null,null],[13,"Owned","","an owned value",16,null],[13,"Borrowed","","a borrowed value",16,null],[3,"Id","","A unique collection id. Choose collection names that …",null,null],[12,"0","","",7,null],[4,"Error","","Errors that arise when interacting with views.",null,null],[13,"Serialization","","An error occurred while serializing or deserializing.",14,null],[13,"KeySerialization","","An error occurred while serializing or deserializing keys …",14,null],[13,"ReduceUnimplemented","","Returned when the reduce() function is unimplemented.",14,null],[0,"transaction","pliantdb_local::core","Types for executing transactions.",null,null],[3,"Transaction","pliantdb_local::core::transaction","A list of operations to execute as a single unit. If any …",null,null],[12,"operations","","The operations in this transaction.",19,null],[3,"Operation","","A single operation performed on a <code>Collection</code>.",null,null],[12,"collection","","The id of the <code>Collection</code>.",20,null],[12,"command","","The command being performed.",20,null],[4,"Command","","A command to execute within a <code>Collection</code>.",null,null],[13,"Insert","","Inserts a new document containing <code>contents</code>.",21,null],[12,"contents","pliantdb_local::core::transaction::Command","The initial contents of the document.",22,null],[13,"Update","pliantdb_local::core::transaction","Update an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",21,null],[12,"header","pliantdb_local::core::transaction::Command","The current header of the <code>Document</code>.",23,null],[12,"contents","","The new contents to store within the <code>Document</code>.",23,null],[13,"Delete","pliantdb_local::core::transaction","Delete an existing <code>Document</code> identified by <code>id</code>. <code>revision</code> …",21,null],[12,"header","pliantdb_local::core::transaction::Command","The current header of the <code>Document</code>.",24,null],[4,"OperationResult","pliantdb_local::core::transaction","Information about the result of each <code>Operation</code> in a …",null,null],[13,"Success","","An operation succeeded but had no information to output.",25,null],[13,"DocumentUpdated","","A <code>Document</code> was updated.",25,null],[12,"collection","pliantdb_local::core::transaction::OperationResult","The id of the <code>Collection</code> of the updated <code>Document</code>.",26,null],[12,"header","","The header of the updated <code>Document</code>.",26,null],[13,"DocumentDeleted","pliantdb_local::core::transaction","A <code>Document</code> was deleted.",25,null],[12,"collection","pliantdb_local::core::transaction::OperationResult","The id of the <code>Collection</code> of the deleted <code>Document</code>.",27,null],[12,"id","","The id of the deleted <code>Document</code>.",27,null],[3,"Executed","pliantdb_local::core::transaction","Details about an executed transaction.",null,null],[12,"id","","The id of the transaction.",28,null],[12,"changed_documents","","A list of containing ids of <code>Documents</code> changed.",28,null],[3,"ChangedDocument","","A record of a changed.",null,null],[12,"collection","","The id of the <code>Collection</code> of the changed <code>Document</code>.",29,null],[12,"id","","The id of the changed <code>Document</code>.",29,null],[12,"deleted","","If the <code>Document</code> has been deleted, this will be <code>true</code>.",29,null],[4,"Error","pliantdb_local::core","an enumeration of errors that this crate can produce",null,null],[13,"Storage","","An error from serializing or deserializing from a <code>Document</code>…",30,null],[13,"CollectionNotFound","","An attempt to use a <code>Collection</code> with a <code>Database</code> that it …",30,null],[13,"DocumentNotFound","","An attempt to update a document that doesn\'t exist.",30,null],[13,"DocumentConflict","","When updating a document, if a situation is detected …",30,null],[0,"test_util","","Shared schemas and utilities used for unit testing.",null,null],[3,"Basic","pliantdb_local::core::test_util","",null,null],[12,"value","","",31,null],[12,"category","","",31,null],[12,"parent_id","","",31,null],[3,"BasicCount","","",null,null],[3,"BasicByParentId","","",null,null],[3,"BasicByCategory","","",null,null],[3,"BasicByBrokenParentId","","",null,null],[3,"BasicDatabase","","",null,null],[3,"TestDirectory","","",null,null],[12,"0","","",32,null],[3,"BasicCollectionWithNoViews","","",null,null],[3,"BasicCollectionWithOnlyBrokenParentId","","",null,null],[3,"UnassociatedCollection","","",null,null],[0,"config","pliantdb_local","Configuration options.",null,null],[3,"Configuration","pliantdb_local::config","Configuration options for <code>Storage</code>.",null,null],[12,"workers","","Configuration options related to background tasks.",33,null],[12,"views","","Configuration options related to views.",33,null],[3,"Tasks","","Configujration options for background tasks.",null,null],[12,"worker_count","","Defines how many workers should be spawned to process …",34,null],[3,"Views","","Configuration options for views.",null,null],[12,"check_integrity_on_open","","If true, the database will scan all views during the call …",35,null],[4,"Error","pliantdb_local","Errors that can occur from interacting with storage.",null,null],[13,"Sled","","An error occurred interacting with <code>sled</code>.",36,null],[13,"InternalSerialization","","An error occurred serializing the underlying database …",36,null],[13,"Serialization","","An error occurred serializing the contents of a <code>Document</code> …",36,null],[13,"InternalCommunication","","An internal error occurred while waiting for a message.",36,null],[13,"View","","An internal error occurred while waiting for a message.",36,null],[13,"Other","","An internal error occurred while waiting for a message.",36,null],[3,"Storage","","A local, file-based database.",null,null],[17,"LIST_TRANSACTIONS_DEFAULT_RESULT_COUNT","","If no <code>result_limit</code> is specified, this value is the limit …",null,null],[17,"LIST_TRANSACTIONS_MAX_RESULTS","","The maximum number of results allowed to be returned from …",null,null],[11,"from","pliantdb_local::core::connection","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","pliantdb_local::core::document","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","pliantdb_local::core::schema","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","pliantdb_local::core::schema::view::map","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","pliantdb_local::core::schema","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","pliantdb_local::core::transaction","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","pliantdb_local::core","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","pliantdb_local::core::test_util","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"define_collections","","",31,[[["schema",3]]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"collection","","",39,[[],["id",3]]],[11,"version","","",39,[[]]],[11,"name","","",39,[[],["cow",4]]],[11,"map","","",39,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",39,[[],[["vec",3],["error",4],["result",4]]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"collection","","",40,[[],["id",3]]],[11,"version","","",40,[[]]],[11,"name","","",40,[[],["cow",4]]],[11,"map","","",40,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",40,[[],[["vec",3],["error",4],["result",4]]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"collection","","",41,[[],["id",3]]],[11,"version","","",41,[[]]],[11,"name","","",41,[[],["cow",4]]],[11,"map","","",41,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",41,[[],[["vec",3],["error",4],["result",4]]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"collection","","",42,[[],["id",3]]],[11,"version","","",42,[[]]],[11,"name","","",42,[[],["cow",4]]],[11,"map","","",42,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",42,[[],[["vec",3],["error",4],["result",4]]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"define_collections","","",44,[[["schema",3]]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"define_collections","","",45,[[["schema",3]]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"define_collections","","",46,[[["schema",3]]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","pliantdb_local::config","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","pliantdb_local","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"fmt","pliantdb_local::core","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::schema","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",14,[[["formatter",3]],[["result",4],["error",3]]]],[11,"define_collections","pliantdb_local::core::test_util","",43,[[["schema",3]]]],[11,"from","pliantdb_local::core::schema","",14,[[["error",3]],["error",4]]],[11,"from","pliantdb_local::core","",30,[[["error",3]],["error",4]]],[11,"from","pliantdb_local::core::schema","",7,[[],["id",3]]],[11,"from","","",16,[[],["serializablevalue",4]]],[11,"from","","",7,[[["string",3]],["id",3]]],[11,"version","pliantdb_local::core::test_util","",42,[[]]],[11,"name","","",42,[[],["cow",4]]],[11,"map","","",42,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"version","","",39,[[]]],[11,"name","","",39,[[],["cow",4]]],[11,"map","","",39,[[["document",3]],[["option",4],["error",4],["result",4]]]],[11,"reduce","","",39,[[],[["error",4],["result",4]]]],[11,"version","","",41,[[]]],[11,"name","","",41,[[],["cow",4]]],[11,"map","","",41,[[["document",3]],[["result",4],["option",4],["error",4]]]],[11,"reduce","","",41,[[],[["result",4],["error",4]]]],[11,"version","","",40,[[]]],[11,"name","","",40,[[],["cow",4]]],[11,"map","","",40,[[["document",3]],[["result",4],["error",4],["option",4]]]],[11,"reduce","","",40,[[],[["error",4],["result",4]]]],[11,"as_ref","","",32,[[],["path",3]]],[11,"as_ref","pliantdb_local::core::schema","",16,[[]]],[11,"hash","","",7,[[]]],[11,"default","pliantdb_local::core::transaction","",19,[[],["transaction",3]]],[11,"default","pliantdb_local::core::test_util","",31,[[],["basic",3]]],[11,"default","pliantdb_local::core::schema","",38,[[],["schema",3]]],[11,"deserialize","pliantdb_local::core::test_util","",31,[[],[["result",4],["basic",3]]]],[11,"deserialize","pliantdb_local::core::document","",5,[[],[["document",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::schema","",7,[[],[["id",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::schema::view::map","",11,[[],[["result",4],["serialized",3]]]],[11,"deserialize","pliantdb_local::core::document","",4,[[],[["header",3],["result",4]]]],[11,"deserialize","pliantdb_local::core::transaction","",25,[[],[["result",4],["operationresult",4]]]],[11,"deserialize","","",29,[[],[["changeddocument",3],["result",4]]]],[11,"deserialize","","",21,[[],[["result",4],["command",4]]]],[11,"deserialize","","",28,[[],[["result",4],["executed",3]]]],[11,"deserialize","pliantdb_local::core::document","",6,[[],[["result",4],["revision",3]]]],[11,"source","pliantdb_local::core::schema","",14,[[],[["error",8],["option",4]]]],[11,"clone","pliantdb_local::core::schema::view::map","",11,[[],["serialized",3]]],[11,"clone","pliantdb_local::core::document","",4,[[],["header",3]]],[11,"clone","pliantdb_local::core::schema","",7,[[],["id",3]]],[11,"clone","pliantdb_local::core::transaction","",29,[[],["changeddocument",3]]],[11,"clone","pliantdb_local::core::document","",6,[[],["revision",3]]],[11,"eq","","",4,[[["header",3]]]],[11,"ne","","",4,[[["header",3]]]],[11,"eq","","",6,[[["revision",3]]]],[11,"ne","","",6,[[["revision",3]]]],[11,"eq","pliantdb_local::core::schema","",7,[[["id",3]]]],[11,"ne","","",7,[[["id",3]]]],[11,"eq","pliantdb_local::core::test_util","",31,[[["basic",3]]]],[11,"ne","","",31,[[["basic",3]]]],[11,"eq","pliantdb_local::core::schema::view::map","",12,[[["mappedvalue",3]]]],[11,"ne","","",12,[[["mappedvalue",3]]]],[11,"eq","pliantdb_local::core::schema","",9,[[["map",3]]]],[11,"ne","","",9,[[["map",3]]]],[11,"fmt","pliantdb_local::core::schema::view::map","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::transaction","",20,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",21,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::schema","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::test_util","",39,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::transaction","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::test_util","",44,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",46,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::test_util","",43,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::schema","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",14,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::transaction","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::schema::view::map","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::document","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::schema::view::map","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::test_util","",40,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::schema","",38,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::document","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::transaction","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::test_util","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",45,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::document","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::test_util","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","pliantdb_local::core::transaction","",25,[[["formatter",3]],[["result",4],["error",3]]]],[11,"id","pliantdb_local::core::test_util","",44,[[],["id",3]]],[11,"define_views","","",44,[[["schema",3]]]],[11,"id","","",46,[[],["id",3]]],[11,"define_views","","",46,[[["schema",3]]]],[11,"id","","",31,[[],["id",3]]],[11,"define_views","","",31,[[["schema",3]]]],[11,"id","","",45,[[],["id",3]]],[11,"define_views","","",45,[[["schema",3]]]],[11,"serialize","pliantdb_local::core::transaction","",29,[[],["result",4]]],[11,"serialize","pliantdb_local::core::document","",5,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",21,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema::view::map","",11,[[],["result",4]]],[11,"serialize","pliantdb_local::core::transaction","",25,[[],["result",4]]],[11,"serialize","pliantdb_local::core::test_util","",31,[[],["result",4]]],[11,"serialize","pliantdb_local::core::document","",4,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","pliantdb_local::core::schema","",7,[[],["result",4]]],[11,"drop","pliantdb_local::core::test_util","",32,[[]]],[11,"from","pliantdb_local","",36,[[["error",4]]]],[11,"from","","",36,[[["error",6]]]],[11,"from","","",36,[[["error",3]]]],[11,"from","","",36,[[["recverror",4]]]],[11,"from","","",36,[[["error",4]]]],[11,"from","","",36,[[["error",3]]]],[11,"from","pliantdb_local::core","",30,[[["error",4]]]],[11,"clone","pliantdb_local","",47,[[]]],[11,"default","pliantdb_local::config","",33,[[],["configuration",3]]],[11,"default","","",34,[[]]],[11,"default","","",35,[[]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","pliantdb_local","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"source","","",36,[[],[["option",4],["error",8]]]],[11,"collection","","",47,[[],[["collection",3],["error",4],["result",4]]]],[11,"apply_transaction","","",47,[[["transaction",3]],[["box",3],["pin",3]]]],[11,"get","","",47,[[],[["pin",3],["box",3]]]],[11,"get_multiple","","",47,[[],[["pin",3],["box",3]]]],[11,"list_executed_transactions","","",47,[[["option",4],["option",4]],[["box",3],["pin",3]]]],[11,"query","","",47,[[["view",3],["view",8]],[["box",3],["pin",3]]]],[11,"query_with_docs","","",47,[[["view",3],["view",8]],[["pin",3],["box",3]]]],[11,"reduce","","",47,[[["view",3],["view",8]],[["pin",3],["box",3]]]],[11,"new","pliantdb_local::core::connection","Creates a new instance using <code>connection</code>.",37,[[],["collection",3]]],[11,"push","","Adds a new <code>Document<Cl></code> with the contents <code>item</code>.",37,[[]]],[11,"get","","Retrieves a <code>Document<Cl></code> with <code>id</code> from the connection.",37,[[]]],[11,"with_key","","Filters for entries in the view with <code>key</code>.",1,[[],["view",3]]],[11,"with_keys","","Filters for entries in the view with <code>keys</code>.",1,[[["vec",3],["global",3]],["view",3]]],[11,"with_key_range","","Filters for entries in the view with the range <code>keys</code>.",1,[[["range",3]],["view",3]]],[11,"with_access_policy","","Sets the access policy for queries.",1,[[["accesspolicy",4]],["view",3]]],[11,"query","","Executes the query and retrieves the results.",1,[[]]],[11,"query_with_docs","","Executes the query and retrieves the results with the …",1,[[]]],[11,"reduce","","Executes a reduce over the results of the query",1,[[]]],[11,"new","pliantdb_local::core::document","Creates a new document with <code>contents</code>.",5,[[["cow",4],["id",3]],["document",3]]],[11,"with_contents","","Creates a new document with serialized bytes from <code>contents</code>…",5,[[["id",3]],[["result",4],["document",3],["error",3]]]],[11,"contents","","Retrieves <code>contents</code> through deserialization into the type <code>D</code>…",5,[[],[["error",3],["result",4]]]],[11,"set_contents","","Serializes and stores <code>contents</code> into this document.",5,[[],[["result",4],["error",3]]]],[11,"create_new_revision","","Creates a new revision.",5,[[["cow",4]],[["document",3],["option",4]]]],[11,"emit","","Creates a <code>Map</code> result with an empty key and value.",5,[[],["map",3]]],[11,"emit_key","","Creates a <code>Map</code> result with a <code>key</code> and an empty value.",5,[[],["map",3]]],[11,"emit_value","","Creates a <code>Map</code> result with <code>value</code> and an empty key.",5,[[],["map",3]]],[11,"emit_key_and_value","","Creates a <code>Map</code> result with a <code>key</code> and <code>value</code>.",5,[[],["map",3]]],[11,"to_owned","","Clone the document\'s data so that it\'s no longer borrowed …",5,[[],["document",3]]],[11,"new","","Creates the first revision for a document with the SHA256 …",6,[[],["revision",3]]],[11,"with_id","","Creates a revision with <code>id</code> for a document with the SHA256 …",6,[[],["revision",3]]],[11,"next_revision","","Creates the next revision in sequence with an updated …",6,[[],[["revision",3],["option",4]]]],[11,"new","pliantdb_local::core::schema","Creates a new Map entry for the document with id <code>source</code>.",9,[[],["map",3]]],[11,"define_collection","","Adds the collection <code>C</code> and its views.",38,[[]]],[11,"define_view","","Adds the view <code>V</code>.",38,[[]]],[11,"contains","","Returns <code>true</code> if this schema contains the collection <code>C</code>.",38,[[]]],[11,"view_by_name","","Looks up a [<code>view::Serialized</code>] by name.",38,[[],[["serialized",8],["option",4]]]],[11,"view","","Looks up a [<code>view::Serialized</code>] through the the type <code>V</code>.",38,[[],[["serialized",8],["option",4]]]],[11,"views","","Iterates over all registered views.",38,[[]]],[11,"views_in_collection","","Iterates over all views that belong to <code>collection</code>.",38,[[["id",3]],[["vec",3],["option",4]]]],[11,"push","pliantdb_local::core::transaction","Adds an operation to the transaction.",19,[[["operation",3]]]],[11,"to_owned","","Convert this structure to be free of borrows.",28,[[],["executed",3]]],[11,"new","pliantdb_local::core::test_util","",31,[[],["basic",3]]],[11,"with_category","","",31,[[],["basic",3]]],[11,"with_parent_id","","",31,[[],["basic",3]]],[11,"new","","",32,[[],["testdirectory",3]]],[11,"open_local","pliantdb_local","Opens a local file as a pliantdb.",47,[[["configuration",3],["path",3],["asref",8],["send",8]]]],[11,"last_transaction_id","","Fetches the last transaction id that has been committed, …",47,[[]]]],"p":[[8,"Connection"],[3,"View"],[4,"QueryKey"],[4,"AccessPolicy"],[3,"Header"],[3,"Document"],[3,"Revision"],[3,"Id"],[8,"Collection"],[3,"Map"],[3,"MappedDocument"],[3,"Serialized"],[3,"MappedValue"],[8,"Key"],[4,"Error"],[8,"View"],[4,"SerializableValue"],[8,"Serialized"],[8,"Database"],[3,"Transaction"],[3,"Operation"],[4,"Command"],[13,"Insert"],[13,"Update"],[13,"Delete"],[4,"OperationResult"],[13,"DocumentUpdated"],[13,"DocumentDeleted"],[3,"Executed"],[3,"ChangedDocument"],[4,"Error"],[3,"Basic"],[3,"TestDirectory"],[3,"Configuration"],[3,"Tasks"],[3,"Views"],[4,"Error"],[3,"Collection"],[3,"Schema"],[3,"BasicCount"],[3,"BasicByParentId"],[3,"BasicByCategory"],[3,"BasicByBrokenParentId"],[3,"BasicDatabase"],[3,"BasicCollectionWithNoViews"],[3,"BasicCollectionWithOnlyBrokenParentId"],[3,"UnassociatedCollection"],[3,"Storage"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);
name: Tests

on: [push]

jobs:
  audit:
    runs-on: ubuntu-latest

    steps:
      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin/cargo-audit
          key: cargo-audit
      - name: Install cargo-audit
        run: cargo -v install cargo-audit
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branch }}
      - name: Audit
        run: |
          cargo audit -D warnings

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        iteration:
          - folder: "./"
            features: "--all-features"
          - folder: local
            features: "--no-default-features"
          - folder: local
            features: "--no-default-features --features pubsub"
          - folder: local
            features: "--no-default-features --features keyvalue"
          - folder: server
            features: "--no-default-features"
          - folder: server
            features: "--no-default-features --features pubsub"
          - folder: server
            features: "--no-default-features --features keyvalue"
          - folder: server
            features: "--no-default-features --features websockets"
          - folder: server
            features: "--no-default-features --features pubsub,websockets"
          - folder: server
            features: "--no-default-features --features keyvalue,websockets"
          - folder: server
            features: "--no-default-features --features pubsub,keyvalue"
          - folder: pliantdb
            features: "--no-default-features --features server,client,test-util"
          - folder: pliantdb
            features: "--no-default-features --features server,client,test-util,pubsub"
          - folder: pliantdb
            features: "--no-default-features --features server,client,test-util,keyvalue"
          - folder: pliantdb
            features: "--no-default-features --features server,client,test-util,websockets"
          - folder: pliantdb
            features: "--no-default-features --features server,client,test-util,websockets,pubsub"
          - folder: pliantdb
            features: "--no-default-features --features server,client,test-util,websockets,keyvalue"
          - folder: pliantdb
            features: "--no-default-features --features server,client,test-util,pubsub,keyvalue"
    steps:
      - uses: actions/checkout@v2

      - name: Run clippy
        run: |
          cd ${{ matrix.iteration.folder }}
          cargo clippy ${{ matrix.iteration.features }}

      - name: Run unit tests
        run: |
          cd ${{ matrix.folder }}
          cargo test ${{ matrix.features }}

  docs:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: Generate Docs
        run: |
          cargo doc --no-deps --all-features

      - name: Deploy Docs
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          branch: gh-pages
          folder: target/doc/
          git-config-name: kl-botsu
          git-config-email: botsu@khonsulabs.com
          target-folder: /main/
          clean: true

  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2

      - name: Install code coverage requirements
        run: |
          rustup component add llvm-tools-preview
          rustup install nightly-2021-03-25
          curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
          cargo install badgeland

      - name: Run code coverage
        run: |
          PATH=".:$PATH" ./generate-code-coverage.sh

      - name: Deploy Docs
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          branch: gh-pages
          folder: coverage/
          git-config-name: kl-botsu
          git-config-email: botsu@khonsulabs.com
          target-folder: /coverage/
          clean: true

  book:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branch }}
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin/mdbook
            ~/.cargo/bin/mdbook-linkcheck
            ~/.cargo/bin/mdbook-mermaid
          key: cargo-audit
      - name: Install mdbook
        run: |
          cargo install mdbook --no-default-features --features search
          cargo install mdbook-linkcheck
          cargo install mdbook-mermaid
      - name: Generate book
        run: cd book && mdbook build

      - name: Generate
        uses: JamesIves/github-pages-deploy-action@releases/v4
        if: github.ref == 'refs/heads/main'
        with:
          branch: gh-pages
          folder: book/book/html/
          git-config-name: kl-botsu
          git-config-email: botsu@khonsulabs.com
          target-folder: /guide
          clean: true
